/*
 * ClaimsViewer.java
 *
 * Created on August 11, 2004, 1:37 PM
 */

package biz.systempartners.claims;

/**
 *
 * @author  Charles W. Waweru <cwaweru@systempartners.biz>
 *
 */
public class ClaimsViewer extends javax.swing.JFrame {
    java.util.Vector invoiceVector;
    java.util.Vector invoiceChildVector;
    java.util.Vector filesVector;
    javax.swing.JTable claimsTable;
//    javax.swing.JTable invoiceTable;
    java.awt.GridBagConstraints gridBagConstraints;
    javax.swing.JTable requisTable;
    
    java.lang.String myAppOutFileUrl;
    
    static java.util.Properties appProp;
    
    static java.util.Properties appOutProp;
    
    
    javax.help.HelpSet helpHS = null;
    
    javax.help.HelpBroker helpBroker;
    
    javax.help.HelpSet apiHS = null;
    
    javax.help.HelpBroker apiHB = null;
    
    static final java.lang.String helpSetName = "EpackHimsHelp";
    
    static final java.lang.String helpSetLable = "Hospital Information Management System (HIMS)";
    
    /** Creates new form ClaimsViewer */
    public ClaimsViewer() {
        
        try {
            
            java.lang.ClassLoader classLoader = ClaimsViewer.class.getClassLoader();
            
            java.net.URL urlHelpSet = javax.help.HelpSet.findHelpSet(classLoader, helpSetName);
            
            helpHS = new javax.help.HelpSet(classLoader, urlHelpSet);
            
        } catch(java.lang.Exception exec) {
            
            exec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, exec.getMessage());
            
        }
        
        java.lang.String myAppFileUrl = null;
        
        myAppFileUrl =  System.getProperty("user.dir")
        
        + System.getProperty("file.separator")
        
        + "claimsbackend.properties";
        
        try {
            
            java.io.FileInputStream propInFile = new java.io.FileInputStream(myAppFileUrl);
            
            appProp = new java.util.Properties();
            
            try {
                
                appProp.load(propInFile);
                
                //            dbServerIp = appProp.getProperty("dbServerIpAdd", "127.0.0.1");
                
                //acroPath = appProp.getProperty("acrobatPath","c:/Program Files/Adobe/Acrobat 5.0/Reader/AcroRd32.exe ");
                
                //            System.out.println(dbServerIp);
                //System.out.println(acroPath);
                
                //  return dbServerIp;
                String defaultlnf = appProp.getProperty("defaultlnf");
                System.setProperty("defaultlnf", defaultlnf);
                String defaulttheme = appProp.getProperty("defaulttheme");
                System.setProperty("defaulttheme", defaulttheme);
                
            } catch (java.io.IOException ioExec){
                
                System.out.println(ioExec.getMessage());
                
            }
            
            // return dbServerIp;
            
        } catch (java.lang.Exception exc){
            
            System.out.println(exc.getMessage());
            
            //    javax.swing.JOptionPane.showMessageDialog(this, "Properties file not found!");
            
        }
        myAppOutFileUrl = null;
        
        myAppOutFileUrl =  System.getProperty("user.dir")
        
        + System.getProperty("file.separator")
        
        + "claimsbackend.properties";
        
        System.out.println("Properties file : "+myAppOutFileUrl);
        //        System.setProperty("cashpoint", cashpoint);
        
        helpBroker = helpHS.createHelpBroker();
        invoiceVector = new java.util.Vector(1,1);
        invoiceChildVector = new java.util.Vector(1,1);
        filesVector = new java.util.Vector(1,1);
        
        changeThemeByUrl(System.getProperty("defaultlnf", "com.l2fprod.gui.plaf.skin.SkinLookAndFeel"), getClass().getResource("/"+System.getProperty("defaulttheme", "xplunathemepack.zip")));
        
        initComponents();
        
        loadUnProcessedClaims();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        claimsViewer = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        invoicesScrollPane = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        claimsMainPanel = new javax.swing.JPanel();
        claimsViewerPanel = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        invoiceDataTable = new javax.swing.JTable();
        detailsPanel = new javax.swing.JPanel();
        patientNo = new javax.swing.JLabel();
        patientName = new javax.swing.JLabel();
        schemeMemberNo = new javax.swing.JLabel();
        schemePayer = new javax.swing.JLabel();
        schemeName = new javax.swing.JLabel();
        AccountNo = new javax.swing.JLabel();
        patientNoTxt = new javax.swing.JTextField();
        patientNameTxt = new javax.swing.JTextField();
        schemeMemberNoTxt = new javax.swing.JTextField();
        schemePayerTxt = new javax.swing.JTextField();
        schemeNameTxt = new javax.swing.JTextField();
        accountNoTxt = new javax.swing.JTextField();
        invoiceNo = new javax.swing.JLabel();
        invoiceNoTxt = new javax.swing.JTextField();
        healthCareProviderLbl = new javax.swing.JLabel();
        healthCareProviderTxt = new javax.swing.JTextField();
        invoiceTotalTxt = new javax.swing.JTextField();
        invoiceTotal = new javax.swing.JLabel();
        actionPanel = new javax.swing.JPanel();
        refreshViewer = new javax.swing.JButton();
        clearViewer = new javax.swing.JButton();
        closeViewer = new javax.swing.JButton();
        saveInvoice = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        export2Excel = new javax.swing.JButton();
        jToolBar3 = new javax.swing.JToolBar();
        fmgrBttn = new javax.swing.JButton();
        calcBttn = new javax.swing.JButton();
        brwsrBttn = new javax.swing.JButton();
        editButtn = new javax.swing.JButton();
        mtmediaBttn1 = new javax.swing.JButton();
        mailBttn = new javax.swing.JButton();
        mtmediaBttn = new javax.swing.JButton();
        jToolBar31 = new javax.swing.JToolBar();
        jPanel11 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        helpButton = new javax.swing.JButton();
        helpButton.addActionListener(new javax.help.CSH.DisplayHelpAfterTracking(helpBroker));
        jToolBar311 = new javax.swing.JToolBar();
        operationsToolBar = new javax.swing.JButton();
        pharmacyToolBar = new javax.swing.JButton();

        payrollToolBar = new javax.swing.JButton();
        reportsToolBar = new javax.swing.JButton();
        openShift = new javax.swing.JButton();
        closeShift = new javax.swing.JButton();
        suspendShift = new javax.swing.JButton();
        optimizeDB = new javax.swing.JButton();
        compactDB = new javax.swing.JButton();
        backupDB = new javax.swing.JButton();
        claimsMenuBar = new javax.swing.JMenuBar();
        setupMn = new javax.swing.JMenu();
        profileMnit = new javax.swing.JMenuItem();
        emailAcctMnit = new javax.swing.JMenuItem();
        dbAccountMnit = new javax.swing.JMenuItem();
        otheSysInfoMnit = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        newClaimsDirMnit = new javax.swing.JMenuItem();
        processedDirMnit = new javax.swing.JMenuItem();
        excelFileDirMnit = new javax.swing.JMenuItem();
        userProfilesMnit = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        exitMenuItem = new javax.swing.JMenuItem();
        operationsMn = new javax.swing.JMenu();
        saveClaimMnit = new javax.swing.JMenuItem();
        saveAllClaimsMnit = new javax.swing.JMenuItem();
        rejectInvoicesMnit = new javax.swing.JMenuItem();
        updateListsMnit = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JSeparator();
        exportClaims2DBMnit = new javax.swing.JMenuItem();
        exportClaims2ExcelMnit = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        viewInvoiceSummaryMnit = new javax.swing.JMenuItem();
        vetClaimsMnit = new javax.swing.JMenuItem();
        utilitiesMn = new javax.swing.JMenu();
        dbUserPasswdMnit = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JSeparator();
        optimizeDBMnit = new javax.swing.JMenuItem();
        reindexDBMnit = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JSeparator();
        viewDataMnit = new javax.swing.JMenuItem();
        viewInvoiceMnit = new javax.swing.JMenuItem();
        prineDBMnit = new javax.swing.JMenuItem();
        lnfmn = new javax.swing.JMenu();
        swinglnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        winlnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        motiflnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        macmnit1 = new javax.swing.JCheckBoxMenuItem();
        skinmn = new javax.swing.JMenu();
        xpmnit1 = new javax.swing.JRadioButtonMenuItem();
        macos1mnit1 = new javax.swing.JRadioButtonMenuItem();
        whiltmnit1 = new javax.swing.JRadioButtonMenuItem();
        modernmnit1 = new javax.swing.JRadioButtonMenuItem();
        aquamnit1 = new javax.swing.JRadioButtonMenuItem();
        beosmnit1 = new javax.swing.JRadioButtonMenuItem();
        bbjmnit11 = new javax.swing.JRadioButtonMenuItem();
        xpskinmn = new javax.swing.JMenu();
        officexpmn = new javax.swing.JMenuItem();
        office2003mn = new javax.swing.JMenuItem();
        studio2k5mn = new javax.swing.JMenuItem();
        helpMn = new javax.swing.JMenu();
        helpFilesMnit = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JSeparator();
        aboutClaimsMnit = new javax.swing.JMenuItem();
        aboutAfrisoft = new javax.swing.JMenuItem();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Claims Processing Viewer");
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        claimsViewer.setLayout(new java.awt.GridBagLayout());

        claimsViewer.setBorder(javax.swing.BorderFactory.createTitledBorder("Claims Viewer Panel"));
        jSplitPane1.setDividerLocation(180);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Invoices List"));
        invoiceTable.setFont(new java.awt.Font("Serif", 1, 12));
        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Invoice No."
            }
        ));
        invoiceTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        invoiceTable.setSelectionForeground(new java.awt.Color(0, 255, 51));
        invoiceTable.setShowHorizontalLines(false);
        invoiceTable.setShowVerticalLines(false);
        invoiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceTableMouseClicked(evt);
            }
        });

        invoicesScrollPane.setViewportView(invoiceTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(invoicesScrollPane, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel1);

        claimsMainPanel.setLayout(new java.awt.GridBagLayout());

        claimsViewerPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane11.setPreferredSize(new java.awt.Dimension(468, 203));
        invoiceDataTable.setFont(new java.awt.Font("Dialog", 1, 12));
        invoiceDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Description", "Quantity", "Amount", "Our Ref."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane11.setViewportView(invoiceDataTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        claimsViewerPanel.add(jScrollPane11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 30.0;
        claimsMainPanel.add(claimsViewerPanel, gridBagConstraints);

        detailsPanel.setLayout(new java.awt.GridBagLayout());

        detailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Claim Details Panel"));
        patientNo.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(patientNo, gridBagConstraints);

        patientName.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(patientName, gridBagConstraints);

        schemeMemberNo.setText("Scheme Member No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(schemeMemberNo, gridBagConstraints);

        schemePayer.setText("Scheme Payer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(schemePayer, gridBagConstraints);

        schemeName.setText("Scheme Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(schemeName, gridBagConstraints);

        AccountNo.setText("Account No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(AccountNo, gridBagConstraints);

        patientNoTxt.setEditable(false);
        patientNoTxt.setFont(new java.awt.Font("Dialog", 1, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(patientNoTxt, gridBagConstraints);

        patientNameTxt.setEditable(false);
        patientNameTxt.setFont(new java.awt.Font("Dialog", 1, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(patientNameTxt, gridBagConstraints);

        schemeMemberNoTxt.setEditable(false);
        schemeMemberNoTxt.setFont(new java.awt.Font("Dialog", 1, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(schemeMemberNoTxt, gridBagConstraints);

        schemePayerTxt.setEditable(false);
        schemePayerTxt.setFont(new java.awt.Font("Dialog", 1, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(schemePayerTxt, gridBagConstraints);

        schemeNameTxt.setEditable(false);
        schemeNameTxt.setFont(new java.awt.Font("Dialog", 1, 12));
        schemeNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemeNameTxtActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(schemeNameTxt, gridBagConstraints);

        accountNoTxt.setEditable(false);
        accountNoTxt.setFont(new java.awt.Font("Dialog", 1, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(accountNoTxt, gridBagConstraints);

        invoiceNo.setText("Invoice No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(invoiceNo, gridBagConstraints);

        invoiceNoTxt.setEditable(false);
        invoiceNoTxt.setFont(new java.awt.Font("Dialog", 1, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(invoiceNoTxt, gridBagConstraints);

        healthCareProviderLbl.setText("Health Care Provider");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(healthCareProviderLbl, gridBagConstraints);

        healthCareProviderTxt.setEditable(false);
        healthCareProviderTxt.setFont(new java.awt.Font("Dialog", 1, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(healthCareProviderTxt, gridBagConstraints);

        invoiceTotalTxt.setEditable(false);
        invoiceTotalTxt.setFont(new java.awt.Font("Dialog", 1, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(invoiceTotalTxt, gridBagConstraints);

        invoiceTotal.setText("Invoice Total (Ksh)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(invoiceTotal, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 40.0;
        claimsMainPanel.add(detailsPanel, gridBagConstraints);

        jSplitPane1.setRightComponent(claimsMainPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        claimsViewer.add(jSplitPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        getContentPane().add(claimsViewer, gridBagConstraints);

        actionPanel.setLayout(new java.awt.GridBagLayout());

        actionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Action Requests"));
        refreshViewer.setMnemonic('R');
        refreshViewer.setText("Refresh View");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        actionPanel.add(refreshViewer, gridBagConstraints);

        clearViewer.setMnemonic('C');
        clearViewer.setText("Clear Claims View");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        actionPanel.add(clearViewer, gridBagConstraints);

        closeViewer.setMnemonic('l');
        closeViewer.setText("Close Viewer");
        closeViewer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeViewerActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        actionPanel.add(closeViewer, gridBagConstraints);

        saveInvoice.setMnemonic('S');
        saveInvoice.setText("Save Invoice to Database");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        actionPanel.add(saveInvoice, gridBagConstraints);

        jButton1.setText("Save All Invoices to database");
        actionPanel.add(jButton1, new java.awt.GridBagConstraints());

        export2Excel.setMnemonic('x');
        export2Excel.setText("Export to Excel");
        actionPanel.add(export2Excel, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(actionPanel, gridBagConstraints);

        jToolBar3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar3.setFloatable(false);
        fmgrBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder_open.gif")));
        fmgrBttn.setToolTipText("File Manager");
        fmgrBttn.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        fmgrBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        fmgrBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        fmgrBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(fmgrBttn);

        calcBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calbr1.gif")));
        calcBttn.setToolTipText("Calculator");
        calcBttn.setAlignmentX(0.5F);
        calcBttn.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        calcBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        calcBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        calcBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(calcBttn);

        brwsrBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/world1.gif")));
        brwsrBttn.setToolTipText("Internet browser");
        brwsrBttn.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        brwsrBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        brwsrBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        brwsrBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(brwsrBttn);

        editButtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image1.gif")));
        editButtn.setToolTipText("Word processor");
        editButtn.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        editButtn.setMaximumSize(new java.awt.Dimension(26, 26));
        editButtn.setMinimumSize(new java.awt.Dimension(26, 26));
        editButtn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(editButtn);

        mtmediaBttn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/function.gif")));
        mtmediaBttn1.setToolTipText("Multimedia player");
        mtmediaBttn1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        mtmediaBttn1.setMaximumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn1.setMinimumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn1.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(mtmediaBttn1);

        mailBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mailbr1.gif")));
        mailBttn.setToolTipText("Email utility");
        mailBttn.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        mailBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        mailBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        mailBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(mailBttn);

        mtmediaBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/anthony-sound.gif")));
        mtmediaBttn.setToolTipText("Multimedia player");
        mtmediaBttn.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        mtmediaBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(mtmediaBttn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar3, gridBagConstraints);

        jToolBar31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar31.setFloatable(false);
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel11.add(jLabel1, new java.awt.GridBagConstraints());

        jToolBar31.add(jPanel11);

        helpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CNT0.GIF")));
        helpButton.setToolTipText("Get system help");
        helpButton.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        helpButton.setMaximumSize(new java.awt.Dimension(26, 26));
        helpButton.setMinimumSize(new java.awt.Dimension(26, 26));
        helpButton.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar31.add(helpButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar31, gridBagConstraints);

        jToolBar311.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar311.setFloatable(false);
        operationsToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/npdbr1.gif")));
        operationsToolBar.setToolTipText("Operations");
        operationsToolBar.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        operationsToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        operationsToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        operationsToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(operationsToolBar);

        pharmacyToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/article.gif")));
        pharmacyToolBar.setToolTipText("Pharmacy");
        pharmacyToolBar.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pharmacyToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        pharmacyToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        pharmacyToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(pharmacyToolBar);

        payrollToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sntc1.gif")));
        payrollToolBar.setToolTipText("Payroll");
        payrollToolBar.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        payrollToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        payrollToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        payrollToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(payrollToolBar);

        reportsToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/abbr1.gif")));
        reportsToolBar.setToolTipText("Reports");
        reportsToolBar.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        reportsToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        reportsToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        reportsToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(reportsToolBar);

        openShift.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        openShift.setMaximumSize(new java.awt.Dimension(26, 26));
        openShift.setMinimumSize(new java.awt.Dimension(26, 26));
        openShift.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(openShift);

        closeShift.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Lock[1].gif")));
        closeShift.setToolTipText("Close Shift");
        closeShift.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        closeShift.setMaximumSize(new java.awt.Dimension(26, 26));
        closeShift.setMinimumSize(new java.awt.Dimension(26, 26));
        closeShift.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(closeShift);

        suspendShift.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all_tracks.gif")));
        suspendShift.setToolTipText("Suspend Shift");
        suspendShift.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        suspendShift.setMaximumSize(new java.awt.Dimension(26, 26));
        suspendShift.setMinimumSize(new java.awt.Dimension(26, 26));
        suspendShift.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(suspendShift);

        optimizeDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blkc1.gif")));
        optimizeDB.setToolTipText("DB Optimize");
        optimizeDB.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        optimizeDB.setMaximumSize(new java.awt.Dimension(26, 26));
        optimizeDB.setMinimumSize(new java.awt.Dimension(26, 26));
        optimizeDB.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(optimizeDB);

        compactDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dftc1.gif")));
        compactDB.setToolTipText("DB Compact");
        compactDB.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        compactDB.setMaximumSize(new java.awt.Dimension(26, 26));
        compactDB.setMinimumSize(new java.awt.Dimension(26, 26));
        compactDB.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(compactDB);

        backupDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save[1].gif")));
        backupDB.setToolTipText("DB Backup");
        backupDB.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        backupDB.setMaximumSize(new java.awt.Dimension(26, 26));
        backupDB.setMinimumSize(new java.awt.Dimension(26, 26));
        backupDB.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(backupDB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar311, gridBagConstraints);

        setupMn.setMnemonic('t');
        setupMn.setText("Setup");
        setupMn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setupMnActionPerformed(evt);
            }
        });

        profileMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        profileMnit.setMnemonic('P');
        profileMnit.setText("Company Profile");
        profileMnit.setToolTipText("Setup for Company profile/details");
        profileMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileMnitActionPerformed(evt);
            }
        });

        setupMn.add(profileMnit);

        emailAcctMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        emailAcctMnit.setMnemonic('E');
        emailAcctMnit.setText("Claims Email Account");
        emailAcctMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailAcctMnitActionPerformed(evt);
            }
        });

        setupMn.add(emailAcctMnit);

        dbAccountMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        dbAccountMnit.setMnemonic('D');
        dbAccountMnit.setText("Database Account");
        dbAccountMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbAccountMnitActionPerformed(evt);
            }
        });

        setupMn.add(dbAccountMnit);

        otheSysInfoMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        otheSysInfoMnit.setMnemonic('S');
        otheSysInfoMnit.setText("Other System Info.");
        otheSysInfoMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otheSysInfoMnitActionPerformed(evt);
            }
        });

        setupMn.add(otheSysInfoMnit);

        setupMn.add(jSeparator2);

        newClaimsDirMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        newClaimsDirMnit.setMnemonic('N');
        newClaimsDirMnit.setText("New Claims Directory");
        newClaimsDirMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newClaimsDirMnitActionPerformed(evt);
            }
        });

        setupMn.add(newClaimsDirMnit);

        processedDirMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        processedDirMnit.setMnemonic('P');
        processedDirMnit.setText("Processed Claims Directory");
        processedDirMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processedDirMnitActionPerformed(evt);
            }
        });

        setupMn.add(processedDirMnit);

        excelFileDirMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        excelFileDirMnit.setMnemonic('x');
        excelFileDirMnit.setText("Excel File Directory");
        excelFileDirMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelFileDirMnitActionPerformed(evt);
            }
        });

        setupMn.add(excelFileDirMnit);

        userProfilesMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        userProfilesMnit.setMnemonic('s');
        userProfilesMnit.setText("User Profiles");
        userProfilesMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userProfilesMnitActionPerformed(evt);
            }
        });

        setupMn.add(userProfilesMnit);

        setupMn.add(jSeparator1);

        exitMenuItem.setMnemonic('t');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });

        setupMn.add(exitMenuItem);

        claimsMenuBar.add(setupMn);

        operationsMn.setMnemonic('p');
        operationsMn.setText("Operations");
        saveClaimMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveClaimMnit.setMnemonic('v');
        saveClaimMnit.setText("Save Selected Claim");
        operationsMn.add(saveClaimMnit);

        saveAllClaimsMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveAllClaimsMnit.setMnemonic('A');
        saveAllClaimsMnit.setText("Save All Claims");
        operationsMn.add(saveAllClaimsMnit);

        rejectInvoicesMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        rejectInvoicesMnit.setMnemonic('j');
        rejectInvoicesMnit.setText("Reject Invoice");
        operationsMn.add(rejectInvoicesMnit);

        updateListsMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        updateListsMnit.setMnemonic('d');
        updateListsMnit.setText("Update Beneficiary Listings");
        operationsMn.add(updateListsMnit);

        operationsMn.add(jSeparator4);

        exportClaims2DBMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        exportClaims2DBMnit.setMnemonic('o');
        exportClaims2DBMnit.setText("Export Claims to Database");
        operationsMn.add(exportClaims2DBMnit);

        exportClaims2ExcelMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        exportClaims2ExcelMnit.setMnemonic('c');
        exportClaims2ExcelMnit.setText("Export Claims to Excel");
        operationsMn.add(exportClaims2ExcelMnit);

        operationsMn.add(jSeparator3);

        viewInvoiceSummaryMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        viewInvoiceSummaryMnit.setMnemonic('l');
        viewInvoiceSummaryMnit.setText("View Claims Summary");
        operationsMn.add(viewInvoiceSummaryMnit);

        vetClaimsMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        vetClaimsMnit.setMnemonic('V');
        vetClaimsMnit.setText("Vet Claims");
        operationsMn.add(vetClaimsMnit);

        claimsMenuBar.add(operationsMn);

        utilitiesMn.setMnemonic('l');
        utilitiesMn.setText("Utilities");
        dbUserPasswdMnit.setText("Change User Password");
        utilitiesMn.add(dbUserPasswdMnit);

        utilitiesMn.add(jSeparator5);

        optimizeDBMnit.setText("Optimize Database");
        utilitiesMn.add(optimizeDBMnit);

        reindexDBMnit.setText("Re-Index Database");
        utilitiesMn.add(reindexDBMnit);

        utilitiesMn.add(jSeparator6);

        viewDataMnit.setText("View Data Tables");
        utilitiesMn.add(viewDataMnit);

        viewInvoiceMnit.setText("View Invoice Statistics");
        utilitiesMn.add(viewInvoiceMnit);

        prineDBMnit.setText("Prune Database Data");
        utilitiesMn.add(prineDBMnit);

        claimsMenuBar.add(utilitiesMn);

        lnfmn.setText("Look & Feel");
        buttonGroup2.add(swinglnfmnit1);
        swinglnfmnit1.setText("Metal");
        swinglnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swinglnfmnit1ActionPerformed(evt);
            }
        });

        lnfmn.add(swinglnfmnit1);

        buttonGroup2.add(winlnfmnit1);
        winlnfmnit1.setText("Windows");
        winlnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winlnfmnit1ActionPerformed(evt);
            }
        });

        lnfmn.add(winlnfmnit1);

        buttonGroup2.add(motiflnfmnit1);
        motiflnfmnit1.setText("Motif");
        motiflnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motiflnfmnit1ActionPerformed(evt);
            }
        });

        lnfmn.add(motiflnfmnit1);

        buttonGroup2.add(macmnit1);
        macmnit1.setText("Mac OS");
        macmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macmnit1ActionPerformed(evt);
            }
        });

        lnfmn.add(macmnit1);

        skinmn.setText("Themes");
        skinmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skinmnActionPerformed(evt);
            }
        });

        buttonGroup3.add(xpmnit1);
        xpmnit1.setText("XP Luna");
        xpmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xpmnit1ActionPerformed(evt);
            }
        });

        skinmn.add(xpmnit1);

        buttonGroup3.add(macos1mnit1);
        macos1mnit1.setText("Macintosh");
        macos1mnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macos1mnit1ActionPerformed(evt);
            }
        });

        skinmn.add(macos1mnit1);

        buttonGroup3.add(whiltmnit1);
        whiltmnit1.setText("Whistler");
        whiltmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiltmnit1ActionPerformed(evt);
            }
        });

        skinmn.add(whiltmnit1);

        buttonGroup3.add(modernmnit1);
        modernmnit1.setText("Modern");
        modernmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modernmnit1ActionPerformed(evt);
            }
        });

        skinmn.add(modernmnit1);

        buttonGroup3.add(aquamnit1);
        aquamnit1.setText("Aqua");
        aquamnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aquamnit1ActionPerformed(evt);
            }
        });

        skinmn.add(aquamnit1);

        buttonGroup3.add(beosmnit1);
        beosmnit1.setText("BEOS");
        beosmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beosmnit1ActionPerformed(evt);
            }
        });

        skinmn.add(beosmnit1);

        buttonGroup3.add(bbjmnit11);
        bbjmnit11.setText("BBJ");
        bbjmnit11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbjmnit11ActionPerformed(evt);
            }
        });

        skinmn.add(bbjmnit11);

        lnfmn.add(skinmn);

        xpskinmn.setText("XP Skin");
        officexpmn.setText("XP Office theme");
        officexpmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                officexpmnActionPerformed(evt);
            }
        });

        xpskinmn.add(officexpmn);

        office2003mn.setText("Office 2K3");
        office2003mn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                office2003mnActionPerformed(evt);
            }
        });

        xpskinmn.add(office2003mn);

        studio2k5mn.setText("Studio 2K5");
        studio2k5mn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studio2k5mnActionPerformed(evt);
            }
        });

        xpskinmn.add(studio2k5mn);

        lnfmn.add(xpskinmn);

        claimsMenuBar.add(lnfmn);

        helpMn.setMnemonic('H');
        helpMn.setText("Help");
        helpMn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMnActionPerformed(evt);
            }
        });

        helpFilesMnit.setText("Help Files");
        helpMn.add(helpFilesMnit);

        helpMn.add(jSeparator7);

        aboutClaimsMnit.setText("About Claims Director");
        helpMn.add(aboutClaimsMnit);

        aboutAfrisoft.setText("About Afrisoft Technologies Limited");
        aboutAfrisoft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutAfrisoftActionPerformed(evt);
            }
        });

        helpMn.add(aboutAfrisoft);

        claimsMenuBar.add(helpMn);

        setJMenuBar(claimsMenuBar);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-862)/2, (screenSize.height-476)/2, 862, 476);
    }// </editor-fold>//GEN-END:initComponents

    private void dbAccountMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbAccountMnitActionPerformed
        
        java.lang.String dbAccount = javax.swing.JOptionPane.showInputDialog(this, "Specify the database logon account for claims");
        
        appProp.setProperty("db_logon_name", dbAccount);
        
        System.setProperty("db_logon_name", dbAccount);
        
        //jPanel.validate();
        
        storePreferences();
        
       
// TODO add your handling code here:
    }//GEN-LAST:event_dbAccountMnitActionPerformed
    
    private void excelFileDirMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelFileDirMnitActionPerformed
        
        invalidate();
        
        javax.swing.JFileChooser chooserDir = new javax.swing.JFileChooser(new java.io.File(System.getProperty("user.dir")));
        
        chooserDir.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        
        int returnVal = chooserDir.showOpenDialog(this);
        
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            
            System.out.println("You chose to open this file: " +
                    
                    chooserDir.getSelectedFile().getPath());
            
            // filePortrait = chooserPortrait.getSelectedFile();
            
            // this.jTextField1.setText(filePortrait.getNam);
            
            //  processBrRequisitionFile(filePortrait);
            
            appProp.setProperty("exceldocsdir", chooserDir.getSelectedFile().getPath());
            
            System.setProperty("exceldocsdir", chooserDir.getSelectedFile().getPath());
            
            //jPanel.validate();
            
            storePreferences();
            
        }
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_excelFileDirMnitActionPerformed
    
    private void processedDirMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processedDirMnitActionPerformed
        
        invalidate();
        
        javax.swing.JFileChooser chooserDir = new javax.swing.JFileChooser(new java.io.File(System.getProperty("user.dir")));
        
        chooserDir.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        
        int returnVal = chooserDir.showOpenDialog(this);
        
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            
            System.out.println("You chose to open this file: " +
                    
                    chooserDir.getSelectedFile().getPath());
            
            // filePortrait = chooserPortrait.getSelectedFile();
            
            // this.jTextField1.setText(filePortrait.getNam);
            
            //  processBrRequisitionFile(filePortrait);
            
            appProp.setProperty("processedclaimsdir", chooserDir.getSelectedFile().getPath());
            
            System.setProperty("processedclaimsdir", chooserDir.getSelectedFile().getPath());
            
            //jPanel.validate();
            
            storePreferences();
            
        }
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_processedDirMnitActionPerformed
    
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            this.storePreferences();
            
            System.exit(0);
            
        }
        
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_exitMenuItemActionPerformed
    
    private void studio2k5mnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studio2k5mnActionPerformed
        this.changeTheme("org.fife.plaf.VisualStudio2005.VisualStudio2005LookAndFeel", null);
        
        appProp.setProperty("defaultlnf","org.fife.plaf.VisualStudio2005.VisualStudio2005LookAndFeel");
        
        appProp.setProperty("defaulttheme", "");
        //this.updateNewComponentsUI();
        
        storePreferences();
        // Add your handling code here:
    }//GEN-LAST:event_studio2k5mnActionPerformed
    
    private void office2003mnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_office2003mnActionPerformed
        this.changeTheme("org.fife.plaf.Office2003.Office2003LookAndFeel", null);
        
        appProp.setProperty("defaultlnf","org.fife.plaf.Office2003.Office2003LookAndFeel");
        
        appProp.setProperty("defaulttheme", "");
        //this.updateNewComponentsUI();
        
        storePreferences();
        // Add your handling code here:
    }//GEN-LAST:event_office2003mnActionPerformed
    
    private void officexpmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_officexpmnActionPerformed
        this.changeTheme("org.fife.plaf.OfficeXP.OfficeXPLookAndFeel", null);
        
        appProp.setProperty("defaultlnf","org.fife.plaf.OfficeXP.OfficeXPLookAndFeel");
        
        appProp.setProperty("defaulttheme", "");
        //this.updateNewComponentsUI();
        
        storePreferences();
        // Add your handling code here:
    }//GEN-LAST:event_officexpmnActionPerformed
    
    private void skinmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skinmnActionPerformed
//  this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "xplunathemepack.zip");
        
        // Add your handling code here:
    }//GEN-LAST:event_skinmnActionPerformed
    
    private void bbjmnit11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbjmnit11ActionPerformed
//        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "bbjthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/bbjthemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "bbjthemepack.zip");
        
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_bbjmnit11ActionPerformed
    
    private void beosmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beosmnit1ActionPerformed
//        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "beosthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/beosthemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "beosthemepack.zip");
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_beosmnit1ActionPerformed
    
    private void aquamnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aquamnit1ActionPerformed
//       this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "aquathemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/aquathemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "aquathemepack.zip");
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_aquamnit1ActionPerformed
    
    private void modernmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modernmnit1ActionPerformed
//        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "modernthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/modernthemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "modernthemepack.zip");
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_modernmnit1ActionPerformed
    
    private void whiltmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiltmnit1ActionPerformed
//        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "whistlerthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/whistlerthemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "whistlerthemepack.zip");
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_whiltmnit1ActionPerformed
    
    private void macos1mnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macos1mnit1ActionPerformed
//        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "macosthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/macosthemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "macosthemepack.zip");
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_macos1mnit1ActionPerformed
    
    private void xpmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xpmnit1ActionPerformed
//        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "xplunathemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/xplunathemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "xplunathemepack.zip");
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_xpmnit1ActionPerformed
    
    private void macmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macmnit1ActionPerformed
        this.changeTheme("it.unitn.ing.swing.plaf.macos.MacOSLookAndFeel", null);
        
        appProp.setProperty("defaultlnf","it.unitn.ing.swing.plaf.macos.MacOSLookAndFeel");
        
        appProp.setProperty("defaulttheme", "");
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_macmnit1ActionPerformed
    
    private void motiflnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motiflnfmnit1ActionPerformed
        this.changeTheme("com.sun.java.swing.plaf.motif.MotifLookAndFeel", null);
        
        appProp.setProperty("defaultlnf","com.sun.java.swing.plaf.motif.MotifLookAndFeel");
        
        appProp.setProperty("defaulttheme", "");
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_motiflnfmnit1ActionPerformed
    
    private void winlnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winlnfmnit1ActionPerformed
//  System.setProperty("os.name", "Windows");
        
        
        this.changeTheme("com.sun.java.swing.plaf.windows.WindowsLookAndFeel", null);
        
        appProp.setProperty("defaultlnf","com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        
        appProp.setProperty("defaulttheme", "");
        
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_winlnfmnit1ActionPerformed
    
    private void swinglnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swinglnfmnit1ActionPerformed
        this.changeTheme("javax.swing.plaf.metal.MetalLookAndFeel", null);
        
        appProp.setProperty("defaultlnf","javax.swing.plaf.metal.MetalLookAndFeel");
        
        appProp.setProperty("defaulttheme", "");
        
        //this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_swinglnfmnit1ActionPerformed
    
    private void helpMnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_helpMnActionPerformed
    
    private void aboutAfrisoftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutAfrisoftActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_aboutAfrisoftActionPerformed
    
    private void newClaimsDirMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newClaimsDirMnitActionPerformed
        
        
        invalidate();
        
        javax.swing.JFileChooser chooserDir = new javax.swing.JFileChooser(new java.io.File(System.getProperty("user.dir")));
        
        chooserDir.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        
        int returnVal = chooserDir.showOpenDialog(this);
        
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            
            System.out.println("You chose to open this file: " +
                    
                    chooserDir.getSelectedFile().getPath());
            
            // filePortrait = chooserPortrait.getSelectedFile();
            
            // this.jTextField1.setText(filePortrait.getNam);
            
            //  processBrRequisitionFile(filePortrait);
            
            appProp.setProperty("newclaimsdir", chooserDir.getSelectedFile().getPath());
            
            System.setProperty("newclaimsdir", chooserDir.getSelectedFile().getPath());
            
            //jPanel.validate();
            
            storePreferences();
            
        }
        
        
        // Add your handling code here:
    }//GEN-LAST:event_newClaimsDirMnitActionPerformed
    
    private void otheSysInfoMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otheSysInfoMnitActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_otheSysInfoMnitActionPerformed
    
    private void profileMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileMnitActionPerformed
        
        System.out.println("Accelerator key works!");
        // Add your handling code here:
    }//GEN-LAST:event_profileMnitActionPerformed
    
    private void userProfilesMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userProfilesMnitActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_userProfilesMnitActionPerformed
    
    private void setupMnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setupMnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_setupMnActionPerformed
    
    private void emailAcctMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailAcctMnitActionPerformed
        
        java.lang.String emailAccount = javax.swing.JOptionPane.showInputDialog(this, "Specify the mail account for claims");
        
        appProp.setProperty("mail_logon_name", emailAccount);
        
        System.setProperty("mail_logon_name", emailAccount);
        
        //jPanel.validate();
        
        storePreferences();
        
        
// Add your handling code here:
    }//GEN-LAST:event_emailAcctMnitActionPerformed
    
    private void invoiceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceTableMouseClicked
        if (invoiceTable.getValueAt(invoiceTable.getSelectedRow(), invoiceTable.getSelectedColumn()) != null) {
            java.lang.String selectedInvoiceNo = invoiceTable.getValueAt(invoiceTable.getSelectedRow(), invoiceTable.getSelectedColumn()).toString();
            
            System.out.println("Selected Invoice Number - ["+selectedInvoiceNo+"]");
            
            displayInvoiceDetails(selectedInvoiceNo, invoiceTable.getSelectedRow());
        } else {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "No invoice selected from list!", "ERROR : Invoice selection", javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_invoiceTableMouseClicked
    
    private void closeViewerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeViewerActionPerformed
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            this.storePreferences();
            
            System.exit(0);
            
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_closeViewerActionPerformed
    
    private void schemeNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemeNameTxtActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_schemeNameTxtActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            this.storePreferences();
            
            System.exit(0);
            
        }
        
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new ClaimsViewer().setVisible(true);
    }
    
    public javax.swing.JScrollPane getScrollPane() {
        
        return jScrollPane11;
        
    }
    
    public javax.swing.JScrollPane getInvoiceListScrollPane() {
        
        return invoicesScrollPane;
        
    }
    
    public javax.swing.JPanel getClaimsViewerPanel() {
        
        return claimsViewerPanel;
        
    }
    public javax.swing.JTable getInvoiceTable() {
        
        return invoiceDataTable;
        
    }
    
    public javax.swing.JTextField getPatientNo() {
        
        return patientNoTxt;
        
    }
    public javax.swing.JTextField getPatientName() {
        
        return patientNameTxt;
        
    }
    public javax.swing.JTextField getSchemeMemberNo() {
        
        return schemeMemberNoTxt;
        
    }
    public javax.swing.JTextField getSchemeName() {
        
        return schemeNameTxt;
        
    }
    public javax.swing.JTextField getSchemePayer() {
        
        return schemePayerTxt;
        
    }
    public javax.swing.JTextField getAccountNo() {
        
        return accountNoTxt;
        
    }
    public javax.swing.JTextField getInvoiceNo() {
        
        return invoiceNoTxt;
        
    }
    
    public java.util.Vector getInvoiceVector() {
        
        return invoiceVector;
        
    }
    
    public java.util.Vector getInvoiceChildVector() {
        
        return invoiceChildVector;
        
    }
    public javax.swing.JTable getInvoiceListTable() {
        
        return invoiceTable;
        
    }
    
    public java.util.Vector getFilesVector() {
        
        return filesVector;
        
    }
    
    
    public javax.swing.JTextField getHealthCareProvider() {
        
        return healthCareProviderTxt;
        
    }
    
    public javax.swing.JTextField getInvoiceTotal() {
        
        return invoiceTotalTxt;
        
    }
    
    
    private void displayInvoiceDetails(java.lang.String selectedInvoiceNo, int selectedIndex){
        
        java.io.File file2SelectedInvoice;
        
        java.util.Vector vector2Search = this.getInvoiceVector();
        //            for (int j = 0; j < filesVector.capacity(); j++) {
        
        //            if  (childVector.elementAt(0).toString().equalsIgnoreCase(selectedInvoiceNo)) {
        
        
        //               file2SelectedInvoice = new java.io.File(childVector.elementAt(1).toString());
        
        //                System.out.println("Selected File ------ !!! ["+filesVector.elementAt(j)+"]");
        //            }
        
        for (int i = 0; i < vector2Search.size(); i++) {
            
            java.util.Vector childVector = (java.util.Vector)vector2Search.elementAt(i);
            for (int j = 0; j < childVector.size(); j++) {
                //              System.out.println("Selected File for invoice ["+filesVector.get(childVector.indexOf(selectedInvoiceNo))+"]");
                
                if  (childVector.elementAt(0).toString().equalsIgnoreCase(selectedInvoiceNo)) {
                    
                    System.out.println("Child entry ["+childVector.elementAt(j)+"]");
                    System.out.println();
                    System.out.println("Files Vector : ["+filesVector.size()+"]");
                     System.out.println();
                    System.out.println("Selected File ------ !!! ["+filesVector.elementAt(selectedIndex)+"]");
                    
                    this.processBrRequisitionFile(new java.io.File(filesVector.elementAt(selectedIndex).toString()), this);
                    //                file2SelectedInvoice = new java.io.File(childVector.elementAt().toString());
                    
                    //                System.out.println("Selected File !!! ["+filesVector+"]");
                }
                
            }
            
            
        }
    }
    private void  processBrRequisitionFile(java.io.File filePortrait2Process, biz.systempartners.claims.ClaimsViewer claimsViewer) {
        
        biz.systempartners.claims.XMLClaimFile xmlClaimFile = new  biz.systempartners.claims.XMLClaimFile();
        
        // xmlClaimFile.xmlClaim = claimsViewer;
        
        xmlClaimFile.processFile(filePortrait2Process);
        
        javax.swing.JTable tempInvoiceTable;
        
        
        
        java.util.Vector headerInvoiceVector = new java.util.Vector(1,1);
        
        headerInvoiceVector.addElement("Invoice No.");
        
        //     claimsTable = new javax.swing.JTable(5,4);
        //  claimsTable = claimsViewer.getInvoiceTable();
        
        claimsTable = xmlClaimFile.xmlClaim.getInvoiceTable();
        
        
       /* for (int i = 0; i < claimsTable.getRowCount(); i++) {
        
            for (int j = 0; j < claimsTable.getColumnCount(); j++) {
        
                claimsTable.setValueAt(null, i, j);
        
            }
        }
        */
        invoiceTable = claimsViewer.getInvoiceListTable();
        
        javax.swing.JPanel claimsViewerPanel = claimsViewer.getClaimsViewerPanel();
        
        javax.swing.JScrollPane jScrollPane11 = claimsViewer.getScrollPane();
        
        javax.swing.JScrollPane invoiceScrollPane = claimsViewer.getInvoiceListScrollPane();
        
        invoiceVector = claimsViewer.getInvoiceVector();
        java.util.Vector invoiceChildVector = new java.util.Vector(1,1);
        javax.swing.JTextField patientNo = claimsViewer.getPatientNo();
        javax.swing.JTextField patientName = claimsViewer.getPatientName();
        javax.swing.JTextField schemeMemberNo = claimsViewer.getSchemeMemberNo();
        javax.swing.JTextField schemeName = claimsViewer.getSchemeName();
        javax.swing.JTextField schemePayer = claimsViewer.getSchemePayer();
        javax.swing.JTextField accountNo = claimsViewer.getAccountNo();
        javax.swing.JTextField invoiceNo = claimsViewer.getInvoiceNo();
        javax.swing.JTextField healthCareProvider = claimsViewer.getHealthCareProvider();
        
        jScrollPane11.setViewportView(claimsTable);
        if (claimsViewer.isShowing()) {
            claimsViewer.validate();
        } else {
            claimsViewer.setVisible(true);
        }
        
       
        claimsViewer.invalidate();
        
        //  try {
        
        //  try {
        
        //   java.io.FileInputStream requisFileIOStream = new java.io.FileInputStream(filePortrait2Process);
        
        //   java.io.ObjectInputStream requisObjInStream = new java.io.ObjectInputStream(requisFileIOStream);
        
        
        //                javax.swing.table.JTableHeader claimsTableHeader = (javax.swing.table.JTableHeader)requisObjInStream.readObject();
        
        //  requisTable = (javax.swing.JTable)requisObjInStream.readObject();
        
        // String invoiceNoString = (java.lang.String)requisObjInStream.readObject();
        String invoiceNoString = xmlClaimFile.xmlClaim.getInvoiceNumber();
        invoiceNo.setText(invoiceNoString);
        
        //  patientNo.setText((java.lang.String)requisObjInStream.readObject());
        patientNo.setText(xmlClaimFile.xmlClaim.getPatientNumber());
        
        System.out.println("PATIENT NUMBER : "+xmlClaimFile.xmlClaim.getPatientNumber());
        // patientName.setText((java.lang.String)requisObjInStream.readObject());
        patientName.setText(xmlClaimFile.xmlClaim.getPatientName());
        //   schemeMemberNo.setText((java.lang.String)requisObjInStream.readObject());
        schemeMemberNo.setText(xmlClaimFile.xmlClaim.getSchemeMemberNumber());
        //   schemeName.setText((java.lang.String)requisObjInStream.readObject());
        schemeName.setText(xmlClaimFile.xmlClaim.getSchemeName());
        //  schemePayer.setText((java.lang.String)requisObjInStream.readObject());
        schemePayer.setText(xmlClaimFile.xmlClaim.getSchemePayer());
        //  accountNo.setText((java.lang.String)requisObjInStream.readObject());
        accountNo.setText(xmlClaimFile.xmlClaim.getAccountNumber());
        healthCareProvider.setText(xmlClaimFile.xmlClaim.getHealthCareProvider());
        // tempInvoiceTable = new javax.swing.JTable(invoiceVector, headerInvoiceVector);
        
        System.out.println("Starting to populate tables ...");
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        
        gridBagConstraints.gridx = 0;
        
        gridBagConstraints.gridy = 0;
        
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        
        gridBagConstraints.weightx = 1.0;
        
        gridBagConstraints.weighty = 100.0;
        
        claimsViewerPanel.removeAll();
        
        claimsViewerPanel.add(jScrollPane11, gridBagConstraints);
        
        
        invoiceScrollPane.setViewportView(invoiceTable);
        
        jScrollPane11.setViewportView(claimsTable);
        
        claimsViewerPanel.validate();
        
        for (int i = 0; i < invoiceVector.size(); i++) {
            
            java.util.Vector childVector = (java.util.Vector)invoiceVector.elementAt(i);
            
            for (int j = 0; j < childVector.size(); j++) {
                
                //               System.out.println("Child entry at ---- !!! ["+j+"] is ["+childVector.elementAt(j)+"]");
                
                java.io.File  file2SelectedInvoice;
                
                file2SelectedInvoice = new java.io.File(childVector.elementAt(j).toString());
                
                System.out.println("Selected File ---- !!!!! ["+file2SelectedInvoice.getPath()+"]");
            }
            
            //           for (int j = 0; j < childVector.size(); j++) {
            
            //            if  (childVector.elementAt(0).toString().equalsIgnoreCase(invoiceNo)) {
            
            //           }
            //        }
            
        }
        
        
        
        //  } catch(java.lang.ClassNotFoundException cnfExec) {
        
        //      javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), cnfExec.getMessage());
        
        //  }
        
        //   } catch(java.io.IOException ioExec) {
        
        //       javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), ioExec.getMessage());
        
        //   }
    }
    
    private void storePreferences() {
        
        //        appProp.setProperty("defaultsplitpane", jTabbedPane1.getSelectedComponent().getName());
        
        try {
            
            try {
                
                appProp.store(new java.io.FileOutputStream(myAppOutFileUrl), "My properties file");
                
            } catch(java.io.FileNotFoundException fnfExec) {
                
                javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), fnfExec.getMessage());
                
            }
            
        } catch(java.io.IOException IOExec) {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), IOExec.getMessage());
            
        }
        
    }
    
    public void changeThemeByUrl(java.lang.String lnf, java.net.URL themepack) {
        
        java.lang.String themepackPath = null;
        
        
        com.l2fprod.gui.plaf.skin.Skin skin = null;
        
        try {
            
            skin = com.l2fprod.gui.plaf.skin.SkinLookAndFeel.loadThemePack(themepack);
            
        } catch(java.lang.Exception exec) {
            
            
        }
        
        
        com.l2fprod.gui.plaf.skin.SkinLookAndFeel.setSkin(skin);
        
        java.awt.Component[] component_array = null;
        
        
        component_array = this.getComponents();
        
        try {
            
            try {
                
                try {
                    
                    try {
                        
                        
                        javax.swing.UIManager.setLookAndFeel(lnf);
                        
                        // jToolBar1.updateUI();
                        
                        //   this.jPopupMenu1.updateUI();
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this);
                        
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this.getRootPane());
                        
                        //updateNewComponentsUI();
                        
                        //    javax.swing.SwingUtilities.updateComponentTreeUI(this.jPopupMenu1);
                        
                        // this.jMenuBar1.setBorder(new javax.swing.border.TitledBorder(null, "Hospital System Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 8), new java.awt.Color(0, 0, 153)));
                        
                        
                    } catch(java.lang.ClassNotFoundException cnfExec) {
                        
                        javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());
                        
                    }
                    
                    
                } catch(java.lang.InstantiationException instExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, instExec.getMessage());
                    
                }
                
            } catch(java.lang.IllegalAccessException illegExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, illegExec.getMessage());
                
            }
            
        } catch(javax.swing.UnsupportedLookAndFeelException unsuppExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, unsuppExec.getMessage());
            
        }
        
    }
    
    public void changeTheme(java.lang.String lnf, java.lang.String themepack) {
        
        java.lang.String themepackPath = null;
        
        
        com.l2fprod.gui.plaf.skin.Skin skin = null;
        
        
        try {
            
            skin = com.l2fprod.gui.plaf.skin.SkinLookAndFeel.loadThemePack(themepack);
            
        } catch(java.lang.Exception exec) {
            
            
        }
        
        com.l2fprod.gui.plaf.skin.SkinLookAndFeel.setSkin(skin);
        
        java.awt.Component[] component_array = null;
        
        
        component_array = this.getComponents();
        
        try {
            
            try {
                
                try {
                    
                    try {
                        
                        
                        javax.swing.UIManager.setLookAndFeel(lnf);
                        
                        
                        //jToolBar1.updateUI();
                        
                        //   this.jPopupMenu1.updateUI();
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this);
                        
                        //updateNewComponentsUI();
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this.getRootPane());
                        
                        //    javax.swing.SwingUtilities.updateComponentTreeUI(this.jPopupMenu1);
                        
                        // this.jMenuBar1.setBorder(new javax.swing.border.TitledBorder(null, "Hospital System Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 8), new java.awt.Color(0, 0, 153)));
                        
                        
                    } catch(java.lang.ClassNotFoundException cnfExec) {
                        
                        javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());
                        
                    }
                    
                    
                } catch(java.lang.InstantiationException instExec) {
                    
                    
                    javax.swing.JOptionPane.showMessageDialog(this, instExec.getMessage());
                    
                }
                
            } catch(java.lang.IllegalAccessException illegExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, illegExec.getMessage());
                
            }
            
        } catch(javax.swing.UnsupportedLookAndFeelException unsuppExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, unsuppExec.getMessage());
            
        }
        
    }
    
    public void loadUnProcessedClaims(){
        
       java.io.File newClaimDir = new java.io.File(appProp.getProperty("newclaimsdir")); 
         
//       javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
       
        com.afrisoftech.lib.ExampleFileFilter filter = new com.afrisoftech.lib.ExampleFileFilter();
        
        
        
        filter.addExtension("clm");
        
        filter.addExtension("xml");

   //     fileChooser.setFileFilter(filter);
       
      java.io.File claimFiles[] =  newClaimDir.listFiles();
      
      System.out.println(newClaimDir.toString());
      
      
      
      for(int i = 0; i < claimFiles.length; i++){
         if(claimFiles[i].toString().endsWith(".clm") || claimFiles[i].toString().endsWith(".xml")){ 
         
          //   ClaimsMsgShow.pr
             filesVector.addElement(claimFiles[i].getPath());
             System.out.println("Files VectorSize "+filesVector.size());
             biz.systempartners.claims.ClaimsMsgShow.processBrRequisitionFile(claimFiles[i], this, null,filesVector);
         }
      }
      
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AccountNo;
    private javax.swing.JMenuItem aboutAfrisoft;
    private javax.swing.JMenuItem aboutClaimsMnit;
    private javax.swing.JTextField accountNoTxt;
    private javax.swing.JPanel actionPanel;
    private javax.swing.JRadioButtonMenuItem aquamnit1;
    private javax.swing.JButton backupDB;
    private javax.swing.JRadioButtonMenuItem bbjmnit11;
    private javax.swing.JRadioButtonMenuItem beosmnit1;
    private javax.swing.JButton brwsrBttn;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton calcBttn;
    private javax.swing.JPanel claimsMainPanel;
    private javax.swing.JMenuBar claimsMenuBar;
    private javax.swing.JPanel claimsViewer;
    private javax.swing.JPanel claimsViewerPanel;
    private javax.swing.JButton clearViewer;
    private javax.swing.JButton closeShift;
    private javax.swing.JButton closeViewer;
    private javax.swing.JButton compactDB;
    private javax.swing.JMenuItem dbAccountMnit;
    private javax.swing.JMenuItem dbUserPasswdMnit;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JButton editButtn;
    private javax.swing.JMenuItem emailAcctMnit;
    private javax.swing.JMenuItem excelFileDirMnit;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JButton export2Excel;
    private javax.swing.JMenuItem exportClaims2DBMnit;
    private javax.swing.JMenuItem exportClaims2ExcelMnit;
    private javax.swing.JButton fmgrBttn;
    private javax.swing.JLabel healthCareProviderLbl;
    private javax.swing.JTextField healthCareProviderTxt;
    private javax.swing.JButton helpButton;
    private javax.swing.JMenuItem helpFilesMnit;
    private javax.swing.JMenu helpMn;
    private javax.swing.JTable invoiceDataTable;
    private javax.swing.JLabel invoiceNo;
    private javax.swing.JTextField invoiceNoTxt;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JLabel invoiceTotal;
    private javax.swing.JTextField invoiceTotalTxt;
    private javax.swing.JScrollPane invoicesScrollPane;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar31;
    private javax.swing.JToolBar jToolBar311;
    private javax.swing.JMenu lnfmn;
    private javax.swing.JCheckBoxMenuItem macmnit1;
    private javax.swing.JRadioButtonMenuItem macos1mnit1;
    private javax.swing.JButton mailBttn;
    private javax.swing.JRadioButtonMenuItem modernmnit1;
    private javax.swing.JCheckBoxMenuItem motiflnfmnit1;
    private javax.swing.JButton mtmediaBttn;
    private javax.swing.JButton mtmediaBttn1;
    private javax.swing.JMenuItem newClaimsDirMnit;
    private javax.swing.JMenuItem office2003mn;
    private javax.swing.JMenuItem officexpmn;
    private javax.swing.JButton openShift;
    private javax.swing.JMenu operationsMn;
    private javax.swing.JButton operationsToolBar;
    private javax.swing.JButton optimizeDB;
    private javax.swing.JMenuItem optimizeDBMnit;
    private javax.swing.JMenuItem otheSysInfoMnit;
    private javax.swing.JLabel patientName;
    private javax.swing.JTextField patientNameTxt;
    private javax.swing.JLabel patientNo;
    private javax.swing.JTextField patientNoTxt;
    private javax.swing.JButton payrollToolBar;
    private javax.swing.JButton pharmacyToolBar;
    private javax.swing.JMenuItem prineDBMnit;
    private javax.swing.JMenuItem processedDirMnit;
    private javax.swing.JMenuItem profileMnit;
    private javax.swing.JButton refreshViewer;
    private javax.swing.JMenuItem reindexDBMnit;
    private javax.swing.JMenuItem rejectInvoicesMnit;
    private javax.swing.JButton reportsToolBar;
    private javax.swing.JMenuItem saveAllClaimsMnit;
    private javax.swing.JMenuItem saveClaimMnit;
    private javax.swing.JButton saveInvoice;
    private javax.swing.JLabel schemeMemberNo;
    private javax.swing.JTextField schemeMemberNoTxt;
    private javax.swing.JLabel schemeName;
    private javax.swing.JTextField schemeNameTxt;
    private javax.swing.JLabel schemePayer;
    private javax.swing.JTextField schemePayerTxt;
    private javax.swing.JMenu setupMn;
    private javax.swing.JMenu skinmn;
    private javax.swing.JMenuItem studio2k5mn;
    private javax.swing.JButton suspendShift;
    private javax.swing.JCheckBoxMenuItem swinglnfmnit1;
    private javax.swing.JMenuItem updateListsMnit;
    private javax.swing.JMenuItem userProfilesMnit;
    private javax.swing.JMenu utilitiesMn;
    private javax.swing.JMenuItem vetClaimsMnit;
    private javax.swing.JMenuItem viewDataMnit;
    private javax.swing.JMenuItem viewInvoiceMnit;
    private javax.swing.JMenuItem viewInvoiceSummaryMnit;
    private javax.swing.JRadioButtonMenuItem whiltmnit1;
    private javax.swing.JCheckBoxMenuItem winlnfmnit1;
    private javax.swing.JRadioButtonMenuItem xpmnit1;
    private javax.swing.JMenu xpskinmn;
    // End of variables declaration//GEN-END:variables
    
}
