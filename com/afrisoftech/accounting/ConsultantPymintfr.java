/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.accounting;

/**
 *
 * @author  root
 */
public class ConsultantPymintfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    private  javax.swing.JComboBox cmbox = new javax.swing.JComboBox();
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    private java.lang.String shift_no = null;
    public ConsultantPymintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        jTextField81.setText(System.getProperty("cashpoint"));
        
        jTextField14.setText(getShiftNumber());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset21 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new javax.swing.JTable();
        jButton52 = new javax.swing.JButton();
        try {
            searchRowSet2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new javax.swing.JTable();
        jButton521 = new javax.swing.JButton();
        try {
            searchRowSet21 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        try {
            searchRowSet1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new javax.swing.JTable();
        jButton522 = new javax.swing.JButton();
        try {
            searchRowSet22 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel531 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel6 = new javax.swing.JLabel();
        jList1 = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel422 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField3 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel7 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton12 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField111 = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        jLabel5311 = new javax.swing.JLabel();
        jTextField311 = new javax.swing.JTextField();
        jComboBox11 = new javax.swing.JComboBox();
        datePicker11 = new com.afrisoftech.lib.DatePicker();
        jLabel61 = new javax.swing.JLabel();
        jList11 = new javax.swing.JList();
        jLabel41 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jPanel421 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel511 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jLabel521 = new javax.swing.JLabel();
        jTextField51 = new javax.swing.JTextField();
        jComboBox21 = new javax.swing.JComboBox();
        jLabel532 = new javax.swing.JLabel();
        jTextField32 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        jSeparator11 = new javax.swing.JSeparator();
        jTextField71 = new javax.swing.JTextField();
        jTextField82 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton11 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton111 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton112 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField81 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();

        crset2.setCommand("select distinct bank_account_no from ac_banks_setup");
        crset2.setConnectionSource(pConnDB);
        crset21.setCommand("select distinct payment_mode from pb_paymentmodes ORDER BY payment_mode");
        crset21.setConnectionSource(pConnDB);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        searchRowSet2.setConnectionSource(pConnDB);
        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1131.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1131ActionPerformed(evt);
            }
        });

        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });

        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        searchRowSet21.setConnectionSource(pConnDB);
        crset1.setConnectionSource(pConnDB);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField1111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        searchRowSet1.setConnectionSource(pConnDB);
        jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog22.setModal(true);
        jSearchDialog22.setUndecorated(true);
        jSearchPanel22.setLayout(new java.awt.GridBagLayout());

        jSearchPanel22.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1132CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel22.add(jTextField1132, gridBagConstraints);

        jSearchTable22.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable22.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable22MouseClicked(evt);
            }
        });

        jSearchScrollPane22.setViewportView(jSearchTable22);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

        jButton522.setText("Close");
        jButton522.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton522ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel22.add(jButton522, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

        searchRowSet22.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Payments");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jTextField7.setEditable(false);
        jTextField7.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField7.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        getContentPane().add(jTextField7, gridBagConstraints);

        jTextField8.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField8.setPreferredSize(new java.awt.Dimension(0, 0));
        getContentPane().add(jTextField8, new java.awt.GridBagConstraints());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Enter payee details"));
        jLabel1.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("GL Account");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextField11.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jTextField11, gridBagConstraints);

        jLabel9.setText("Paid To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel531.setText("Payment Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel531, gridBagConstraints);

        jTextField31.setText("Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jTextField31, gridBagConstraints);

        jComboBox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset21, "payment_mode", null, null, null));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jComboBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(datePicker1, gridBagConstraints);

        jLabel6.setText("Payment Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jPanel1.add(jList1, new java.awt.GridBagConstraints());

        jLabel4.setText("Cheque Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBorder(new javax.swing.border.EtchedBorder());
        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField9, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel42, gridBagConstraints);

        jTextField1.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField1.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jTextField1, gridBagConstraints);

        jPanel422.setLayout(new java.awt.GridBagLayout());

        jPanel422.setBorder(new javax.swing.border.EtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel422.add(jTextField92, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel422.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel422, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = -50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel3.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Enter payment details here."));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel5.setText("Bank Acct No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel5, gridBagConstraints);

        jLabel51.setText("Account Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel51, gridBagConstraints);

        jTextField4.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jTextField4, gridBagConstraints);

        jLabel52.setText("Bank Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel52, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jTextField5, gridBagConstraints);

        jComboBox2.setBackground(new java.awt.Color(204, 204, 204));
        jComboBox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset2, "bank_account_no", null, null, null));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jComboBox2, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("00");
        jTextField3.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField3, gridBagConstraints);

        jLabel53.setText("Amount KSHs.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel53, gridBagConstraints);

        jLabel12.setText("Net Pay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jLabel12, gridBagConstraints);

        jTextField12.setEditable(false);
        jTextField12.setText("00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jTextField12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "1st Visit", "Amt Paid", "Patient Name", "Patient No.", "Invoice No.", "Amt", "Pay ?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(51, 51, 255));
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        jPanel5.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel2.add(jPanel5, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Deduction Type", "Amount", "Creditor", "Debtor", "Account No.", "Gl"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable2KeyReleased(evt);
            }
        });

        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        jPanel9.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel2.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 80.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel3.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jSeparator1, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(new javax.swing.border.TitledBorder(""));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('p');
        jButton1.setText("Ok&Print");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton1, gridBagConstraints);

        jButton5.setMnemonic('R');
        jButton5.setText("Reprint");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton5, gridBagConstraints);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/note[1].gif")));
        jButton2.setMnemonic('E');
        jButton2.setText("Edit");
        jButton2.setToolTipText("Click here to edit data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton2, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton4, gridBagConstraints);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton12.setMnemonic('O');
        jButton12.setText("Ok");
        jButton12.setToolTipText("Click here enter data");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jPanel7, gridBagConstraints);

        jCheckBox1.setText("Payments");
        buttonGroup1.add(jCheckBox1);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanel3.add(jCheckBox1, gridBagConstraints);

        jCheckBox2.setText("Deductions");
        buttonGroup1.add(jCheckBox2);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel3.add(jCheckBox2, gridBagConstraints);

        jLabel10.setText("Net Deductions");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel10, gridBagConstraints);

        jTextField10.setEditable(false);
        jTextField10.setText("00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jTextField10, gridBagConstraints);

        jTabbedPane1.addTab("Consultants", jPanel3);

        jPanel31.setLayout(new java.awt.GridBagLayout());

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBorder(new javax.swing.border.TitledBorder("Enter payee details"));
        jLabel11.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel11, gridBagConstraints);

        jLabel21.setText("GL Account");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel21, gridBagConstraints);

        jTextField111.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(jTextField111, gridBagConstraints);

        jLabel91.setText("Paid To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel91, gridBagConstraints);

        jLabel5311.setText("Payment Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel5311, gridBagConstraints);

        jTextField311.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(jTextField311, gridBagConstraints);

        jComboBox11.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset21, "payment_mode", null, null, null));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jComboBox11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel11.add(datePicker11, gridBagConstraints);

        jLabel61.setText("Payment Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel61, gridBagConstraints);

        jPanel11.add(jList11, new java.awt.GridBagConstraints());

        jLabel41.setText("Cheque Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel41, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jTextField21, gridBagConstraints);

        jPanel421.setLayout(new java.awt.GridBagLayout());

        jPanel421.setBorder(new javax.swing.border.EtchedBorder());
        jTextField91.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel421.add(jTextField91, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel421.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jPanel421, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = -30;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel31.add(jPanel11, gridBagConstraints);

        jPanel21.setLayout(new java.awt.GridBagLayout());

        jPanel21.setBorder(new javax.swing.border.TitledBorder("Enter payment details here."));
        jPanel41.setLayout(new java.awt.GridBagLayout());

        jPanel41.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel54.setText("Bank Acct No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jLabel54, gridBagConstraints);

        jLabel511.setText("Account Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jLabel511, gridBagConstraints);

        jTextField41.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel41.add(jTextField41, gridBagConstraints);

        jLabel521.setText("Bank Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jLabel521, gridBagConstraints);

        jTextField51.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel41.add(jTextField51, gridBagConstraints);

        jComboBox21.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset2, "bank_account_no", null, null, null));
        jComboBox21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox21ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel41.add(jComboBox21, gridBagConstraints);

        jLabel532.setText("Amount KSHs.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jLabel532, gridBagConstraints);

        jTextField32.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField32.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel41.add(jTextField32, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel21.add(jPanel41, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Invoice No.", "Amt", "Amt. Due", "Amt. Paid", "Pay ?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.setShowHorizontalLines(false);
        jScrollPane11.setViewportView(jTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jPanel6.add(jScrollPane11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel21.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 90.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel31.add(jPanel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jSeparator11, gridBagConstraints);

        jTextField71.setEditable(false);
        jTextField71.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField71.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        jPanel31.add(jTextField71, gridBagConstraints);

        jTextField82.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField82.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel31.add(jTextField82, new java.awt.GridBagConstraints());

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jPanel8.setBorder(new javax.swing.border.EtchedBorder());
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton11.setMnemonic('p');
        jButton11.setText("Ok&Print");
        jButton11.setToolTipText("Click here enter data");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton11, gridBagConstraints);

        jButton111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton111.setMnemonic('O');
        jButton111.setText("Reprint");
        jButton111.setToolTipText("Click here enter data");
        jButton111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton111, gridBagConstraints);

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/note[1].gif")));
        jButton21.setMnemonic('E');
        jButton21.setText("Edit");
        jButton21.setToolTipText("Click here to edit data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton21, gridBagConstraints);

        jButton31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton31.setMnemonic('l');
        jButton31.setText("Clear");
        jButton31.setToolTipText("Click here to clear textfields");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton31, gridBagConstraints);

        jButton41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton41.setMnemonic('C');
        jButton41.setText("Close");
        jButton41.setToolTipText("Click here to close window");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton41, gridBagConstraints);

        jButton112.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton112.setMnemonic('O');
        jButton112.setText("Ok");
        jButton112.setToolTipText("Click here enter data");
        jButton112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton112ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton112, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel31.add(jPanel8, gridBagConstraints);

        jTabbedPane1.addTab("Other Payments", jPanel31);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        jLabel3.setText("Cash Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel3, gridBagConstraints);

        jTextField81.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTextField81, gridBagConstraints);

        jLabel8.setText("Shift No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel8, gridBagConstraints);

        jTextField14.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(jTextField14, gridBagConstraints);

        setBounds(0, 0, 697, 468);
    }//GEN-END:initComponents
    
    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        jTextField92.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
        
        this.jSearchDialog22.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jSearchTable22MouseClicked
    
    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        this.jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        cmbox22MouseClicked();        // Add your handling code here:
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void cmbox22MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTextField92.getLocationOnScreen();
        jSearchDialog22.setSize(400,200);
        jSearchDialog22.setLocation(point);
        jSearchDialog22.show();
    }
    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if(jTextField1132.getCaretPosition() > 2){
            try {
                searchRowSet22.execute("select chq_no FROM pb_documents_register WHERE chq_no  ilike '"+jTextField1132.getText()+"%' and used = 'false' and doc_no = '"+jTextField11.getText()+"' order by chq_no");
                
                jSearchTable22.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet22, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("chq_no", "Cheque No", false),
                    // new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Acc No.", false)
                    //  new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
                }));
                jSearchScrollPane22.setViewportView(jSearchTable22);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1132CaretUpdate
    public void tableModelTableChanged2() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        double netPay = 0.00;
        double floatDeduct = java.lang.Double.parseDouble(jTextField10.getText());
        double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
        
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            
            if (jTable2.getModel().getValueAt(i, 0) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable2.getModel().getValueAt(i, 1).toString());
                
                jTextField10.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable2.getModel().getValueAt(i, 1).toString());
                
                jTextField10.setText(java.lang.String.valueOf(resFloat));
                
            }
            netPay = floatTotal - floatDeduct;
            this.jTextField12.setText(java.lang.String.valueOf(netPay));
        }
        
    }
    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField10.getText());
        
        //   double resFloat = 0.00;
        //  double totalSum = 0.00;
        // double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
        
        if (jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());
            
            //double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
            
            double resVal = floatCol2;
            
            
            jTable2.setValueAt(new java.lang.Float(resVal), jTable2.getSelectedRow(), 1);
            
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                
                if (jTable2.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable2.getValueAt(i, 1).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            this.tableModelTableChanged2();
        }    // Add your handling code here:
    }//GEN-LAST:event_jTable2KeyReleased
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable2.getSelectedRow();
        boolean Gl = false;
        if (selectedGuaran != null) {
            try {
                
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT income FROM pb_statutory WHERE description = '"+cmbox.getSelectedItem().toString()+"'");
                
                while (rsetTable1.next())
                    Gl = rsetTable1.getBoolean(1);
                if(Gl != true){
                    java.sql.Statement stmtTable11 = connectDB.createStatement();
                    
                    java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT creditor,acc_no FROM pb_statutory WHERE description = '"+cmbox.getSelectedItem().toString()+"'");
                    
                    while (rsetTable11.next()) {
                        
                        System.out.println("Working at table row "+i);
                        jTable2.setValueAt(rsetTable11.getObject(1), i, 2);
                        jTable2.setValueAt(rsetTable11.getObject(2), i, 4);
                        // jTable11.setValueAt(rsetTable11.getObject(5), i, 5);
                        ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                        
                        
                        //                i = i + i;
                        //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    }
                }else{
                    java.sql.Statement stmtTable11 = connectDB.createStatement();
                    
                    java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT creditor,acc_no,gl_code FROM pb_statutory WHERE description = '"+cmbox.getSelectedItem().toString()+"'");
                    
                    while (rsetTable11.next()) {
                        
                        System.out.println("Working at table row "+i);
                        jTable2.setValueAt(rsetTable11.getObject(1), i, 2);
                        jTable2.setValueAt(rsetTable11.getObject(2), i, 4);
                        jTable2.setValueAt(rsetTable11.getObject(3), i, 5);
                        ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                        
                        
                        //                i = i + i;
                        //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    }
                }
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
            
        }
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable2.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable2.getSelectedRow(), 3);
        jTable2.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable2.getSelectedRow(), 4);
        this.jSearchDialog.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() > 2){
            try {
                searchRowSet1.execute("select scheme_name,account_no FROM ac_schemes WHERE scheme_name  ilike '"+jTextField1111.getText()+"%' order by scheme_name");
                
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("scheme_name", "Scheme_name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Acc No.", false)
                    //  new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
                }));
                jSearchScrollPane.setViewportView(jSearchTable);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        if (jTable2.getSelectedColumn() == 3) {
            
            this.cmbox1MouseClicked();
        }         // Add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked
    private void cmbox1MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane2.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.show();
    }
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        this.jPanel9.setVisible(true);
        this.jPanel5.setVisible(false);
        jButton1.setEnabled(true);
        
       /*  for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        */
        //  this.populateTable2(this.jComboBox13.getSelectedItem().toString());
        // Add your handling code here:
        crset1.setCommand("select distinct description FROM pb_statutory order by description");
        crset1.setConnectionSource(pConnDB);
        
        cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "description", null, null, null));
        javax.swing.table.TableColumn s = this.jTable2.getColumn("Deduction Type");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        this.jPanel5.setVisible(true);
        this.jPanel9.setVisible(false);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        double floatCol21 = 00;
        double Total = java.lang.Double.parseDouble(this.jTextField3.getText());
        // double Total = new com.afrisoftech.sys.Format2Number().Format2Number(jTextField3.getText()).doubleValue();
        
        if (jTable1.getSelectedColumn() == 6) {
            if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.TRUE) {
                
                
                if (jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()) != null) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), 6) != null){
                        jTable1.setValueAt(new java.lang.Float(floatCol2), jTable1.getSelectedRow(), 1);
                        this.jTextField3.setText(java.lang.String.valueOf(floatCol2+Total));
                    }
                }
                
                
            }else{
                if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.FALSE) {
                    
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()) != null) {
                        // if (jTable1.getValueAt(jTable1.getSelectedRow(), 4) == null){
                        ///this.tableModelTableChanged1();
                        jTable1.setValueAt(new java.lang.Float(floatCol21), jTable1.getSelectedRow(), 5);
                        this.jTextField3.setText(java.lang.String.valueOf(Total-floatCol2));
                        // }
                    }
                }
            }
        }
        
      /*
        if (jTable1.getSelectedColumn() == 4) {
            if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4).toString()) == java.lang.Boolean.TRUE) {
       
       
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()) != null) {
                        if (jTable1.getValueAt(jTable1.getSelectedRow(), 4) != null){
                            this.tableModelTableChanged1();
                        }
                    }
       
       
            }else{
                if (jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()) == null) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), 4) == null){
                        ///this.tableModelTableChanged1();
                          this.tableModelTableChanged();
                    }
                }
            }
       
        }
       */// Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        double resFloat = 0.00;
        //  if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) != null) {
        
        //    float floatCol2 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        
        //  float floatCol3 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        
        // float resVal = floatCol3;
        
        
        // jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
        
        
        // for (int i = 0; i < jTable1.getRowCount(); i++) {
        
        // if (jTable1.getModel().getValueAt(i, 4) != null) {//toString().compareToIgnoreCase(null) {
        
        //    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
        
        
        // totalSum = floatTotal + resFloat;
        
        // }
        
        
          /*  this.tableModelTableChanged1();
        }else
            if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) == null) {
                jTable1.setValueAt(new java.lang.Double(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()), jTable1.getSelectedRow(), 5);
                this.tableModelTableChanged1();
            }
           */// Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void jButton112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton112ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        
        
        java.sql.Connection con;
        try{
            String vouchNo = null;
            String user = null;
            String transNo = null;
            
            try {
                connectDB.setAutoCommit(false);
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq'),current_user");
                while (rst.next()){
                    rst.getObject(1).toString();
                
                transNo = rst.getObject(1).toString();
                user = rst.getObject(2).toString();
                }
                java.sql.Statement ps22 = connectDB.createStatement();
                java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq'),5,0)");
                while (rs22.next()){
                    vouchNo = rs22.getObject(1).toString();
                
                }
                  
                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_cash_book values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?)");
                pstmt1.setString(1,jTextField71.getText());
                
                // pstmt1.setString(2,jTextField31.getText());
                pstmt1.setString(6,"");
                //if (jTextField31.getText().equals("")){
                //   javax.swing.JOptionPane.showMessageDialog(this,"Paid To Missing","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                //}else{
                pstmt1.setString(2,jTextField311.getText());
                // }
                pstmt1.setString(3,jTextField91.getText());
                pstmt1.setString(4,jComboBox11.getSelectedItem().toString());
                pstmt1.setString(5,vouchNo);
                pstmt1.setString(7,jTextField91.getText());
                if (jTextField111.getText().equals("")){
                    javax.swing.JOptionPane.showMessageDialog(this,"Select payment code","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }else{
                    
                    pstmt1.setString(9,jTextField111.getText());
                }
                pstmt1.setString(7,"");
                pstmt1.setString(8,"");
                
                pstmt1.setString(11,"");
                pstmt1.setString(12,"");
                pstmt1.setString(13,"");
                pstmt1.setString(10,jTextField21.getText());
                pstmt1.setString(14,jComboBox21.getSelectedItem().toString());
                pstmt1.setObject(15,jTextField41.getText());
                pstmt1.setString(16,jTextField51.getText());
                pstmt1.setString(17,"Payment");
                pstmt1.setString(18,"00");
                
                pstmt1.setString(19,jTextField32.getText());
                
                pstmt1.setString(20,datePicker11.getDate().toString());
                pstmt1.setString(21,transNo);
                pstmt1.setBoolean(24, false);
                pstmt1.setBoolean(22,false);
                pstmt1.setBoolean(23,false);
                pstmt1.setObject(25,null);
                pstmt1.setObject(26,null);
                pstmt1.setObject(27,null);
                pstmt1.setString(28,user);
                //   pstmt1.setObject(29,null);
                //pstmt1.setString(30,"");
                pstmt1.setObject(29,jTextField81.getText());
                pstmt1.setString(30,jTextField14.getText());
                pstmt1.executeUpdate();
                
                for (int i = 0; i < jTable11.getRowCount(); i++){
                    //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
                    
                    if (jTable11.getModel().getValueAt(i,4) != null){
                        java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?, ?, ?, ?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                        pstmt11.setString(1,jTextField91.getText());
                        pstmt11.setObject(2,jTextField311.getText());
                        pstmt11.setObject(3,jTextField71.getText());
                        pstmt11.setObject(4,jTable11.getValueAt(i,0));
                        pstmt11.setString(5,datePicker11.getDate().toString());
                        pstmt11.setObject(6,"");
                        pstmt11.setObject(8,jTable11.getValueAt(i,3));
                        pstmt11.setString(7,datePicker11.getDate().toString());
                        pstmt11.setObject(9,"00");
                        pstmt11.setString(10,datePicker11.getDate().toString());
                        pstmt11.setObject(11,vouchNo);
                        
                        
                        pstmt11.executeUpdate();
                        
                    }
                }
                
                if (jTextField311.getText().equals("Petty Cash")){
                    java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_petty_cash values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    
                    pstmt21.setObject(1,jTextField71.getText());
                    pstmt21.setString(2,jTextField311.getText());
                    pstmt21.setString(4,jTextField311.getText());
                    pstmt21.setString(3,"");
                    pstmt21.setString(5,jTextField32.getText());
                    pstmt21.setString(6,"00");
                    pstmt21.setString(7,datePicker11.getDate().toString());
                    pstmt21.setString(8,user);
                    pstmt21.setString(9,"true");
                    pstmt21.setString(11,datePicker11.getDate().toString());
                    pstmt21.setString(10,"");
                    pstmt21.setString(12,"true");
                    pstmt21.setString(13,"");
                    pstmt21.setString(14,jTextField91.getText());
                    pstmt21.setString(15,"");
                    pstmt21.setString(16,"");
                    pstmt21.setString(17,transNo);
                    pstmt21.setObject(18,jTextField81.getText());
                    pstmt21.setString(19,jTextField14.getText());
                    pstmt21.executeUpdate();
                    
                } else{
                    for (int i = 0; i < jTable11.getRowCount(); i++){
                        //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
                        
                        if (jTable11.getModel().getValueAt(i,4) != null){
                            
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                            pstmt.setObject(1,jTextField71.getText());
                            pstmt.setString(3,"");
                            pstmt.setObject(2,jTextField311.getText());
                            pstmt.setString(4,jTextField91.getText());
                            pstmt.setString(5,"");
                            if (jTable11.getValueAt(i,0) != null){
                                pstmt.setObject(6,jTable11.getValueAt(i,0).toString());
                            }else{
                                pstmt.setObject(6,"");
                            }
                            pstmt.setString(7,jTextField91.getText());
                            
                            pstmt.setString(8,"");
                            
                            pstmt.setString(11,jTextField21.getText());
                            pstmt.setString(10,"");
                            pstmt.setString(9,"");
                            pstmt.setString(12,"");
                            //pstmt.setString(13,jTextField3.getText());
                            pstmt.setObject(13,"");
                            pstmt.setObject(14,jTextField311.getText());
                            pstmt.setString(15,"Payment");
                            pstmt.setObject(16,jTable11.getValueAt(i,3).toString());
                            pstmt.setString(17,"00");
                            pstmt.setObject(18,datePicker11.getDate().toString());
                            pstmt.setObject(19,transNo);
                            pstmt.setString(20,"false");
                            pstmt.setObject(21,"false");
                            pstmt.setString(22,"false");
                            pstmt.setString(23,user);
                            
                            pstmt.setObject(24,jTextField81.getText());
                            pstmt.setString(25,jTextField14.getText());
                            pstmt.executeUpdate();
                            
                            
                        }
                    }
                    
                }
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                //         OtherPayVoucherPdf policy = new OtherPayVoucherPdf();
                //         policy.OtherPayVoucherPdf(connectDB,vouchNo);
                //            jTextField1.setText("");
                jTextField21.setText("");
                jTextField311.setText("");
                jTextField111.setText("");
                jTextField41.setText("");
                jTextField31.setText("");
                this.jComboBox11.setSelectedItem(null);
                jTextField51.setText("");
                //            jTextField9.setText("");
                //      crset11.execute();
                
                jButton11.setEnabled(false);
            }   catch(java.sql.SQLException sq){
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                jLabel7.setForeground(java.awt.Color.red);
                jLabel7.setText("Sorry. Please Check The Fields");
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton112ActionPerformed
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        
        
        java.sql.Connection con;
        try{
            String KRA = null;
            String Code = null;
            String vouchNo = null;
            String user = null;
            String transNo = null;
            // String user = null;
            String actNames1 = null;
            String actCode1 = null;
            String invoiceNo = null;
            String invoiceNo1 = null;
            double Deductions = java.lang.Double.parseDouble(jTextField10.getText());;
            double Net = java.lang.Double.parseDouble(jTextField3.getText());;
            
            
            try {
                // if(Deductions > Net){
                //  javax.swing.JOptionPane.showMessageDialog(this,"Deductions MORE THAN The Earnings","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                // }else{
                connectDB.setAutoCommit(false);
                
                
                java.sql.Statement ps22 = connectDB.createStatement();
                java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq'),5,0)");
                while (rs22.next()){
                    vouchNo = rs22.getObject(1).toString();
                }
                java.sql.Statement ps221 = connectDB.createStatement();
                java.sql.ResultSet rs221 = ps221.executeQuery("select nextval('transaction_no_seq')");
                while (rs221.next()){
                    transNo = rs221.getObject(1).toString();
                }
                java.sql.Statement ps222 = connectDB.createStatement();
                java.sql.ResultSet rs222 = ps222.executeQuery("select supplier_name,code from st_suppliers where category ilike 'KRA%'");
                while (rs222.next())
                    KRA = rs222.getObject(1).toString();
                Code = rs222.getObject(2).toString();
                
                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
                while (rsts1.next()){
                    actCode1 = rsts1.getObject(1).toString();
                    actNames1 = rsts1.getObject(2).toString();
                    user = rsts1.getObject(3).toString();
                }
                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_cash_book values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?)");
                pstmt1.setString(1,jTextField7.getText());
                
                // pstmt1.setString(2,jTextField31.getText());
                pstmt1.setString(6,"");
                //if (jTextField31.getText().equals("")){
                //   javax.swing.JOptionPane.showMessageDialog(this,"Paid To Missing","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                //}else{
                pstmt1.setString(2,jTextField31.getText());
                // }
                pstmt1.setString(3,jTextField9.getText());
                pstmt1.setString(4,jComboBox1.getSelectedItem().toString());
                pstmt1.setString(5,vouchNo);
                pstmt1.setString(7,jTextField9.getText());
                if (jTextField11.getText().equals("")){
                    javax.swing.JOptionPane.showMessageDialog(this,"Select payment code","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }else{
                    
                    pstmt1.setString(9,jTextField11.getText());
                }
                pstmt1.setString(7,"");
                pstmt1.setString(8,"");
                
                pstmt1.setString(11,"");
                pstmt1.setString(12,"");
                pstmt1.setString(13,"");
                pstmt1.setString(10,jTextField92.getText());
                pstmt1.setString(14,jComboBox2.getSelectedItem().toString());
                pstmt1.setObject(15,jTextField4.getText());
                pstmt1.setString(16,jTextField5.getText());
                pstmt1.setString(17,"Payment");
                pstmt1.setString(18,"00");
                
                pstmt1.setString(19,jTextField12.getText());
                
                pstmt1.setString(20,datePicker1.getDate().toString());
                pstmt1.setString(21,transNo);
                pstmt1.setBoolean(24, false);
                pstmt1.setBoolean(22,false);
                pstmt1.setBoolean(23,false);
                pstmt1.setObject(25,null);
                pstmt1.setObject(26,null);
                pstmt1.setObject(27,null);
                pstmt1.setString(28,user);
                //pstmt1.setObject(29,null);
                // pstmt1.setString(30,"");
                pstmt1.setObject(29,jTextField81.getText());
                pstmt1.setString(30,jTextField14.getText());
                pstmt1.executeUpdate();
                
                java.sql.PreparedStatement pstmt2126 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTextField3.getText()+"',mtd_credit = mtd_credit + '"+jTextField3.getText()+"' where code = '"+jTextField11.getText()+"'");
                pstmt2126.executeUpdate();
                
                java.sql.PreparedStatement pstmta = connectDB.prepareStatement("insert into ac_doctors_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                pstmta.setObject(1,jTextField1.getText());
                pstmta.setString(4,jTextField92.getText());
                pstmta.setObject(3,jTextField9.getText());
                pstmta.setString(2,jTextField31.getText());
                pstmta.setString(5,jTextField7.getText());
                pstmta.setString(7,jTextField3.getText());
                pstmta.setString(6,"Payment");
                pstmta.setString(8,"00");
                pstmta.setString(9,"");
                pstmta.setString(10,"");
                pstmta.setString(11,"0");
                pstmta.setString(14,datePicker1.getDate().toString());
                pstmta.setObject(15,vouchNo);
                pstmta.setBoolean(12,true);
                pstmta.setString(13,user);
                pstmta.executeUpdate();
                
                java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTextField3.getText()+"',mtd_debit = mtd_debit + '"+jTextField3.getText()+"' where code = '"+jTextField7.getText()+"'");
                pstmt9.executeUpdate();
                
                java.sql.PreparedStatement pstmta1 = connectDB.prepareStatement("insert into ac_doctors_payments values(?, ?, ?, ?, ?, ?, ?, ?, ?)");
                pstmta1.setObject(2,jTextField1.getText());
                pstmta1.setString(4,jTextField92.getText());
                pstmta1.setObject(3,jTextField9.getText());
                // pstmta.setString(2,jTextField31.getText());
                // pstmta.setString(5,jTextField7.getText());
                
                pstmta1.setString(6,jTextField3.getText());
                pstmta1.setString(8,"Payment");
                pstmta1.setString(7,"00");
                
                // pstmta.setString(9,"");
                //pstmta.setString(10,"");
                //pstmta.setString(11,"0");
                pstmta1.setString(1,datePicker1.getDate().toString());
                pstmta1.setObject(5,vouchNo);
                
                
                pstmta1.setString(9,user);
                pstmta1.executeUpdate();
                
                for (int i = 0; i < jTable1.getRowCount(); i++){
                    //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
                    if (jTable1.getModel().getValueAt(i,6) != null){
                        
                        // if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.TRUE) {
                        if(java.lang.Double.parseDouble(jTable1.getValueAt(i,1).toString()) != 0 ){
                            
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into dr_allocation values(?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt.setObject(1,jTextField1.getText());
                            pstmt.setObject(3,"Allocation");
                            pstmt.setString(2,datePicker1.getDate().toString());
                            pstmt.setObject(4,vouchNo);
                            pstmt.setObject(5,jComboBox1.getToolTipText());
                            if(jTextField92.getText().equals(null) || jTextField92.getText().equals("")){
                                pstmt.setObject(6,"00");
                            }else{
                                pstmt.setObject(6,jTextField92.getText());
                            }
                            pstmt.setObject(7,jTextField3.getText());
                            //  if(java.lang.Double.parseDouble(jTable1.getValueAt(i,5).toString()) > 0){
                            pstmt.setObject(8,jTable1.getValueAt(i,5).toString());
                            //  }else{
                            //      pstmt.setObject(8,jTable1.getValueAt(i,3).toString());
                            //  }
                            pstmt.setObject(9,jTable1.getValueAt(i,4).toString());
                            
                            pstmt.setObject(10,user);
                            
                            pstmt.setObject(11,jTable1.getValueAt(i,2).toString()+" "+jTable1.getValueAt(i,3).toString());
                            // pstmt.setObject(12,jTable1.getValueAt(i,0).toString());
                            pstmt.setObject(12,"'now'");
                            
                            pstmt.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt213 = connectDB.prepareStatement("update ac_doctors_ledger set credit_bal = 0,debit_bal=0 where pat_inv ='"+jTable1.getValueAt(i,4).toString()+"' and acc_no = '"+jTextField1.getText()+"'");
                            pstmt213.executeUpdate();
                        }
                    }
                }
                for (int j = 0; j < jTable2.getRowCount(); j++){
                    if (jTable2.getModel().getValueAt(j,0) != null){
                        java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into ac_doctors_payments values(?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        pstmt11.setObject(2,jTextField1.getText());
                        pstmt11.setString(4,jTextField92.getText());
                        pstmt11.setObject(3,jTextField9.getText());
                        pstmt11.setObject(7,jTable2.getValueAt(j,1).toString());
                        pstmt11.setObject(8,jTable2.getValueAt(j,0).toString());
                        pstmt11.setString(6,"00");
                        pstmt11.setString(1,datePicker1.getDate().toString());
                        pstmt11.setObject(5,vouchNo);
                        pstmt11.setString(9,user);
                        pstmt11.executeUpdate();
                    
                        if (jTable2.getModel().getValueAt(j,3) != null){
                            java.sql.Statement ps22c = connectDB.createStatement();
                            java.sql.ResultSet rs22c = ps22c.executeQuery("select 'INV'||lpad(nextval('inv_no_seq'),5,0)");
                            while (rs22c.next())
                                invoiceNo = rs22c.getObject(1).toString();
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                            pstmt.setObject(1,actCode1);
                            pstmt.setString(4,"");
                            pstmt.setObject(2,jTable2.getValueAt(j,3).toString());
                            pstmt.setString(3,jTable2.getValueAt(j,0).toString());
                            pstmt.setObject(5,jTable2.getValueAt(j,3).toString());
                            pstmt.setString(6,"");
                            pstmt.setString(11,transNo);
                            pstmt.setString(8,"");
                            pstmt.setObject(7,jTable2.getValueAt(j,4).toString());
                            pstmt.setString(9,"");
                            pstmt.setString(10,jTextField92.getText());
                            pstmt.setString(16,invoiceNo);
                            pstmt.setString(12,jTable2.getValueAt(j,0).toString());
                            pstmt.setString(15,datePicker1.getDate().toString());
                            pstmt.setObject(13,"00");
                            pstmt.setObject(14,jTable2.getValueAt(j,1).toString());
                            pstmt.setObject(22,"00");
                            pstmt.setString(17,actNames1);
                            pstmt.setBoolean(18,true);
                            pstmt.setBoolean(19,true);
                            pstmt.setString(20,user);
                            pstmt.setString(21,"");
                            pstmt.setString(24,jTable2.getValueAt(j,1).toString());
                            pstmt.setString(23,"false");
                            pstmt.executeUpdate();
                            java.sql.PreparedStatement pstmt2121 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable2.getValueAt(j,1).toString()+"',mtd_credit = mtd_credit + '"+jTable2.getValueAt(j,1).toString()+"' where code = '"+actCode1+"'");
                            pstmt2121.executeUpdate();
                        }else{
                    
                            if (jTable2.getModel().getValueAt(j,5) != null){
                                java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                pstmt212.setObject(1,jTable2.getValueAt(j,5).toString());
                                pstmt212.setString(2,jTable2.getValueAt(j,0).toString());
                                pstmt212.setString(3,"");
                                pstmt212.setString(4,jTextField9.getText());
                                pstmt212.setString(5,"Medbill");
                                pstmt212.setString(6,"");
                                pstmt212.setString(7,jTextField9.getText());
                                pstmt212.setString(8,"");
                                pstmt212.setString(9,"");
                                pstmt212.setString(10,"");
                                pstmt212.setString(11,"");
                                pstmt212.setString(12,"");
                                pstmt212.setString(13,"");
                                pstmt212.setString(14,jTable2.getValueAt(j,0).toString());
                                pstmt212.setString(15,"Revenue");
                                pstmt212.setString(16,"0.00");
                                pstmt212.setObject(17,jTable2.getValueAt(j,1).toString());
                                pstmt212.setString(18,datePicker1.getDate().toString());
                                pstmt212.setString(19,transNo);
                                pstmt212.setString(20,"false");
                                pstmt212.setString(21,"false");
                                pstmt212.setString(22,"false");
                                pstmt212.setString(23,user);
                                pstmt212.setString(24,jTextField14.getText());
                                pstmt212.setString(25,jTextField81.getText());
                                pstmt212.executeUpdate();
                                java.sql.PreparedStatement pstmtr = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"',mtd_credit = mtd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"' where code = '"+jTable2.getValueAt(j,5).toString()+"'");
                                pstmtr.executeUpdate();
                            } else{
                                  if (jTable2.getModel().getValueAt(j,2) != null){
                                    java.sql.Statement ps22c = connectDB.createStatement();
                                    
                                    java.sql.ResultSet rs22c = ps22c.executeQuery("select 'INVD'||lpad(nextval('inv_no_seq'),5,0)");
                                    while (rs22c.next()){
                                        invoiceNo1 = rs22c.getObject(1).toString();
                                    }
                                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_accounts_payable values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?, ?,?,?,?)");
                                    pstmt.setObject(1,jTextField7.getText());
                                    pstmt.setString(4,"");
                                    pstmt.setObject(3,jTable2.getValueAt(j,0).toString());
                                    pstmt.setString(2,jTable2.getValueAt(j,2).toString());
                                    pstmt.setString(5,jTextField9.getText());
                                    
                                    pstmt.setString(6,jTextField31.getText());
                                    pstmt.setString(7,jTable2.getValueAt(j,4).toString());
                                    pstmt.setString(8,"");
                                    
                                    pstmt.setString(9,jTextField11.getText());
                                    pstmt.setString(10,"");
                                    pstmt.setString(11,transNo);
                                    pstmt.setString(12,jTable2.getValueAt(j,0).toString());
                                    //pstmt.setString(13,jTextField3.getText());
                                    pstmt.setObject(14,jTable2.getValueAt(j,1).toString());
                                    pstmt.setObject(13,"00");
                                    pstmt.setString(15,datePicker1.getDate().toString());
                                    pstmt.setObject(17,jTable2.getValueAt(j,0).toString());
                                    pstmt.setString(16,invoiceNo1);
                                    pstmt.setObject(18,"false");
                                    pstmt.setObject(19,"false");
                                    pstmt.setString(20,user);
                                    pstmt.setString(21,"");
                                    
                                    pstmt.setObject(22,datePicker1.getDate().toString());
                                    
                                    pstmt.setObject(23,datePicker1.getDate().toString());
                                    pstmt.setObject(24,"0");
                                    pstmt.setObject(25,jTable2.getValueAt(j,1).toString());
                                    pstmt.executeUpdate();
                                    java.sql.PreparedStatement pstmtr = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"',mtd_credit = mtd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"' where code = '"+jTextField7.getText()+"'");
                                    pstmtr.executeUpdate();
                                    
                                }
                            }
                            
                        }
                    }else{
                    }
                }
                java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("update pb_documents_register set used ='true' where chq_no ='"+jTextField92.getText()+"' and doc_no = '"+jTextField11.getText()+"'");
                pstmt2a.executeUpdate();
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully Voucher No is '"+vouchNo+"'","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                
                //  DoctorsVoucherPdf policy = new DoctorsVoucherPdf();
                //  policy.VoucherPdf(connectDB,jComboBox131.getSelectedItem().toString());
                // policy.DoctorsVoucherPdf(connectDB,vouchNo);
                
                //            jTextField1.setText("");
                jTextField92.setText("");
                jTextField3.setText("");
                jTextField11.setText("");
                jTextField4.setText("");
                jTextField31.setText("");
                this.jComboBox1.setSelectedItem(null);
                jTextField5.setText("");
             
                jButton1.setEnabled(false);
                jButton12.setEnabled(false);
                
            }   catch(java.sql.SQLException sq){
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                jLabel7.setForeground(java.awt.Color.red);
                jLabel7.setText("Sorry. Please Check The Fields");
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String vouchNo = null;
        try {
            java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(currval('voucher_no_seq'),5,0)");
            while (rs22.next())
                vouchNo = rs22.getObject(1).toString();
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        VoucherPdf policy = new VoucherPdf();
        policy.VoucherPdf(connectDB,vouchNo);   // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        this.jSearchDialog21.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
    
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        if(this.jTextField1131.getCaretPosition() < 3){
            System.out.print("Nothing");
        }else{
            try {
                searchRowSet21.execute("select distinct dealer as name from ac_bills where dealer ILIKE '"+jTextField1131.getText()+"%' order by dealer");
                //   searchRowSet2.execute("select code,supplier_name as name from st_suppliers where supplier_name ILIKE '"+jTextField113.getText()+"%' order by supplier_name");
                
                jSearchTable21.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet21, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    // new org.netbeans.lib.sql.models.TableModel.Column("code", "Acc.No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                    //  new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Member No.", false),
                    // new org.netbeans.lib.sql.models.TableModel.Column("description", "Scheme", false)
                }));
                jSearchScrollPane21.setViewportView(jSearchTable21);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        jTextField311.setText("0.00");
        this.jSearchDialog21.dispose();
        
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        jButton11.setEnabled(true);
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select code,sum(credit-debit),description from ac_bills where dealer ='"+jTextField91.getText()+"' GROUP BY code,description");
            while (rset.next()){
                jTextField71.setText(rset.getObject(1).toString());
                jTextField32.setText(rset.getObject(2).toString());
                jTextField311.setText(rset.getObject(3).toString());
                //jTextField82.setText(rset.getObject(4).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            
        }
        this.populateTable111(this.jTextField91.getText());   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    
    private void jTextField1131ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1131ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131ActionPerformed
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton21Clicked();        // Add your handling code here:
        
        // Add your handling code here:
        
        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton21Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog21.setSize(400,200);
        
        jSearchDialog21.setLocation(point);
        
        jSearchDialog21.show();
    }
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        this.jSearchDialog2.dispose();
        jButton12.setEnabled(true);
        jButton1.setEnabled(true);
        
        //  this.populateTable1(jTextField9.getText());
        this.jSearchDialog2.dispose();
        
        jLabel7.setText("");
        jTextField3.setText("0.00");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        jButton1.setEnabled(true);
        this.jButton12.setEnabled(true);
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select gl_acc,sum(debit_bal),acc_desc,acc_desc from ac_doctors_ledger where acc_no ='"+this.jTextField1.getText()+"' AND paid = true  GROUP BY gl_acc,acc_desc");
            while (rset.next()){
                jTextField7.setText(rset.getObject(1).toString());
                //jTextField3.setText(rset.getObject(2).toString());
                jTextField31.setText(rset.getObject(3).toString());
                jTextField8.setText(rset.getObject(4).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            
        }
        this.populateTable11(this.jTextField1.getText());
        // Add your handling code here:
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(this.jTextField113.getCaretPosition() < 3){
            System.out.print("Nothing");
        }else{
            if(this.jTextField113.getCaretPosition() < 3){
                System.out.print("Nothing");
            }else{
                try {
                    searchRowSet2.execute("select distinct first_name as name,staff_no from pb_doctors_list where first_name ILIKE '"+jTextField113.getText()+"%' order by first_name");
                    //   searchRowSet2.execute("select code,supplier_name as name from st_suppliers where supplier_name ILIKE '"+jTextField113.getText()+"%' order by supplier_name");
                    
                    jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        // new org.netbeans.lib.sql.models.TableModel.Column("code", "Acc.No", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Member No.", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("description", "Scheme", false)
                    }));
                    jSearchScrollPane2.setViewportView(jSearchTable2);
                    System.out.println("Cannot sort out");
                } catch(java.sql.SQLException sqlExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();        // Add your handling code here:
        jButton1.setEnabled(true);
        jButton12.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
    }
    private void jButton111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton111ActionPerformed
        String vouchNo = null;
        try {
            java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(currval('voucher_no_seq'),5,0)");
            while (rs22.next())
                vouchNo = rs22.getObject(1).toString();
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        OtherPayVoucherPdf policy = new OtherPayVoucherPdf();
        policy.OtherPayVoucherPdf(connectDB,vouchNo);
        // Add your handling code here:
    }//GEN-LAST:event_jButton111ActionPerformed
    public java.lang.String getShiftNumber() {
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                shift_no = rset.getString(1);
                
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return shift_no;
        
    }
    
    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        jTextField21.setText("");
        jTextField31.setText("");
        jTextField111.setText("");
        jTextField41.setText("");
        jTextField311.setText("");
        //        jTextField9.setText("");
        
        jTextField51.setText("");
        this.jComboBox11.setSelectedItem(null);
        this.jTextField91.setText("");  // Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed
    
    private void jComboBox21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox21ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt.executeQuery("select bank_account_name,gl_code,bank_name from ac_banks_setup where bank_account_no ='"+jComboBox2.getSelectedItem().toString()+"'");
            while (rset1.next()){
                jTextField41.setText(rset1.getObject(1).toString());
                jTextField111.setText(rset1.getObject(2).toString());
                jTextField51.setText(rset1.getObject(3).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }          // Add your handling code here:
    }//GEN-LAST:event_jComboBox21ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        
        
        java.sql.Connection con;
        String vouchNo = null;
        String user = null;
        
        try {
            
            jButton112ActionPerformed(evt);
           /* connectDB.setAutoCommit(false);
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq'),current_user");
            while (rst.next())
                rst.getObject(1).toString();
            
            String transNo = rst.getObject(1).toString();
            user = rst.getObject(2).toString();
            */
            java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(currval('voucher_no_seq'),5,0)");
            while (rs22.next())
                vouchNo = rs22.getObject(1).toString();
            
            
            
           /*
            
            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_cash_book values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?)");
            pstmt1.setString(1,jTextField71.getText());
            
            // pstmt1.setString(2,jTextField31.getText());
            pstmt1.setString(6,"");
            //if (jTextField31.getText().equals("")){
            //   javax.swing.JOptionPane.showMessageDialog(this,"Paid To Missing","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            //}else{
            pstmt1.setString(2,jTextField311.getText());
            // }
            pstmt1.setString(3,jTextField91.getText());
            pstmt1.setString(4,jComboBox11.getSelectedItem().toString());
            pstmt1.setString(5,vouchNo);
            pstmt1.setString(7,jTextField91.getText());
            if (jTextField111.getText().equals("")){
                javax.swing.JOptionPane.showMessageDialog(this,"Select payment code","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }else{
            
                pstmt1.setString(9,jTextField111.getText());
            }
            pstmt1.setString(7,"");
            pstmt1.setString(8,"");
            
            pstmt1.setString(11,"");
            pstmt1.setString(12,"");
            pstmt1.setString(13,"");
            pstmt1.setString(10,jTextField21.getText());
            pstmt1.setString(14,jComboBox21.getSelectedItem().toString());
            pstmt1.setObject(15,jTextField41.getText());
            pstmt1.setString(16,jTextField51.getText());
            pstmt1.setString(17,"Payment");
            pstmt1.setString(18,"00");
            
            pstmt1.setString(19,jTextField32.getText());
            
            pstmt1.setString(20,datePicker11.getDate().toString());
            pstmt1.setString(21,transNo);
            pstmt1.setBoolean(24, false);
            pstmt1.setBoolean(22,false);
            pstmt1.setBoolean(23,false);
            pstmt1.setObject(25,null);
            pstmt1.setObject(26,null);
            pstmt1.setObject(27,null);
            pstmt1.setString(28,user);
            //   pstmt1.setObject(29,null);
            //pstmt1.setString(30,"");
            pstmt1.setObject(29,jTextField81.getText());
            pstmt1.setString(30,jTextField14.getText());
            pstmt1.executeUpdate();
            
            for (int i = 0; i < jTable11.getRowCount(); i++){
                //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
            
                if (jTable11.getModel().getValueAt(i,4) != null){
                    java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?, ?, ?, ?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                    pstmt11.setString(1,jTextField91.getText());
                    pstmt11.setObject(2,jTextField311.getText());
                    pstmt11.setObject(3,jTextField71.getText());
                    pstmt11.setObject(4,jTable11.getValueAt(i,0));
                    pstmt11.setString(5,datePicker11.getDate().toString());
                    pstmt11.setObject(6,"");
                    pstmt11.setObject(8,jTable11.getValueAt(i,3));
                    pstmt11.setString(7,datePicker11.getDate().toString());
                    pstmt11.setObject(9,"00");
                    pstmt11.setString(10,datePicker11.getDate().toString());
                    pstmt11.setObject(11,vouchNo);
            
            
                    pstmt11.executeUpdate();
            
                }
            }
            
            if (jTextField311.getText().equals("Petty Cash")){
                java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_petty_cash values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
            
                pstmt21.setObject(1,jTextField71.getText());
                pstmt21.setString(2,jTextField311.getText());
                pstmt21.setString(4,jTextField311.getText());
                pstmt21.setString(3,"");
                pstmt21.setString(5,jTextField32.getText());
                pstmt21.setString(6,"00");
                pstmt21.setString(7,datePicker11.getDate().toString());
                pstmt21.setString(8,user);
                pstmt21.setString(9,"true");
                pstmt21.setString(11,datePicker11.getDate().toString());
                pstmt21.setString(10,"");
                pstmt21.setString(12,"true");
                pstmt21.setString(13,"");
                pstmt21.setString(14,jTextField91.getText());
                pstmt21.setString(15,"");
                pstmt21.setString(16,"");
                pstmt21.setString(17,transNo);
                pstmt21.setObject(18,jTextField81.getText());
                pstmt21.setString(19,jTextField14.getText());
                pstmt21.executeUpdate();
            
            } else{
                for (int i = 0; i < jTable11.getRowCount(); i++){
                    //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
            
                    if (jTable11.getModel().getValueAt(i,4) != null){
            
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                        pstmt.setObject(1,jTextField71.getText());
                        pstmt.setString(3,"");
                        pstmt.setObject(2,jTextField311.getText());
                        pstmt.setString(4,jTextField91.getText());
                        pstmt.setString(5,"");
                        if (jTable11.getValueAt(i,0) != null){
                            pstmt.setObject(6,jTable11.getValueAt(i,0).toString());
                        }else{
                            pstmt.setObject(6,"");
                        }
                        pstmt.setString(7,jTextField91.getText());
            
                        pstmt.setString(8,"");
            
                        pstmt.setString(11,jTextField21.getText());
                        pstmt.setString(10,"");
                        pstmt.setString(9,"");
                        pstmt.setString(12,"");
                        //pstmt.setString(13,jTextField3.getText());
                        pstmt.setObject(13,"");
                        pstmt.setObject(14,jTextField311.getText());
                        pstmt.setString(15,"Payment");
                        pstmt.setObject(16,jTable11.getValueAt(i,3).toString());
                        pstmt.setString(17,"00");
                        pstmt.setObject(18,datePicker11.getDate().toString());
                        pstmt.setObject(19,transNo);
                        pstmt.setString(20,"false");
                        pstmt.setObject(21,"false");
                        pstmt.setString(22,"false");
                        pstmt.setString(23,user);
            
                        pstmt.setObject(24,jTextField81.getText());
                        pstmt.setString(25,jTextField14.getText());
                        pstmt.executeUpdate();
            
            
            
            
                    }
                }
            
            }
            
            //  java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("update ac_accounts_payable set paid ='true' where dealer = '"+jComboBox131.getSelectedItem()+"' and approved = true");
            // pstmt2.executeUpdate();
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            */
            OtherPayVoucherPdf policy = new OtherPayVoucherPdf();
            policy.OtherPayVoucherPdf(connectDB,vouchNo);
            //            jTextField1.setText("");
            jTextField21.setText("");
            jTextField311.setText("");
            jTextField111.setText("");
            jTextField41.setText("");
            jTextField31.setText("");
            this.jComboBox11.setSelectedItem(null);
            jTextField51.setText("");
            //            jTextField9.setText("");
            //      crset11.execute();
            
            jButton11.setEnabled(false);
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            jLabel7.setForeground(java.awt.Color.red);
            jLabel7.setText("Sorry. Please Check The Fields");
        }      // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    private void populateTable111(java.lang.String patient_name) {
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT count(dealer) FROM ac_bills WHERE dealer = '"+patient_name+"'");
            
            while (rsetTable1.next()) {
                j = rsetTable1.getInt(1);
            }
            if (j > 0) {
                
                java.sql.Statement stmtTable11 = connectDB.createStatement();
                
                java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT voucher_no, sum(credit),sum(credit-debit),0.00 FROM ac_bills WHERE dealer = '"+patient_name+"' GROUP BY voucher_no order BY voucher_no");
                
                while (rsetTable11.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable11.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable11.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable11.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable11.getObject(4), i, 3);
                    // jTable11.setValueAt(rsetTable11.getObject(5), i, 5);
                    ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                    
                    i++;
                    
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt.executeQuery("select bank_account_name,gl_code,bank_name from ac_banks_setup where bank_account_no ='"+jComboBox2.getSelectedItem().toString()+"'");
            while (rset1.next()){
                jTextField4.setText(rset1.getObject(1).toString());
                jTextField11.setText(rset1.getObject(2).toString());
                jTextField5.setText(rset1.getObject(3).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }         // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
 /*       try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select gl_account,description,account from ac_cash_points where payment_code ='"+jComboBox1.getSelectedItem()+"'");
            while (rset.next()){
                jTextField11.setText(rset.getObject(1).toString());
                jTextField9.setText(rset.getObject(2).toString());
                jTextField4.setText(rset.getObject(3).toString());
  
            }
  
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt.executeQuery("select bank_account_no,bank_name from ac_banks_setup where bank_account_name ='"+jTextField4.getText()+"'");
            while (rset1.next()){
                jTextField1.setText(rset1.getObject(1).toString());
                jTextField5.setText(rset1.getObject(2).toString());
  
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        } */       // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    private void populateTable11(java.lang.String patient_no) {
        
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(acc_no) FROM ac_doctors_ledger WHERE acc_no = '"+patient_no+"' and paid = true");// and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //java.sql.ResultSet rsetTable11 = stmtTable1.executeQuery("SELECT input_date::date,input_date::date,patient_name, patient_no, pat_inv,credit_bal::numeric,null as boolean FROM ac_doctors_ledger WHERE acc_no = '"+patient_no+"' and credit_bal > 0 and paid = true order by input_date");// and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
                java.sql.ResultSet rsetTable11 = stmtTable1.executeQuery("SELECT null as date,null as date,patient_name, patient_no, pat_inv,sum(credit_bal-debit_bal)::numeric,null as boolean FROM ac_doctors_ledger WHERE acc_no = '"+patient_no+"' and  paid = true and (credit_bal != 0 or debit_bal != 0) group by patient_name, patient_no, pat_inv order by pat_inv desc");// and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
                
                while (rsetTable11.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable11.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable11.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable11.getObject(3), i, 2);
                    jTable1.setValueAt(rsetTable11.getObject(4), i, 3);
                    jTable1.setValueAt(rsetTable11.getObject(5), i, 4);
                    jTable1.setValueAt(rsetTable11.getObject(6), i, 5);
                    jTable1.setValueAt(rsetTable11.getObject(7), i, 6);
                    
                    i++;
                    
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    
    
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        jTextField92.setText("");
        jTextField3.setText("");
        jTextField11.setText("");
        jTextField4.setText("");
        jTextField31.setText("");
        //        jTextField9.setText("");
        
        jTextField5.setText("");
        this.jComboBox1.setSelectedItem(null);
        this.jTextField9.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        javax.swing.JFrame other = new OtherPayments(connectDB, pConnDB);
        other.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        
        
        java.sql.Connection con;
        String KRA = null;
        String Code = null;
        String vouchNo = null;
        String user = null;
        String transNo = null;
        // String user = null;
        String actNames1 = null;
        String actCode1 = null;
        String invoiceNo = null;
        String invoiceNo1 = null;
        double Deductions = java.lang.Double.parseDouble(jTextField10.getText());;
        double Net = java.lang.Double.parseDouble(jTextField3.getText());;
        
        
        try {
            jButton12ActionPerformed(evt);
            // if(Deductions > Net){
            //  javax.swing.JOptionPane.showMessageDialog(this,"Deductions MORE THAN The Earnings","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            // }else{
            // connectDB.setAutoCommit(false);
            
            
            java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(currval('voucher_no_seq'),5,0)");
            while (rs22.next())
                vouchNo = rs22.getObject(1).toString();
            
          /*  java.sql.Statement ps221 = connectDB.createStatement();
            java.sql.ResultSet rs221 = ps221.executeQuery("select nextval('transaction_no_seq')");
            while (rs221.next())
                transNo = rs221.getObject(1).toString();
           
            java.sql.Statement ps222 = connectDB.createStatement();
            java.sql.ResultSet rs222 = ps222.executeQuery("select supplier_name,code from st_suppliers where category ilike 'KRA%'");
            while (rs222.next())
                KRA = rs222.getObject(1).toString();
            Code = rs222.getObject(2).toString();
           
            java.sql.Statement pss11 = connectDB.createStatement();
            java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
            while (rsts1.next())
                actCode1 = rsts1.getObject(1).toString();
            actNames1 = rsts1.getObject(2).toString();
            user = rsts1.getObject(3).toString();
           
            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_cash_book values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?)");
            pstmt1.setString(1,jTextField7.getText());
           
            // pstmt1.setString(2,jTextField31.getText());
            pstmt1.setString(6,"");
            //if (jTextField31.getText().equals("")){
            //   javax.swing.JOptionPane.showMessageDialog(this,"Paid To Missing","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            //}else{
            pstmt1.setString(2,jTextField31.getText());
            // }
            pstmt1.setString(3,jTextField9.getText());
            pstmt1.setString(4,jComboBox1.getSelectedItem().toString());
            pstmt1.setString(5,vouchNo);
            pstmt1.setString(7,jTextField9.getText());
            if (jTextField11.getText().equals("")){
                javax.swing.JOptionPane.showMessageDialog(this,"Select payment code","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }else{
           
                pstmt1.setString(9,jTextField11.getText());
            }
            pstmt1.setString(7,"");
            pstmt1.setString(8,"");
           
            pstmt1.setString(11,"");
            pstmt1.setString(12,"");
            pstmt1.setString(13,"");
            pstmt1.setString(10,jTextField92.getText());
            pstmt1.setString(14,jComboBox2.getSelectedItem().toString());
            pstmt1.setObject(15,jTextField4.getText());
            pstmt1.setString(16,jTextField5.getText());
            pstmt1.setString(17,"Payment");
            pstmt1.setString(18,"00");
           
            pstmt1.setString(19,jTextField12.getText());
           
            pstmt1.setString(20,datePicker1.getDate().toString());
            pstmt1.setString(21,transNo);
            pstmt1.setBoolean(24, false);
            pstmt1.setBoolean(22,false);
            pstmt1.setBoolean(23,false);
            pstmt1.setObject(25,null);
            pstmt1.setObject(26,null);
            pstmt1.setObject(27,null);
            pstmt1.setString(28,user);
            //pstmt1.setObject(29,null);
            // pstmt1.setString(30,"");
            pstmt1.setObject(29,jTextField81.getText());
            pstmt1.setString(30,jTextField14.getText());
            pstmt1.executeUpdate();
           
             java.sql.PreparedStatement pstmt2126 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTextField3.getText()+"',mtd_credit = mtd_credit + '"+jTextField3.getText()+"' where code = '"+jTextField11.getText()+"'");
                pstmt2126.executeUpdate();
           
            java.sql.PreparedStatement pstmta = connectDB.prepareStatement("insert into ac_doctors_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
            pstmta.setObject(1,jTextField1.getText());
            pstmta.setString(4,jTextField92.getText());
            pstmta.setObject(3,jTextField9.getText());
            pstmta.setString(2,jTextField31.getText());
            pstmta.setString(5,jTextField7.getText());
           
            pstmta.setString(7,jTextField3.getText());
            pstmta.setString(6,"Payment");
            pstmta.setString(8,"00");
           
            pstmta.setString(9,"");
            pstmta.setString(10,"");
            pstmta.setString(11,"0");
            pstmta.setString(14,datePicker1.getDate().toString());
            pstmta.setObject(15,vouchNo);
            pstmta.setBoolean(12,true);
           
            pstmta.setString(13,user);
            pstmta.executeUpdate();
           
            java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTextField3.getText()+"',mtd_debit = mtd_debit + '"+jTextField3.getText()+"' where code = '"+jTextField7.getText()+"'");
            pstmt9.executeUpdate();
           
            java.sql.PreparedStatement pstmta1 = connectDB.prepareStatement("insert into ac_doctors_payments values(?, ?, ?, ?, ?, ?, ?, ?, ?)");
            pstmta1.setObject(2,jTextField1.getText());
            pstmta1.setString(4,jTextField92.getText());
            pstmta1.setObject(3,jTextField9.getText());
            // pstmta.setString(2,jTextField31.getText());
            // pstmta.setString(5,jTextField7.getText());
           
            pstmta1.setString(6,jTextField3.getText());
            pstmta1.setString(8,"Payment");
            pstmta1.setString(7,"00");
           
            // pstmta.setString(9,"");
            //pstmta.setString(10,"");
            //pstmta.setString(11,"0");
            pstmta1.setString(1,datePicker1.getDate().toString());
            pstmta1.setObject(5,vouchNo);
           
           
            pstmta1.setString(9,user);
            pstmta1.executeUpdate();
           
            for (int i = 0; i < jTable1.getRowCount(); i++){
                //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
                if (jTable1.getModel().getValueAt(i,6) != null){
           
                    // if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.TRUE) {
                    if(java.lang.Double.parseDouble(jTable1.getValueAt(i,1).toString()) != 0 ){
           
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into dr_allocation values(?,?,?,?,?,?,?,?,?,?,?,?)");
           
           
                        pstmt.setObject(1,jTextField1.getText());
                        pstmt.setObject(3,"Allocation");
           
                        pstmt.setString(2,datePicker1.getDate().toString());
                        pstmt.setObject(4,vouchNo);
                        pstmt.setObject(5,jComboBox1.getToolTipText());
                        if(jTextField92.getText().equals(null) || jTextField92.getText().equals("")){
                            pstmt.setObject(6,"00");
                        }else{
                            pstmt.setObject(6,jTextField92.getText());
                        }
                        pstmt.setObject(7,jTextField3.getText());
                        //  if(java.lang.Double.parseDouble(jTable1.getValueAt(i,5).toString()) > 0){
                        pstmt.setObject(8,jTable1.getValueAt(i,5).toString());
                        //  }else{
                        //      pstmt.setObject(8,jTable1.getValueAt(i,3).toString());
                        //  }
                        pstmt.setObject(9,jTable1.getValueAt(i,4).toString());
           
                        pstmt.setObject(10,user);
           
                        pstmt.setObject(11,jTable1.getValueAt(i,2).toString()+" "+jTable1.getValueAt(i,3).toString());
                        // pstmt.setObject(12,jTable1.getValueAt(i,0).toString());
                        pstmt.setObject(12,"'now'");
           
                        pstmt.executeUpdate();
           
                        java.sql.PreparedStatement pstmt213 = connectDB.prepareStatement("update ac_doctors_ledger set credit_bal = 0,debit_bal=0 where pat_inv ='"+jTable1.getValueAt(i,4).toString()+"' and acc_no = '"+jTextField1.getText()+"'");
                        pstmt213.executeUpdate();
                    }
                }
            }
            for (int j = 0; j < jTable2.getRowCount(); j++){
                if (jTable2.getModel().getValueAt(j,0) != null){
                    java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into ac_doctors_payments values(?, ?, ?, ?, ?, ?, ?, ?, ?)");
                    pstmt11.setObject(2,jTextField1.getText());
                    pstmt11.setString(4,jTextField92.getText());
                    pstmt11.setObject(3,jTextField9.getText());
                    // pstmta.setString(2,jTextField31.getText());
                    // pstmta.setString(5,jTextField7.getText());
           
                    pstmt11.setObject(7,jTable2.getValueAt(j,1).toString());
                    pstmt11.setObject(8,jTable2.getValueAt(j,0).toString());
                    pstmt11.setString(6,"00");
           
                    // pstmta.setString(9,"");
                    //pstmta.setString(10,"");
                    //pstmta.setString(11,"0");
                    pstmt11.setString(1,datePicker1.getDate().toString());
                    pstmt11.setObject(5,vouchNo);
           
           
                    pstmt11.setString(9,user);
                    pstmt11.executeUpdate();
                    //      }else{
           
                    //for (int i = 0; i < jTable2.getRowCount(); i++){
                    //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
                    if (jTable2.getModel().getValueAt(j,3) != null){
                        java.sql.Statement ps22c = connectDB.createStatement();
                        java.sql.ResultSet rs22c = ps22c.executeQuery("select 'INV'||lpad(nextval('inv_no_seq'),5,0)");
                        while (rs22c.next())
                            invoiceNo = rs22c.getObject(1).toString();
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                        pstmt.setObject(1,actCode1);
                        pstmt.setString(4,"");
                        pstmt.setObject(2,jTable2.getValueAt(j,3).toString());
                        pstmt.setString(3,jTable2.getValueAt(j,0).toString());
                        pstmt.setObject(5,jTable2.getValueAt(j,3).toString());
                        pstmt.setString(6,"");
                        // if(this.jTextField8.getText().equals(null) ||this.jTextField8.getText().equals("-")){
                        //   javax.swing.JOptionPane.showMessageDialog(this,"Account NO. MISSING !!!","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        // }else{
                        pstmt.setString(11,transNo);
                        // }
                        pstmt.setString(8,"");
                        pstmt.setObject(7,jTable2.getValueAt(j,4).toString());
                        pstmt.setString(9,"");
                        pstmt.setString(10,jTextField92.getText());
                        pstmt.setString(16,invoiceNo);
                        pstmt.setString(12,jTable2.getValueAt(j,0).toString());
                        pstmt.setString(15,datePicker1.getDate().toString());
                        pstmt.setObject(13,"00");
                        pstmt.setObject(14,jTable2.getValueAt(j,1).toString());
           
                        pstmt.setObject(22,"00");
                        pstmt.setString(17,actNames1);
                        pstmt.setBoolean(18,true);
                        pstmt.setBoolean(19,true);
                        pstmt.setString(20,user);
                        pstmt.setString(21,"");
                        pstmt.setString(24,jTable2.getValueAt(j,1).toString());
                        pstmt.setString(23,"false");
                        pstmt.executeUpdate();
                        java.sql.PreparedStatement pstmt2121 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable2.getValueAt(j,1).toString()+"',mtd_credit = mtd_credit + '"+jTable2.getValueAt(j,1).toString()+"' where code = '"+actCode1+"'");
                        pstmt2121.executeUpdate();
                    }else{
                        //}
           
                        // for (int i = 0; i < jTable1.getRowCount(); i++){
                        //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
                        if (jTable2.getModel().getValueAt(j,5) != null){
                            //if (
                            java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                            pstmt212.setObject(1,jTable2.getValueAt(j,5).toString());
                            pstmt212.setString(2,jTable2.getValueAt(j,0).toString());
                            pstmt212.setString(3,"");
           
                            pstmt212.setString(4,jTextField9.getText());
           
                            //    pstmt212.setString(4,jTextField11.getText());
                            pstmt212.setString(5,"Medbill");
                            pstmt212.setString(6,"");
                            pstmt212.setString(7,jTextField9.getText());
                            pstmt212.setString(8,"");
                            pstmt212.setString(9,"");
                            pstmt212.setString(10,"");
                            pstmt212.setString(11,"");
                            pstmt212.setString(12,"");
                            pstmt212.setString(13,"");
                            pstmt212.setString(14,jTable2.getValueAt(j,0).toString());
                            pstmt212.setString(15,"Revenue");
                            pstmt212.setString(16,"0.00");
                            pstmt212.setObject(17,jTable2.getValueAt(j,1).toString());
                            pstmt212.setString(18,datePicker1.getDate().toString());
                            pstmt212.setString(19,transNo);
                            pstmt212.setString(20,"false");
                            pstmt212.setString(21,"false");
                            pstmt212.setString(22,"false");
                            pstmt212.setString(23,user);
                            pstmt212.setString(24,jTextField14.getText());
                            pstmt212.setString(25,jTextField81.getText());
                            pstmt212.executeUpdate();
                            java.sql.PreparedStatement pstmtr = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"',mtd_credit = mtd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"' where code = '"+jTable2.getValueAt(j,5).toString()+"'");
                            pstmtr.executeUpdate();
                        } else{
                            // for (int i = 0; i < jTable1.getRowCount(); i++){
                            //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
                            if (jTable2.getModel().getValueAt(j,2) != null){
                                java.sql.Statement ps22c = connectDB.createStatement();
           
                                java.sql.ResultSet rs22c = ps22c.executeQuery("select 'INVD'||lpad(nextval('inv_no_seq'),5,0)");
                                while (rs22c.next())
                                    invoiceNo1 = rs22c.getObject(1).toString();
           
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_accounts_payable values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?, ?,?,?,?)");
                                pstmt.setObject(1,jTextField7.getText());
                                pstmt.setString(4,"");
                                pstmt.setObject(3,jTable2.getValueAt(j,0).toString());
                                pstmt.setString(2,jTable2.getValueAt(j,2).toString());
                                pstmt.setString(5,jTextField9.getText());
           
                                pstmt.setString(6,jTextField31.getText());
                                pstmt.setString(7,jTable2.getValueAt(j,4).toString());
                                pstmt.setString(8,"");
           
                                pstmt.setString(9,jTextField11.getText());
                                pstmt.setString(10,"");
                                pstmt.setString(11,transNo);
                                pstmt.setString(12,jTable2.getValueAt(j,0).toString());
                                //pstmt.setString(13,jTextField3.getText());
                                pstmt.setObject(14,jTable2.getValueAt(j,1).toString());
                                pstmt.setObject(13,"00");
                                pstmt.setString(15,datePicker1.getDate().toString());
                                pstmt.setObject(17,jTable2.getValueAt(j,0).toString());
                                pstmt.setString(16,invoiceNo1);
                                pstmt.setObject(18,"false");
                                pstmt.setObject(19,"false");
                                pstmt.setString(20,user);
                                pstmt.setString(21,"");
           
                                pstmt.setObject(22,datePicker1.getDate().toString());
           
                                pstmt.setObject(23,datePicker1.getDate().toString());
                                pstmt.setObject(24,"0");
                                pstmt.setObject(25,jTable2.getValueAt(j,1).toString());
                                pstmt.executeUpdate();
                                java.sql.PreparedStatement pstmtr = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"',mtd_credit = mtd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"' where code = '"+jTextField7.getText()+"'");
                                pstmtr.executeUpdate();
                                // java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("update ac_accounts_payable set paid ='true' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"' and dealer = '"+jTextField9.getText()+"'");
                                // pstmt2.executeUpdate();
                                //   java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("update ac_accounts_payable set approved ='"+jTable1.getValueAt(i,4).toString()+"' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"'");
                                //  pstmt21.executeUpdate();
                            }
                        }
           
                    }
                }else{
                }
            }
            java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("update pb_documents_register set used ='true' where chq_no ='"+jTextField92.getText()+"' and doc_no = '"+jTextField11.getText()+"'");
            pstmt2a.executeUpdate();
           
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);
           */
            DoctorsVoucherPdf policy = new DoctorsVoucherPdf();
            //  policy.VoucherPdf(connectDB,jComboBox131.getSelectedItem().toString());
            policy.DoctorsVoucherPdf(connectDB,vouchNo);
            
            //            jTextField1.setText("");
            jTextField92.setText("");
            jTextField3.setText("");
            jTextField11.setText("");
            jTextField4.setText("");
            jTextField31.setText("");
            this.jComboBox1.setSelectedItem(null);
            jTextField5.setText("");
            //            jTextField9.setText("");
            //  crset1.execute();
            jButton1.setEnabled(false);
            jButton12.setEnabled(false);
            // }
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            jLabel7.setForeground(java.awt.Color.red);
            jLabel7.setText("Sorry. Please Check The Fields");
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 12 and 21.");
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        double total = java.lang.Double.parseDouble(jTextField3.getText());;
        
        int i = this.jTable1.getSelectedRow();
        // for (int i = 0; i < jTable1.getRowCount(); i++) {
        
        if (jTable1.getModel().getValueAt(i, 4) != null) {
            
            // if (jTable1.getSelectedColumn() == 1) {
            
            resFloat1 = total + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
            
            //   }
            
            
            
        }//else
        
        jTextField3.setText(java.lang.String.valueOf(resFloat1));
        //    if (jTable1.getSelectedColumn() == 4) {
        
        //   resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i,3).toString());
        //    }
        //   jTextField3.setText(java.lang.String.valueOf(resFloat1));
        
        
        // }
        // }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    public void tableModelTableChanged() {
        int i = this.jTable1.getSelectedRow();
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        double total = java.lang.Double.parseDouble(jTextField3.getText());;
        // for (int i = 0; i < jTable1.getRowCount(); i++) {
        
        if (jTable1.getModel().getValueAt(i, 4) == null) {
            
            //if (jTable1.getSelectedColumn() == 1) {
            
            resFloat1 = total - Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
            
            // }
            
            jTextField3.setText(java.lang.String.valueOf(resFloat1));
            
            // }else
            //  if (jTable11.getSelectedColumn() == 4) {
            
            resFloat1 = total - Double.parseDouble(jTable1.getModel().getValueAt(i,3).toString());
            //  }
            jTextField3.setText(java.lang.String.valueOf(resFloat1));
            
            //}
            //}
            
            //               jTextField31.setText(java.lang.String.valueOf(resFloat));
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField6;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton jButton21;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet1;
    private javax.swing.JLabel jLabel532;
    private javax.swing.JLabel jLabel511;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JLabel jLabel5311;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet22;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel jLabel9;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet2;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel421;
    private javax.swing.JLabel jLabel521;
    private javax.swing.JTextField jTextField311;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JPanel jPanel7;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet21;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton searchButton1;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jSearchScrollPane;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton522;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JButton jButton41;
    private javax.swing.JLabel jLabel7;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel21;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField32;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton12;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JList jList1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField82;
    private javax.swing.JTextField jTextField71;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JList jList11;
    private javax.swing.JTextField jTextField81;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JComboBox jComboBox21;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton jButton52;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jButton31;
    private org.netbeans.lib.sql.NBCachedRowSet crset21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JButton jButton11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jButton112;
    private javax.swing.JButton jButton4;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JButton jButton111;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel422;
    private javax.swing.JTextField jTextField4;
    private com.afrisoftech.lib.DatePicker datePicker11;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jSearchTable2;
    // End of variables declaration//GEN-END:variables
    
}
