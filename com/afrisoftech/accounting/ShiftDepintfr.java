
/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.accounting;

/**
 *
 * @author  root
 */
public class ShiftDepintfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    java.sql.Connection connectDB = null;
    
    javax.swing.table.TableModel tableModel = null;
    
    javax.swing.JSpinner beginDateSpinner = null;
    
    javax.swing.JSpinner endDateSpinner = null;
    
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public ShiftDepintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset4 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new javax.swing.JTable();
        jButton52 = new javax.swing.JButton();
        try {
            searchRowSet2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel91 = new javax.swing.JLabel();
        jTextField711 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();

        crset2.setCommand("select distinct code from ac_cash_points_setup order by code ");
        crset2.setConnectionSource(pConnDB);
        crset3.setCommand("select DISTINCT member_no from cash_book  WHERE member_no ~ '^00' order by member_no");
        crset3.setConnectionSource(pConnDB);
        crset4.setCommand("select cheque_no, debit,credit from cash_book ");
        crset4.setConnectionSource(pConnDB);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        searchRowSet2.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Shift Deposits");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.setToolTipText("Click here to enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear fields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close ");
        jButton4.setSelected(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(new javax.swing.border.TitledBorder(null, "Select Shift No.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
        /*        tableModel = jTable1.getModel();

        tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {

            public void tableChanged(javax.swing.event.TableModelEvent evt) {

                tableModelTableChanged(evt);

            }

        });
        */
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Payment Mode", "Amount", "Actual Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jLabel9.setText("Shift No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel2.setText("Cash Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel2, gridBagConstraints);

        jComboBox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset2, "code", null, null, null));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jComboBox2, gridBagConstraints);

        jLabel91.setText("Operator");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel91, gridBagConstraints);

        jTextField711.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField711, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.EtchedBorder());
        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jTextField9, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jPanel4, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jTextField1, gridBagConstraints);

        jLabel1.setText("Start Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        jPanel3.add(jLabel1, gridBagConstraints);

        jLabel3.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel3, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField2, gridBagConstraints);

        jLabel4.setText("Duration");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        jPanel3.add(jLabel4, gridBagConstraints);

        jTextField3.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jTextField3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 15.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel3, gridBagConstraints);

        setBounds(0, 0, 697, 500);
    }//GEN-END:initComponents
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        jButton1.setEnabled(true);
        this.jLabel7.setText("");
        
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        //   jTextField2.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        this.jSearchDialog2.dispose();
        this.populateTable1(jTextField9.getText());
        
        
        int rowsNo = 0;
        //this.populateTable1();
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            //java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select user_name from ac_cash_collection where cash_point ='"+jComboBox2.getSelectedItem()+"' AND shift_no = '"+jTextField9.getText()+"'");
            //  java.sql.ResultSet rset1 = stmt1.executeQuery("select count(debit) from ac_cash_collection where cash_point ='"+jComboBox2.getSelectedItem()+"' and shift_no = '"+jTextField9.getText()+"'");
            
            
            while (rset.next()){
                
                //  jTextField71.setText(rset.getObject(1).toString());
                jTextField711.setText(rset.getObject(1).toString());
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select start_date,end_date from ac_shifts where  shift_no = '"+jTextField9.getText()+"'");
            //  java.sql.ResultSet rset1 = stmt1.executeQuery("select count(debit) from ac_cash_collection where cash_point ='"+jComboBox2.getSelectedItem()+"' and shift_no = '"+jTextField9.getText()+"'");
            
            
            while (rset.next()){
                
                jTextField1.setText(rset.getObject(1).toString());
                jTextField2.setText(rset.getObject(2).toString());
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select start_date-end_date from ac_shifts where  shift_no = '"+jTextField9.getText()+"'");
            //  java.sql.ResultSet rset1 = stmt1.executeQuery("select count(debit) from ac_cash_collection where cash_point ='"+jComboBox2.getSelectedItem()+"' and shift_no = '"+jTextField9.getText()+"'");
            
            
            while (rset.next()){
                
                jTextField3.setText(rset.getObject(1).toString());
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    private void populateTable1(java.lang.String patient_no) {
 /*       for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
  */
        //       this.jComboBox1.setSelectedItem(null);
        //       this.jTextField3.setText("");
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt1 = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt1.executeQuery("select count(debit) from ac_cash_collection where cash_point ='"+jComboBox2.getSelectedItem()+"' and shift_no = '"+jTextField9.getText()+"' and reconciled = false");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                //  crset4.setCommand("select payment_mode,sum(debit) as debit,null as actual_amount from ac_cash_collection where cash_point ='"+jComboBox2.getSelectedItem()+"' AND shift_no = '"+jTextField9.getText()+"' AND debit > 0 AND reconciled = false GROUP BY payment_mode");
                
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select payment_mode,sum(debit-credit) as debit,null as actual_amount from ac_cash_collection where cash_point ='"+jComboBox2.getSelectedItem()+"' AND shift_no = '"+jTextField9.getText()+"' AND reconciled = false GROUP BY payment_mode");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                    //  jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                    // jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                    
                    i++;
                    
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
     /*   if(this.jTextField113.getCaretPosition() < 3){
            System.out.print("Nothing");
        }else{
            */
            try {
                // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
                searchRowSet2.execute("select DISTINCT shift_no,cash_point,sum(debit-credit) as amt from ac_cash_collection where reconciled = false and shift_no ILIKE '"+jTextField113.getText()+"%' and cash_point = '"+this.jComboBox2.getSelectedItem().toString()+"' group by shift_no,cash_point");
                
                jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("shift_no", "Shift No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("cash_point", "Cash Point", false),
                     new org.netbeans.lib.sql.models.TableModel.Column("amt", "Amount", false)
                    // new org.netbeans.lib.sql.models.TableModel.Column("description", "Scheme", false)
                }));
                jSearchScrollPane2.setViewportView(jSearchTable2);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
       // }        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        this.dispose();
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
     /*   jButton1.setEnabled(true);
        this.jLabel7.setText("");
      
        int rowsNo = 0;
      
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select DISTINCT cash_point,user_name from ac_cash_collection where shift_no ='"+jComboBox2.getSelectedItem()+"' AND reconciled = false");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(debit) from ac_cash_collection where shift_no ='"+jComboBox2.getSelectedItem()+"' and reconciled = false");
      
            while (rset1.next()) {
      
                rowsNo = rset1.getInt(1);
      
            }
            if (rowsNo < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "There are no items to collect");
            } else {
      
                while (rset.next()){
      
                    jTextField71.setText(rset.getObject(1).toString());
                    jTextField711.setText(rset.getObject(2).toString());
                }
      
             /*    java.sql.Statement stm = connectDB.createStatement();
      
                java.sql.ResultSet rs = stm.executeQuery("select count(amount_banked) from banking");
      
           while (rs.next()) {
      
               rowsNo = rs.getInt(1);
      
           }
           if (rowsNo < 1) {
      *
                    java.sql.PreparedStatement pstmt6 = connectDB.prepareStatement("insert into banking values(?,?,?,?)");
      
            //pstmt7.setString(1,jTextField12.getText());
            pstmt6.setString(1,"0.00");
            pstmt6.setString(2,"0.00");
            pstmt6.setString(3,"0.00");
            pstmt6.setString(4,"0.00");
           pstmt6.executeUpdate();
                } else {
      
      */
             /*
                crset4.setCommand("select payment_mode,sum(debit) as debit,null as actual_amount from ac_cash_collection where shift_no ='"+jComboBox2.getSelectedItem()+"' AND debit > 0 AND reconciled = false GROUP BY payment_mode");
                crset4.setConnectionSource(pConnDB);
              
                // try {
                crset4.execute();
              
                // crset2.setExecuteOnLoad(true);
                jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset4, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("payment_mode", "Payment Mode", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("debit", "Amount", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("actual_amount", "Actual Amount", true),
              
                }));
              
                tableModel = jTable1.getModel();
              
              
                jScrollPane1.setViewportView(jTable1);
              
            }
              
        }catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
              
            System.out.println(sqlex.getMessage());
              
        }
              
              */
        
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // Add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        
        this.getContentPane().removeAll();
        this.initComponents();
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        try{
        String User = null;
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are the amounts okay ?", "Caution before Finalising Invoice!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
        try {
             java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rsts = pss1.executeQuery("select current_user");
            while (rsts.next())
            
            User = rsts.getObject(1).toString();
            connectDB.setAutoCommit(false);
            
            for (int i=0; i < jTable1.getRowCount(); i++) {
                if (jTable1.getModel().getValueAt(i,0) != null){
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_shift_collections values(?,?,?,?,?,?,?)");
         
                    
                    pstmt.setObject(2,jTextField9.getText());
                    pstmt.setObject(1,jComboBox2.getSelectedItem().toString());
                    
                    pstmt.setObject(3,User);
                    
                    pstmt.setObject(4,jTable1.getValueAt(i,1).toString());
                     pstmt.setObject(5,jTable1.getValueAt(i,2).toString());
                    
                    pstmt.setObject(6,"'now'");
                    
                    pstmt.setObject(7,jTable1.getValueAt(i,0).toString());
                    pstmt.executeUpdate();
                    
                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE ac_cash_collection SET reconciled = true,date_reconcilled = current_date where cash_point = '"+this.jComboBox2.getSelectedItem().toString()+"' and shift_no = '"+this.jTextField9.getText()+"'");
                    pstmt1.executeUpdate();
                    
                }
            }
           // javax.swing.JOptionPane.showMessageDialog(this, "Are the amounts okay ?","Confirmation message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            jButton1.setEnabled(false);
            jLabel7.setForeground(java.awt.Color.blue);
            jLabel7.setText("Insert successful");
            
        }   catch(java.sql.SQLException sq){
            
            try {
                
                connectDB.rollback();
                
            } catch(java.sql.SQLException sql) {
                
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            System.out.println(sq.getMessage());
        }
        }
         } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
  /*
     public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
   
         double totals = 0.00;
   
         int i = 0;
   
         for (int j = 0; j < jTable1.getRowCount(); j++) {
   
             System.out.println(jTable1.getModel().getValueAt(j, 4).toString());
   
            if (Boolean.valueOf(jTable1.getModel().getValueAt(j, 4).toString()) == java.lang.Boolean.FALSE) {
   
             totals = totals + Double.parseDouble(jTable1.getModel().getValueAt(j, 2).toString()) + Double.parseDouble(jTable1.getModel().getValueAt(j, 3).toString());
   
             i++;
           }
         }
   
         jTextField6.setText(Double.toString(totals));
   
         jTextField2.setText(Integer.toString(i));
   
         System.out.println(totals);
   
         System.out.println(i);
   
         System.out.println("This table has changed");
   
     }
   */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton searchButton;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jButton52;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField3;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton1;
    private org.netbeans.lib.sql.NBCachedRowSet crset4;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jSearchPanel2;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet2;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextField711;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JButton jButton4;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jSearchTable2;
    // End of variables declaration//GEN-END:variables
    
}
