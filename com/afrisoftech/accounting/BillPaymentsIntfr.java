/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.accounting;

/**
 *
 * @author  root
 */
public class BillPaymentsIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    private javax.swing.JComboBox cmbox;
    
    private javax.swing.JComboBox cmbox2;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    private javax.swing.JComboBox cmbox21;
    
    private final javax.swing.JTextField comboTextField = new javax.swing.JTextField();
    
    javax.swing.ComboBoxModel mainComboBoxModel;
    
    javax.swing.ComboBoxModel oldComboBox1311Model;
    private boolean threadCheck = false;
    private boolean refreshStatus;
    String Categ = null;
    String desc = null;
    String billNo = null;
    String transNo = null;
    String payMode = null;
    String patientAcc = null;
    String cardNo = null;
    String AccDesc = null;
    String scheme = null;
    String cardName = null;
    String isurer = null;
    String expDate = null;
    String staffNo = null;
    String glAcc = null;
    String receiptNo1 = null;
    String actCode1 = null;
    String glCode1 = null;
    String bankAcc1 = null;
    String transNo1 = null;
    String actNames1 = null;
    String patCat1 = null;
    String patientAcc1 = null;
    String user = null;
    String glAcc1 = null;
    String accDesc1 = null;
    String name = null;
    String rname = null;
    String rcode = null;
    java.sql.Connection connectDB = null;
    private java.lang.String shift_no = null;
    javax.swing.table.TableModel tableModel;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public BillPaymentsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        refreshStatus = true;
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        
        System.out.println("Cashpoint : "+System.getProperty("cashpoint"));
        
        //        System.out.println("Shift No. : "+getShiftMunber());
        
        jTextField14.setText(System.getProperty("cashpoint"));
        
        jTextField81.setText(getShiftNumber());
        
        //        startRunning();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset4 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset5 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        try {
            crset21 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset41 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset11 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset6 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset7 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset8 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset9 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset22 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset20 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset31 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset51 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset511 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset211 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset12 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset13 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset411 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        try {
            searchRowSet = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new javax.swing.JTable();
        jButton91 = new javax.swing.JButton();
        try {
            searchRowSet1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new javax.swing.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        try {
            searchRowSet2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new javax.swing.JTable();
        jButton421 = new javax.swing.JButton();
        jButton521 = new javax.swing.JButton();
        try {
            searchRowSet21 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jDialog31 = new javax.swing.JDialog();
        //jDialog3.setSize(600,400);
        jPanel121 = new javax.swing.JPanel();
        jPanel1111 = new javax.swing.JPanel();
        jLabel66111 = new javax.swing.JLabel();
        jTextField14111 = new javax.swing.JTextField();
        jLabel3111 = new javax.swing.JLabel();
        jTextField4111 = new javax.swing.JTextField();
        jPanel312 = new javax.swing.JPanel();
        jLabel582211 = new javax.swing.JLabel();
        jLabel5821111 = new javax.swing.JLabel();
        jTextField3111 = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        jTextField1611 = new javax.swing.JTextField();
        searchButton13 = new javax.swing.JButton();
        jSeparator1111 = new javax.swing.JSeparator();
        jButton301111 = new javax.swing.JButton();
        jButton252111 = new javax.swing.JButton();
        jButton1111 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new javax.swing.JTable();
        dispose11 = new javax.swing.JButton();
        try {
            searchRowSet11 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new javax.swing.JTable();
        jButton522 = new javax.swing.JButton();
        try {
            searchRowSet22 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog31 = new javax.swing.JDialog();
        jSearchPanel31 = new javax.swing.JPanel();
        jTextField1121 = new javax.swing.JTextField();
        jSearchScrollPane31 = new javax.swing.JScrollPane();
        jSearchTable31 = new javax.swing.JTable();
        jButton921 = new javax.swing.JButton();
        try {
            searchRowSet31 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField111 = new javax.swing.JTextField();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel212 = new javax.swing.JLabel();
        jLabel312 = new javax.swing.JLabel();
        jTextField211 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jLabel82 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField921 = new javax.swing.JTextField();
        searchButton21 = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jPanel3.setVisible(false);
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jPanel31.setVisible(false);
        jLabel21 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jTextField52 = new javax.swing.JTextField();
        jLabel411 = new javax.swing.JLabel();
        jTextField511 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        tableModel = jTable11.getModel();

        tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {

            public void tableChanged(javax.swing.event.TableModelEvent evt) {

                tableModelTableChanged(evt);

            }

        });
        jPanel10 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jPanel15 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel531 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton11 = new javax.swing.JButton();
        jButton221 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton112 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox131 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jLabel131 = new javax.swing.JLabel();
        jTextField81 = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        datePicker11 = new com.afrisoftech.lib.DatePicker();
        jPanel422 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel43 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel71 = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jTextField61 = new javax.swing.JTextField();
        jPanel111 = new javax.swing.JPanel();
        jScrollPane211 = new javax.swing.JScrollPane();
        jTable111 = new javax.swing.JTable();
        jPanel211 = new javax.swing.JPanel();
        jLabel111 = new javax.swing.JLabel();
        jComboBox111 = new javax.swing.JComboBox();
        jLabel2121 = new javax.swing.JLabel();
        jTextField151 = new javax.swing.JTextField();
        jPanel61 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel5311 = new javax.swing.JLabel();
        jTextField311 = new javax.swing.JTextField();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton111 = new javax.swing.JButton();
        jButton611 = new javax.swing.JButton();
        jButton311 = new javax.swing.JButton();
        jButton411 = new javax.swing.JButton();
        jButton511 = new javax.swing.JButton();
        jSeparator111 = new javax.swing.JSeparator();
        jPanel32 = new javax.swing.JPanel();
        jPanel32.setVisible(false);
        jLabel22 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextField42 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jTextField51 = new javax.swing.JTextField();
        jPanel311 = new javax.swing.JPanel();
        jPanel311.setVisible(false);
        jLabel213 = new javax.swing.JLabel();
        jTextField212 = new javax.swing.JTextField();
        jLabel313 = new javax.swing.JLabel();
        jTextField411 = new javax.swing.JTextField();
        jLabel422 = new javax.swing.JLabel();
        jTextField521 = new javax.swing.JTextField();
        jLabel4112 = new javax.swing.JLabel();
        jTextField5111 = new javax.swing.JTextField();
        jButton22 = new javax.swing.JButton();
        jPanel51 = new javax.swing.JPanel();
        jLabel121 = new javax.swing.JLabel();
        jComboBox41 = new javax.swing.JComboBox();
        jLabel132 = new javax.swing.JLabel();
        jTextField82 = new javax.swing.JTextField();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel8 = new javax.swing.JLabel();

        crset2.setCommand("select bank_acc_no from bank_branches");
        crset2.setConnectionSource(pConnDB);
        crset3.setConnectionSource(pConnDB);
        crset4.setConnectionSource(pConnDB);
        crset5.setConnectionSource(pConnDB);
        crset21.setConnectionSource(pConnDB);
        crset41.setCommand("select distinct main_service from pb_operating_parameters  order by main_service ");
        crset41.setConnectionSource(pConnDB);
        crset41.setTransactionIsolation(0);
        crset41.setExecuteOnLoad(false);
        crset11.setConnectionSource(pConnDB);
        crset6.setCommand("select DISTINCT code FROM ac_cash_points ORDER BY code");
        crset6.setConnectionSource(pConnDB);
        crset7.setConnectionSource(pConnDB);
        crset8.setCommand("select DISTINCT code FROM ac_cash_points ORDER BY code");
        crset8.setConnectionSource(pConnDB);
        crset9.setConnectionSource(pConnDB);
        crset22.setConnectionSource(pConnDB);
        crset20.setConnectionSource(pConnDB);
        crset31.setCommand("select DISTINCT description from ac_cash_points");
        crset31.setConnectionSource(pConnDB);
        crset51.setConnectionSource(pConnDB);
        crset511.setConnectionSource(pConnDB);
        crset211.setConnectionSource(pConnDB);
        crset12.setConnectionSource(pConnDB);
        crset13.setConnectionSource(pConnDB);
        crset13.setExecuteOnLoad(false);
        crset411.setCommand("select distinct main_service from pb_operating_parameters  order by main_service ");
        crset411.setConnectionSource(pConnDB);
        crset411.setTransactionIsolation(0);
        crset411.setExecuteOnLoad(false);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(new javax.swing.border.EtchedBorder());
        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchScrollPaneMouseClicked(evt);
            }
        });

        jSearchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jSearchTable.setShowHorizontalLines(false);
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        searchRowSet.setConnectionSource(pConnDB);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(new javax.swing.border.EtchedBorder());
        jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField112CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField112, gridBagConstraints);

        jSearchTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jSearchTable1.setShowHorizontalLines(false);
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        searchRowSet1.setConnectionSource(pConnDB);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jTextField113.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField113ActionPerformed(evt);
            }
        });

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        searchRowSet2.setConnectionSource(pConnDB);
        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });

        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton421.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton421, gridBagConstraints);

        jButton521.setText("Dispose");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        searchRowSet21.setConnectionSource(pConnDB);
        jDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

        jDialog31.setTitle("Enter Doctors Fee");
        jDialog31.setSize(400,200);
        jPanel121.setLayout(new java.awt.GridBagLayout());

        jPanel1111.setLayout(new java.awt.GridBagLayout());

        jPanel1111.setBackground(new java.awt.Color(130, 232, 255));
        jPanel1111.setBorder(new javax.swing.border.TitledBorder("Enter Doctor's details here"));
        jLabel66111.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel1111.add(jLabel66111, gridBagConstraints);

        jTextField14111.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1111.add(jTextField14111, gridBagConstraints);

        jLabel3111.setText("Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel1111.add(jLabel3111, gridBagConstraints);

        jTextField4111.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1111.add(jTextField4111, gridBagConstraints);

        jPanel312.setLayout(new java.awt.GridBagLayout());

        jPanel312.setBackground(new java.awt.Color(204, 204, 255));
        jLabel582211.setText("Doctor's No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel312.add(jLabel582211, gridBagConstraints);

        jLabel5821111.setText("Doc. Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel312.add(jLabel5821111, gridBagConstraints);

        jTextField3111.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel312.add(jTextField3111, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        jTextField1611.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jTextField1611, gridBagConstraints);

        searchButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton13.setToolTipText("Search");
        searchButton13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton13.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton13.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel41.add(searchButton13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel312.add(jPanel41, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jPanel312, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel121.add(jPanel1111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel121.add(jSeparator1111, gridBagConstraints);

        jButton301111.setMnemonic('O');
        jButton301111.setText("Ok");
        jButton301111.setToolTipText("Click here to enter data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel121.add(jButton301111, gridBagConstraints);

        jButton252111.setMnemonic('c');
        jButton252111.setText("Close");
        jButton252111.setToolTipText("Click here to close window");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel121.add(jButton252111, gridBagConstraints);

        jButton1111.setMnemonic('h');
        jButton1111.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel121.add(jButton1111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog31.getContentPane().add(jPanel121, gridBagConstraints);

        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchScrollPane11.setViewportView(jSearchTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

            dispose11.setMnemonic('l');
            dispose11.setText("Close");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel11.add(dispose11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

            searchRowSet11.setConnectionSource(pConnDB);
            jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchDialog22.setModal(true);
            jSearchDialog22.setUndecorated(true);
            jSearchPanel22.setLayout(new java.awt.GridBagLayout());

            jSearchPanel22.setBorder(new javax.swing.border.EtchedBorder());
            jTextField1132.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField1132ActionPerformed(evt);
                }
            });

            jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField1132CaretUpdate(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 300.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jSearchPanel22.add(jTextField1132, gridBagConstraints);

            jSearchTable22.setToolTipText("Click on the target row to select the patient from the search.");
            jSearchTable22.setShowHorizontalLines(false);
            /*javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable2.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }
            */
            jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable22MouseClicked(evt);
                }
            });

            jSearchScrollPane22.setViewportView(jSearchTable22);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

            jButton522.setText("Close");
            jButton522.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton522ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel22.add(jButton522, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

            searchRowSet22.setConnectionSource(pConnDB);
            jSearchDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchDialog31.setModal(true);
            jSearchDialog31.setUndecorated(true);
            jSearchPanel31.setLayout(new java.awt.GridBagLayout());

            jSearchPanel31.setBorder(new javax.swing.border.EtchedBorder());
            jTextField1121.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField1121CaretUpdate(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 10.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
            jSearchPanel31.add(jTextField1121, gridBagConstraints);

            jSearchTable31.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Product", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Selling price", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
            }));
            jSearchTable31.setShowHorizontalLines(false);
            /*    try {
                searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
                searchRowSet.setConnectionSource(pConnDB);

                searchRowSet.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

                }));
                // jSearchScrollPane.setViewportView(jSearchTable);

            } catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());
            }
            */
            jSearchTable31.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable31MouseClicked(evt);
                }
            });

            jSearchScrollPane31.setViewportView(jSearchTable31);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel31.add(jSearchScrollPane31, gridBagConstraints);

            jButton921.setText("Close");
            jButton921.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton921ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel31.add(jButton921, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog31.getContentPane().add(jSearchPanel31, gridBagConstraints);

            searchRowSet31.setConnectionSource(pConnDB);

            getContentPane().setLayout(new java.awt.GridBagLayout());

            setClosable(true);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Cash Sales");
            setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
            setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
            try {
                setSelected(true);
            } catch (java.beans.PropertyVetoException e1) {
                e1.printStackTrace();
            }
            setVisible(true);
            addComponentListener(new java.awt.event.ComponentAdapter() {
                public void componentHidden(java.awt.event.ComponentEvent evt) {
                    formComponentHidden(evt);
                }
            });

            addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
                public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                }
                public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                }
                public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                    formInternalFrameClosed(evt);
                }
                public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                }
                public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
                }
                public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                }
                public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
                }
            });

            jPanel7.setLayout(new java.awt.GridBagLayout());

            jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel7.add(jLabel7, gridBagConstraints);

            jTextField6.setEditable(false);
            jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel7.add(jTextField6, gridBagConstraints);

            jPanel11.setLayout(new java.awt.GridBagLayout());

            jPanel11.setBorder(new javax.swing.border.TitledBorder(""));
            jPanel21.setLayout(new java.awt.GridBagLayout());

            jPanel21.setBorder(new javax.swing.border.TitledBorder("Select Patient here"));
            jLabel91.setText("Patient No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel21.add(jLabel91, gridBagConstraints);

            jLabel11.setText("Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 20;
            gridBagConstraints.weightx = 9.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField111, gridBagConstraints);

            jComboBox11.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset41, "main_service", null, null, null));
            jComboBox11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox11ActionPerformed(evt);
                }
            });

            jComboBox11.addInputMethodListener(new java.awt.event.InputMethodListener() {
                public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                }
                public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                    jComboBox11CaretPositionChanged(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel21.add(jComboBox11, gridBagConstraints);

            jLabel212.setText("Revenue Code");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel21.add(jLabel212, gridBagConstraints);

            jLabel312.setText("Patient Category");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel312, gridBagConstraints);

            jTextField211.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField211, gridBagConstraints);

            jTextField15.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField15.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            jPanel21.add(jTextField15, gridBagConstraints);

            jPanel6.setLayout(new java.awt.GridBagLayout());

            jPanel6.setBorder(new javax.swing.border.EtchedBorder());
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 10.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jTextField9, gridBagConstraints);

            searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton.setToolTipText("Search");
            searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButtonActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel6.add(searchButton, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 1.0;
            jPanel21.add(jPanel6, gridBagConstraints);

            jPanel13.setLayout(new java.awt.GridBagLayout());

            jCheckBox1.setSelected(true);
            jCheckBox1.setText("Search By No.");
            buttonGroup1.add(jCheckBox1);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jCheckBox1, gridBagConstraints);

            jCheckBox2.setText("Search By Name");
            buttonGroup1.add(jCheckBox2);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jCheckBox2, gridBagConstraints);

            jCheckBox3.setBackground(new java.awt.Color(255, 204, 204));
            jCheckBox3.setForeground(new java.awt.Color(0, 0, 255));
            jCheckBox3.setMnemonic('y');
            jCheckBox3.setText("Copay");
            jCheckBox3.setToolTipText("Click here to receipt Co_payment Patients");
            jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox3ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jCheckBox3, gridBagConstraints);

            jCheckBox6.setForeground(new java.awt.Color(153, 0, 153));
            jCheckBox6.setText("Doctors Fees");
            jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox6ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jCheckBox6, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel21.add(jPanel13, gridBagConstraints);

            jLabel82.setText("Doctor's Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel82, gridBagConstraints);

            jPanel42.setLayout(new java.awt.GridBagLayout());

            jPanel42.setBorder(new javax.swing.border.EtchedBorder());
            jTextField921.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel42.add(jTextField921, gridBagConstraints);

            searchButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton21.setToolTipText("Search");
            searchButton21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton21.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton21.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton21.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton21ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel42.add(searchButton21, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jPanel42, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipady = -20;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jPanel21, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
            gridBagConstraints.weightx = 1.0;
            jPanel11.add(jSeparator11, gridBagConstraints);

            jPanel3.setLayout(new java.awt.GridBagLayout());

            jPanel3.setBorder(new javax.swing.border.TitledBorder("Cheque Details"));
            jLabel2.setText("Cheque No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jLabel2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jTextField2, gridBagConstraints);

            jLabel3.setText("Drawer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jLabel3, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jTextField4, gridBagConstraints);

            jLabel4.setText("Drawer's Bank");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jLabel4, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel3.add(jTextField5, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipady = -20;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel11.add(jPanel3, gridBagConstraints);

            jPanel31.setLayout(new java.awt.GridBagLayout());

            jPanel31.setBorder(new javax.swing.border.TitledBorder("Card Details"));
            jLabel21.setText("Card No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel21, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 80;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jTextField21, gridBagConstraints);

            jLabel31.setText("Card Company");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel31, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jTextField41, gridBagConstraints);

            jLabel42.setText("Card Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel31.add(jLabel42, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 80;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel31.add(jTextField52, gridBagConstraints);

            jLabel411.setText("Expiry Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel31.add(jLabel411, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel31.add(jTextField511, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            jPanel11.add(jPanel31, gridBagConstraints);

            jPanel9.setLayout(new java.awt.GridBagLayout());

            jPanel9.setBorder(new javax.swing.border.TitledBorder(""));
            jTable11.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null}
                },
                new String [] {
                    "Service", "Quantity", "Price", "Total", "Gl Account"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    true, true, true, true, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable11.setColumnSelectionAllowed(true);
            jTable11.setDragEnabled(true);
            jTable11.setEditingColumn(1);
            jTable11.setEditingRow(jTable11.getSelectedRow());
            jTable11.setGridColor(new java.awt.Color(153, 153, 255));
            jTable11.setPreferredSize(new java.awt.Dimension(500, 320));
            javax.swing.table.TableColumn column3 = null;
            for (int i = 0; i < 5; i++) {
                column3 = jTable11.getColumnModel().getColumn(i);
                if (i == 0) {

                    column3.setPreferredWidth(300); //sport column is bigger
                } else {

                    //if (i == 2) {
                        column3.setPreferredWidth(150);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
            jTable11.addInputMethodListener(new java.awt.event.InputMethodListener() {
                public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                    jTable11InputMethodTextChanged(evt);
                }
                public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                }
            });

            jTable11.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable11KeyReleased(evt);
                }
            });

            jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable11MouseClicked(evt);
                }
            });

            jScrollPane21.setViewportView(jTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 9;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipady = 50;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 7.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel9.add(jScrollPane21, gridBagConstraints);

            jPanel10.setLayout(new java.awt.GridBagLayout());

            jCheckBox4.setText("Search By Code");
            buttonGroup2.add(jCheckBox4);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            jPanel10.add(jCheckBox4, gridBagConstraints);

            jCheckBox5.setText("Search By Name");
            buttonGroup2.add(jCheckBox5);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            jPanel10.add(jCheckBox5, gridBagConstraints);

            jPanel9.add(jPanel10, new java.awt.GridBagConstraints());

            jPanel15.setLayout(new java.awt.GridBagLayout());

            jLabel6.setText("Paid By");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            jPanel15.add(jLabel6, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel15.add(jTextField10, gridBagConstraints);

            jLabel14.setText("Amount Paid");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            jPanel15.add(jLabel14, gridBagConstraints);

            jTextField12.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTextField12KeyReleased(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel15.add(jTextField12, gridBagConstraints);

            jLabel531.setText("Amount KShs.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel15.add(jLabel531, gridBagConstraints);

            jTextField31.setEditable(false);
            jTextField31.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField31.setText("0.00");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 6;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel15.add(jTextField31, gridBagConstraints);

            jLabel15.setText("Change");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 7;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            jPanel15.add(jLabel15, gridBagConstraints);

            jTextField13.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 8;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel15.add(jTextField13, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jPanel15, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipady = 200;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 100.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel11.add(jPanel9, gridBagConstraints);

            jPanel14.setLayout(new java.awt.GridBagLayout());

            jPanel14.setBorder(new javax.swing.border.EtchedBorder());
            jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
            jButton11.setMnemonic('O');
            jButton11.setText("Post");
            jButton11.setToolTipText("Click here enter data");
            jButton11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jButton11, gridBagConstraints);

            jButton221.setMnemonic('p');
            jButton221.setText("RePrint");
            jButton221.setToolTipText("Click here to edit data");
            jButton221.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton221ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jButton221, gridBagConstraints);

            jButton61.setMnemonic('r');
            jButton61.setText("Remove Row");
            jButton61.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton61ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jButton61, gridBagConstraints);

            jButton31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
            jButton31.setMnemonic('l');
            jButton31.setText("Clear");
            jButton31.setToolTipText("Click here to clear textfields");
            jButton31.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton31ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jButton31, gridBagConstraints);

            jButton41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
            jButton41.setMnemonic('C');
            jButton41.setText("Close");
            jButton41.setToolTipText("Click here to close window");
            jButton41.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton41ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jButton41, gridBagConstraints);

            jButton51.setMnemonic('h');
            jButton51.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 6;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jButton51, gridBagConstraints);

            jButton112.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
            jButton112.setMnemonic('O');
            jButton112.setText("Post & Print");
            jButton112.setToolTipText("Click here enter data");
            jButton112.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton112ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jButton112, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel11.add(jPanel14, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 30.0;
            jPanel7.add(jPanel11, gridBagConstraints);

            jPanel4.setLayout(new java.awt.GridBagLayout());

            jPanel4.setVisible(false);
            jPanel1.setLayout(new java.awt.GridBagLayout());

            jPanel1.setBorder(new javax.swing.border.TitledBorder("Select patient here"));
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null}
                },
                new String [] {
                    "Services", "Quantity", "Value"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
                };
                boolean[] canEdit = new boolean [] {
                    true, true, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable1.setShowHorizontalLines(false);
            /*cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset2, "sub_service", null, null, null));
            javax.swing.table.TableColumn s = this.jTable1.getColumn("Service");
            s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
            cmbox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmboxActionPerformed(evt);
                }
            });

            cmbox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset4, "item", null, null, null));
            javax.swing.table.TableColumn m = this.jTable1.getColumn("Drug Prescribed");
            m.setCellEditor(new javax.swing.DefaultCellEditor(cmbox1));
            cmbox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmboxActionPerformed(evt);
                }
            });
            */
            jScrollPane2.setViewportView(jTable1);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipady = 10;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
            jPanel1.add(jScrollPane2, gridBagConstraints);

            jPanel2.setLayout(new java.awt.GridBagLayout());

            jLabel9.setText("Patient No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel2.add(jLabel9, gridBagConstraints);

            jComboBox131.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset11, "patient_no", null, null, null));
            jComboBox131.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox131ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 40;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jComboBox131, gridBagConstraints);

            jLabel1.setText("Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel1, gridBagConstraints);

            jTextField1.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 50;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField1, gridBagConstraints);

            jLabel53.setText("Amount KShs.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel53, gridBagConstraints);

            jTextField3.setEditable(false);
            jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField3, gridBagConstraints);

            jLabel5.setText("Patient Category");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel2.add(jLabel5, gridBagConstraints);

            jTextField7.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jTextField7, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jPanel2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.gridheight = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 20.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel4.add(jPanel1, gridBagConstraints);

            jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
            jButton1.setMnemonic('O');
            jButton1.setText("Ok");
            jButton1.setToolTipText("Click here enter data");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jButton1, gridBagConstraints);

            jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/note[1].gif")));
            jButton2.setMnemonic('E');
            jButton2.setText("Edit");
            jButton2.setToolTipText("Click here to edit data");
            jButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jButton2, gridBagConstraints);

            jButton6.setMnemonic('r');
            jButton6.setText("Remove Row");
            jButton6.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton6ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            jPanel4.add(jButton6, gridBagConstraints);

            jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
            jButton3.setMnemonic('l');
            jButton3.setText("Clear");
            jButton3.setToolTipText("Click here to clear textfields");
            jButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jButton3, gridBagConstraints);

            jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
            jButton4.setMnemonic('C');
            jButton4.setText("Close");
            jButton4.setToolTipText("Click here to close window");
            jButton4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton4ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jButton4, gridBagConstraints);

            jButton5.setMnemonic('h');
            jButton5.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 6;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jButton5, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jPanel7.add(jPanel4, gridBagConstraints);

            jPanel5.setLayout(new java.awt.GridBagLayout());

            jPanel5.setBorder(new javax.swing.border.TitledBorder("Select Payment Mode"));
            jLabel10.setText("Cash Point");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel5.add(jLabel10, gridBagConstraints);

            jLabel12.setText("Payment Mode");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel5.add(jLabel12, gridBagConstraints);

            jComboBox4.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset31, "description", null, null, null));
            jComboBox4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox4ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jComboBox4, gridBagConstraints);

            jLabel13.setText("Gl Acc. No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel5.add(jLabel13, gridBagConstraints);

            jTextField8.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 80;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel5.add(jTextField8, gridBagConstraints);

            jTextField14.setEditable(false);
            jTextField14.addComponentListener(new java.awt.event.ComponentAdapter() {
                public void componentShown(java.awt.event.ComponentEvent evt) {
                    jTextField14ComponentShown(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.5;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jTextField14, gridBagConstraints);

            jLabel131.setText("Shift No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel5.add(jLabel131, gridBagConstraints);

            jTextField81.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel5.add(jTextField81, gridBagConstraints);

            jLabel81.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel5.add(jLabel81, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel5.add(datePicker11, gridBagConstraints);

            jPanel422.setLayout(new java.awt.GridBagLayout());

            jPanel422.setBorder(new javax.swing.border.EtchedBorder());
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel422.add(jTextField92, gridBagConstraints);

            searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton2.setToolTipText("Search");
            searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton2ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.ipadx = -30;
            jPanel422.add(searchButton2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipady = -10;
            gridBagConstraints.weightx = 1.0;
            jPanel5.add(jPanel422, gridBagConstraints);

            jLabel43.setText("Manual Receipt No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel5.add(jLabel43, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 4.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel7.add(jPanel5, gridBagConstraints);

            jTabbedPane1.addTab("Registered Patients", jPanel7);

            jPanel8.setLayout(new java.awt.GridBagLayout());

            jPanel71.setLayout(new java.awt.GridBagLayout());

            jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel71.add(jLabel71, gridBagConstraints);

            jTextField61.setEditable(false);
            jTextField61.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField61.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel71.add(jTextField61, gridBagConstraints);

            jPanel111.setLayout(new java.awt.GridBagLayout());

            jPanel111.setBorder(new javax.swing.border.TitledBorder(""));
            jTable111.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null}
                },
                new String [] {
                    "Service", "Quantity", "Price(KShs)", "Total", "Gl Account"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    true, true, true, true, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable111.setShowHorizontalLines(false);

            javax.swing.table.TableColumn column1 = null;
            for (int i = 0; i < 5; i++) {
                column1 = jTable111.getColumnModel().getColumn(i);
                if (i == 0) {

                    column1.setPreferredWidth(300); //sport column is bigger
                } else {

                    //if (i == 2) {
                        column1.setPreferredWidth(150);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
            jTable111.addComponentListener(new java.awt.event.ComponentAdapter() {
                public void componentShown(java.awt.event.ComponentEvent evt) {
                    jTable111ComponentShown(evt);
                }
            });

            jTable111.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable111KeyReleased(evt);
                }
            });

            jTable111.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable111MouseClicked(evt);
                }
            });

            jScrollPane211.setViewportView(jTable111);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipady = 10;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 10.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel111.add(jScrollPane211, gridBagConstraints);

            jPanel211.setLayout(new java.awt.GridBagLayout());

            jPanel211.setBorder(new javax.swing.border.TitledBorder("Select Patient here"));
            jLabel111.setText("Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.ipadx = 70;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel211.add(jLabel111, gridBagConstraints);

            jComboBox111.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset411, "main_service", null, null, null));
            jComboBox111.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox111ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel211.add(jComboBox111, gridBagConstraints);

            jLabel2121.setText("Revenue Code");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.ipadx = 30;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
            jPanel211.add(jLabel2121, gridBagConstraints);

            jTextField151.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField151.setPreferredSize(new java.awt.Dimension(0, 0));
            jPanel211.add(jTextField151, new java.awt.GridBagConstraints());

            jPanel61.setLayout(new java.awt.GridBagLayout());

            jPanel61.setBorder(new javax.swing.border.EtchedBorder());
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 10.0;
            gridBagConstraints.weighty = 1.0;
            jPanel61.add(jTextField91, gridBagConstraints);

            searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton1.setToolTipText("Search");
            searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.ipadx = -30;
            jPanel61.add(searchButton1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            jPanel211.add(jPanel61, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipady = -50;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel111.add(jPanel211, gridBagConstraints);

            jLabel5311.setText("Amount KShs.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel111.add(jLabel5311, gridBagConstraints);

            jTextField311.setEditable(false);
            jTextField311.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField311.setText("0.00");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 40);
            jPanel111.add(jTextField311, gridBagConstraints);

            jButton111.setBackground(new java.awt.Color(230, 230, 230));
            jButton111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
            jButton111.setMnemonic('O');
            jButton111.setText("Post & Print");
            jButton111.setToolTipText("Click here enter data");
            jButton111.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton111ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel111.add(jButton111, gridBagConstraints);

            jButton611.setMnemonic('r');
            jButton611.setText("Remove Row");
            jButton611.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton611ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            jPanel111.add(jButton611, gridBagConstraints);

            jButton311.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
            jButton311.setMnemonic('l');
            jButton311.setText("Clear");
            jButton311.setToolTipText("Click here to clear textfields");
            jButton311.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton311ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel111.add(jButton311, gridBagConstraints);

            jButton411.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
            jButton411.setMnemonic('C');
            jButton411.setText("Close");
            jButton411.setToolTipText("Click here to close window");
            jButton411.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton411ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel111.add(jButton411, gridBagConstraints);

            jButton511.setMnemonic('h');
            jButton511.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 6;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel111.add(jButton511, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
            gridBagConstraints.weightx = 1.0;
            jPanel111.add(jSeparator111, gridBagConstraints);

            jPanel32.setLayout(new java.awt.GridBagLayout());

            jPanel32.setBorder(new javax.swing.border.TitledBorder("Cheque Details"));
            jLabel22.setText("Cheque No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel32.add(jLabel22, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel32.add(jTextField22, gridBagConstraints);

            jLabel32.setText("Drawer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel32.add(jLabel32, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel32.add(jTextField42, gridBagConstraints);

            jLabel41.setText("Drawer's Bank");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel32.add(jLabel41, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel32.add(jTextField51, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel111.add(jPanel32, gridBagConstraints);

            jPanel311.setLayout(new java.awt.GridBagLayout());

            jPanel311.setBorder(new javax.swing.border.TitledBorder("Card Details"));
            jLabel213.setText("Card No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel311.add(jLabel213, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel311.add(jTextField212, gridBagConstraints);

            jLabel313.setText("Card Company");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel311.add(jLabel313, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel311.add(jTextField411, gridBagConstraints);

            jLabel422.setText("Card Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel311.add(jLabel422, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel311.add(jTextField521, gridBagConstraints);

            jLabel4112.setText("Expiry Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel311.add(jLabel4112, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel311.add(jTextField5111, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel111.add(jPanel311, gridBagConstraints);

            jButton22.setMnemonic('p');
            jButton22.setText("RePrint");
            jButton22.setToolTipText("Click here to edit data");
            jButton22.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton22ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel111.add(jButton22, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 30.0;
            jPanel71.add(jPanel111, gridBagConstraints);

            jPanel51.setLayout(new java.awt.GridBagLayout());

            jPanel51.setBorder(new javax.swing.border.TitledBorder("Select Payment Mode"));
            jLabel121.setText("Payment Mode");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel51.add(jLabel121, gridBagConstraints);

            jComboBox41.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset31, "description", null, null, null));
            jComboBox41.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox41ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 40;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel51.add(jComboBox41, gridBagConstraints);

            jLabel132.setText("Gl Acc. No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel51.add(jLabel132, gridBagConstraints);

            jTextField82.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel51.add(jTextField82, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel51.add(datePicker1, gridBagConstraints);

            jLabel8.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel51.add(jLabel8, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel71.add(jPanel51, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jPanel71, gridBagConstraints);

            jTabbedPane1.addTab("Walk In Patients", jPanel8);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            setBounds(0, 0, 697, 537);
        }//GEN-END:initComponents
    
    private void jButton112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton112ActionPerformed
        jButton11ActionPerformed(evt);
        jButton221ActionPerformed(evt);
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton112ActionPerformed
    
    private void jSearchTable31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable31MouseClicked
        jTextField921.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 1).toString());
        this.jSearchDialog31.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable31MouseClicked
    
    private void jButton921ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton921ActionPerformed
        this.jSearchDialog31.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton921ActionPerformed
    
    private void jTextField1121CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1121CaretUpdate
        if(jTextField1121.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            try {
                
                searchRowSet31.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField1121.getText()+"%' order by first_name");
                jSearchTable31.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet31, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
                    
                }));
                jSearchTable31.setShowHorizontalLines(false);
                jSearchScrollPane31.setViewportView(jSearchTable31);
                
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }       // Add your handling code here:
    }//GEN-LAST:event_jTextField1121CaretUpdate
    
    private void searchButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton21ActionPerformed
        searchButtonClickedw();        // Add your handling code here:
    }//GEN-LAST:event_searchButton21ActionPerformed
    private void searchButtonClickedw() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField921.getLocationOnScreen();
        
        jSearchDialog31.setSize(400,200);
        
        jSearchDialog31.setLocation(point);
        
        jSearchDialog31.show();
        
        
        
    }
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        com.afrisoftech.accounting.DoctorsFeesRctintfr other = new DoctorsFeesRctintfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed
    
    private void jTextField12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyReleased
        float num_c = java.lang.Float.parseFloat(jTextField31.getText());
        float total_num = java.lang.Float.parseFloat(jTextField12.getText());
        // jTextField9.setText(""+total_num+"");
        
        // System.out.println(total_num);
        
        
        
        float num_d = total_num - num_c;
        jTextField13.setText(""+num_d+"");
        
        
        if (num_d < 0) {
            // java.awt.Toolkit.getDefaultToolkit().beep();
            //javax.swing.JOptionPane.showMessageDialog(this,"Invoice Amt cannot be more than Returned Amt","Error Message",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField13.setForeground(java.awt.Color.red);
            //jTextField2.setText("");
        }else{
            jTextField13.setForeground(java.awt.Color.blue);
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField12KeyReleased
    
    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        jTextField92.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
        
        this.jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTable22MouseClicked
    
    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        this.jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed
    
    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if(jTextField1132.getCaretPosition() > 2){
            try {
                searchRowSet22.execute("select chq_no FROM pb_documents_register WHERE chq_no  ilike '"+jTextField1132.getText()+"%' and used = 'false' and doc_name ilike '%Receipt%' order by chq_no");
                
                jSearchTable22.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet22, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("chq_no", "Receipt No", false),
                    // new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Acc No.", false)
                    //  new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
                }));
                jSearchScrollPane22.setViewportView(jSearchTable22);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }          // Add your handling code here:
    }//GEN-LAST:event_jTextField1132CaretUpdate
    
    private void jTextField1132ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1132ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1132ActionPerformed
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        cmbox22MouseClicked();      // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void cmbox22MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = this.jTextField92.getLocationOnScreen();
        //java.awt.Point point = jScrollPane2.getLocationOnScreen();
        jSearchDialog22.setSize(400,200);
        jSearchDialog22.setLocation(point);
        jSearchDialog22.show();
    }
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        com.afrisoftech.accounting.CopayReceiptsIntfr other = new CopayReceiptsIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    private void searchButton111Clicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog2.dispose();
        java.awt.Point point = this.jTextField3111.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        jSearchDialog2.show();
        
        
    }
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        
        for (int s = 0; s < jTable111.getRowCount(); s++ ) {
            for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                jTable111.getModel().setValueAt(null,s,r);
            }
        }
        jSearchDialog21.dispose();
          /* jTextField111.setText("");
            jTextField211.setText("");
            jTextField311.setText("0.00");
           */
        this.jButton111.setVisible(true);
        /*
            //            jComboBox1311.setSelectedItem(null);
         
         
            for (int s = 0; s < jTable111.getRowCount(); s++ ) {
                for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                    jTable111.getModel().setValueAt(null,s,r);
                }
            }
         */
        this.populateTable(this.jTextField91.getText());
        jSearchDialog21.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton212Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton212Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog21.setSize(300,200);
        
        jSearchDialog21.setLocation(point);
        
        jSearchDialog21.show();
    }
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        this.jSearchDialog21.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
    
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        try {
            
            searchRowSet21.execute("select distinct patient_name from hp_pharmacy where paid = false AND collected = false and (patient_no is null OR patient_no = '') AND patient_name ILIKE '"+jTextField1131.getText()+"%' UNION select distinct patient_name from hp_patient_billing where paid = false and (patient_no is null OR patient_no = '') AND patient_name ILIKE '"+jTextField1131.getText()+"%' order by patient_name");
            
            jSearchTable21.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet21, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("patient_name", "Name", false),
                //new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
            }));
            jSearchTable21.setShowHorizontalLines(false);
            jSearchScrollPane21.setViewportView(jSearchTable21);
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }       // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    
    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        
        //     jComboBox1311.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0));
        //      jTextField111.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        //     jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton42ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        //    jComboBox1311.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0));
        jTextField111.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        //       this.populateTable1(this.jTextField111.getText().toString());
        
        jSearchDialog2.dispose();
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select category from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
            while (rset.next()){
                jTextField211.setText(rset.getObject(1).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        
        jTextField21.setText("");
        jTextField31.setText("0.00");
        
        this.jButton11.setEnabled(true);
      //  this.jButton11.setEnabled(false);
            this.jButton112.setEnabled(true);
            this.jButton221.setEnabled(false);
        
        this.populateTable1(this.jTextField9.getText());
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        
        if(this.jCheckBox1.isSelected()){
            if(jTextField113.getCaretPosition() < 3){
                
                System.out.println("Nothing");
            }else{
                try {
                    
                    searchRowSet2.execute("SELECT patient_no, (second_name||' '||first_name) as patient_name from hp_patient_register where patient_no ILIKE '"+jTextField113.getText()+"%' and last_visit > '2004-1-15' order by second_name");
                    
                    jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                    jSearchTable2.setShowHorizontalLines(false);
                    jSearchScrollPane2.setViewportView(jSearchTable2);
                    
                    
                } catch(java.sql.SQLException sqlExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
        }else{
            
            if(jTextField113.getCaretPosition() < 3){
                
                System.out.println("Nothing");
            }else{
                try {
                    
                    searchRowSet2.execute("SELECT patient_no, (second_name||' '||first_name) as patient_name from hp_patient_register where second_name||' '||first_name ILIKE '"+jTextField113.getText()+"%' and last_visit > '2004-1-15' order by second_name");
                    
                    jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                    jSearchTable2.setShowHorizontalLines(false);
                    jSearchScrollPane2.setViewportView(jSearchTable2);
                    
                    
                } catch(java.sql.SQLException sqlExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void jTextField113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField113ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113ActionPerformed
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jComboBox11.getLocationOnScreen();
        
        jSearchDialog2.setSize(500,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
        
        
        
    }
    
    public class ComboTextField extends javax.swing.JTextField implements javax.swing.ComboBoxEditor {
        
        public ComboTextField() {
            
            initComponents();
            
        }
        
        void initComponents() {
            
            // oldComboBox1311Model = jComboBox1311.getModel();
            
            // comboTextField = new javax.swing.JTextField();
            
            
            comboTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                
                public void keyTyped(java.awt.event.KeyEvent e) {
                    
                    if (e.getID() == java.awt.event.KeyEvent.VK_BACK_SPACE) {
                        
                        changeComboBoxModel(comboTextField.getText());
                        
                        System.out.println(comboTextField.getText()+" Pressed Key "+e.getKeyText(e.getKeyCode()));
                    }
                }});
                
        }
        public java.awt.Component getEditorComponent() {
            
            return comboTextField;
            
        }
        
        public Object getItem() {
            
            return comboTextField.getText();
            
        }
        
        public void setItem(Object obj) {
            
            //    comboTextField.setText(jComboBox1311.getSelectedItem().toString());
            
        }
        
        
        
        public void changeComboBoxModel(java.lang.String typedLetters) {
            
            
            
            javax.swing.DefaultComboBoxModel newComboBox1311Model = new javax.swing.DefaultComboBoxModel();
            
            System.out.println("ComboBox Item No. "+oldComboBox1311Model.getSize());
            
/*            if (typedLetters.equals("")) {
 
                jComboBox6.setModel(oldComboBox6Model);
 
            } else {
 
 *
 */
            
            for (int i = 0; i < oldComboBox1311Model.getSize(); i++) {
                
                
                if (oldComboBox1311Model.getElementAt(i).toString().startsWith(typedLetters)) {
                    
                    newComboBox1311Model.addElement(oldComboBox1311Model.getElementAt(i));
                    
                    //                    jComboBox1311.setModel(newComboBox1311Model);
                    
                }
                
            }
            
        }
        
        //      }
    }
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTable111.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),0),jTable111.getSelectedRow(), 0);
        jTable111.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable111.getSelectedRow(), 2);
        jTable111.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable111.getSelectedRow(), 4);
        
        jSearchDialog1.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    private void cmbox221MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable111.getLocationOnScreen();
        jSearchDialog1.setSize(400,200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.show();
        
        
    }
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        this.jSearchDialog1.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        if(this.jComboBox111.getSelectedItem().toString().equalsIgnoreCase("Laboratory") || this.jComboBox111.getSelectedItem().toString().equalsIgnoreCase("Xray")|| this.jComboBox111.getSelectedItem().toString().equalsIgnoreCase("ExternalServices")){
            
            // if(this.jComboBox111.getSelectedItem().equals("Laboratory") || this.jComboBox111.getSelectedItem().equals("Xray")|| this.jComboBox111.getSelectedItem().equals("ExternalCharges")){
            
            if(jTextField112.getCaretPosition() < 2){
                
                System.out.println("Nothing");
            }else{
                try {
                    searchRowSet1.execute("select service_type,rate,gl_account FROM pb_operating_parameters WHERE code ILIKE '"+jTextField112.getText()+"%' AND main_service = '"+jComboBox111.getSelectedItem()+"' order by service_type");
                    jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Description", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("rate", "Price", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("gl_account", "GL Code", false)
                    }));
                    jSearchScrollPane1.setViewportView(jSearchTable1);
                    System.out.println("Cannot sort out");
                } catch(java.sql.SQLException sqlExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
        }else{
            if(jTextField112.getCaretPosition() < 2){
                
                System.out.println("Nothing");
            }else{
                try {
                    searchRowSet1.execute("select service_type,rate,gl_account FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField112.getText()+"%' AND main_service = '"+jComboBox111.getSelectedItem()+"' UNION ALL select product,selling_price,gl_code as service_type FROM st_stock_prices WHERE product ILIKE '"+jTextField112.getText()+"%' AND department =  '"+jComboBox111.getSelectedItem()+"' order by service_type");
                    jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Description", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("rate", "Price", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("gl_account", "GL Code", false)
                    }));
                    jSearchScrollPane1.setViewportView(jSearchTable1);
                    System.out.println("Cannot sort out");
                } catch(java.sql.SQLException sqlExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
        }
        
        
   /*
    
        try {
            searchRowSet1.execute("select service_type,rate,gl_account FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField112.getText()+"%' AND main_service = '"+jComboBox111.getSelectedItem()+"' UNION ALL select product,selling_price,gl_code as service_type FROM st_stock_prices WHERE product ILIKE '"+jTextField112.getText()+"%' AND department =  '"+jComboBox111.getSelectedItem()+"' order by service_type");
    
            jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("rate", "Price", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_account", "GL Code", false)
            }));
            jSearchScrollPane1.setViewportView(jSearchTable1);
            System.out.println("Cannot sort out");
        } catch(java.sql.SQLException sqlExec) {
    
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
    
        }
    */
        // Add your handling code here:
    }//GEN-LAST:event_jTextField112CaretUpdate
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        //      jT.setSelectedItem(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0));
        
        jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable11.getSelectedRow(), 0);
        jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
        jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        
        jSearchDialog.dispose();           // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jSearchScrollPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchScrollPaneMouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_jSearchScrollPaneMouseClicked
    
    private void jComboBox11CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jComboBox11CaretPositionChanged
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox11CaretPositionChanged
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jTable11InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTable11InputMethodTextChanged
        // Add your handling code here:
    }//GEN-LAST:event_jTable11InputMethodTextChanged
/*    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        int i = jSearchTable.getSelectedRow();
        java.lang.Object res_cmbox2 = cmbox2.getSelectedItem();
 
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("select units from st_stock_item where description = '"+cmbox2.getSelectedItem()+"'");
            while (rs.next())
                jTable11.setValueAt(rs.getObject(1),i,2);
 
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }
    }
 */
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        if(this.jCheckBox4.isSelected()){
            
            if(jTextField11.getCaretPosition() < 2){
                
                System.out.println("Nothing");
            }else{
                try {
                    searchRowSet.execute("select service_type,rate,gl_account FROM pb_operating_parameters WHERE code ILIKE '"+jTextField11.getText()+"%' AND main_service = '"+jComboBox11.getSelectedItem()+"'");//UNION ALL select product,selling_price,gl_code as service_type FROM st_stock_prices WHERE product ILIKE '"+jTextField11.getText()+"%' AND department =  '"+jComboBox11.getSelectedItem()+"' order by service_type");
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Description", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("rate", "Price", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("gl_account", "GL Code", false)
                    }));
                    jSearchScrollPane.setViewportView(jSearchTable);
                    System.out.println("Cannot sort out");
                } catch(java.sql.SQLException sqlExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
        }else{
            if(jTextField11.getCaretPosition() < 2){
                
                System.out.println("Nothing");
            }else{
                try {
                    searchRowSet.execute("select service_type,rate,gl_account FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField11.getText()+"%' AND main_service = '"+jComboBox11.getSelectedItem()+"' UNION ALL select product,selling_price,gl_code as service_type FROM st_stock_prices WHERE product ILIKE '"+jTextField11.getText()+"%' AND department = '"+jComboBox11.getSelectedItem()+"' order by service_type");
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Description", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("rate", "Price", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("gl_account", "GL Code", false)
                    }));
                    jSearchScrollPane.setViewportView(jSearchTable);
                    System.out.println("Cannot sort out");
                } catch(java.sql.SQLException sqlExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
    
    private void jTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MouseClicked
        
        if (jTable11.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked();
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable11MouseClicked
    private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane21.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.show();
        
        
    }
    
    private void populateTable(java.lang.String patient_no) {
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_name)  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false UNION SELECT count(patient_name)  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
            
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,price,amount,gl_code  FROM patient_bill WHERE patient_name = '"+patient_no+"'");// AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable111.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable111.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable111.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable111.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable111.setValueAt(rsetTable1.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
                    
                    i++;
                    
                }
                java.sql.Statement stmtTable111 = connectDB.createStatement();
                
                java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(amount) FROM patient_bill WHERE patient_name = '"+patient_no+"'");//AND paid = false UNION SELECT sum(amount) FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
                
                while (rsetTable111.next()) {
                    jTextField311.setText(rsetTable111.getObject(1).toString());
                }
                
                
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        String desc = null;
        String billNo = null;
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String receiptNo1 = null;
        String actCode1 = null;
        String glCode1 = null;
        String bankAcc1 = null;
        String transNo1 = null;
        String actNames1 = null;
        String patCat1 = null;
        String patientAcc1 = null;
        String user = null;
        String glAcc1 = null;
        String accDesc1 = null;
        String name = null;
        String rcode = null;
        String rname = null;
        
        try {
            connectDB.setAutoCommit(false);
          /*
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity,current_user from pb_activity where activity_category ='PR'");
            while (rse12.next())
           
                patientAcc = rse12.getObject(1).toString();
            AccDesc = rse12.getObject(2).toString();
            user = rse12.getObject(3).toString();
           
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
            while (rse1211.next())
                rname = rse1211.getObject(1).toString();
            rcode = rse1211.getObject(2).toString();
           */
            java.sql.Statement ps1 = connectDB.createStatement();
            java.sql.ResultSet rst1 = ps1.executeQuery("select currval('receipt_no_seq')");
            while (rst1.next())
                receiptNo1 = rst1.getObject(1).toString();
            /*
            java.sql.Statement pss = connectDB.createStatement();
            java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
            while (rss.next())
                transNo1 = rss.getObject(1).toString();
             
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.ResultSet rse122 = stm122.executeQuery("select payment_mode from pb_paymentmodes where gl_account ='"+jTextField8.getText()+"'");
            while (rse122.next())
             
                name = rse122.getObject(1).toString();
             
             
            System.out.println("Bill No "+billNo);
             
            for (int i = 0; i < jTable111.getRowCount(); i++){
                if (jTable111.getModel().getValueAt(i,0) != null){
                    System.out.println("Bill No 2 "+billNo);
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity,code from pb_activity where code ='"+jTable111.getModel().getValueAt(i,4).toString()+"'");
                    while (rse121.next()){
             
                        glAcc = rse121.getObject(1).toString();
             
                        System.out.println("Bill No 4"+billNo);
                        java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt212.setObject(1,jTable111.getValueAt(i,4).toString());
                        pstmt212.setString(2,glAcc);
                        pstmt212.setString(3,null);
                        pstmt212.setString(4,jTextField91.getText());
                        pstmt212.setString(5,"");
                        pstmt212.setString(6,"");
                        pstmt212.setString(7,"");
                        pstmt212.setString(8,jTextField42.getText());
                        pstmt212.setString(9,jTextField51.getText());
                        pstmt212.setString(10,"");
                        pstmt212.setString(11,jTextField22.getText());
                        pstmt212.setString(12,"");
                        pstmt212.setString(13,"");
                        pstmt212.setString(14,jTable111.getValueAt(i,0).toString());
                        pstmt212.setString(15,"Revenue");
                        pstmt212.setString(16,"0.00");
                        pstmt212.setObject(17,jTable111.getValueAt(i,3).toString());
                        pstmt212.setString(18,datePicker1.getDate().toString());
                        pstmt212.setString(19,transNo1);
                        pstmt212.setString(20,"false");
                        pstmt212.setString(21,"false");
                        pstmt212.setString(22,"false");
                        pstmt212.setString(23,user);
                        pstmt212.setString(24,jTextField14.getText());
                        pstmt212.setString(25,jTextField81.getText());
                        pstmt212.executeUpdate();
             
                    }
                }
            }
             
            for (int k = 0; k < jTable111.getRowCount(); k++){
                if (jTable111.getModel().getValueAt(k,0) != null){
                    java.sql.Statement pss1 = connectDB.createStatement();
                    java.sql.ResultSet rsts = pss1.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                    while (rsts.next()){
                        actCode1 = rsts.getObject(1).toString();
                        actNames1 = rsts.getObject(2).toString();
                        java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = stm121.executeQuery("select activity,code from pb_activity where code ='"+jTable111.getModel().getValueAt(k,4).toString()+"'");
                        while (rse121.next()){
             
                            glAcc1 = rse121.getObject(1).toString();
                            accDesc1 = rse121.getObject(2).toString();
             
                            System.out.println(actNames1);
             
                            java.sql.PreparedStatement pstmt25 = connectDB.prepareStatement("insert into ac_cash_collection values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
             
                            pstmt25.setObject(1,jTable111.getValueAt(k,4).toString());
                            pstmt25.setObject(2,glAcc1);
                            pstmt25.setString(3,"");
                            pstmt25.setString(4,jTextField91.getText());
                            pstmt25.setString(5,jComboBox4.getSelectedItem().toString());
                            pstmt25.setString(6,jTextField212.getText());
                            pstmt25.setString(7,jTextField521.getText());
                            pstmt25.setString(8,jTextField42.getText());
                            if (jTextField51.getText().equals("")){
                                pstmt25.setString(9,jTextField411.getText());
                            }else{
                                pstmt25.setString(9,jTextField51.getText());
                            }
                            pstmt25.setString(10,rcode);
                            pstmt25.setString(11,jTextField22.getText());
                            pstmt25.setString(12,receiptNo1);
                            pstmt25.setString(13,"");
                            pstmt25.setString(14,jTextField91.getText());
                            pstmt25.setString(15,"Receipts");
                            pstmt25.setObject(16,jTable111.getValueAt(k,3).toString());
                            pstmt25.setString(17,"0.00");
                            pstmt25.setString(18,datePicker1.getDate().toString());
                            pstmt25.setString(19,""+transNo1+"");
                            pstmt25.setString(20,"false");
                            pstmt25.setString(21,"false");
                            pstmt25.setString(22,"false");
                            pstmt25.setString(23,user);
                            pstmt25.setString(24,jTextField14.getText());
                            pstmt25.setString(25,jTextField81.getText());
                            pstmt25.setString(26,null);
                            pstmt25.setObject(27,jTable111.getValueAt(k,1).toString());
                            pstmt25.executeUpdate();
             
                        }
                    }
                }
            }
            java.sql.PreparedStatement pstmt41 = connectDB.prepareStatement("UPDATE hp_pharmacy SET paid ='true' WHERE patient_name = '"+jTextField91.getText()+"' AND date_prescribed = current_date");
            pstmt41.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
             */
            //  CashReceiptsPdf policy = new CashReceiptsPdf();
            //policy.CashReceiptsPdf(connectDB, jTextField91.getText(),jTextField311.getText(),receiptNo1,this.jComboBox41.getSelectedItem().toString());
            
            com.afrisoftech.txtreports.ReceiptsTxt policy = new com.afrisoftech.txtreports.ReceiptsTxt(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());
            //policy = new ReceiptsTxt();
            
            //  policy.ReceiptsTxt(connectDB, jTextField91.getText(),jTextField311.getText(),receiptNo1,this.jComboBox41.getSelectedItem().toString());
            
            //jTextField111.setText("");
            // jTextField211.setText("");
            // jTextField311.setText("0.00");
            
            //   this.jButton111.setVisible(false);
            //            jComboBox1311.setSelectedItem(null);
            
            
          /*  for (int s = 0; s < jTable111.getRowCount(); s++ ) {
                for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                    jTable111.getModel().setValueAt(null,s,r);
                }
            }
           */
            
            jLabel7.setForeground(java.awt.Color.blue);
            jLabel7.setText("Insert successful");
            
            // }
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }          // Add your handling code here:
    }//GEN-LAST:event_jButton22ActionPerformed
    
    private void jButton221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton221ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        String receiptNo = null;
        try {
            connectDB.setAutoCommit(false);
            
            
            
            java.sql.Statement ps1 = connectDB.createStatement();
            java.sql.ResultSet rst1 = ps1.executeQuery("select currval('receipt_no_seq')");
            while (rst1.next()){
                receiptNo = rst1.getObject(1).toString();
            }
            
           // ReceiptsPdf policy = new ReceiptsPdf();
            
          //policy.ReceiptsPdf(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());
            com.afrisoftech.txtreports.ReceiptsTxt policy = new com.afrisoftech.txtreports.ReceiptsTxt(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());
            // policy.ReceiptsPdf(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());
             
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }          // Add your handling code here:
    }//GEN-LAST:event_jButton221ActionPerformed
    
    private void jTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable111MouseClicked
        
        if (jTable111.getSelectedColumn() == 0) {
            
            this.cmbox221MouseClicked();
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable111MouseClicked
   /*  private void jComboBox11CaretPositionChanged(java.awt.event.InputMethodEvent evt) {
        try {
            searchRowSet.execute("select service_type FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField11.getText()+"%' AND main_service = '"+jComboBox11.getSelectedItem().toString()+"' UNION ALL select product as service_type FROM st_stock_prices WHERE product ILIKE '"+jTextField11.getText()+"%' AND department =  '"+jComboBox11.getSelectedItem().toString()+"' order by service_type");
    
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Description", false),
                //   new org.netbeans.lib.sql.models.TableModel.Column("description", "Description", false),
                //   new org.netbeans.lib.sql.models.TableModel.Column("units", "Units", false)
            }));
            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");
          } catch(java.sql.SQLException sqlExec) {
    
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
    
        }
    
     }
    */
    private void jTable111ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable111ComponentShown
        // Add your handling code here:
    }//GEN-LAST:event_jTable111ComponentShown
    
    private void jButton611ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton611ActionPerformed
        
        int rows2Delete = jTable111.getSelectedRowCount();
        
        int[] selectedRows = jTable111.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                
                defTableModel.removeRow(jTable111.getSelectedRow());
            }
        }
        
        tableModelTableChanged1();
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton611ActionPerformed
    
    private void jButton311ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton311ActionPerformed
        jTextField111.setText("");
        jTextField211.setText("");
        //        jTextField31.setText("");
        for (int k = 0; k < jTable111.getRowCount(); k++ ) {
            for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                jTable111.getModel().setValueAt(null,k,r);
            }
        }
        jTextField9.setText("");
        // this.jComboBox13111.setSelectedItem(null);
        jTextField311.setText("0.00");          // Add your handling code here:
    }//GEN-LAST:event_jButton311ActionPerformed
    
    private void jButton411ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton411ActionPerformed
        this.dispose();       // Add your handling code here:
    }//GEN-LAST:event_jButton411ActionPerformed
    
    private void jTable111KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable111KeyReleased
        
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField311.getText());
        
        if (jTable111.getValueAt(jTable111.getSelectedRow(), jTable111.getSelectedColumn()) != null) {
            
            
            double floatCol2 = java.lang.Double.parseDouble(jTable111.getValueAt(jTable111.getSelectedRow(), 1).toString());
            
            double floatCol3 = java.lang.Double.parseDouble(jTable111.getValueAt(jTable111.getSelectedRow(), 2).toString());
            
            double resVal = floatCol2 * floatCol3;
            
            
            jTable111.setValueAt(new java.lang.Float(resVal), jTable111.getSelectedRow(), 3);
            
            //      System.out.println("Value at cell 3 is : "+ jTable11.getValueAt(jTable11.getSelectedRow(),3));
            // }
            
            for (int i = 0; i < jTable111.getRowCount(); i++) {
                
                if (jTable111.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i, 3).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            
            this.tableModelTableChanged1();
        }
        //jTextField31.setText(java.lang.String.valueOf(resFloat));
        //}
        
        
  /*
        double resFloat = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField311.getText());
   
        for (int i = 0; i < jTable111.getRowCount(); i++) {
   
            if (jTable111.getModel().getValueAt(jTable111.getSelectedRow(), 0) != null) {
   
                if (jTable111.getSelectedColumn() == 1) {
   
                    double floatCol2 = java.lang.Double.parseDouble(jTable111.getValueAt(jTable111.getSelectedRow(), 1).toString());
   
                    double floatCol3 = java.lang.Double.parseDouble(jTable111.getValueAt(jTable111.getSelectedRow(), 2).toString());
   
                    double resVal = floatCol2 * floatCol3;
                    jTable111.setValueAt(new java.lang.Float(resVal), jTable111.getSelectedRow(), 3);
                    resFloat = resFloat + Double.parseDouble(jTable111.getModel().getValueAt(i, 3).toString());
   
                }
            }
            jTextField311.setText(java.lang.String.valueOf(resFloat));
        }
   */
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable111KeyReleased
    private void cmbox21ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox21.getSelectedItem();
        int i = jTable111.getSelectedRow();
        
        if (selectedGuaran != null) {
            
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
                while (rs.next()){
                    jTable111.setValueAt(rs.getObject(1),i,2);
                    jTable111.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
        
    }
    private void jButton111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton111ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        try{
            String desc = null;
            String billNo = null;
            String transNo = null;
            String payMode = null;
            String patientAcc = null;
            String cardNo = null;
            String AccDesc = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            String expDate = null;
            String staffNo = null;
            String glAcc = null;
            String receiptNo1 = null;
            String actCode1 = null;
            String glCode1 = null;
            String bankAcc1 = null;
            String transNo1 = null;
            String actNames1 = null;
            String patCat1 = null;
            String patientAcc1 = null;
            String user = null;
            String glAcc1 = null;
            String accDesc1 = null;
            String name = null;
            String rcode = null;
            String rname = null;
            
            try {
                connectDB.setAutoCommit(false);
                
                java.sql.Statement stm12 = connectDB.createStatement();
                java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity,current_user from pb_activity where activity_category ='PR'");
                while (rse12.next()){
                    
                    patientAcc = rse12.getObject(1).toString();
                    AccDesc = rse12.getObject(2).toString();
                    user = rse12.getObject(3).toString();
                }
                java.sql.Statement stm1211 = connectDB.createStatement();
                java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                while (rse1211.next()){
                    rname = rse1211.getObject(1).toString();
                    rcode = rse1211.getObject(2).toString();
                }
                java.sql.Statement ps1 = connectDB.createStatement();
                java.sql.ResultSet rst1 = ps1.executeQuery("select nextval('receipt_no_seq')");
                while (rst1.next()){
                    receiptNo1 = rst1.getObject(1).toString();
                }
                java.sql.Statement pss = connectDB.createStatement();
                java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                while (rss.next()){
                    transNo1 = rss.getObject(1).toString();
                }
                java.sql.Statement stm122 = connectDB.createStatement();
                java.sql.ResultSet rse122 = stm122.executeQuery("select payment_mode from pb_paymentmodes where gl_account ='"+jTextField8.getText()+"'");
                while (rse122.next()){
                    
                    name = rse122.getObject(1).toString();
                }
                
                System.out.println("Bill No "+billNo);
                
                java.sql.Statement pss1 = connectDB.createStatement();
                java.sql.ResultSet rsts = pss1.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rsts.next()){
                    actCode1 = rsts.getObject(1).toString();
                    actNames1 = rsts.getObject(2).toString();
                }
                
                for (int i = 0; i < jTable111.getRowCount(); i++){
                    if (jTable111.getModel().getValueAt(i,0) != null){
                        System.out.println("Bill No 2 "+billNo);
                        java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = stm121.executeQuery("select activity,code from pb_activity where code ='"+jTable111.getModel().getValueAt(i,4).toString()+"'");
                        while (rse121.next()){
                            
                            glAcc = rse121.getObject(1).toString();
                            
                            System.out.println("Bill No 4"+billNo);
                            java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                            pstmt212.setObject(1,jTable111.getValueAt(i,4).toString());
                            pstmt212.setString(2,glAcc);
                            pstmt212.setString(3,null);
                            if(jTextField91.getText().equals("") || jTextField91.getText().equals(null)){
                                javax.swing.JOptionPane.showMessageDialog(this,"PATIENT NAME MISSING !!","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                            }else{
                                pstmt212.setString(4,jTextField91.getText());
                            }
                            pstmt212.setString(5,"");
                            pstmt212.setString(6,"");
                            pstmt212.setString(7,"");
                            pstmt212.setString(8,"OP");
                            pstmt212.setString(9,jTextField51.getText());
                            pstmt212.setString(10,"Cash");
                            pstmt212.setString(11,jTextField22.getText());
                            pstmt212.setString(12,"");
                            pstmt212.setString(13,"");
                            pstmt212.setString(14,jTable111.getValueAt(i,0).toString());
                            pstmt212.setString(15,"Revenue");
                            pstmt212.setString(16,"0.00");
                            pstmt212.setObject(17,jTable111.getValueAt(i,3).toString());
                            pstmt212.setString(18,datePicker1.getDate().toString());
                            pstmt212.setString(19,transNo1);
                            pstmt212.setString(20,"false");
                            pstmt212.setString(21,"false");
                            pstmt212.setString(22,"false");
                            pstmt212.setString(23,user);
                            pstmt212.setString(24,jTextField14.getText());
                            pstmt212.setString(25,jTextField81.getText());
                            pstmt212.executeUpdate();
                            
                            java.sql.PreparedStatement pstmtr = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable111.getValueAt(i,3).toString()+"', mtd_credit = mtd_credit + '"+jTable111.getValueAt(i,3).toString()+"' where code = '"+jTable111.getValueAt(i,4).toString()+"'");
                            pstmtr.executeUpdate();
                            
                            
                            
                            
                            java.sql.PreparedStatement pstmt25 = connectDB.prepareStatement("insert into ac_cash_collection values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                            
                            pstmt25.setObject(1,jTable111.getValueAt(i,4).toString());
                            pstmt25.setObject(2,jTable111.getValueAt(i,0).toString());
                            pstmt25.setString(3,"");
                            pstmt25.setString(4,jTextField91.getText());
                            pstmt25.setString(5,jComboBox4.getSelectedItem().toString());
                            pstmt25.setString(6,jTextField212.getText());
                            pstmt25.setString(7,jTextField521.getText());
                            pstmt25.setString(8,jTextField42.getText());
                            if (jTextField51.getText().equals("")){
                                pstmt25.setString(9,jTextField411.getText());
                            }else{
                                pstmt25.setString(9,jTextField51.getText());
                            }
                            pstmt25.setString(10,rcode);
                            pstmt25.setString(11,jTextField22.getText());
                            pstmt25.setString(12,receiptNo1);
                            pstmt25.setString(13,"");
                            pstmt25.setString(14,jTextField91.getText());
                            pstmt25.setString(15,"Receipts");
                            pstmt25.setObject(16,jTable111.getValueAt(i,3).toString());
                            pstmt25.setString(17,"0.00");
                            pstmt25.setString(18,datePicker1.getDate().toString());
                            pstmt25.setString(19,""+transNo1+"");
                            pstmt25.setString(20,"false");
                            pstmt25.setString(21,"false");
                            pstmt25.setString(22,"false");
                            pstmt25.setString(23,user);
                            pstmt25.setString(24,jTextField14.getText());
                            pstmt25.setString(25,jTextField81.getText());
                            pstmt25.setString(26,null);
                            pstmt25.setObject(27,jTable111.getValueAt(i,1).toString());
                            pstmt25.executeUpdate();
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTable111.getValueAt(i,3).toString()+"', mtd_debit = mtd_debit + '"+jTable111.getValueAt(i,3).toString()+"' where code = '"+rcode+"'");
                            pstmt.executeUpdate();
                            
                        }
                    }
                }
                
                // java.sql.PreparedStatement pstmt251 = connectDB.prepareStatement("UPDATE hp_pharmacy set paid = true where patient_name = '"+jComboBox1.getSelectedItem().toString()+"'");
                // pstmt251.executeUpdate();
                
                
                // CashReceiptsPdf policy = new CashReceiptsPdf();
                // policy.CashReceiptsPdf(connectDB, jTextField91.getText(),jTextField311.getText(),receiptNo1,this.jComboBox41.getSelectedItem().toString());
                
                // ReceiptsTxt policy = new ReceiptsTxt();
                // policy.ReceiptsTxt(connectDB, jTextField91.getText(),jTextField311.getText(),receiptNo1,this.jComboBox41.getSelectedItem().toString());
                
                java.sql.PreparedStatement pstmt41 = connectDB.prepareStatement("UPDATE hp_pharmacy SET paid ='true' WHERE patient_name = '"+jTextField91.getText()+"' AND date_prescribed = current_date");
                pstmt41.executeUpdate();
                
                java.sql.PreparedStatement pstmt411 = connectDB.prepareStatement("UPDATE hp_patient_billing SET paid ='true' WHERE patient_name = '"+jTextField91.getText()+"'");
                pstmt411.executeUpdate();
                
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
           /* jTextField111.setText("");
            jTextField211.setText("");
            jTextField311.setText("0.00");
            */
                this.jButton111.setVisible(false);
                
                
                jLabel7.setForeground(java.awt.Color.blue);
                jLabel7.setText("Insert successful");
                
                // }
                //  jComboBox2.setSelectedItem(null);
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton111ActionPerformed
    
    private void jComboBox111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox111ActionPerformed
        jButton111.setEnabled(true);
        
      /*
        try {
            searchRowSet1.setCommand("select service_type,rate,gl_account FROM pb_operating_parameters WHERE main_service = '"+jComboBox111.getSelectedItem()+"' UNION ALL select product,selling_price,gl_code FROM st_stock_prices WHERE department = '"+jComboBox111.getSelectedItem()+"' order by service_type");
            searchRowSet1.setConnectionSource(pConnDB);
       
            searchRowSet1.execute();
       
            // crset2.setExecuteOnLoad(true);
            jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("rate", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_account", "Gl_code", false),
       
       
            }));
            jSearchScrollPane1.setViewportView(jSearchTable1);
       
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
       
            System.out.println(sqlex.getMessage());
        }
       
       
        jScrollPane211.setViewportView(jTable111);
       
 /*
        jScrollPane211.setViewportView(jTable111);
        crset211 = null;
        try {
            crset211 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        cmbox21 = new javax.swing.JComboBox();
        crset211.setCommand("select service_type FROM pb_operating_parameters WHERE main_service = '"+jComboBox111.getSelectedItem()+"'  UNION ALL select product FROM st_stock_prices WHERE department = '"+jComboBox111.getSelectedItem()+"' order by service_type");
        crset211.setConnectionSource(pConnDB);
       
        cmbox21.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset211, "service_type", null, null, null));
        javax.swing.table.TableColumn s = this.jTable111.getColumn("Service");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox21));
        cmbox21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbox21ActionPerformed(evt);
            }
        });
       
       */
        // }
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox111ActionPerformed
    
    private void jComboBox41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox41ActionPerformed
        try {
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select gl_account from ac_cash_points where description  ='"+jComboBox4.getSelectedItem()+"'");
            while (rset1.next()){
                jTextField82.setText(rset1.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            
        }
        
        if(jComboBox41.getSelectedItem().equals("Credit Card")){
            // jDialog3.setVisible(true);
            // int resOptt =  javax.swing.JOptionPane.showOptionDialog(this, "Select Account Type", "Select Account Type Here", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Credit Card", "Scheme", "Cancel"}, "");
            
            
            //  if (resOptt == javax.swing.JOptionPane.YES_OPTION) {
            jPanel32.setVisible(false);
            // jPanel41.setVisible(true);
            jPanel311.setVisible(true);
            jTextField42.setText("");
            jTextField51.setText("");
            jTextField22.setText("");
        }else{
            if (jComboBox41.getSelectedItem().equals("Cheque")) {
                //                jPanel41.setVisible(false);
                jPanel311.setVisible(false);
                jPanel32.setVisible(true);
                jTextField212.setText("");
                jTextField521.setText("");
                jTextField411.setText("");
            }else{
                
                jPanel311.setVisible(false);
                jPanel32.setVisible(false);
                jTextField212.setText("");
                jTextField521.setText("");
                jTextField411.setText("");
                jTextField42.setText("");
                jTextField51.setText("");
                jTextField22.setText("");
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox41ActionPerformed
    
    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
/*        double resFloat = 0.00;
        // double totalSum = 0.00;
        //        java.lang.Float resFloats = null;
        double floatTotal = java.lang.Double.parseDouble(jTextField31.getText());
 
 
        if (jTable2.getSelectedColumn() == 2) {
 
            double floatCol2 = java.lang.Double.parseDouble(jTable2.getValueAt(jTable2.getSelectedRow(), 2).toString());
 
            double floatCol3 = java.lang.Double.parseDouble(jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString());
 
            double resVal = floatCol2 * floatCol3;
 
            jTable2.setValueAt(new java.lang.Float(resVal), jTable2.getSelectedRow(), 4);
 
        }
 
        for (int i = 0; i < jTable2.getRowCount(); i++) {
 
            if (jTable2.getModel().getValueAt(i, 0) != null) {
 
                resFloat = resFloat + Double.parseDouble(jTable2.getModel().getValueAt(i, 4).toString());
 
                // totalSum = floatTotal + resFloat;
 
            }
        }
        jTextField31.setText(java.lang.String.valueOf(resFloat));
        //  }
 
 */// Add your handling code here:
    }//GEN-LAST:event_jTable2KeyReleased
    
    private void jTextField14ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTextField14ComponentShown
        // Add your handling code here:
    }//GEN-LAST:event_jTextField14ComponentShown
    
    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        
        System.setProperty("billpmnt","closed");
        
        System.out.println("Form closed");
        
        System.out.println(System.getProperty("billpmnt"));// Add your handling code here:
    }//GEN-LAST:event_formComponentHidden
    
    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        
        System.setProperty("billpmnt","closed");
        
        System.out.println("Form closed");
        // Add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosed
    
    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        try {
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select gl_account from ac_cash_points where description  ='"+jComboBox4.getSelectedItem()+"'");
            while (rset1.next()){
                jTextField8.setText(rset1.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            
        }
        
        if(jComboBox4.getSelectedItem().equals("Credit Card")){
            jPanel11.setVisible(true);
            // jPanel4.setVisible(true);
            jPanel31.setVisible(true);
            jPanel3.setVisible(false);
            jTextField2.setText("");
            jTextField5.setText("");
            jTextField4.setText("");
        }else{
            if (jComboBox4.getSelectedItem().equals("Cheque")) {
                jPanel4.setVisible(false);
                jPanel11.setVisible(true);
                jPanel3.setVisible(true);
                jTextField21.setText("");
                jTextField52.setText("");
                jTextField41.setText("");
            }else{
                jPanel4.setVisible(false);
                jPanel11.setVisible(true);
                jPanel3.setVisible(false);
                jPanel31.setVisible(false);
                jTextField21.setText("");
                jTextField52.setText("");
                jTextField41.setText("");
                jTextField2.setText("");
                jTextField5.setText("");
                jTextField4.setText("");
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed
    private void populateTable1(java.lang.String patient_no) {
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_no)  FROM patient_bill WHERE patient_no = '"+patient_no+"'");
            
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,price,amount,gl_code  FROM patient_bill WHERE patient_no = '"+patient_no+"'");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable11.setValueAt(rsetTable1.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
                    
                    i++;
                    
                }
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT sum(amount) FROM patient_bill WHERE patient_no = '"+patient_no+"'");
                while (rset1.next()){
                    jTextField31.setText(rset1.getObject(1).toString());
                }
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed
        
        
        try{
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
            while (rse1211.next())
                //  rname = rse1211.getObject(1).toString();
                rcode = rse1211.getObject(2).toString();
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            System.out.println(sqlex.getMessage());
        }
        jButton11.setEnabled(true);
      //  this.jButton11.setEnabled(false);
            this.jButton112.setEnabled(true);
        this.jButton221.setEnabled(false);
       /*
        try {
            searchRowSet.setCommand("select service_type,rate,gl_account FROM pb_operating_parameters WHERE main_service = '"+jComboBox11.getSelectedItem()+"' UNION ALL select product,selling_price,gl_code FROM st_stock_prices WHERE department = '"+jComboBox11.getSelectedItem()+"' order by service_type");
            searchRowSet.setConnectionSource(pConnDB);
        
            searchRowSet.execute();
        
            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("rate", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_account", "Gl_code", false),
        
        
            }));
            jSearchScrollPane.setViewportView(jSearchTable);
        
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
        
            System.out.println(sqlex.getMessage());
        }
        
        
        jScrollPane21.setViewportView(jTable11);
        */
        
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox11ActionPerformed
    
    private void jTable11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable11KeyReleased
        
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField31.getText());
        
        if (jTable11.getValueAt(jTable11.getSelectedRow(), jTable11.getSelectedColumn()) != null) {
            
            
            double floatCol2 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 1).toString());
            
            double floatCol3 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 2).toString());
            
            double resVal = floatCol2 * floatCol3;
            
            
            jTable11.setValueAt(new java.lang.Float(resVal), jTable11.getSelectedRow(), 3);
            
            //      System.out.println("Value at cell 3 is : "+ jTable11.getValueAt(jTable11.getSelectedRow(),3));
            // }
            
            for (int i = 0; i < jTable11.getRowCount(); i++) {
                
                if (jTable11.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            
            this.tableModelTableChanged();
        }
        //jTextField31.setText(java.lang.String.valueOf(resFloat));
        //}
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable11KeyReleased
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable11.getSelectedRow();
        
        if (selectedGuaran != null) {
            
            try {
                
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable11.setValueAt(rs.getObject(1),i,2);
                    jTable11.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
        
    }
    
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        
        this.setVisible(false);
        
        System.setProperty("billpmnt","closed");
        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed
    
    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        jTextField111.setText("");
        jTextField21.setText("");
        jTextField10.setText("");
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        jLabel7.setText("");
        jTextField9.setText("");
        //        this.jComboBox1311.setSelectedItem(null);
        jTextField31.setText("0.00");        // Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed
    
    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        if(jTable11.isRowSelected(jTable11.getSelectedRow())){
            int rows2Delete = jTable11.getSelectedRowCount();
            
            int[] selectedRows = jTable11.getSelectedRows();
            
            if (rows2Delete < 1) {
                
                java.awt.Toolkit.getDefaultToolkit().beep();
                
                javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
                
            } else {
                
                if (rows2Delete > 1) {
                    
                    for (int i = 0; i < selectedRows.length; i++) {
                        
                        
                        
                        javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                        
                        defTableModel.removeRow(selectedRows[i]);
                        
                    }
                    
                    
                    
                } else {
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                    
                    defTableModel.removeRow(jTable11.getSelectedRow());
                    
                    calculateTotals();
                }
            }
        }else{
            
            
        }
        this.tableModelTableChanged();// Add your handling code here:
    }//GEN-LAST:event_jButton61ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //try{
        try {
            connectDB.setAutoCommit(false);
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity,current_user from pb_activity where activity_category ='PR'");
            while (rse12.next())
                
                patientAcc = rse12.getObject(1).toString();
            AccDesc = rse12.getObject(2).toString();
            user = rse12.getObject(3).toString();
            
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next())
                rst.getObject(1).toString();
            
            transNo = rst.getObject(1).toString();
            
            
            java.sql.Statement ps1 = connectDB.createStatement();
            java.sql.ResultSet rst1 = ps1.executeQuery("select nextval('receipt_no_seq')");
            while (rst1.next()){
                receiptNo1 = rst1.getObject(1).toString();
            }
            
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.ResultSet rse122 = stm122.executeQuery("select payment_mode from pb_paymentmodes where gl_account ='"+jTextField8.getText()+"'");
            while (rse122.next())
                
                name = rse122.getObject(1).toString();
            
            
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rsts = pss1.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            while (rsts.next())
                actCode1 = rsts.getObject(1).toString();
            actNames1 = rsts.getObject(2).toString();
            
            
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
            while (rse1211.next())
                rname = rse1211.getObject(1).toString();
            rcode = rse1211.getObject(2).toString();
            
            for (int i = 0; i < jTable11.getRowCount(); i++){
                if (jTable11.getModel().getValueAt(i,0) != null){
                    System.out.println("Bill No 2 "+billNo);
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity,code from pb_activity where code ='"+jTable11.getModel().getValueAt(i,4).toString()+"'");
                    while (rse121.next())
                        
                        glAcc = rse121.getObject(1).toString();
                    
                    java.sql.Statement stm12a = connectDB.createStatement();
                    java.sql.ResultSet rse12a = stm12a.executeQuery("select category from pb_operating_parameters where code ='"+jTable11.getModel().getValueAt(i,4).toString()+"'");
                    while (rse12a.next())
                        
                        Categ = rse12a.getObject(1).toString();
                    
                    
                    
                    java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt212.setObject(1,jTable11.getValueAt(i,4).toString());
                    pstmt212.setString(2,glAcc);
                    pstmt212.setString(3,jTextField9.getText());
                    if(jTextField10.getText().equals("")){
                        pstmt212.setString(4,jTextField111.getText());
                    }else{
                        pstmt212.setString(4,jTextField10.getText());
                    }
                    pstmt212.setString(5,"");
                    pstmt212.setString(6,"");
                    pstmt212.setString(7,"");
                    pstmt212.setString(8,"OP");
                    pstmt212.setString(9,jTextField921.getText());
                    pstmt212.setString(10,"Cash");
                    pstmt212.setString(11,"");
                    pstmt212.setString(12,"");
                    pstmt212.setString(13,"");
                    pstmt212.setString(14,jTable11.getValueAt(i,0).toString());
                    pstmt212.setString(15,"Revenue");
                    pstmt212.setString(16,"0.00");
                    pstmt212.setObject(17,jTable11.getValueAt(i,3).toString());
                    pstmt212.setString(18,datePicker11.getDate().toString());
                    pstmt212.setString(19,transNo);
                    pstmt212.setString(20,"false");
                    pstmt212.setString(21,"false");
                    pstmt212.setString(22,"false");
                    pstmt212.setString(23,user);
                    pstmt212.setString(24,jTextField14.getText());
                    pstmt212.setString(25,jTextField81.getText());
                    pstmt212.executeUpdate();
                    System.out.println("Bill No 5"+billNo);
                    
                    java.sql.PreparedStatement pstmtr = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable11.getValueAt(i,3).toString()+"',mtd_credit = mtd_credit + '"+jTable11.getValueAt(i,3).toString()+"' where code = '"+jTable11.getValueAt(i,4).toString()+"'");
                    pstmtr.executeUpdate();
                    
                    
                    
                    java.sql.PreparedStatement pstmt25 = connectDB.prepareStatement("insert into ac_cash_collection values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                    pstmt25.setObject(1,jTable11.getValueAt(i,4).toString());
                    pstmt25.setObject(2,jTable11.getValueAt(i,0).toString());
                    pstmt25.setString(3,jTextField9.getText());
                    pstmt25.setString(4,jTextField111.getText());
                    pstmt25.setString(5,jComboBox4.getSelectedItem().toString());
                    pstmt25.setString(6,"");
                    pstmt25.setString(7,"");
                    pstmt25.setString(8,jTextField4.getText());
                    pstmt25.setString(9,jTextField5.getText());
                    pstmt25.setString(10,rcode);
                    pstmt25.setString(11,jTextField2.getText());
                    pstmt25.setString(12,receiptNo1);
                    pstmt25.setString(13,"");
                    if(jTextField10.getText().equals("")){
                        pstmt25.setString(14,jTextField111.getText());
                    }else{
                        pstmt25.setString(14,jTextField10.getText());
                    }
                    pstmt25.setString(15,"Receipts");
                    pstmt25.setObject(16,jTable11.getValueAt(i,3).toString());
                    pstmt25.setString(17,"0.00");
                    pstmt25.setString(18,datePicker11.getDate().toString());
                    pstmt25.setString(19,transNo);
                    pstmt25.setString(20,"false");
                    pstmt25.setString(21,"false");
                    pstmt25.setString(22,"false");
                    pstmt25.setString(23,user);
                    pstmt25.setString(24,jTextField14.getText());
                    pstmt25.setString(25,jTextField81.getText());
                    pstmt25.setString(26,null);
                    pstmt25.setObject(27,jTable11.getValueAt(i,1).toString());
                    pstmt25.executeUpdate();
                    
                    java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTable11.getValueAt(i,3).toString()+"',mtd_debit = mtd_debit + '"+jTable11.getValueAt(i,3).toString()+"' where code = '"+rcode+"'");
                    pstmt11.executeUpdate();
                }
            }
            
            java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("UPDATE ac_doctors_ledger SET paid = true where patient_no = '"+jTextField9.getText()+"' AND input_date = '"+datePicker11.getDate().toString()+"'");
            pstmt11.executeUpdate();
            java.sql.PreparedStatement pstmt41 = connectDB.prepareStatement("UPDATE hp_pharmacy SET paid ='true' WHERE patient_no = '"+jTextField9.getText()+"'");
            pstmt41.executeUpdate();
            java.sql.PreparedStatement pstmt411 = connectDB.prepareStatement("UPDATE hp_patient_billing SET paid ='true' WHERE patient_no = '"+jTextField9.getText()+"'");
            pstmt411.executeUpdate();
            java.sql.PreparedStatement pstmt111 = connectDB.prepareStatement("UPDATE pb_documents_register SET used = true where chq_no = '"+jTextField92.getText()+"' AND doc_name ilike '%Receipt%'");
            pstmt111.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
          //  ReceiptsPdf policy = new ReceiptsPdf();
          //  policy.ReceiptsPdf(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());
            
            // com.afrisoftech.txtreports.ReceiptsTxt policy = new com.afrisoftech.txtreports.ReceiptsTxt(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());
            
            this.jButton11.setEnabled(false);
            this.jButton112.setEnabled(false);
            this.jButton221.setEnabled(true);
            
            jLabel7.setForeground(java.awt.Color.blue);
            jLabel7.setText("Insert successful");
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        
    /*   } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
     
     
        }
     */
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jComboBox131ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox131ActionPerformed
        jLabel7.setText("");
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select first_name||' '||second_name||' '||last_name from hp_patient_register where patient_no ='"+jComboBox131.getSelectedItem()+"'");
            while (rset.next()){
                jTextField1.setText(rset.getObject(1).toString());
            }
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select sum(debit),patient_category from hp_patient_card where patient_no ='"+jComboBox131.getSelectedItem()+"' and paid = false group by patient_category");
            while (rset1.next()){
                
                jTextField3.setText(rset1.getObject(1).toString());
                jTextField7.setText(rset1.getObject(2).toString());
                //                jTextField8.setText(rset1.getObject(3).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
        try {
            crset5.setCommand("select service,dosage,sum(debit) as cost,null::boolean as paid FROM hp_patient_card WHERE patient_no ='"+jComboBox131.getSelectedItem()+"' and paid = false and debit > 0 GROUP BY service,dosage ORDER BY service");
            crset5.setConnectionSource(pConnDB);
            
            crset5.execute();
            
            // crset2.setExecuteOnLoad(true);
            jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset5, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service", "Service", false),
                new org.netbeans.lib.sql.models.TableModel.Column("dosage", "Dosage", false),
                new org.netbeans.lib.sql.models.TableModel.Column("cost", "Cost", false),
                new org.netbeans.lib.sql.models.TableModel.Column("paid", "Paid", true)
                
                
            }));
            jScrollPane2.setViewportView(jTable1);
            
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            System.out.println(sqlex.getMessage());
        }
        
        
        try{
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select card_no,card_name,isurer,expiry_date from hp_patient_card where patient_no ='"+jComboBox131.getSelectedItem()+"' and paid = false");
            while (rset1.next()){
                // jPanel31.setVisible(true);
                jTextField21.setText(rset1.getObject(1).toString());
                jTextField52.setText(rset1.getObject(2).toString());
                jTextField41.setText(rset1.getObject(3).toString());
                jTextField511.setText(rset1.getObject(4).toString());
            }
            
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox131ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);
        
        System.setProperty("billpmnt","closed");// Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        jTextField3.setText("");
        jComboBox131.setSelectedItem(null);
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //        javax.swing.JFrame other = new OtherPayments(connectDB, pConnDB);
        //    other.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
/*
        java.util.Calendar calendar = java.util.Calendar.getInstance();
 
        long dateNow = calendar.getTimeInMillis();
 
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
 
        System.out.println(datenowSql1.toString());
 
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
 
        System.out.println(datenowSql.toString());
 
        String receiptNo = null;
        String actCode = null;
        String glCode = null;
        String bankAcc = null;
        String glCode1 = null;
        String bankAcc1 = null;
        String transNo = null;
        String payMode = null;
        String patCat = null;
        String patientAcc = null;
        String cardNo = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String actNames = null;
        String user = null;
        String rcode = null;
        String rname = null;
        try {
            connectDB.setAutoCommit(false);
 
            java.sql.Statement stm1 = connectDB.createStatement();
           /*
            java.sql.ResultSet rse1 = stm1.executeQuery("select payment_mode,card_no,card_name,expiry_date,isurer,patient_category from hp_patient_card where patient_no ='"+jComboBox131.getSelectedItem()+"'");
            while (rse1.next())
 
                patientAcc = rse1.getObject(1).toString();
            payMode = rse1.getObject(1).toString();
            cardNo = rse1.getObject(2).toString();
            //scheme = rse1.getObject(3).toString();
            cardName = rse1.getObject(3).toString();
            isurer = rse1.getObject(5).toString();
            expDate = rse1.getObject(4).toString();
           // staffNo = rse1.getObject(7).toString();
            patCat = rse1.getObject(6).toString();
 
 
 
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
            while (rse1211.next())
                rname = rse1211.getObject(1).toString();
            rcode = rse1211.getObject(2).toString();
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('receipt_no_seq')");
            while (rst.next())
                receiptNo = rst.getObject(1).toString();
 
            java.sql.Statement pss = connectDB.createStatement();
            java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
            while (rss.next())
                transNo = rss.getObject(1).toString();
 
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rsts = pss1.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            while (rsts.next())
                actCode = rsts.getObject(1).toString();
            actNames = rsts.getObject(2).toString();
 
            // java.sql.Statement stm3 = connectDB.createStatement();
            // java.sql.ResultSet rse3 = stm3.executeQuery("select code,activity from pb_activity where activity = 'Cash In Bank'");
 
            for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getModel().getValueAt(i,0) != null){
                    java.sql.Statement pss11 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = pss11.executeQuery("select activity_code,description,user from ac_ledger where service_type ='"+jTable1.getModel().getValueAt(i,0).toString()+"'");
                    while (rse121.next())
 
                        glCode = rse121.getObject(1).toString();
                    bankAcc = rse121.getObject(2).toString();
                    user = rse121.getObject(3).toString();
 
 
 
                    System.out.println(actNames);
 
 
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    //   for (int i = 0; i < jTable1.getRowCount(); i++){
 
                    pstmt.setString(1,jComboBox131.getSelectedItem().toString());
                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                    pstmt.setString(3,jTextField7.getText());
                    pstmt.setString(4,jComboBox4.getSelectedItem().toString());
                    pstmt.setString(5,transNo);
                    pstmt.setString(7,"");
                    pstmt.setString(6,jTextField21.getText());
                    pstmt.setString(8,jTextField52.getText());
                    pstmt.setString(9,jTextField41.getText());
 
                    pstmt.setString(10,jTextField511.getText());
                    pstmt.setString(11,"");
                    pstmt.setObject(13,jTable1.getValueAt(i,2).toString());
                    pstmt.setString(12,"00");
                    pstmt.setString(14,"'now'");
                    pstmt.setObject(15,actCode);
                    if (bankAcc.equals("Pharmacy")){
                        pstmt.setString(16,"Pharmacy");
                    }else{
                        pstmt.setString(16,bankAcc);
                    }
                    pstmt.setObject(17,jTable1.getValueAt(i,1).toString());
                    pstmt.setObject(18,"");
 
                    pstmt.setString(19,"false");
                    pstmt.setString(20,"Receipts");
                    pstmt.setString(21,"false");
                    pstmt.setString(22,actNames);
                    pstmt.setString(23,"");
                    pstmt.setString(24,user);
                    pstmt.setString(25,jTextField14.getText());
                    //                pstmt21.setString(25,jTextField81.getText());
                    pstmt.executeUpdate();
                    //  java.sql.PreparedStatement pstmt3 = connectDB.prepareStatement("update hp_patient_card set paid = true where patient_no = '"+jComboBox131.getSelectedItem()+"' and service = '"+jTable1.getValueAt(i,0).toString()+"'");
 
                    //     pstmt3.executeUpdate();
 
 
 
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_cash_collection values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?)");
                    pstmt2.setObject(1,glCode);
                    pstmt2.setObject(2,bankAcc);
                    pstmt2.setString(3,jComboBox131.getSelectedItem().toString());
                    if(jTextField1.getText().equals("")){
                        javax.swing.JOptionPane.showMessageDialog(this,"You must select patient No.","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }else{
                        pstmt2.setString(4,jTextField1.getText());
                    }
                    pstmt2.setString(5,jComboBox4.getSelectedItem().toString());
                    pstmt2.setString(6,jTextField21.getText());
                    pstmt2.setString(7,jTextField52.getText());
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,jTextField9.getText());
                    pstmt2.setString(10,rcode);
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,receiptNo);
                    pstmt2.setString(13,"");
                    if(jTextField52.getText().equals("")){
                        javax.swing.JOptionPane.showMessageDialog(this,"You must enter card details","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }else{
                        pstmt2.setString(14,jTextField52.getText());
                    }
                    pstmt2.setString(15,"Receipts");
                    pstmt2.setObject(16,jTable1.getValueAt(i,2).toString());
                    pstmt2.setString(17,"0.00");
                    pstmt2.setString(18,"'now'");
                    pstmt2.setString(19,""+transNo+"");
                    pstmt2.setString(20,"false");
                    pstmt2.setString(21,"false");
                    pstmt2.setString(22,"false");
                    pstmt2.setString(23,user);
                    pstmt2.setString(24,jTextField14.getText());
                    pstmt2.setString(25,jTextField81.getText());
 
                    pstmt2.executeUpdate();
 
 
 
 
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                }
            }
 
            ReceiptsPdf policy = new ReceiptsPdf();
            policy.ReceiptsPdf(connectDB, jComboBox131.getSelectedItem().toString());
 
            jLabel7.setForeground(java.awt.Color.blue);
            jLabel7.setText("Insert successful");
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
            jTextField3.setText("");
            jComboBox131.setSelectedItem(null);
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
 
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
 
        }
 */
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public java.lang.String getShiftNumber() {
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                shift_no = rset.getString(1);
                
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return shift_no;
        
    }
    
    private void resetTable11() {
        jTable11.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Service", "Quantity", "Price(KShs)", "Total", "Gl Account"
        }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, false
            };
            
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.setShowHorizontalLines(false);
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 5; i++) {
            column = jTable11.getColumnModel().getColumn(i);
            if (i == 0) {
                
                column.setPreferredWidth(300); //sport column is bigger
            } else {
                
                //if (i == 2) {
                column.setPreferredWidth(150);
                // }  else
                //column.setPreferredWidth(50);
                
            }
        }
        jTable11.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTable11InputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        
        jTable11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable11KeyReleased(evt);
            }
        });
        
        jScrollPane21.setViewportView(jTable11);
        
    }
    
    private void calculateTotals() {
        
    }
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        
        
        for (int i = 0; i < jTable11.getRowCount(); i++) {
            
            if (jTable11.getValueAt(i, 0) != null) {
                
                if (jTable11.getSelectedColumn() == 1) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                    
                    jTextField31.setText(java.lang.String.valueOf(resFloat));
                }else
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
            }
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        
        
        for (int i = 0; i < jTable11.getRowCount(); i++) {
            
            if (jTable11.getValueAt(i, 0) != null) {
                
                if (jTable11.getSelectedColumn() == 1) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                    
                    jTextField31.setText(java.lang.String.valueOf(resFloat));
                }else
                    
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        
        for (int i = 0; i < jTable111.getRowCount(); i++) {
            
            if (jTable111.getValueAt(i, 0) != null) {
                
                if (jTable111.getSelectedColumn() == 1) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i, 3).toString());
                    
                    jTextField311.setText(java.lang.String.valueOf(resFloat));
                }else
                    resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i, 3).toString());
                
                jTextField311.setText(java.lang.String.valueOf(resFloat));
            }
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable111.getRowCount(); i++) {
            
            if (jTable111.getValueAt(i, 0) != null) {
                
                if (jTable111.getSelectedColumn() == 1) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i, 3).toString());
                    
                    jTextField311.setText(java.lang.String.valueOf(resFloat));
                }else
                    
                    resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i, 3).toString());
                
                jTextField311.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
/*    public void run() {
 
        while (threadCheck == true) {
 
        try{
 
        java.sql.Statement stm1211 = connectDB.createStatement();
                    java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                    while (rse1211.next())
                      //  rname = rse1211.getObject(1).toString();
                        rcode = rse1211.getObject(2).toString();
         } catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
 
                System.out.println(sqlex.getMessage());
            }
        jButton11.setEnabled(true);
 
        if(jComboBox11.getSelectedItem().toString().equalsIgnoreCase("Pharmacy")){
            System.out.println("Found pharmacy");
            try {
                crset51.setCommand("select description,quantity,price as cost,amount,gl_code FROM hp_pharmacy WHERE patient_no ='"+jComboBox1311.getSelectedItem().toString()+"' AND paid = false");
 
                crset51.setConnectionSource(pConnDB);
 
                crset51.execute();
                System.out.println("Found pharmacy 2 ..");
                jTable3.setModel(new org.netbeans.lib.sql.models.TableModel(crset51, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("description", "Service", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Qty.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("cost", "Cost", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("amount", "Total", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl Account", false)
 
 
                }));
 
                jScrollPane21.setViewportView(jTable3);
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select code from pb_activity where activity ='"+jComboBox11.getSelectedItem()+"'");
                while (rset1.next()){
                    jTextField15.setText(rset1.getObject(1).toString());
                }
 
            } catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
 
                System.out.println(sqlex.getMessage());
            }
 
        }else{
            jScrollPane21.setViewportView(jTable11);
            System.out.println("Found pharmacy ............");
            cmbox = new javax.swing.JComboBox();
            crset21.setCommand("select service_type FROM pb_operating_parameters WHERE main_service = '"+jComboBox11.getSelectedItem()+"' UNION ALL select product FROM st_stock_prices WHERE department = '"+jComboBox11.getSelectedItem()+"'");
//            crset21.setConnectionSource(pConnDB);
 
            cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset21, "service_type", null, null, null));
            javax.swing.table.TableColumn s = this.jTable11.getColumn("Service");
            s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
            cmbox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmboxActionPerformed(evt);
                }
            });
            //}
        }
 
        try {
 
            Thread.currentThread().sleep(1000);
 
        } catch(java.lang.InterruptedException IntExec){ System.out.println(IntExec.getMessage());}
 
 
 
        }
 
 
 
        if (!threadCheck) {
 
            stop();
 
            Thread.currentThread().destroy();
        }
 
    }
    public void stop() {
 
        Thread.currentThread().stop();
 
 
    }*/
/*       double totals = 0.00;
 
        int i = 0;
 
        for (int j = 0; j < jTable1.getRowCount(); j++) {
 
            System.out.println(jTable1.getValueAt(j, 4).toString());
 
            if (Boolean.valueOf(jTable1.getValueAt(j, 4).toString()) == java.lang.Boolean.FALSE) {
 
                totals = totals + Double.parseDouble(jTable1.getValueAt(j, 2).toString()) + Double.parseDouble(jTable1.getValueAt(j, 3).toString());
 
                i++;
            }
        }
 
        jTextField6.setText(Double.toString(totals));
 
        jTextField2.setText(Integer.toString(i));
 
        System.out.println(totals);
 
        System.out.println(i);
 
        System.out.println("This table has changed");
 
    } */
    
    
    //        }
    
 /*   private void startRunning() {
  
        System.out.println("Starting to run Progress Thread");
  
        if (updatePatientList == null || !updatePatientList.isAlive()) {
  
            updatePatientList = new UpdatePatientList(this);
  
            updatePatientList.start();
  
            System.out.println("Progress Thread started");
  
        }
  
    }
  
    private void stopRunning() {
  
        System.out.println("Stopping run Progress Thread");
  
        updatePatientList.setStop(false);
  
  
    }
  
/*    class UpdatePatientList extends java.lang.Thread {
  
        java.lang.String selectedItem;
  
        int refreshWaitTime = 5000;
  
        public UpdatePatientList(java.awt.Component parent) {
  
        }
  
        public void setStop(boolean refreshstatus) {
  
            refreshStatus = refreshstatus;
  
        }
  
        public void run() {
  
            System.out.println("Loading Patient refresh thread.");
  
            while (refreshStatus) {
  
                try {
  
                    selectedItem = jComboBox1311.getSelectedItem().toString();
  
                    crset1.execute();
  
                    jComboBox1311.setSelectedItem(selectedItem);
  
                } catch (java.sql.SQLException sqlExec) {
  
                    javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
  
                }
  
                try {
  
                    java.lang.Thread.sleep(refreshWaitTime);
  
                } catch (java.lang.InterruptedException intExec) {
  
                    javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "Interruption Exception!");
                }
  
            }
  
        }
  
    }*/
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField14111;
    private javax.swing.JButton searchButton;
    private org.netbeans.lib.sql.NBCachedRowSet crset22;
    private javax.swing.JLabel jLabel411;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JTextField jTextField411;
    private javax.swing.JTextField jTextField521;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JComboBox jComboBox131;
    private javax.swing.JTextField jTextField52;
    private javax.swing.JComboBox jComboBox41;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JLabel jLabel5311;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet22;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JLabel jLabel2121;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jButton9;
    private javax.swing.JTextField jTextField311;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet21;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel jLabel3111;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField511;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField jTextField1;
    private org.netbeans.lib.sql.NBCachedRowSet crset20;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel8;
    private org.netbeans.lib.sql.NBCachedRowSet crset211;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton jButton421;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JPanel jPanel121;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JCheckBox jCheckBox3;
    private org.netbeans.lib.sql.NBCachedRowSet crset51;
    private javax.swing.JButton jButton522;
    private javax.swing.JTextField jTextField212;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox111;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JButton jButton6;
    private org.netbeans.lib.sql.NBCachedRowSet crset11;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel4112;
    private javax.swing.ButtonGroup buttonGroup1;
    private org.netbeans.lib.sql.NBCachedRowSet crset411;
    private org.netbeans.lib.sql.NBCachedRowSet crset511;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JLabel jLabel10;
    private org.netbeans.lib.sql.NBCachedRowSet crset5;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JPanel jPanel312;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JPanel jPanel311;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JButton jButton521;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JDialog jDialog31;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel jLabel313;
    private org.netbeans.lib.sql.NBCachedRowSet crset4;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JButton jButton411;
    private org.netbeans.lib.sql.NBCachedRowSet crset12;
    private javax.swing.JLabel jLabel5821111;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet31;
    private javax.swing.JSeparator jSeparator1111;
    private org.netbeans.lib.sql.NBCachedRowSet crset6;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet;
    private javax.swing.JPanel jPanel1;
    private org.netbeans.lib.sql.NBCachedRowSet crset7;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField81;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JButton jButton1111;
    private javax.swing.JTextField jTextField9;
    private org.netbeans.lib.sql.NBCachedRowSet crset21;
    private javax.swing.JButton jButton42;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JSeparator jSeparator111;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JTextField jTextField5111;
    private javax.swing.JButton jButton11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField3111;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet11;
    private javax.swing.JButton jButton51;
    private javax.swing.JLabel jLabel312;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JButton searchButton21;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel422;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JTextField jTextField61;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTable jTable111;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JLabel jLabel212;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JButton jButton252111;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet2;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel111;
    private org.netbeans.lib.sql.NBCachedRowSet crset8;
    private javax.swing.JTextField jTextField4111;
    private org.netbeans.lib.sql.NBCachedRowSet crset9;
    private javax.swing.JLabel jLabel213;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel111;
    private javax.swing.JButton jButton311;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JTextField jTextField113;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel1;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JButton jButton301111;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jSearchPanel22;
    private org.netbeans.lib.sql.NBCachedRowSet crset41;
    private javax.swing.JScrollPane jSearchScrollPane31;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton jButton611;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel jLabel422;
    private javax.swing.JButton jButton41;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton91;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JLabel jLabel53;
    private org.netbeans.lib.sql.NBCachedRowSet crset31;
    private javax.swing.JLabel jLabel66111;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jLabel582211;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JButton jButton921;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JDialog jSearchDialog31;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JButton jButton221;
    private org.netbeans.lib.sql.NBCachedRowSet crset13;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel1111;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField211;
    private javax.swing.JTextField jTextField82;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JTextField jTextField1611;
    private javax.swing.JTextField jTextField921;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane211;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton31;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JPanel jSearchPanel31;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JButton jButton61;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jSearchTable31;
    private javax.swing.JTextField jTextField151;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JButton jButton112;
    private javax.swing.JButton jButton4;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JButton jButton111;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JButton jButton22;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JTextField jTextField1121;
    private javax.swing.JButton dispose11;
    private javax.swing.JButton searchButton13;
    private com.afrisoftech.lib.DatePicker datePicker11;
    // End of variables declaration//GEN-END:variables
    
}
