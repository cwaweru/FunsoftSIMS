/*
 * Generated by JDBC Form Wizard
 *
 * AssetAllocation.java
 *
 * Created on Dec 08, 2004, 12:53 PM
*/

package com.afrisoftech.accounting;

/**
 *
 * @author  root
 * @version 
 */

public class AssetAllocation extends javax.swing.JFrame
{

     java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public AssetAllocation(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }

    private void initComponents() {//GEN-BEGIN:initComponents
        connectionSource1 = new org.netbeans.lib.sql.ConnectionSource();
        try {
            nBCachedRowSet1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        dataNavigator1 = new org.netbeans.lib.sql.DataNavigator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        connectionSource1.setDatabase("jdbc:postgresql://localhost:5432/medic_metro");
        connectionSource1.setDriver("org.postgresql.Driver");
        connectionSource1.setPassword("028d026bac029e1ad2d69b27a96d292854d43b349ed4419864", true);
        connectionSource1.setUsername("postgres");
        nBCachedRowSet1.setCommand("select * from ac_asset_allocation");
        nBCachedRowSet1.setConnectionSource(connectionSource1);
        try {
            nBCachedRowSet1.setTableName("ac_asset_allocation");
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }

        setTitle("Asset Allocation");
        dataNavigator1.setRowSet(nBCachedRowSet1);
        getContentPane().add(dataNavigator1, java.awt.BorderLayout.SOUTH);

        jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(nBCachedRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
            new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", true),
            new org.netbeans.lib.sql.models.TableModel.Column("asset_type", "Asset type", true),
            new org.netbeans.lib.sql.models.TableModel.Column("asset_category", "Asset category", true),
            new org.netbeans.lib.sql.models.TableModel.Column("description", "Description", true),
            new org.netbeans.lib.sql.models.TableModel.Column("cost", "Cost", true),
            new org.netbeans.lib.sql.models.TableModel.Column("investment_allow", "Investment allow", true),
            new org.netbeans.lib.sql.models.TableModel.Column("wear_tear_allow", "Wear tear allow", true),
            new org.netbeans.lib.sql.models.TableModel.Column("depreciation_rate", "Depreciation rate", true),
            new org.netbeans.lib.sql.models.TableModel.Column("allowance_rate", "Allowance rate", true),
            new org.netbeans.lib.sql.models.TableModel.Column("depreciation", "Depreciation", true),
            new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", true)
        }));
        jTable1.setSelectionModel(new org.netbeans.lib.sql.models.SQLListSelectionModel (nBCachedRowSet1));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(520, 361));
        setLocation((screenSize.width-520)/2,(screenSize.height-361)/2);
    }//GEN-END:initComponents

    public static void main(String[] args)
    {
//        new AssetAllocation().show();    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.netbeans.lib.sql.DataNavigator dataNavigator1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.netbeans.lib.sql.ConnectionSource connectionSource1;
    private org.netbeans.lib.sql.NBCachedRowSet nBCachedRowSet1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}

