/*
 * stockprices.java
 *
 * Created on November 5, 2002, 11:47 AM
 */

package com.afrisoftech.accounting;

/**
 *
 * @author  root
 */
public class RetunedClaimIntfr extends javax.swing.JInternalFrame {
    javax.swing.JComboBox cmbox2 =null;
    java.sql.Connection connectDB = null;
    
    com.afrisoftech.lib.DBObject dbObject;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public RetunedClaimIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset11 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new javax.swing.JTable();
        jButton52 = new javax.swing.JButton();
        try {
            searchRowSet2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new javax.swing.JTable();
        jButton521 = new javax.swing.JButton();
        try {
            searchRowSet21 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset21 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new javax.swing.JTable();
        dispose11 = new javax.swing.JButton();
        try {
            searchRowSet11 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new javax.swing.JTable();
        jButton522 = new javax.swing.JButton();
        try {
            searchRowSet22 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog221 = new javax.swing.JDialog();
        jSearchPanel221 = new javax.swing.JPanel();
        jTextField11321 = new javax.swing.JTextField();
        jSearchScrollPane221 = new javax.swing.JScrollPane();
        jSearchTable221 = new javax.swing.JTable();
        jButton5221 = new javax.swing.JButton();
        try {
            searchRowSet221 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel641 = new javax.swing.JPanel();
        searchButton2 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        datePicker11 = new com.afrisoftech.lib.DatePicker();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        datePicker111 = new com.afrisoftech.lib.DatePicker();
        jLabel13 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();

        crset1.setConnectionSource(pConnDB);
        crset11.setCommand("select distinct scheme_name from ac_schemes order by scheme_name ");
        crset11.setConnectionSource(pConnDB);
        crset2.setConnectionSource(pConnDB);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setMnemonic('l');
        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        searchRowSet2.setConnectionSource(pConnDB);
        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });

        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        searchRowSet21.setConnectionSource(pConnDB);
        crset21.setConnectionSource(pConnDB);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable11MouseClicked(evt);
                }
            });

            jSearchScrollPane11.setViewportView(jSearchTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

            dispose11.setMnemonic('l');
            dispose11.setText("Close");
            dispose11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dispose11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel11.add(dispose11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

            searchRowSet11.setConnectionSource(pConnDB);
            jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchDialog22.setModal(true);
            jSearchDialog22.setUndecorated(true);
            jSearchPanel22.setLayout(new java.awt.GridBagLayout());

            jSearchPanel22.setBorder(new javax.swing.border.EtchedBorder());
            jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField1132CaretUpdate(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 300.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jSearchPanel22.add(jTextField1132, gridBagConstraints);

            jSearchTable22.setToolTipText("Click on the target row to select the patient from the search.");
            jSearchTable22.setShowHorizontalLines(false);
            /*javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable2.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }
            */
            jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable22MouseClicked(evt);
                }
            });

            jSearchScrollPane22.setViewportView(jSearchTable22);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

            jButton522.setMnemonic('l');
            jButton522.setText("Close");
            jButton522.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton522ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel22.add(jButton522, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

            searchRowSet22.setConnectionSource(pConnDB);
            jSearchDialog221.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchDialog221.setModal(true);
            jSearchDialog221.setUndecorated(true);
            jSearchPanel221.setLayout(new java.awt.GridBagLayout());

            jSearchPanel221.setBorder(new javax.swing.border.EtchedBorder());
            jTextField11321.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField11321CaretUpdate(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 300.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jSearchPanel221.add(jTextField11321, gridBagConstraints);

            jSearchTable221.setToolTipText("Click on the target row to select the patient from the search.");
            jSearchTable221.setShowHorizontalLines(false);
            /*javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable2.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }
            */
            jSearchTable221.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable221MouseClicked(evt);
                }
            });

            jSearchScrollPane221.setViewportView(jSearchTable221);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel221.add(jSearchScrollPane221, gridBagConstraints);

            jButton5221.setMnemonic('l');
            jButton5221.setText("Close");
            jButton5221.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton5221ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel221.add(jButton5221, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog221.getContentPane().add(jSearchPanel221, gridBagConstraints);

            searchRowSet221.setConnectionSource(pConnDB);

            getContentPane().setLayout(new java.awt.GridBagLayout());

            setClosable(true);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Returned Invoices");
            setPreferredSize(new java.awt.Dimension(650, 700));
            setVisible(true);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.gridheight = 4;
            getContentPane().add(jLabel5, gridBagConstraints);

            jPanel6.setLayout(new java.awt.GridBagLayout());

            jPanel3.setLayout(new java.awt.GridBagLayout());

            jPanel3.setBorder(new javax.swing.border.TitledBorder(""));
            jPanel5.setLayout(new java.awt.GridBagLayout());

            jPanel3.add(jPanel5, new java.awt.GridBagConstraints());

            jButton1.setMnemonic('O');
            jButton1.setText("OK");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jButton1, gridBagConstraints);

            jButton3.setMnemonic('R');
            jButton3.setText("Refresh");
            jButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jButton3, gridBagConstraints);

            jButton4.setMnemonic('C');
            jButton4.setText("Close");
            jButton4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton4ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jButton4, gridBagConstraints);

            jButton5.setMnemonic('h');
            jButton5.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jButton5, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jPanel3, gridBagConstraints);

            jPanel2.setLayout(new java.awt.GridBagLayout());

            jTextField5.setEditable(false);
            jTextField5.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField5.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel2.add(jTextField5, gridBagConstraints);

            jCheckBox1.setSelected(true);
            jCheckBox1.setText("Disputed");
            buttonGroup1.add(jCheckBox1);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            jPanel2.add(jCheckBox1, gridBagConstraints);

            jCheckBox2.setText("Rejected");
            buttonGroup1.add(jCheckBox2);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            jPanel2.add(jCheckBox2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jPanel2, gridBagConstraints);

            jPanel1.setLayout(new java.awt.GridBagLayout());

            jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
            jLabel3.setText("Invoice No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel1.add(jLabel3, gridBagConstraints);

            jPanel4.setLayout(new java.awt.GridBagLayout());

            jPanel4.setBorder(new javax.swing.border.EtchedBorder());
            jTextField9.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jTextField9, gridBagConstraints);

            searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton.setToolTipText("Search");
            searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButtonActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel4.add(searchButton, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jPanel4, gridBagConstraints);

            jLabel1.setText("Scheme Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel1.add(jLabel1, gridBagConstraints);

            jPanel641.setLayout(new java.awt.GridBagLayout());

            jPanel641.setBorder(new javax.swing.border.EtchedBorder());
            jPanel641.setMinimumSize(new java.awt.Dimension(82, 37));
            searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton2.setToolTipText("Search");
            searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton2ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            jPanel641.add(searchButton2, gridBagConstraints);

            jTextField7.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel641.add(jTextField7, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel1.add(jPanel641, gridBagConstraints);

            jLabel7.setText(" Inv Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel1.add(jLabel7, gridBagConstraints);

            jTextField4.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel1.add(jTextField4, gridBagConstraints);

            jLabel4.setText("Patient Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel1.add(jLabel4, gridBagConstraints);

            jTextField1.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jTextField1, gridBagConstraints);

            jLabel9.setText("Patient No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel1.add(jLabel9, gridBagConstraints);

            jTextField10.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel1.add(jTextField10, gridBagConstraints);

            jLabel41.setText("Reason");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel1.add(jLabel41, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 50;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jTextField11, gridBagConstraints);

            jLabel8.setText("Date Received");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel1.add(jLabel8, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel1.add(datePicker11, gridBagConstraints);

            jLabel10.setText("Account No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel1.add(jLabel10, gridBagConstraints);

            jTextField8.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel1.add(jTextField8, gridBagConstraints);

            jTextField3.setEditable(false);
            jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel1.add(jTextField3, gridBagConstraints);

            jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14));
            jLabel6.setText("Balance");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel1.add(jLabel6, gridBagConstraints);

            jTextField2.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel1.add(jTextField2, gridBagConstraints);

            jLabel2.setText("Debit");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel1.add(jLabel2, gridBagConstraints);

            jLabel11.setText("Action Required");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jLabel11, gridBagConstraints);

            jLabel12.setText("Date Returned");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            jPanel1.add(jLabel12, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel1.add(datePicker111, gridBagConstraints);

            jLabel13.setText("UnderWriter");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jLabel13, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel1.add(jTextField6, gridBagConstraints);

            jLabel14.setText("Doc No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            jPanel1.add(jLabel14, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel1.add(jTextField13, gridBagConstraints);

            jComboBox1.setSelectedItem(null);
            // javax.swing.JComboBox strCmb;
            java.lang.Object[] strCmb = {"Doctors Signature Missing","Diagnosis Missing","Account Expired","Late Submission","Limit Exhausted","Medical Report","Inappropriate Treatment","Disease Exclusion","Treatment Exclusion","Non Member","Policy No. Missing","Others"};

            javax.swing.DefaultComboBoxModel comboModel = new javax.swing.DefaultComboBoxModel(strCmb);

            jComboBox1.setModel(comboModel);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel1.add(jComboBox1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 100.0;
            jPanel6.add(jPanel1, gridBagConstraints);

            jTabbedPane1.addTab("Returned Claims", jPanel6);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            setBounds(0, 0, 667, 482);
        }//GEN-END:initComponents

    private void jSearchTable221MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable221MouseClicked
       int i = 0;
        
        //this.jTextField31.setText("");
        
      //  jTextField81.setText("");
        
        String code = null;
       // jTextField13.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 2).toString());
       // jTextField101.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 1).toString());
     //   jTextField911.setText(jSearchTable221.getValueAt(jSearchTable221.getSelectedRow(), 0).toString());
       // jTextField61.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 3).toString());
        //jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        jSearchDialog221.dispose();
     /*   try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payee,account_no,dealer,debit,balance from ac_debtors where invoice_no ='"+jTextField911.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
               // jTextField71.setText(rset.getObject(1).toString());
                //jTextField81.setText(rset.getObject(2).toString());
                //jTextField41.setText(rset.getObject(3).toString());
                //jTextField21.setText(rset.getObject(4).toString());
                jTextField15.setText(rset.getObject(5).toString());
                
                
            }
            
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("SELECT not successful");
        }
      //  this.populateTable11(this.jTextField91.getText());
double floatDeduct = java.lang.Double.parseDouble(jTextField15.getText());
        double floatTotal = java.lang.Double.parseDouble(jTextField31.getText());
       
       double netPay = floatTotal + floatDeduct;
            this.jTextField14.setText(java.lang.String.valueOf(netPay));
        
      */
        jSearchDialog221.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jSearchTable221MouseClicked

    private void jButton5221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5221ActionPerformed
      jSearchDialog221.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton5221ActionPerformed

    private void jTextField11321CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11321CaretUpdate
       if(this.jTextField11321.getCaretPosition() < 2){
            System.out.print("Nothing");
        }else{
            try {
                // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
                searchRowSet221.execute("select invoice_no,admission_no as pat_no,item as name from ac_debtors  where invoice_no ILIKE '"+jTextField11321.getText()+"%' order by invoice_no");
                
                jSearchTable221.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet221, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("invoice_no", "Invoice No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("pat_no", "Patient No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false)
                }));
                jSearchScrollPane221.setViewportView(jSearchTable221);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField11321CaretUpdate
  
    private void searchButton221Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
     /*   java.awt.Point point = this.jTextField911.getLocationOnScreen();
        
        jSearchDialog221.setSize(400,200);
        
        jSearchDialog221.setLocation(point);
        
        jSearchDialog221.show();
      */
    }
    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        int i = 0;
        
        //this.jTextField31.setText("");
        
      //  jTextField81.setText("");
        
        String code = null;
   /*     jTextField13.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 2).toString());
     //   jTextField101.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 1).toString());
//        jTextField91.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
//        jTextField61.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 3).toString());
        //jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        jSearchDialog22.dispose();
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payee,account_no,dealer,debit,balance from ac_debtors where invoice_no ='"+jTextField91.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField71.setText(rset.getObject(1).toString());
                jTextField81.setText(rset.getObject(2).toString());
                jTextField41.setText(rset.getObject(3).toString());
                jTextField21.setText(rset.getObject(4).toString());
                jTextField31.setText(rset.getObject(5).toString());
                
                
            }
            
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        */
      //  this.populateTable11(this.jTextField91.getText());

        
        jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTable22MouseClicked
  /* private void populateTable11(java.lang.String patient_no1) {
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        //       this.jComboBox1.setSelectedItem(null);
        //       this.jTextField3.setText("");
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(invoice_no) FROM hp_patient_card WHERE invoice_no = '"+patient_no1+"'");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable11 = stmtTable1.executeQuery(" select date::date,initcap(service) as service,reference,dosage,debit from hp_patient_card where invoice_no = '"+patient_no1+"' AND debit >0 order by date::date");
                
                while (rsetTable11.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable11.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable11.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable11.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable11.getObject(4), i, 3);
                    jTable11.setValueAt(rsetTable11.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
                    
                    i++;
                    
                }
                
                
                
            }else{
                javax.swing.JOptionPane.showMessageDialog(this,"Cannot Retrive Data ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
    }
    
   */
    
    
    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        jSearchDialog22.dispose();// Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed

    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if(this.jTextField1132.getCaretPosition() < 2){
            System.out.print("Nothing");
        }else{
            try {
                // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
                searchRowSet22.execute("select invoice_no,admission_no as pat_no,item as name,date from ac_debtors  where invoice_no ILIKE '"+jTextField1132.getText()+"%' order by invoice_no");
                
                jSearchTable22.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet22, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("invoice_no", "Invoice No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("pat_no", "Patient No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false)
                }));
                jSearchScrollPane22.setViewportView(jSearchTable22);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1132CaretUpdate
    private void searchButton22Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
     //   java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
     //   jSearchDialog22.setSize(400,200);
        
      //  jSearchDialog22.setLocation(point);
        
        jSearchDialog22.show();
    }    
    private void dispose11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose11ActionPerformed
        jSearchDialog11.dispose(); // Add your handling code here:
    }//GEN-LAST:event_dispose11ActionPerformed
    
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        jTextField7.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 1).toString());
        jTextField4.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 2).toString());
        jTextField8.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
        
        jSearchDialog11.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton11aClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            
            try {
                
                searchRowSet11.execute("SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%' order by scheme_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
                
                jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Account no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("scheme_name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
                    
                }));
                jSearchTable11.setShowHorizontalLines(false);
                jSearchScrollPane11.setViewportView(jSearchTable11);
                
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    private void searchButton11aClicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog11.dispose();
        java.awt.Point point = this.jTextField7.getLocationOnScreen();
        
        jSearchDialog11.setSize(400,200);
        
        jSearchDialog11.setLocation(point);
        jSearchDialog11.show();
    }
        
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
  /*  private void populateTable2(java.lang.String patient_no) {
   
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
   
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(patient_no) FROM hp_patient_card WHERE patient_no = '"+patient_no+"' AND paid = false");
   
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
   
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date::date as date,service,dosage as quantity,debit-credit as amount FROM hp_patient_card WHERE patient_no ='"+jTextField91.getText()+"' and paid = false AND payment_mode = 'Scheme'");
   
                while (rsetTable1.next()) {
   
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable1.getObject(4), i, 3);
                    //   jTable11.setValueAt(rsetTable1.getObject(5), i, 4);
   
                    i++;
   
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
   
        } catch(java.sql.SQLException sqlExec) {
   
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
   
        }
   
   
    }
   
   */
    
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        String payer = null;
        String scm = null;
        String accno = null;
        String date = null;
        String cat = null;
        String code = null;
    /*    jTextField11.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        //jTextField21.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 2).toString());
        //jTextField71.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 3).toString());
     
        try {
            //
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select account_no, description,payer from hp_inpatient_register where patient_no ILIKE '"+jTextField91.getText()+"%'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
               payer = dbObject.getDBObject(rset.getObject(3), "-");
               scm = dbObject.getDBObject(rset.getObject(2), "-");
               accno =dbObject.getDBObject(rset.getObject(1), "-");
                jTextField21.setText(accno);
                jTextField71.setText(scm);
                jTextField41.setText(payer);
     
     
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
     
         try{
     
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rset11 = pss1.executeQuery("select account_no from ac_schemes where scheme_name = '"+jTextField71.getText()+"' and payer_name = '"+jTextField41.getText()+"'");
            while (rset11.next()){
                 code = dbObject.getDBObject(rset11.getObject(1), "-");
     
     
                jTextField10.setText(code);
               // jTextField51.setText(date);
               // jTextField61.setText(cat);
            }
            } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
     
        try{
     
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = pss1.executeQuery("select account_no,expiry_date,category from hp_inpatient_register where patient_no = '"+jTextField91.getText()+"'");
            while (rset1.next()){
                 cat = dbObject.getDBObject(rset1.getObject(3), "-");
               date = dbObject.getDBObject(rset1.getObject(2), null);
               accno =dbObject.getDBObject(rset1.getObject(1), "-");
     
     
                jTextField21.setText(accno);
                jTextField51.setText(date);
                jTextField61.setText(cat);
            }
     
            java.sql.Statement pss11 = connectDB.createStatement();
            java.sql.ResultSet rss11 = pss11.executeQuery("select round(sum(debit-credit),2) from hp_patient_card where patient_no = '"+jTextField91.getText()+"' AND paid = false");
            while (rss11.next()){
                // jTextField2.setText(rss1.getObject(1).toString());
                jTextField31.setText(rss11.getObject(1).toString());
            }
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
     
            System.out.println(sqlex.getMessage());
        }
         for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        //this.populateTable2(jTextField91.getText());
/*        try {
            crset21.setCommand("select date::date as date,service,dosage as quantity,debit as amount FROM hp_patient_card WHERE patient_no ='"+jTextField91.getText()+"' and paid = false AND payment_mode = 'Scheme'");// union select date_prescribed as date,description as service,quantity,amount,gl_code from hp_pharmacy WHERE patient_no ='"+jTextField9.getText()+"' and paid = false");
     
            crset21.setConnectionSource(pConnDB);
     
            crset21.execute();
     
            // crset2.setExecuteOnLoad(true);
            jTable11.setModel(new org.netbeans.lib.sql.models.TableModel(crset21, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false),
                new org.netbeans.lib.sql.models.TableModel.Column("service", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Quantity", false),
                new org.netbeans.lib.sql.models.TableModel.Column("amount", "Amount KShs.", false)
                //  new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl Code", false)
     
            }));
     
            //  tableModel = jTable1.getModel();
     
            jScrollPane11.setViewportView(jTable11);
     
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
     
            System.out.println(sqlex.getMessage());
        }
     
     */
        
        //  jSearchDialog21.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    private void searchButton21Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        //     java.awt.Point point = this.jTextField11.getLocationOnScreen();
        
        jSearchDialog21.setSize(400,200);
        
        //  jSearchDialog21.setLocation(point);
        
        jSearchDialog21.show();
    }
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        
        
        
        try {
            // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
            // searchRowSet21.execute("select trim(pr.patient_no) as pat_no,pr.first_name||' '||pr.second_name||' '||pr.last_name as name,pr.account_no AS staff_no,pr.description AS description from hp_inpatient_register pr,hp_admission ad  where pr.first_name||' '||pr.second_name||' '||pr.last_name ILIKE '"+jTextField1131.getText()+"%' AND pr.pay_mode = 'Scheme' and pr.patient_no = ad.patient_no and ad.discharge = true order by pr.first_name");
            searchRowSet21.execute("select patient_no as pat_no,second_name||' '|| first_name as name from hp_inpatient_register where patient_no ILIKE '"+jTextField1131.getText()+"%' AND pay_mode = 'Scheme' order by second_name");
            
            jSearchTable21.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet21, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("pat_no", "Patient No", false),
                new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                //   new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Member No.", false),
                //  new org.netbeans.lib.sql.models.TableModel.Column("description", "Scheme", false)
            }));
            jSearchScrollPane21.setViewportView(jSearchTable21);
            System.out.println("Cannot sort out");
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
    }
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        // if(this.jCheckBox2.isSelected()){
        if(this.jTextField113.getCaretPosition() < 2){
            System.out.print("Nothing");
        }else{
            try {
                // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
                searchRowSet2.execute("select invoice_no,admission_no as pat_no,item as name,date from ac_debtors  where invoice_no ILIKE '"+jTextField113.getText()+"%' and sent='t' and balance >0 order by invoice_no");
                
                jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("invoice_no", "Invoice No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("pat_no", "Patient No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false)
                }));
                jSearchScrollPane2.setViewportView(jSearchTable2);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        int i = 0;
        
        this.jTextField3.setText("");
        
        jTextField8.setText("");
        
        String code = null;
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField10.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField4.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        //jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        jSearchDialog2.dispose();
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payee,account_no,date,debit,balance from ac_debtors where invoice_no ='"+jTextField9.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField7.setText(rset.getObject(1).toString());
                jTextField8.setText(rset.getObject(2).toString());
                jTextField4.setText(rset.getObject(3).toString());
                jTextField2.setText(rset.getObject(4).toString());
                jTextField3.setText(rset.getObject(5).toString());
                
                
            }
            
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        this.populateTable1(this.jTextField9.getText());
     /*   try{
      
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rset11 = pss1.executeQuery("select account_no from ac_schemes where scheme_name = '"+jTextField7.getText()+"' and payer_name = '"+jTextField4.getText()+"'");
            while (rset11.next()){
                 code = dbObject.getDBObject(rset11.getObject(1), "-");
      
      
                jTextField8.setText(code);
               // jTextField51.setText(date);
               // jTextField61.setText(cat);
            }
            } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
      
        try{
            // java.sql.Statement pss = connectDB.createStatement();
            //  java.sql.ResultSet rss = pss.executeQuery("select first_name||' '||second_name||' '||last_name from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
            // while (rss.next()){
            //     jTextField1.setText(rss.getObject(1).toString());
            //}
      
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rss1 = pss1.executeQuery("select account_no,expiry_date,category from hp_patient_register where patient_no = '"+jTextField9.getText()+"'");
            while (rss1.next()){
                    jTextField2.setText(rss1.getObject(1).toString());
                jTextField5.setText(rss1.getObject(2).toString());
                jTextField6.setText(rss1.getObject(3).toString());
            }
      
            java.sql.Statement pss11 = connectDB.createStatement();
            java.sql.ResultSet rss11 = pss11.executeQuery("select sum(amount) from patient_bill where patient_no = '"+jTextField9.getText()+"'");
            while (rss11.next()){
                // jTextField2.setText(rss1.getObject(1).toString());
                jTextField3.setText(rss11.getObject(1).toString());
            }
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
      
            System.out.println(sqlex.getMessage());
        }
        /*
        try {
            crset2.setCommand("select date::date,service,dosage,debit FROM hp_patient_card WHERE patient_no ='"+jComboBox2.getSelectedItem()+"' and paid = false AND payment_mode = 'Scheme' AND scheme ='"+jComboBox1.getSelectedItem()+"' and debit >0");
      
            crset2.setConnectionSource(pConnDB);
      
            crset2.execute();
      
            // crset2.setExecuteOnLoad(true);
            jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false),
                new org.netbeans.lib.sql.models.TableModel.Column("service", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("dosage", "Quantity", false),
                new org.netbeans.lib.sql.models.TableModel.Column("debit", "Amount KShs.", false)
      
            }));
      
            //  tableModel = jTable1.getModel();
      
            jScrollPane1.setViewportView(jTable1);
      
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
      
            System.out.println(sqlex.getMessage());
        }
      */
        
        //   this.populateTable1(jTextField9.getText());
/*        try {
            crset2.setCommand("select trans_date::date as date,service,quantity,amount,gl_code FROM hp_patient_billing WHERE patient_no ='"+jTextField9.getText()+"' and paid = false AND payment_mode = 'Scheme' union select date_prescribed as date,description as service,quantity,amount,gl_code from hp_pharmacy WHERE patient_no ='"+jTextField9.getText()+"' and paid = false");
 
            crset2.setConnectionSource(pConnDB);
 
            crset2.execute();
 
            // crset2.setExecuteOnLoad(true);
            jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false),
                new org.netbeans.lib.sql.models.TableModel.Column("service", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Quantity", false),
                new org.netbeans.lib.sql.models.TableModel.Column("amount", "Amount KShs.", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl Code", false)
 
            }));
 
            //  tableModel = jTable1.getModel();
 
            jScrollPane1.setViewportView(jTable1);
 
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
 
            System.out.println(sqlex.getMessage());
        }
 */
        
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    private void populateTable1(java.lang.String patient_no) {
     /*   for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        //       this.jComboBox1.setSelectedItem(null);
        //       this.jTextField3.setText("");
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(invoice_no) FROM hp_patient_card WHERE invoice_no = '"+patient_no+"'");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery(" select date::date,initcap(service) as service,reference,dosage,debit from hp_patient_card where invoice_no = '"+patient_no+"' AND debit >0 order by date::date");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
                    
                    i++;
                    
                }
                
                
                
            }else{
                javax.swing.JOptionPane.showMessageDialog(this,"Cannot Retrive Data ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
       
      */ 
    }
    
      
    
    
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //       this.getContentPane().removeAll();
        //       this.initComponents();
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    //    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
       /* java.lang.Object selectedGuaran = cmbox2.getSelectedItem();
        int i = jTable1.getSelectedRow();
        
        if (selectedGuaran != null) {
        
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select item_code,units from st_stock_item where description = '"+selectedGuaran+"'");
                while (rs.next())
                    jTable1.setValueAt(rs.getObject(1),i,1);
                jTable1.setValueAt(rs.getObject(2),i,2);
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
        
            }
        */
    //}
    //   }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setVisible(false); // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String receiptNo = null;
        String actCode = null;
        String glCode = null;
        String bankAcc = null;
        String glCode1 = null;
        String bankAcc1 = null;
        String transNo = null;
        String payMode = null;
        String patCat = null;
        String patientAcc = null;
        String cardNo = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String actNames = null;
        String user = null;
        String actNames1 = null;
        String actCode1 = null;
        String invoiceNo = null;
        
        
        
        
        invoiceNo = this.jTextField9.getText();
        
        //  try {
        //      connectDB.setAutoCommit(false);
        
        //      java.sql.Statement stm1 = connectDB.createStatement();
        
        String type=null;
        if(this.jCheckBox1.isSelected())
        {
        type=this.jCheckBox1.getText();
        }else 
        { 
            type=this.jCheckBox2.getText();
        }
        try {
            connectDB.setAutoCommit(false);
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select current_user");
            while (rst11.next())
                //rst11.getObject(1).toString();
            
            //prescNo = rst11.getObject(1).toString();
            user = rst11.getObject(1).toString();
            
            
            //  java.sql.PreparedStatement pstmt311z = connectDB.prepareStatement("delete from ac_debtors WHERE staff_no = '"+jTable1.getModel().getValueAt(i,2).toString()+"'");
            //  pstmt311z.executeUpdate();
            
            
            
          /*  java.sql.PreparedStatement pstmt3w = connectDB.prepareStatement("delete from hp_patient_card  WHERE invoice_no = '"+jTextField9.getText()+"'");
            pstmt3w.executeUpdate();
            java.sql.Statement stm1 = connectDB.createStatement();
             for (int p = 0; p < jTable1.getRowCount(); p++){
                
                
                if (jTable1.getModel().getValueAt(p,0) != null){
                    java.sql.PreparedStatement pstmt31w = connectDB.prepareStatement("delete from ac_ledger WHERE transaction_no = '"+jTable1.getModel().getValueAt(p,2).toString()+"'");
                    pstmt31w.executeUpdate();
                }
             }
            
           */

            if(this.jTextField11.getText().equals(null) ||this.jTextField11.getText().equals("")){
                javax.swing.JOptionPane.showMessageDialog(this,"Please Indicate Action !!!","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }else{
           
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into pb_returned_claim values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
            pstmt.setObject(1,jTextField8.getText());
            pstmt.setString(2,jTextField10.getText());
            pstmt.setObject(3,jTextField1.getText());
            pstmt.setString(4,type);
            pstmt.setString(5,"");
            pstmt.setString(8,jTextField2.getText());
           
                pstmt.setString(7,jTextField8.getText());
            
            pstmt.setString(6,"");
            pstmt.setString(7,"");
            pstmt.setString(9,jComboBox1.getSelectedItem().toString());
            //pstmt.setString(10,transNo);
            pstmt.setString(10,jTextField11.getText());
            pstmt.setString(11,jTextField6.getText());
            //pstmt.setString(1,"Raise Invoice");
            pstmt.setString(12,jTextField13.getText());
            pstmt.setObject(13,"00");
            pstmt.setString(14,jTextField9.getText());
            //pstmt.setObject(15,jTable1.getValueAt(0,0).toString());
         
           // pstmt.setObject(16,jTextField10.getText());
            //pstmt.setString(17,actNames1);
             pstmt.setString(17,datePicker111.getDate().toString());
               pstmt.setString(19,datePicker11.getDate().toString());
               
                 pstmt.setString(20,"now");
            pstmt.setBoolean(16,false);
          
            pstmt.setString(15,user);
            //pstmt.setString(21,"");
            pstmt.setString(18,jTextField4.getText());
            //pstmt.setString(23,"false");
         
            pstmt.executeUpdate();
         
            
           java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE ac_debtors set reason = '"+type+"',sent = 'f' WHERE invoice_no = '"+jTextField9.getText()+"'");
            pstmt22.executeUpdate();/*
            if(jTextField9.getText().toString().toUpperCase().startsWith("O")){
            java.sql.PreparedStatement pstmt222 = connectDB.prepareStatement("UPDATE hp_patient_card set date = '"+jTextField6.getText()+"' WHERE invoice_no = '"+jTextField9.getText()+"'");
            pstmt222.executeUpdate();*/
        
            connectDB.commit();
            connectDB.setAutoCommit(true);
            //invoiceNo = jTextField9.getText();
            
       //     FinalInvoiceByinvPdf policy = new FinalInvoiceByinvPdf();
         //   policy.FinalInvoiceByinvPdf(connectDB,invoiceNo,invoiceNo);
            
            javax.swing.JOptionPane.showMessageDialog(this,"Data Inserted Successfully ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            
            jTextField3.setText("");
            }
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        // }// Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton searchButton;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JTable jSearchTable221;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton5221;
    private javax.swing.JTextField jTextField8;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet22;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JDialog jSearchDialog221;
    private javax.swing.JButton jButton3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JScrollPane jSearchScrollPane221;
    private javax.swing.JLabel jLabel9;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet2;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet221;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JLabel jLabel41;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet21;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField jTextField1;
    private com.afrisoftech.lib.DatePicker datePicker111;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JPanel jSearchPanel221;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton jButton52;
    private javax.swing.JLabel jLabel1;
    private org.netbeans.lib.sql.NBCachedRowSet crset21;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JDialog jSearchDialog21;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton522;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JPanel jPanel641;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JTextField jTextField1132;
    private org.netbeans.lib.sql.NBCachedRowSet crset11;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JLabel jLabel11;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextField11321;
    private javax.swing.ButtonGroup buttonGroup1;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton dispose11;
    private javax.swing.JLabel jLabel10;
    private com.afrisoftech.lib.DatePicker datePicker11;
    private javax.swing.JTable jSearchTable2;
    // End of variables declaration//GEN-END:variables
    
}
