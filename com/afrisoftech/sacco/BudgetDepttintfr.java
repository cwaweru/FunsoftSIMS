/*
 * stockprices.java
 *
 * Created on November 5, 2002, 11:47 AM
 */

package com.afrisoftech.sacco;

/**
 *
 * @author  root
 */
public class BudgetDepttintfr extends javax.swing.JInternalFrame {
     javax.swing.JComboBox cmbox2 =null;
      java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
  javax.swing.table.TableModel tableModel = null;
    
    
    public BudgetDepttintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }   
     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset4 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset6 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel11 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();

        jLabel51 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();

        crset1.setCommand("select department from departments order by department");
        crset1.setConnectionSource(pConnDB);
        crset4.setCommand("");
        crset4.setConnectionSource(pConnDB);
        crset6.setCommand("");
        crset6.setConnectionSource(pConnDB);
        crset3.setCommand("select distinct month from sectional_budget order by month");
        crset3.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Departmental Budget Estimates");
        setPreferredSize(new java.awt.Dimension(650, 700));
        setVisible(true);
        jButton1.setMnemonic('O');
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setMnemonic('E');
        jButton2.setText("EDIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton2, gridBagConstraints);

        jButton3.setMnemonic('R');
        jButton3.setText("REFRESH");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("CLOSE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jCheckBox1.setText("Yearly");
        buttonGroup1.add(jCheckBox1);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jCheckBox1, gridBagConstraints);

        jCheckBox2.setText("Monthly");
        buttonGroup1.add(jCheckBox2);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jCheckBox2, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        getContentPane().add(jLabel5, gridBagConstraints);

        jComboBox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset1, "department", null, null, null));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(jComboBox2, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(225, 240, 240));
        jPanel1.setBorder(new javax.swing.border.TitledBorder("View or Change Departmental Estimates Here"));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setShowHorizontalLines(false);

        /*       cmbox2 = new javax.swing.JComboBox();

        try {

            crset1.setConnectionSource(pConnDB);
            crset1.execute("select description from stock_item");

            cmbox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "description", null, null,null));

            javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Product");

            seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));

            cmbox2.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {

                    cmbox2ActionPerformed(evt);
                }
            });
        } catch(java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 1) {
                    column.setPreferredWidth(200);
                } else {
                    if (i == 2) {
                        column.setPreferredWidth(50);
                    }  else
                    column.setPreferredWidth(50);

                }
            }
        }
        */
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 20);
        jPanel2.add(jPanel1, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBackground(new java.awt.Color(225, 240, 240));
        jPanel11.setBorder(new javax.swing.border.TitledBorder(null, "View monthly estimates here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14)));
        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "GL code", "Decription", "Unit", "Qty", "Total Budget", "Actual KShs", "Prior Yr Budget", "Scaling %", "Comments"
            }
        ));
        jTable11.setShowHorizontalLines(false);
        /*try {
            crset4.setCommand("select activity,activity_code,sum(unit_cost) as unit_cost,sum(quantity) as quantity,sum(debit) as debit,sum(credit) as credit,comments,null as last_budget,null as actual,null as scaling,null as new_amount from sectional_budget GROUP BY activity,activity_code,comments");
            crset4.setConnectionSource(pConnDB);

            crset4.execute();

            // crset2.setExecuteOnLoad(true);
            jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset4, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("activity", "Activity", false),
                new org.netbeans.lib.sql.models.TableModel.Column("activity_code", "Activity Code", false),
                new org.netbeans.lib.sql.models.TableModel.Column("unit_cost", "Unit Cost", false),
                new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Quantity", false),
                new org.netbeans.lib.sql.models.TableModel.Column("debit", "Debit KShs", false),
                new org.netbeans.lib.sql.models.TableModel.Column("credit", "Credit KShs", false),
                new org.netbeans.lib.sql.models.TableModel.Column("last_budget", "Prior Yr Budget", false),
                new org.netbeans.lib.sql.models.TableModel.Column("actual", "Actual", false),
                new org.netbeans.lib.sql.models.TableModel.Column("scaling", "Scaling %", false),
                new org.netbeans.lib.sql.models.TableModel.Column("new_amount", "New Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("comments", "Comments", true),

            }));

            //   tableModel = jTable1.getModel();

            //  tableModel.addTableModelListener(new javax.swing.event.TableModelListener(){
                //  public void tableChanged(javax.swing.event.TableModelEvent evt){
                    // tableModelTableChanged(evt);
                    //}
                // });

            jScrollPane1.setViewportView(jTable1);
            // }
        // }

    } catch(java.sql.SQLException sqlex){
        javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

        System.out.println(sqlex.getMessage());

    }

    /*       cmbox2 = new javax.swing.JComboBox();

    try {

        crset1.setConnectionSource(pConnDB);
        crset1.execute("select description from stock_item");

        cmbox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "description", null, null,null));

        javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Product");

        seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));

        cmbox2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                cmbox2ActionPerformed(evt);
            }
        });
    } catch(java.sql.SQLException sqlExec) {

        javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

    }

    javax.swing.table.TableColumn column = null;
    for (int i = 0; i < 4; i++) {
        column = jTable1.getColumnModel().getColumn(i);
        if (i == 0) {

            column.setPreferredWidth(300); //sport column is bigger
        } else {
            if (i == 1) {
                column.setPreferredWidth(200);
            } else {
                if (i == 2) {
                    column.setPreferredWidth(50);
                }  else
                column.setPreferredWidth(50);

            }
        }
    }
    */
    jScrollPane11.setViewportView(jTable11);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
    jPanel11.add(jScrollPane11, gridBagConstraints);

    jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel51.setText("Month");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel11.add(jLabel51, gridBagConstraints);

    jComboBox11.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "month", null, null, null));
    jComboBox11.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox11ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel11.add(jComboBox11, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 5.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 20);
    jPanel2.add(jPanel11, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    getContentPane().add(jPanel2, gridBagConstraints);

    setBounds(0, 0, 701, 600);
    }//GEN-END:initComponents

    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed
        try {
       
        
        crset6.setCommand("select activity,activity_code,sum(unit_cost) as unit_cost,sum(quantity) as quantity,sum(debit) as debit,sum(credit) as credit,null as comments,null as last_budget from sectional_budget where department ='"+jComboBox2.getSelectedItem().toString()+"' AND month = '"+jComboBox11.getSelectedItem().toString()+"' group by activity,activity_code");
        crset6.setConnectionSource(pConnDB);
    
       // try {
            crset6.execute();
        
       // crset2.setExecuteOnLoad(true);
        jTable11.setModel(new org.netbeans.lib.sql.models.TableModel(crset6, new org.netbeans.lib.sql.models.TableModel.Column[] {
           new org.netbeans.lib.sql.models.TableModel.Column("activity", "Activity", false),
           new org.netbeans.lib.sql.models.TableModel.Column("activity_code", "Activity Code", false),
           new org.netbeans.lib.sql.models.TableModel.Column("unit_cost", "Unit Cost", false),
           new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Quantity", false),
            new org.netbeans.lib.sql.models.TableModel.Column("debit", "Debit", false),
           new org.netbeans.lib.sql.models.TableModel.Column("credit", "Credit", false),
           // new org.netbeans.lib.sql.models.TableModel.Column("transaction_no", "Prior Yr", false),
            new org.netbeans.lib.sql.models.TableModel.Column("last_budget", "Last Budget Qty", false),
          new org.netbeans.lib.sql.models.TableModel.Column("comments", "Comments", true),
        
            }));
            
          //  tableModel = jTable1.getModel();
            
          //  tableModel.addTableModelListener(new javax.swing.event.TableModelListener(){
               //  public void tableChanged(javax.swing.event.TableModelEvent evt){
                    // tableModelTableChanged(evt);
                 //}
      // });
        
        jScrollPane11.setViewportView(jTable11);
               // }
       // }
        
       } catch(java.sql.SQLException sqlex){
          javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
 
        System.out.println(sqlex.getMessage());
                
        } // Add your handling code here:
    }//GEN-LAST:event_jComboBox11ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
           jPanel11.setVisible(false); 
         
        this.invalidate();
        //this.jTable1.hide();
        //this.jTable12.hide();
       jPanel1.grabFocus();
        this.jPanel1.setVisible(true);
        this.jScrollPane1.setViewportView(jTable1);
        this.validate(); 
         
         try {
       
        
        crset4.setCommand("select activity,activity_code,sum(unit_cost) as unit_cost,sum(quantity) as quantity,sum(debit) as debit,sum(credit) as credit,null as comments,null as last_budget from sectional_budget where department ='"+jComboBox2.getSelectedItem().toString()+"' group by activity,activity_code");
         crset4.setConnectionSource(pConnDB);
    
       // try {
            crset4.execute();
        
       // crset2.setExecuteOnLoad(true);
        jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset4, new org.netbeans.lib.sql.models.TableModel.Column[] {
           new org.netbeans.lib.sql.models.TableModel.Column("activity", "Activity", false),
           new org.netbeans.lib.sql.models.TableModel.Column("activity_code", "Activity Code", false),
           new org.netbeans.lib.sql.models.TableModel.Column("unit_cost", "Unit Cost", false),
           new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Quantity", false),
            new org.netbeans.lib.sql.models.TableModel.Column("debit", "Debit", false),
           new org.netbeans.lib.sql.models.TableModel.Column("credit", "Credit", false),
           // new org.netbeans.lib.sql.models.TableModel.Column("transaction_no", "Prior Yr", false),
            new org.netbeans.lib.sql.models.TableModel.Column("last_budget", "Last Budget Qty", false),
          new org.netbeans.lib.sql.models.TableModel.Column("comments", "Comments", true),
        
            }));
            
            tableModel = jTable1.getModel();
            
          //  tableModel.addTableModelListener(new javax.swing.event.TableModelListener(){
               //  public void tableChanged(javax.swing.event.TableModelEvent evt){
                    // tableModelTableChanged(evt);
                 //}
      // });
        
        jScrollPane1.setViewportView(jTable1);
               // }
       // }
        
       } catch(java.sql.SQLException sqlex){
          javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
 
        System.out.println(sqlex.getMessage());
                
        } // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
          this.jPanel1.setVisible(false);
        this.invalidate();
        this.jPanel11.grabFocus();
        this.jPanel11.setVisible(true);
        this.jScrollPane11.setViewportView(jTable11);
        
        this.validate(); // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
   /*           jButton1.setEnabled(true);
      // this.jLabel7.setText("");
       
       int rowsNo = 0; 
       
       try {
       
        
        crset4.setCommand("select activity,activity_code,unit_cost,quantity,debit,credit,comments,null as last_budget from sectional_budget where department ='"+jComboBox2.getSelectedItem().toString()+"'");
        crset4.setConnectionSource(pConnDB);
    
       // try {
            crset4.execute();
        
       // crset2.setExecuteOnLoad(true);
        jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset4, new org.netbeans.lib.sql.models.TableModel.Column[] {
           new org.netbeans.lib.sql.models.TableModel.Column("activity", "Activity", false),
           new org.netbeans.lib.sql.models.TableModel.Column("activity_code", "Activity Code", false),
           new org.netbeans.lib.sql.models.TableModel.Column("unit_cost", "Unit Cost", false),
           new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Quantity", false),
            new org.netbeans.lib.sql.models.TableModel.Column("debit", "Debit", false),
           new org.netbeans.lib.sql.models.TableModel.Column("credit", "Credit", false),
           // new org.netbeans.lib.sql.models.TableModel.Column("transaction_no", "Prior Yr", false),
            new org.netbeans.lib.sql.models.TableModel.Column("last_budget", "Last Budget Qty", false),
          new org.netbeans.lib.sql.models.TableModel.Column("comments", "Comments", true),
        
            }));
            
            tableModel = jTable1.getModel();
            
          //  tableModel.addTableModelListener(new javax.swing.event.TableModelListener(){
               //  public void tableChanged(javax.swing.event.TableModelEvent evt){
                    // tableModelTableChanged(evt);
                 //}
      // });
        
        jScrollPane1.setViewportView(jTable1);
               // }
       // }
        
       } catch(java.sql.SQLException sqlex){
          javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
 
        System.out.println(sqlex.getMessage());
                
        }
    */
    // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
 /* private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
      int i = jTable1.getSelectedRow();
      java.lang.Object res_cmbox2 = cmbox2.getSelectedItem();
 
      try {
             java.sql.Statement pstmt = connectDB.createStatement();
          java.sql.ResultSet rs = pstmt.executeQuery("select item_code from stock_item where description = '"+cmbox2.getSelectedItem()+"'");
          while (rs.next())
            jTable1.setValueAt(rs.getObject(1),i,1);

      } catch(java.sql.SQLException sqlex){
        System.out.println(sqlex.getMessage());
 }
 }
  */
 
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       setVisible(false); // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         // javax.swing.JFrame bank = new Stockprices(connectDB, pConnDB);
        //  bank.setVisible(true);// Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try {
             java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into  values( ?, initcap(?),?,?)");
              for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getModel().getValueAt(i,0) != null){
                 
                pstmt.setObject(1,jComboBox2.getSelectedItem().toString());
                
                pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                pstmt.setObject(3,jTable1.getValueAt(i,1).toString());
                pstmt.setObject(4,jTable1.getValueAt(i,2).toString());
                pstmt.setObject(5,jTable1.getValueAt(i,3).toString());
                pstmt.setObject(6,jTable1.getValueAt(i,4).toString());
                pstmt.setObject(7,jTable1.getValueAt(i,5).toString());
                pstmt.setObject(8,jTable1.getValueAt(i,6).toString());
                pstmt.setObject(9,jTable1.getValueAt(i,7).toString());
               
            pstmt.executeUpdate();
              
            jLabel5.setForeground(java.awt.Color.blue);
            jLabel5.setText("Insert successful");

                }
              }
        
        }   catch(java.sql.SQLException sq){
              javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());
            }
          // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JPanel jPanel2;
    private org.netbeans.lib.sql.NBCachedRowSet crset4;
    private javax.swing.JButton jButton3;
    private javax.swing.JTable jTable11;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JScrollPane jScrollPane11;
    private org.netbeans.lib.sql.NBCachedRowSet crset6;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jPanel1;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
    
}
