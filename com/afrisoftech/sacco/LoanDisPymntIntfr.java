/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.sacco;

/**
 *
 * @author  root
 */
public class LoanDisPymntIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    private  javax.swing.JComboBox cmbox = new javax.swing.JComboBox();
    
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    private java.lang.String shift_no = null;
    public LoanDisPymntIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        jTextField81.setText(System.getProperty("cashpoint"));
        
        jTextField14.setText(getShiftNumber());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset21 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new javax.swing.JTable();
        jButton52 = new javax.swing.JButton();
        try {
            searchRowSet2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        try {
            searchRowSet1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new javax.swing.JTable();
        jButton522 = new javax.swing.JButton();
        try {
            searchRowSet22 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel531 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel6 = new javax.swing.JLabel();
        jList1 = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel422 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jTextField9 = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField3 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel7 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton12 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField81 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();

        crset2.setCommand("select distinct bank_acc_no from bank_branches order by bank_acc_no");
        crset2.setConnectionSource(pConnDB);
        crset21.setCommand("select distinct payment_mode from pb_paymentmodes ORDER BY payment_mode");
        crset21.setConnectionSource(pConnDB);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        searchRowSet2.setConnectionSource(pConnDB);
        crset1.setConnectionSource(pConnDB);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField1111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        searchRowSet1.setConnectionSource(pConnDB);
        jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog22.setModal(true);
        jSearchDialog22.setUndecorated(true);
        jSearchPanel22.setLayout(new java.awt.GridBagLayout());

        jSearchPanel22.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1132.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1132ActionPerformed(evt);
            }
        });

        jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1132CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel22.add(jTextField1132, gridBagConstraints);

        jSearchTable22.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable22.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable22MouseClicked(evt);
            }
        });

        jSearchScrollPane22.setViewportView(jSearchTable22);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

        jButton522.setText("Close");
        jButton522.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton522ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel22.add(jButton522, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

        searchRowSet22.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Loan Disbursment");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jTextField7.setEditable(false);
        jTextField7.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField7.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        getContentPane().add(jTextField7, gridBagConstraints);

        jTextField8.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField8.setPreferredSize(new java.awt.Dimension(0, 0));
        getContentPane().add(jTextField8, new java.awt.GridBagConstraints());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.TitledBorder("Enter payee details"));
        jLabel1.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("GL Account");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextField11.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField11, gridBagConstraints);

        jLabel9.setText("TSC No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel531.setText("Payment Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel531, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField31, gridBagConstraints);

        jComboBox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset21, "payment_mode", null, null, null));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jComboBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(datePicker1, gridBagConstraints);

        jLabel6.setText("Cheque Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jList1, gridBagConstraints);

        jLabel4.setText("Cheque Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBorder(new javax.swing.border.EtchedBorder());
        jTextField111.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField111, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel42, gridBagConstraints);

        jTextField1.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField1.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jTextField1, gridBagConstraints);

        jPanel422.setLayout(new java.awt.GridBagLayout());

        jPanel422.setBorder(new javax.swing.border.EtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel422.add(jTextField92, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel422.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel422, gridBagConstraints);

        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jTextField9, gridBagConstraints);

        jLabel91.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel91, gridBagConstraints);

        jLabel11.setText("Member No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel3.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Enter payment details here."));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel5.setText("Bank Acct No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel5, gridBagConstraints);

        jLabel51.setText("Account Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel51, gridBagConstraints);

        jTextField4.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jTextField4, gridBagConstraints);

        jLabel52.setText("Bank Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel52, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jTextField5, gridBagConstraints);

        jComboBox2.setBackground(new java.awt.Color(204, 204, 204));
        jComboBox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset2, "bank_acc_no", null, null, null));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jComboBox2, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("00");
        jTextField3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField3, gridBagConstraints);

        jLabel53.setText("Net Amt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel53, gridBagConstraints);

        jLabel10.setText("Deductions");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel4.add(jLabel10, gridBagConstraints);

        jTextField10.setEditable(false);
        jTextField10.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField10.setText("00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField10, gridBagConstraints);

        jLabel12.setText("Gross Amt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jLabel12, gridBagConstraints);

        jTextField12.setEditable(false);
        jTextField12.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField12.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField12, gridBagConstraints);

        jTextField2.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField2.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(jTextField2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Loan No.", "Reason", "Amt", "Amt. Due", "Amt. Paid", "Pay ?", "Interest", "Gl Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(false);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jPanel5.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel2.add(jPanel5, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Deduction Type", "Amount", "Creditor", "Debtor", "Account No.", "Gl"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable2KeyReleased(evt);
            }
        });

        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        jPanel9.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel2.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 80.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jSeparator1, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(new javax.swing.border.TitledBorder(""));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('p');
        jButton1.setText("Ok&Print");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton1, gridBagConstraints);

        jButton5.setMnemonic('R');
        jButton5.setText("Reprint");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton5, gridBagConstraints);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/note[1].gif")));
        jButton2.setMnemonic('E');
        jButton2.setText("Edit");
        jButton2.setToolTipText("Click here to edit data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton2, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton4, gridBagConstraints);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton12.setMnemonic('O');
        jButton12.setText("Ok");
        jButton12.setToolTipText("Click here enter data");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jPanel7, gridBagConstraints);

        jTabbedPane1.addTab("Loans Vouchers", jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel10.setBorder(new javax.swing.border.TitledBorder(""));
        jLabel3.setText("Cash Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jLabel3, gridBagConstraints);

        jTextField81.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jTextField81, gridBagConstraints);

        jLabel8.setText("Shift No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jLabel8, gridBagConstraints);

        jTextField14.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel10.add(jTextField14, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel10, gridBagConstraints);

        setBounds(0, 0, 697, 464);
    }//GEN-END:initComponents
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        cmbox22MouseClicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void cmbox22MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTextField92.getLocationOnScreen();
        jSearchDialog22.setSize(400,200);
        jSearchDialog22.setLocation(point);
        jSearchDialog22.show();
    }
    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        this.jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed
    
    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        jTextField92.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
        
        this.jSearchDialog22.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable22MouseClicked
    
    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if(jTextField1132.getCaretPosition() > 2){
            try {
                searchRowSet22.execute("select chq_no FROM pb_documents_register WHERE chq_no  ilike '"+jTextField1132.getText()+"%' and used = 'false' and doc_no = '"+jTextField11.getText()+"' order by chq_no");
                
                jSearchTable22.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet22, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("chq_no", "Cheque No", false),
                    // new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Acc No.", false)
                    //  new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
                }));
                jSearchScrollPane22.setViewportView(jSearchTable22);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }    // Add your handling code here:
    }//GEN-LAST:event_jTextField1132CaretUpdate
    
    private void jTextField1132ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1132ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1132ActionPerformed
    
    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField10.getText());
        
        if (jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());
            
            
            double resVal = floatCol2;
            
            
            jTable2.setValueAt(new java.lang.Float(resVal), jTable2.getSelectedRow(), 1);
            
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                
                if (jTable2.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable2.getValueAt(i, 1).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            this.tableModelTableChanged2();
        }        // Add your handling code here:
    }//GEN-LAST:event_jTable2KeyReleased
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    public void tableModelTableChanged2() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        double netPay = 0.00;
        double floatDeduct = java.lang.Double.parseDouble(jTextField10.getText());
        double floatTotal = java.lang.Double.parseDouble(jTextField12.getText());
        double vat = java.lang.Double.parseDouble(jTextField2.getText());
        
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            
            if (jTable2.getModel().getValueAt(i, 0) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable2.getModel().getValueAt(i, 1).toString());
                
                jTextField10.setText(java.lang.String.valueOf(resFloat+vat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable2.getModel().getValueAt(i, 1).toString());
                
                jTextField10.setText(java.lang.String.valueOf(resFloat+vat));
                
            }
            floatDeduct = java.lang.Double.parseDouble(jTextField10.getText());
            netPay = floatTotal - floatDeduct;
            this.jTextField3.setText(java.lang.String.valueOf(netPay));
        }
    }
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable2.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable2.getSelectedRow(), 3);
        jTable2.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable2.getSelectedRow(), 4);
        this.jSearchDialog.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() > 2){
            try {
                searchRowSet1.execute("select scheme_name,account_no FROM ac_schemes WHERE scheme_name  ilike '"+jTextField1111.getText()+"%' order by scheme_name");
                
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("scheme_name", "Scheme_name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Acc No.", false)
                    //  new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
                }));
                jSearchScrollPane.setViewportView(jSearchTable);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        if (jTable2.getSelectedColumn() == 3) {
            
            this.cmbox1MouseClicked();
        }    // Add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked
    private void cmbox1MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane2.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.show();
    }        private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable2.getSelectedRow();
        boolean Gl = false;
        if (selectedGuaran != null) {
            try {
                
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT income FROM pb_statutory WHERE description = '"+cmbox.getSelectedItem().toString()+"'");
                
                while (rsetTable1.next())
                    Gl = rsetTable1.getBoolean(1);
                if(Gl != true){
                    java.sql.Statement stmtTable11 = connectDB.createStatement();
                    
                    java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT creditor,acc_no FROM pb_statutory WHERE description = '"+cmbox.getSelectedItem().toString()+"'");
                    
                    while (rsetTable11.next()) {
                        
                        System.out.println("Working at table row "+i);
                        jTable2.setValueAt(rsetTable11.getObject(1), i, 2);
                        jTable2.setValueAt(rsetTable11.getObject(2), i, 4);
                        // jTable11.setValueAt(rsetTable11.getObject(5), i, 5);
                        ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                        
                        
                        //                i = i + i;
                        //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    }
                }else{
                    java.sql.Statement stmtTable11 = connectDB.createStatement();
                    
                    java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT creditor,acc_no,gl_code FROM pb_statutory WHERE description = '"+cmbox.getSelectedItem().toString()+"'");
                    
                    while (rsetTable11.next()) {
                        
                        System.out.println("Working at table row "+i);
                        jTable2.setValueAt(rsetTable11.getObject(1), i, 2);
                        jTable2.setValueAt(rsetTable11.getObject(2), i, 4);
                        jTable2.setValueAt(rsetTable11.getObject(3), i, 5);
                        ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                        
                        
                        //                i = i + i;
                        //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    }
                }
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
            
        }
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        double floatCol21 = 00;
        double floatCol5 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
        //double Vat = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        double Gross = java.lang.Double.parseDouble(this.jTextField12.getText());
        
        double Vat = java.lang.Double.parseDouble(this.jTextField10.getText());
        double Total = new com.afrisoftech.sys.Format2Number().Format2Number(jTextField3.getText()).doubleValue();
        
        if (jTable1.getSelectedColumn() == 5) {
            if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 5).toString()) == java.lang.Boolean.TRUE) {
                
                
                if (jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()) != null) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), 5) != null){
                        jTable1.setValueAt(new java.lang.Float(floatCol2), jTable1.getSelectedRow(), 4);
                        this.jTextField3.setText(java.lang.String.valueOf(floatCol2-floatCol5+Total));
                        this.jTextField10.setText(java.lang.String.valueOf(floatCol5+Vat));
                        this.jTextField12.setText(java.lang.String.valueOf(floatCol2+Gross));
                        this.jTextField2.setText(java.lang.String.valueOf(floatCol5+Vat));
                    }
                }
                
                
            }else{
                if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 5).toString()) == java.lang.Boolean.FALSE) {
                    
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()) != null) {
                        // if (jTable1.getValueAt(jTable1.getSelectedRow(), 4) == null){
                        ///this.tableModelTableChanged1();
                        jTable1.setValueAt(new java.lang.Float(floatCol21), jTable1.getSelectedRow(), 4);
                        this.jTextField3.setText(java.lang.String.valueOf(Total-floatCol2+floatCol5));
                        this.jTextField10.setText(java.lang.String.valueOf(Vat-floatCol5));
                        this.jTextField12.setText(java.lang.String.valueOf(Gross-floatCol2));
                        this.jTextField2.setText(java.lang.String.valueOf(Vat-floatCol5));
                    }
                }
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        
        java.sql.Connection con;
        String vouchNo = null;
        String user = null;
        String invoiceNo = null;
        String rcAcc = null;
        String Code = null;
        String actNames1 = null;
        String actCode1 = null;
        String rNo = null;
         String KRA = null;
        String Payer = null;
        String Vats = null;
        String glAcc = null;
        String Activity = null;
        String userName = null;
        String descriptions = null;
        String bal = null;
        double Deductions = java.lang.Double.parseDouble(jTextField10.getText());
        double Net = java.lang.Double.parseDouble(jTextField3.getText());
        
        try {
            connectDB.setAutoCommit(false);
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq'),current_user");
            while (rst.next())
                rst.getObject(1).toString();
            
            String transNo = rst.getObject(1).toString();
            user = rst.getObject(2).toString();
            
            java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq'),5,0)");
            while (rs22.next())
                vouchNo = rs22.getObject(1).toString();
            java.sql.Statement pss11 = connectDB.createStatement();
            java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
            while (rsts1.next())
                actCode1 = rsts1.getObject(1).toString();
            actNames1 = rsts1.getObject(2).toString();
            user = rsts1.getObject(3).toString();
            
             java.sql.Statement ps221 = connectDB.createStatement();
                java.sql.ResultSet rs221 = ps221.executeQuery("select supplier_name,code from st_suppliers where category ilike 'KRA%'");
                while (rs221.next())
                    KRA = rs221.getObject(1).toString();
                Code = rs221.getObject(2).toString();
                
                
            java.sql.Statement pss11q = connectDB.createStatement();
            java.sql.ResultSet rsts1q = pss11q.executeQuery("select code,activity from pb_activity where activity_category ='RC'");
            while (rsts1q.next())
                rcAcc = rsts1q.getObject(1).toString();
         for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getModel().getValueAt(i,4) != null){
                    if(java.lang.Double.parseDouble(jTable1.getValueAt(i,4).toString()) > 0){
                       
                    java.sql.Statement ps221X = connectDB.createStatement();
                java.sql.ResultSet rs221X = ps221X.executeQuery("select balance from ac_deposits where invoice_no ilike '"+jTable1.getModel().getValueAt(i,0)+"'and account_no ilike '"+jTextField111.getText()+"' and balance > 0 and paid = 'false'");
               
                
                while (rs221X.next())
                  bal = rs221X.getObject(1).toString();
                
                        
                    java.sql.PreparedStatement pstmt1d = connectDB.prepareStatement("insert into ac_deposits2 values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    pstmt1d.setObject(1,jTable1.getValueAt(i,7).toString());
                    pstmt1d.setString(2,jTextField9.getText());
                    pstmt1d.setString(3,jTextField31.getText());
                    pstmt1d.setString(4,jTextField111.getText());
                    pstmt1d.setString(5,jTextField9.getText());
                    pstmt1d.setObject(6,jTable1.getValueAt(i,1).toString());
                    pstmt1d.setString(7,jTextField111.getText());
                    pstmt1d.setString(8,vouchNo);
                    pstmt1d.setString(9,jTextField92.getText());
                    pstmt1d.setString(10,"");
                    pstmt1d.setString(11,transNo);
                    pstmt1d.setString(12,"Disbursement");
                    pstmt1d.setObject(13,jTable1.getValueAt(i,4).toString());
                    pstmt1d.setString(14,"0.00");
                    pstmt1d.setString(15,datePicker1.getDate().toString());
                    pstmt1d.setObject(16,jTable1.getValueAt(i,0).toString());
                    pstmt1d.setString(17,jTextField31.getText());
                    pstmt1d.setBoolean(18,true);
                    pstmt1d.setBoolean(19,false);
                    pstmt1d.setString(20,user);
                    pstmt1d.setString(21,"");
                    pstmt1d.setString(22,bal);
                    pstmt1d.setBoolean(23,true);
                    pstmt1d.setString(24,"0.00");
                    pstmt1d.setObject(25,jTable1.getValueAt(i,0).toString());
                    pstmt1d.setString(26,"now");
                    pstmt1d.setString(27,"false");
                    pstmt1d.setString(28,"0.00");
                    pstmt1d.setString(29,null);
                    pstmt1d.setString(30,"");
                    pstmt1d.setBoolean(31,true);
                    pstmt1d.setString(32,"0.00");
                    pstmt1d.setString(33,null);
                    pstmt1d.setString(34,"");
                    pstmt1d.executeUpdate();
                    
                    java.sql.PreparedStatement pstmtr3E = connectDB.prepareStatement("UPDATE ac_deposits SET sent = 'true' where invoice_no  ilike '"+jTable1.getModel().getValueAt(i,0).toString()+"' and sent = 'false' and admission_no ilike '"+jTextField111.getText()+"' and transaction_type ilike 'Loan Approval'");
                   pstmtr3E.executeUpdate();
                    
                    
                    
                    java.sql.PreparedStatement pstmtr3 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTable1.getModel().getValueAt(i,4)+"', mtd_debit = mtd_debit + '"+jTable1.getModel().getValueAt(i,4)+"' where code = '"+jTable1.getModel().getValueAt(i,7).toString()+"'");
                    pstmtr3.executeUpdate();
                         
                        java.sql.PreparedStatement pstmtq = connectDB.prepareStatement("insert into cr_allocation values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?)");
                        pstmtq.setObject(1,jTextField7.getText());
                        pstmtq.setString(2,datePicker1.getDate().toString());
                        pstmtq.setObject(3,jTextField9.getText());
                        pstmtq.setString(4,vouchNo);
                        pstmtq.setObject(5,jTable1.getValueAt(i,0).toString());
                        pstmtq.setString(6,jComboBox1.getSelectedItem().toString());
                        pstmtq.setString(7,jTextField92.getText());
                        pstmtq.setObject(8,jTable1.getValueAt(i,3).toString());
                        pstmtq.setObject(9,jTable1.getValueAt(i,2).toString());
                        pstmtq.setObject(10,jTable1.getValueAt(i,4).toString());
                        pstmtq.setObject(11,jTable1.getValueAt(i,6).toString());
                        pstmtq.setString(12,user);
                        pstmtq.setString(13,jComboBox2.getSelectedItem().toString());
                        pstmtq.setString(14,jTextField5.getText());
                       // pstmtq.setObject(15,jTable1.getValueAt(i,1).toString());
                       // pstmtq.setObject(16,jTable1.getValueAt(i,7).toString());
                        pstmtq.executeUpdate();
                        
                        
                    }
                }
                
                  if (jTable1.getModel().getValueAt(i,4) != null){
                        if(java.lang.Double.parseDouble(jTable1.getValueAt(i,6).toString()) > 0){
                            java.sql.PreparedStatement pstmtd = connectDB.prepareStatement("insert into ac_accounts_payable values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                            pstmtd.setObject(1,jTextField7.getText());
                            pstmtd.setString(4,"");
                            pstmtd.setObject(3,jTextField31.getText());
                            pstmtd.setString(2,KRA);
                            pstmtd.setString(5,jTextField9.getText());
                            pstmtd.setString(6,jTextField31.getText());
                            pstmtd.setString(7,Code);
//                            pstmtd.setString(8,jTextField15.getText());
                            pstmtd.setString(9,jTextField11.getText());
                            pstmtd.setString(10,"");
                            pstmtd.setString(11,transNo);
                            pstmtd.setString(12,"INV");
                            //pstmt.setString(13,jTextField3.getText());
                            pstmtd.setObject(14,jTable1.getValueAt(i,6).toString());
                            pstmtd.setObject(13,"00");
                            pstmtd.setString(15,"'now'");
                            pstmtd.setObject(16,jTable1.getValueAt(i,0).toString());
                            pstmtd.setString(17,jTextField8.getText());
                            pstmtd.setObject(18,"false");
                            pstmtd.setObject(19,"false");
                            pstmtd.setString(20,user);
                            pstmtd.setString(21,"");
                            pstmtd.setString(22,datePicker1.getDate().toString());
                            pstmtd.setString(23,datePicker1.getDate().toString());
                            pstmtd.setString(24,"0");
                            pstmtd.executeUpdate();
                   
                            //   java.sql.PreparedStatement pstmtr2 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable1.getModel().getValueAt(i,5).toString()+"',mtd_credit = mtd_credit + '"+jTable1.getModel().getValueAt(i,5).toString()+"' where code = '"+jTextField7.getText()+"'");
                            //   pstmtr2.executeUpdate();
                   
                            java.sql.PreparedStatement pstmtr35 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable1.getModel().getValueAt(i,6).toString()+"', mtd_credit = mtd_credit + '"+jTable1.getModel().getValueAt(i,6).toString()+"' where code = '"+Vats+"'");
                            pstmtr35.executeUpdate();
                   
                        }
                    }
                     }
                   
             //   }
                   
                for (int j = 0; j < jTable2.getRowCount(); j++){
                    if (jTable2.getModel().getValueAt(j,0) != null){
                   
                        java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into ac_creditors_deductions values(?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        pstmt11.setObject(2,jTextField1.getText());
                        pstmt11.setString(4,jTextField92.getText());
                        pstmt11.setObject(3,jTextField9.getText());
                        pstmt11.setObject(7,jTable2.getValueAt(j,1).toString());
                        if(jTable2.getModel().getValueAt(j,3) != null){
                            pstmt11.setObject(8,jTable2.getValueAt(j,0).toString()+" "+jTable2.getValueAt(j,3).toString());
                        }else{
                            pstmt11.setObject(8,jTable2.getValueAt(j,0).toString());
                        }
                        pstmt11.setString(6,"00");
                        pstmt11.setString(1,datePicker1.getDate().toString());
                        pstmt11.setObject(5,vouchNo);
                        pstmt11.setString(9,user);
                        pstmt11.executeUpdate();
                   
                        if (jTable2.getModel().getValueAt(j,3) != null){
                            java.sql.Statement ps232 = connectDB.createStatement();
                            java.sql.ResultSet rs232 = ps232.executeQuery("select payer_name from ac_schemes where account_no = '"+jTable1.getValueAt(j,4).toString()+"'");
                            while (rs232.next())
                                Payer = rs22.getObject(1).toString();
                            java.sql.Statement ps2321 = connectDB.createStatement();
                            java.sql.ResultSet rs2321 = ps2321.executeQuery("select 'RC'||lpad(nextval('mcredit_no_seq'),3,0)");
                            while (rs2321.next())
                                rNo = rs221.getObject(1).toString();
                            java.sql.PreparedStatement pstmtw = connectDB.prepareStatement("insert into ac_debtors values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                            pstmtw.setObject(1,actCode1);
                            pstmtw.setString(4,"");
                            pstmtw.setObject(2,Payer);
                            pstmtw.setString(3,jTable2.getValueAt(j,0).toString());
                            pstmtw.setObject(5,jTable2.getValueAt(j,3).toString());
                            pstmtw.setString(6,"");
                            pstmtw.setString(11,transNo);
                            pstmtw.setString(8,rNo);
                            pstmtw.setObject(7,jTable2.getValueAt(j,4).toString());
                            pstmtw.setString(9,"");
                            pstmtw.setString(10,jTextField92.getText());
                            pstmtw.setString(16,rNo);
                            pstmtw.setString(12,jTable2.getValueAt(j,0).toString());
                            pstmtw.setString(15,datePicker1.getDate().toString());
                            pstmtw.setObject(13,"00");
                            pstmtw.setObject(14,jTable2.getValueAt(j,1).toString());
                            pstmtw.setObject(22,"00");
                            pstmtw.setString(17,actNames1);
                            pstmtw.setBoolean(18,true);
                            pstmtw.setBoolean(19,true);
                            pstmtw.setString(20,user);
                            pstmtw.setString(21,"");
                            pstmtw.setString(24,jTable2.getValueAt(j,1).toString());
                            pstmtw.setString(23,"false");
                            pstmtw.executeUpdate();
                   
                            java.sql.PreparedStatement pstmtr1 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"',mtd_credit = mtd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"' where code = '"+actCode1+"'");
                            pstmtr1.executeUpdate();
                   
                        }else{
                            if (jTable2.getModel().getValueAt(j,5) != null){
                                java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                pstmt212.setObject(1,jTable2.getValueAt(j,5).toString());
                                pstmt212.setString(2,jTable2.getValueAt(j,0).toString());
                                pstmt212.setString(3,"");
                                pstmt212.setString(4,jTextField9.getText());
                                pstmt212.setString(5,"Medbill");
                                pstmt212.setString(6,"");
                                pstmt212.setString(7,jTextField9.getText());
                                pstmt212.setString(8,"");
                                pstmt212.setString(9,"");
                                pstmt212.setString(10,"");
                                pstmt212.setString(11,"");
                                pstmt212.setString(12,"");
                                pstmt212.setString(13,"");
                                pstmt212.setString(14,jTable2.getValueAt(j,0).toString());
                                pstmt212.setString(15,"Revenue");
                                pstmt212.setString(16,"0.00");
                                pstmt212.setObject(17,jTable2.getValueAt(j,1).toString());
                                pstmt212.setString(18,datePicker1.getDate().toString());
                                pstmt212.setString(19,transNo);
                                pstmt212.setString(20,"false");
                                pstmt212.setString(21,"false");
                                pstmt212.setString(22,"false");
                                pstmt212.setString(23,user);
                                pstmt212.setString(24,jTextField14.getText());
                                pstmt212.setString(25,jTextField81.getText());
                                pstmt212.executeUpdate();
                                java.sql.PreparedStatement pstmtr5 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTable2.getModel().getValueAt(j,1).toString()+"',mtd_debit = mtd_debit + '"+jTable2.getModel().getValueAt(j,1).toString()+"' where code = '"+jTable2.getValueAt(j,5).toString()+"'");
                                pstmtr5.executeUpdate();
                            } else{
                                if (jTable2.getModel().getValueAt(j,2) != null){
                                   java.sql.Statement ps22c = connectDB.createStatement();
                                    java.sql.ResultSet rs22c = ps22c.executeQuery("select 'INV'||lpad(nextval('inv_no_seq'),4,0)");
                                    while (rs22c.next())
                                        invoiceNo = rs22c.getObject(1).toString();
                                   
                                   /* 
                                    java.sql.PreparedStatement pstmts = connectDB.prepareStatement("insert into ac_accounts_payable values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmts.setObject(1,jTextField7.getText());
                                    pstmts.setString(4,"");
                                    pstmts.setObject(3,jTable2.getValueAt(j,0).toString());
                                    pstmts.setString(2,jTable2.getValueAt(j,2).toString());
                                    pstmts.setString(5,jTextField9.getText());
                                    pstmts.setString(6,jTextField31.getText());
                                    pstmts.setString(7,jTable2.getValueAt(j,4).toString());
                                    pstmts.setString(9,jTextField11.getText());
                                    pstmts.setString(10,"");
                                    pstmts.setString(11,transNo);
                                    pstmts.setString(12,jTable2.getValueAt(j,0).toString());
                                    pstmts.setObject(14,jTable2.getValueAt(j,4).toString());
                                    pstmts.setObject(13,"00");
                                    pstmts.setString(15,datePicker1.getDate().toString());
                                    pstmts.setObject(17,jTable2.getValueAt(j,0).toString());
                                    pstmts.setString(16,invoiceNo);
                                    pstmts.setObject(18,"false");
                                    pstmts.setObject(19,"false");
                                    pstmts.setString(20,user);
                                    pstmts.executeUpdate();
                   
                                    */
                                    
                                    java.sql.PreparedStatement pstmts = connectDB.prepareStatement("insert into ac_accounts_payable values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                pstmts.setObject(1,jTextField7.getText());
                                    pstmts.setString(4,"");
                                    pstmts.setObject(3,jTable2.getValueAt(j,0).toString());
                                    pstmts.setString(2,jTable2.getValueAt(j,2).toString());
                                    pstmts.setString(5,jTextField9.getText());
                                    pstmts.setString(6,jTextField31.getText());
                                    pstmts.setString(7,jTable2.getValueAt(j,4).toString());
                                    pstmts.setString(9,jTextField11.getText());
                                    pstmts.setString(10,"");
                                    pstmts.setString(11,transNo);
                                    pstmts.setString(12,jTable2.getValueAt(j,0).toString());
                                    pstmts.setObject(14,jTable2.getValueAt(j,4).toString());
                                    pstmts.setObject(13,"00");
                                    pstmts.setString(15,datePicker1.getDate().toString());
                                    pstmts.setObject(17,jTable2.getValueAt(j,0).toString());
                                    pstmts.setString(16,invoiceNo);
                                    pstmts.setObject(18,"false");
                                    pstmts.setObject(19,"false");
                                    pstmts.setString(20,user);
                                    pstmts.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmtw = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"',mtd_credit = mtd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"' where code = '"+jTextField7.getText()+"'");
                                    pstmtw.executeUpdate();
                                    // java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("update ac_accounts_payable set paid ='true' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"' and dealer = '"+jTextField9.getText()+"'");
                                    // pstmt2.executeUpdate();
                                    //   java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("update ac_accounts_payable set approved ='"+jTable1.getValueAt(i,4).toString()+"' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"'");
                                    //  pstmt21.executeUpdate();
                                }
                            }
                   
                        }
                    }else{
                    }
                }
                   
            
            java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("update pb_documents_register set used ='true' where chq_no ='"+jTextField92.getText()+"' and doc_no = '"+jTextField11.getText()+"'");
            pstmt2a.executeUpdate();
            
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully Voucher No is '"+vouchNo+"'","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            jButton1.setEnabled(false);
            jButton12.setEnabled(false);
            jButton5.setEnabled(true);
            
            
        }   catch(java.sql.SQLException sq){
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            jLabel7.setForeground(java.awt.Color.red);
            jLabel7.setText("Sorry. Please Check The Fields");
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String vouchNo = null;
        try {
            java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(currval('voucher_no_seq'),5,0)");
            while (rs22.next())
                vouchNo = rs22.getObject(1).toString();
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        com.afrisoftech.reports.VoucherPdf policy = new com.afrisoftech.reports.VoucherPdf();
        policy.VoucherPdf(connectDB,vouchNo);   // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    //jTable
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        jTextField13.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField111.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        
        this.jSearchDialog2.dispose();
        jButton12.setEnabled(true);
        jButton1.setEnabled(true);
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt.executeQuery("select admission_no from ac_deposits where payee ='"+jTextField9.getText()+"'");
            while (rset1.next()){
                jTextField1.setText(rset1.getObject(1).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        //  this.populateTable1(jTextField9.getText());
        this.jSearchDialog2.dispose();
        
        jLabel7.setText("");
        jTextField3.setText("0.00");
        jTextField10.setText("0.00");
        jTextField12.setText("0.00");
        jTextField11.setText("");
        jTextField92.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField31.setText("");
        
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        jButton1.setEnabled(true);
        
        jButton12.setEnabled(true);
        jButton5.setEnabled(false);
     /*   
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select activity_code,sum(debit),item,description from ac_deposits where payee ilike '"+this.jTextField9.getText()+"%' AND approved = true and sent = false GROUP BY activity_code,item,description");
            while (rset.next()){
                jTextField7.setText(rset.getObject(1).toString());
                //jTable1
               //  jTextField13.setText(rset.getObject(2).toString());
                jTextField31.setText(rset.getObject(3).toString());
                jTextField8.setText(rset.getObject(4).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            
        }
      */
        this.populateTable11(this.jTextField9.getText());
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(this.jTextField113.getCaretPosition() < 3){
            System.out.print("Nothing");
        }else{
            try {
                searchRowSet2.execute("select distinct dealer as name,admission_no, account_no from ac_deposits WHERE BALANCE !=0 AND approved = true AND sent = false and admission_no ILIKE '"+jTextField113.getText()+"%' order by dealer");
                //   searchRowSet2.execute("select code,supplier_name as name from st_suppliers where supplier_name ILIKE '"+jTextField113.getText()+"%' order by supplier_name");
                
                jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    // new org.netbeans.lib.sql.models.TableModel.Column("code", "Acc.No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("admission_no", "TSC No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Member No", false)
                }));
                jSearchScrollPane2.setViewportView(jSearchTable2);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();        // Add your handling code here:
        jButton1.setEnabled(true);
        jButton12.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
    }    public java.lang.String getShiftNumber() {
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                shift_no = rset.getString(1);
                
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return shift_no;
        
    }
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        double resFloat = 0.00;
        if (jTable1.getValueAt(jTable1.getSelectedRow(), 5) != null) {
            
            //    float floatCol2 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
            
            float floatCol3 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
            
            float resVal = floatCol3;
            
            
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 4);
            
            
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                
                if (jTable1.getModel().getValueAt(i, 2) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 4).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            
            this.tableModelTableChanged1();
        }
 /*
  else
  
                jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
  
  
  
  
            for (int i = 0; i < jTable1.getRowCount(); i++) {
  
                if (jTable1.getModel().getValueAt(i, 1) != null) {//toString().compareToIgnoreCase(null) {
  
                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
  
  
                    // totalSum = floatTotal + resFloat;
  
                }
            }
  
            this.tableModelTableChanged1();
  */
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt.executeQuery("select bank_account_name,bank_name ||' - ' ||branch_name as bank ,bank_account_code from bank_branches where bank_acc_no ='"+jComboBox2.getSelectedItem().toString()+"'");
            while (rset1.next()){
                jTextField4.setText(rset1.getObject(1).toString());
                jTextField5.setText(rset1.getObject(2).toString());
                jTextField11.setText(rset1.getObject(3).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }         // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
 /*       try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select gl_account,description,account from ac_cash_points where payment_code ='"+jComboBox1.getSelectedItem()+"'");
            while (rset.next()){
                jTextField11.setText(rset.getObject(1).toString());
                jTextField9.setText(rset.getObject(2).toString());
                jTextField4.setText(rset.getObject(3).toString());
  
            }
  
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt.executeQuery("select bank_account_no,bank_name from ac_banks_setup where bank_account_name ='"+jTextField4.getText()+"'");
            while (rset1.next()){
                jTextField1.setText(rset1.getObject(1).toString());
                jTextField5.setText(rset1.getObject(2).toString());
  
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        } */       // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    private void populateTable11(java.lang.String patient_name) {
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT count(dealer) FROM ac_deposits WHERE payee = '"+patient_name+"' AND approved = true and sent = false and balance >0 ");
            
            while (rsetTable1.next()) {
                j = rsetTable1.getInt(1);
            }
            if (j > 0) {
                
                java.sql.Statement stmtTable11 = connectDB.createStatement();
                
             //   java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT invoice_no, sum(credit),sum(balance),0.00,0.00,activity_code,reason FROM ac_deposits WHERE payee = '"+patient_name+"' AND approved = true and balance >0 GROUP BY invoice_no,activity_code,reason");
                     java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT invoice_no, debit, balance,0.00,0.00,'-',reason FROM ac_deposits WHERE payee = '"+patient_name+"' AND approved = true and sent = false and balance >0");
         
                while (rsetTable11.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable11.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable11.getObject(7), i, 1);
                    jTable1.setValueAt(rsetTable11.getObject(2), i, 2);
                    jTable1.setValueAt(rsetTable11.getObject(3), i, 3);
                    jTable1.setValueAt(rsetTable11.getObject(4), i, 4);
                    jTable1.setValueAt(rsetTable11.getObject(5), i, 6);
                    jTable1.setValueAt(rsetTable11.getObject(6), i, 7);
                    i++;
                    
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    
    
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        jTextField92.setText("");
        // jTextField3.setText("");
        jTextField11.setText("");
        jTextField4.setText("");
        jTextField31.setText("");
        jTextField3.setText("0.00");
        jTextField10.setText("0.00");
        jTextField12.setText("0.00");
        //        jTextField9.setText("");
        
        jTextField5.setText("");
        this.jComboBox1.setSelectedItem(null);
        this.jTextField9.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        javax.swing.JFrame other = new com.afrisoftech.accounting.OtherPayments(connectDB, pConnDB);
        other.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        
        java.sql.Connection con;
        String vouchNo = null;
        String user = null;
        String invoiceNo = null;
        String KRA = null;
        String Code = null;
        String actNames1 = null;
        String actCode1 = null;
        String rNo = null;
        String Payer = null;
        String Vats = null;
        String glAcc = null;
        String Activity = null;
        String userName = null;
        String descriptions = null;
        double Deductions = java.lang.Double.parseDouble(jTextField10.getText());
        double Net = java.lang.Double.parseDouble(jTextField3.getText());
        if(Net < 0){
            javax.swing.JOptionPane.showMessageDialog(this,"Deductions MORE THAN The Earnings","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                connectDB.setAutoCommit(false);
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq'),current_user");
                while (rst.next())
                    rst.getObject(1).toString();
                
                String transNo = rst.getObject(1).toString();
                user = rst.getObject(2).toString();
                
                java.sql.Statement ps22 = connectDB.createStatement();
                java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq'),5,0)");
                while (rs22.next())
                    vouchNo = rs22.getObject(1).toString();
                
                java.sql.Statement ps221 = connectDB.createStatement();
                java.sql.ResultSet rs221 = ps221.executeQuery("select supplier_name,code from st_suppliers where category ilike 'KRA%'");
                while (rs221.next())
                    KRA = rs221.getObject(1).toString();
                Code = rs221.getObject(2).toString();
                
                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
                while (rsts1.next())
                    actCode1 = rsts1.getObject(1).toString();
                actNames1 = rsts1.getObject(2).toString();
                user = rsts1.getObject(3).toString();
                
                
                java.sql.Statement pss11q = connectDB.createStatement();
                java.sql.ResultSet rsts1q = pss11q.executeQuery("select code,activity from pb_activity where activity_category ='EV'");
                while (rsts1q.next())
                    Vats = rsts1q.getObject(1).toString();
                
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Cash")){
                    for (int i = 0; i < jTable1.getRowCount(); i++){
                        if (jTable1.getModel().getValueAt(i,0) != null){
                            
                            java.sql.Statement stm121 = connectDB.createStatement();
                            java.sql.ResultSet rse121 = stm121.executeQuery("select code,activity,current_user from pb_activity where activity_category = 'PC'");
                            while (rse121.next()){
                                
                                glAcc = rse121.getObject(1).toString();
                                Activity = rse121.getObject(2).toString();
                                userName = rse121.getObject(3).toString();
                            }
                            
                            java.sql.Statement stmd = connectDB.createStatement();
                            java.sql.ResultSet rsed = stmd.executeQuery("select activity from pb_activity where code = '"+jTable1.getValueAt(i,7).toString()+"'");
                            while (rsed.next()){
                                
                                descriptions = rsed.getObject(1).toString();
                            }
                            java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_petty_cash values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                            pstmt21.setObject(1,glAcc);
                            pstmt21.setString(2,Activity);
                            pstmt21.setString(3,jTextField9.getText());
                            pstmt21.setObject(4,descriptions);
                            pstmt21.setObject(6,jTable1.getValueAt(i,4).toString());
                            pstmt21.setString(5,"00");
                            pstmt21.setString(7,"'now'");
                            pstmt21.setString(8,userName);
                            pstmt21.setString(9,"true");
                            pstmt21.setString(11,datePicker1.getDate().toString());
                            pstmt21.setString(10,vouchNo);
                            pstmt21.setString(12,"true");
                            pstmt21.setString(13,"Accounts");
                            pstmt21.setString(14,userName);
                            pstmt21.setObject(15,jTable1.getValueAt(i,1).toString());
                            // pstmt21.setString(15,jTextField31.getText());
                            pstmt21.setString(16,"Payment To Creditor");
                            pstmt21.setString(17,transNo);
                            pstmt21.setString(18,jTextField14.getText());
                            pstmt21.setString(19,jTextField81.getText());
                            pstmt21.setObject(20,jTable1.getValueAt(i,7).toString());
                            pstmt21.setObject(21,jTable1.getValueAt(i,0).toString());
                            pstmt21.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt812 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable1.getModel().getValueAt(i,4).toString()+"',mtd_credit = mtd_credit + '"+jTable1.getModel().getValueAt(i,4).toString()+"' where code = '"+glAcc+"'");
                            pstmt812.executeUpdate();
                            
                        }
                    }
                }else{
                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_cash_book values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?)");
                    pstmt1.setString(1,jTextField7.getText());
                    pstmt1.setString(6,"");
                    pstmt1.setString(2,jTextField31.getText());
                    pstmt1.setString(3,jTextField9.getText());
                    pstmt1.setString(4,jComboBox1.getSelectedItem().toString());
                    pstmt1.setString(5,vouchNo);
                    pstmt1.setString(7,jTextField9.getText());
                    if (jTextField11.getText().equals("")){
                        javax.swing.JOptionPane.showMessageDialog(this,"Select payment code","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }else{
                        
                        pstmt1.setString(9,jTextField11.getText());
                    }
                    pstmt1.setString(7,"");
                    pstmt1.setString(8,"");
                    pstmt1.setString(11,"");
                    pstmt1.setString(12,"");
                    pstmt1.setString(13,"");
                    pstmt1.setString(10,jTextField92.getText());
                    pstmt1.setString(14,jComboBox2.getSelectedItem().toString());
                    pstmt1.setObject(15,jTextField4.getText());
                    pstmt1.setString(16,jTextField5.getText());
                    pstmt1.setString(17,"Payment");
                    pstmt1.setString(18,"00");
                    pstmt1.setString(19,jTextField3.getText());
                    pstmt1.setString(20,"'now'");
                    pstmt1.setString(21,transNo);
                    pstmt1.setBoolean(24, false);
                    pstmt1.setBoolean(22,false);
                    pstmt1.setBoolean(23,false);
                    pstmt1.setObject(25,null);
                    pstmt1.setObject(26,null);
                    pstmt1.setObject(27,null);
                    pstmt1.setString(28,user);
                    pstmt1.setObject(29,jTextField81.getText());
                    pstmt1.setString(30,jTextField14.getText());
                    pstmt1.setString(31,datePicker1.getDate().toString());
                    pstmt1.executeUpdate();
                    
                    java.sql.PreparedStatement pstmtr = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTextField3.getText()+"',mtd_credit = mtd_credit + '"+jTextField3.getText()+"' where code = '"+jTextField11.getText()+"'");
                    pstmtr.executeUpdate();
                }
                
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_accounts_payable values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                pstmt.setObject(1,jTextField7.getText());
                pstmt.setString(4,vouchNo);
                pstmt.setObject(3,jTextField31.getText());
                pstmt.setString(2,jTextField9.getText());
                pstmt.setString(5,jTextField9.getText());
                pstmt.setString(6,jTextField31.getText());
                pstmt.setString(7,"");
                //                pstmt.setString(8,jTextField15.getText());
                pstmt.setString(9,jTextField11.getText());
                pstmt.setString(10,"");
                pstmt.setString(11,transNo);
                pstmt.setString(12,"Payment");
                pstmt.setString(13,jTextField12.getText());
                //  pstmt.setObject(13,jTable1.getValueAt(i,3).toString());
                pstmt.setObject(14,"00");
                pstmt.setString(15,"'now'");
                pstmt.setObject(16,"-");
                pstmt.setString(17,jTextField8.getText());
                pstmt.setObject(18,"false");
                pstmt.setObject(19,"false");
                pstmt.setString(20,user);
                pstmt.setString(21,"");
                pstmt.setString(22,datePicker1.getDate().toString());
                pstmt.setString(23,datePicker1.getDate().toString());
                pstmt.setString(24,"0.00");
                pstmt.executeUpdate();
                
                
                
                
                // pstmt.executeUpdate();
                //   java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("update ac_accounts_payable set paid ='true' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"' and dealer = '"+jTextField9.getText()+"'");
                //  pstmt2.executeUpdate();
                //   java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("update ac_accounts_payable set voucher_no = '"+vouchNo+"' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"' and dealer = '"+jTextField9.getText()+"'");
                //   pstmt21.executeUpdate();
                java.sql.PreparedStatement pstmtr3 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTextField12.getText()+"', mtd_debit = mtd_debit + '"+jTextField12.getText()+"' where code = '"+jTextField7.getText()+"'");
                pstmtr3.executeUpdate();
                
                for (int i = 0; i < jTable1.getRowCount(); i++){
                    if (jTable1.getModel().getValueAt(i,4) != null){
                        
                        
                        
                        if(java.lang.Double.parseDouble(jTable1.getValueAt(i,3).toString()) > 0){
                            
                            java.sql.PreparedStatement pstmtq = connectDB.prepareStatement("insert into cr_allocation values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?)");
                            pstmtq.setObject(1,jTextField7.getText());
                            pstmtq.setString(2,datePicker1.getDate().toString());
                            pstmtq.setObject(3,jTextField9.getText());
                            pstmtq.setString(4,vouchNo);
                            pstmtq.setObject(5,jTable1.getValueAt(i,0).toString());
                            pstmtq.setString(6,jComboBox1.getSelectedItem().toString());
                            pstmtq.setString(7,jTextField92.getText());
                            pstmtq.setObject(8,jTable1.getValueAt(i,3).toString());
                            pstmtq.setObject(9,jTable1.getValueAt(i,2).toString());
                            pstmtq.setObject(10,jTable1.getValueAt(i,4).toString());
                            pstmtq.setObject(11,jTable1.getValueAt(i,6).toString());
                            pstmtq.setString(12,user);
                            pstmtq.setString(13,jComboBox2.getSelectedItem().toString());
                            pstmtq.setString(14,jTextField5.getText());
                            pstmtq.setObject(15,jTable1.getValueAt(i,1).toString());
                            pstmtq.setObject(16,jTable1.getValueAt(i,7).toString());
                            pstmtq.executeUpdate();
                            
                            
                            java.sql.PreparedStatement pstmt12 = connectDB.prepareStatement("update ac_accounts_payable set balance = balance - '"+jTable1.getValueAt(i,4).toString()+"', vat_balance = vat_balance - '"+jTable1.getValueAt(i,6).toString()+"' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"' and dealer = '"+jTextField9.getText()+"' and credit = '"+jTable1.getValueAt(i,2).toString()+"'");
                            pstmt12.executeUpdate();
                          /*
                           
                            double gross = java.lang.Double.parseDouble(jTextField12.getText());
                           
                            double balance = 0.00;
                           
                            double amount = 0.00;
                           
                            double vat = 0.00;
                           
                           
                            java.sql.Statement pss11q = connectDB.createStatement();
                            java.sql.ResultSet rsts1q = pss11q.executeQuery("select credit,balance,vat_balance from ac_accounts_payable  where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"' and dealer = '"+jTextField9.getText()+"' GROUP BY credit,balance,vat_balance");
                            while (rsts1q.next()){
                                amount = rsts1q.getDouble(1);
                                balance = rsts1q.getDouble(2);
                                vat = rsts1q.getDouble(3);
                                gross = gross - (balance-vat);
                           
                           
                                if (balance > gross){
                                java.sql.PreparedStatement pstmt12 = connectDB.prepareStatement("update ac_accounts_payable set balance = balance - '"+gross+"', vat_balance = vat_balance - '"+vat+"' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"' and dealer = '"+jTextField9.getText()+"'  and credit = '"+amount+"'");
                                pstmt12.executeUpdate();
                                }else{
                                java.sql.PreparedStatement pstmt12 = connectDB.prepareStatement("update ac_accounts_payable set balance = balance - '"+balance+"', vat_balance = vat_balance - '"+vat+"' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"' and dealer = '"+jTextField9.getText()+"' and credit = '"+amount+"'");
                                pstmt12.executeUpdate();
                                }
                           
                            }
                           */
                        }
                    }
                    
                    
                    if (jTable1.getModel().getValueAt(i,4) != null){
                        if(java.lang.Double.parseDouble(jTable1.getValueAt(i,6).toString()) > 0){
                            java.sql.PreparedStatement pstmtd = connectDB.prepareStatement("insert into ac_accounts_payable values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                            pstmtd.setObject(1,jTextField7.getText());
                            pstmtd.setString(4,"");
                            pstmtd.setObject(3,jTextField31.getText());
                            pstmtd.setString(2,KRA);
                            pstmtd.setString(5,jTextField9.getText());
                            pstmtd.setString(6,jTextField31.getText());
                            pstmtd.setString(7,Code);
                            //                            pstmtd.setString(8,jTextField15.getText());
                            pstmtd.setString(9,jTextField11.getText());
                            pstmtd.setString(10,"");
                            pstmtd.setString(11,transNo);
                            pstmtd.setString(12,"INV");
                            //pstmt.setString(13,jTextField3.getText());
                            pstmtd.setObject(14,jTable1.getValueAt(i,6).toString());
                            pstmtd.setObject(13,"00");
                            pstmtd.setString(15,"'now'");
                            pstmtd.setObject(16,jTable1.getValueAt(i,0).toString());
                            pstmtd.setString(17,jTextField8.getText());
                            pstmtd.setObject(18,"false");
                            pstmtd.setObject(19,"false");
                            pstmtd.setString(20,user);
                            pstmtd.setString(21,"");
                            pstmtd.setString(22,datePicker1.getDate().toString());
                            pstmtd.setString(23,datePicker1.getDate().toString());
                            pstmtd.setString(24,"0");
                            pstmtd.executeUpdate();
                            
                            //   java.sql.PreparedStatement pstmtr2 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable1.getModel().getValueAt(i,5).toString()+"',mtd_credit = mtd_credit + '"+jTable1.getModel().getValueAt(i,5).toString()+"' where code = '"+jTextField7.getText()+"'");
                            //   pstmtr2.executeUpdate();
                            
                            java.sql.PreparedStatement pstmtr35 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable1.getModel().getValueAt(i,6).toString()+"', mtd_credit = mtd_credit + '"+jTable1.getModel().getValueAt(i,6).toString()+"' where code = '"+Vats+"'");
                            pstmtr35.executeUpdate();
                            
                        }
                    }
                    // }
                    
                }
                
                for (int j = 0; j < jTable2.getRowCount(); j++){
                    if (jTable2.getModel().getValueAt(j,0) != null){
                        
                        java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into ac_creditors_deductions values(?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        pstmt11.setObject(2,jTextField1.getText());
                        pstmt11.setString(4,jTextField92.getText());
                        pstmt11.setObject(3,jTextField9.getText());
                        pstmt11.setObject(7,jTable2.getValueAt(j,1).toString());
                        if(jTable2.getModel().getValueAt(j,3) != null){
                            pstmt11.setObject(8,jTable2.getValueAt(j,0).toString()+" "+jTable2.getValueAt(j,3).toString());
                        }else{
                            pstmt11.setObject(8,jTable2.getValueAt(j,0).toString());
                        }
                        pstmt11.setString(6,"00");
                        pstmt11.setString(1,datePicker1.getDate().toString());
                        pstmt11.setObject(5,vouchNo);
                        pstmt11.setString(9,user);
                        pstmt11.executeUpdate();
                        
                        if (jTable2.getModel().getValueAt(j,3) != null){
                            java.sql.Statement ps232 = connectDB.createStatement();
                            java.sql.ResultSet rs232 = ps232.executeQuery("select payer_name from ac_schemes where account_no = '"+jTable1.getValueAt(j,4).toString()+"'");
                            while (rs232.next())
                                Payer = rs22.getObject(1).toString();
                            java.sql.Statement ps2321 = connectDB.createStatement();
                            java.sql.ResultSet rs2321 = ps2321.executeQuery("select 'RC'||lpad(nextval('mcredit_no_seq'),3,0)");
                            while (rs2321.next())
                                rNo = rs221.getObject(1).toString();
                            java.sql.PreparedStatement pstmtw = connectDB.prepareStatement("insert into ac_debtors values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                            pstmtw.setObject(1,actCode1);
                            pstmtw.setString(4,"");
                            pstmtw.setObject(2,Payer);
                            pstmtw.setString(3,jTable2.getValueAt(j,0).toString());
                            pstmtw.setObject(5,jTable2.getValueAt(j,3).toString());
                            pstmtw.setString(6,"");
                            pstmtw.setString(11,transNo);
                            pstmtw.setString(8,rNo);
                            pstmtw.setObject(7,jTable2.getValueAt(j,4).toString());
                            pstmtw.setString(9,"");
                            pstmtw.setString(10,jTextField92.getText());
                            pstmtw.setString(16,rNo);
                            pstmtw.setString(12,jTable2.getValueAt(j,0).toString());
                            pstmtw.setString(15,datePicker1.getDate().toString());
                            pstmtw.setObject(13,"00");
                            pstmtw.setObject(14,jTable2.getValueAt(j,1).toString());
                            pstmtw.setObject(22,"00");
                            pstmtw.setString(17,actNames1);
                            pstmtw.setBoolean(18,true);
                            pstmtw.setBoolean(19,true);
                            pstmtw.setString(20,user);
                            pstmtw.setString(21,"");
                            pstmtw.setString(24,jTable2.getValueAt(j,1).toString());
                            pstmtw.setString(23,"false");
                            pstmtw.executeUpdate();
                            
                            java.sql.PreparedStatement pstmtr1 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"',mtd_credit = mtd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"' where code = '"+actCode1+"'");
                            pstmtr1.executeUpdate();
                            
                        }else{
                            if (jTable2.getModel().getValueAt(j,5) != null){
                                java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                pstmt212.setObject(1,jTable2.getValueAt(j,5).toString());
                                pstmt212.setString(2,jTable2.getValueAt(j,0).toString());
                                pstmt212.setString(3,"");
                                pstmt212.setString(4,jTextField9.getText());
                                pstmt212.setString(5,"Medbill");
                                pstmt212.setString(6,"");
                                pstmt212.setString(7,jTextField9.getText());
                                pstmt212.setString(8,"");
                                pstmt212.setString(9,"");
                                pstmt212.setString(10,"");
                                pstmt212.setString(11,"");
                                pstmt212.setString(12,"");
                                pstmt212.setString(13,"");
                                pstmt212.setString(14,jTable2.getValueAt(j,0).toString());
                                pstmt212.setString(15,"Revenue");
                                pstmt212.setString(16,"0.00");
                                pstmt212.setObject(17,jTable2.getValueAt(j,1).toString());
                                pstmt212.setString(18,datePicker1.getDate().toString());
                                pstmt212.setString(19,transNo);
                                pstmt212.setString(20,"false");
                                pstmt212.setString(21,"false");
                                pstmt212.setString(22,"false");
                                pstmt212.setString(23,user);
                                pstmt212.setString(24,jTextField14.getText());
                                pstmt212.setString(25,jTextField81.getText());
                                pstmt212.executeUpdate();
                                java.sql.PreparedStatement pstmtr5 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTable2.getModel().getValueAt(j,1).toString()+"',mtd_debit = mtd_debit + '"+jTable2.getModel().getValueAt(j,1).toString()+"' where code = '"+jTable2.getValueAt(j,5).toString()+"'");
                                pstmtr5.executeUpdate();
                            } else{
                                // for (int i = 0; i < jTable1.getRowCount(); i++){
                                //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
                                if (jTable2.getModel().getValueAt(j,2) != null){
                                    //if (!(jTable1.getModel().getValueAt(i,3).equals(null))){
                                    java.sql.Statement ps22c = connectDB.createStatement();
                                    java.sql.ResultSet rs22c = ps22c.executeQuery("select 'INV'||lpad(nextval('inv_no_seq'),4,0)");
                                    while (rs22c.next())
                                        invoiceNo = rs22c.getObject(1).toString();
                                    java.sql.PreparedStatement pstmts = connectDB.prepareStatement("insert into ac_accounts_payable values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmts.setObject(1,jTextField7.getText());
                                    pstmts.setString(4,"");
                                    pstmts.setObject(3,jTable2.getValueAt(j,0).toString());
                                    pstmts.setString(2,jTable2.getValueAt(j,2).toString());
                                    pstmts.setString(5,jTextField9.getText());
                                    pstmts.setString(6,jTextField31.getText());
                                    pstmts.setString(7,jTable2.getValueAt(j,4).toString());
                                    //                                    pstmts.setString(8,jTextField15.getText());
                                    pstmts.setString(9,jTextField11.getText());
                                    pstmts.setString(10,"");
                                    pstmts.setString(11,transNo);
                                    pstmts.setString(12,jTable2.getValueAt(j,0).toString());
                                    //pstmt.setString(13,jTextField3.getText());
                                    pstmts.setObject(14,jTable2.getValueAt(j,1).toString());
                                    pstmts.setObject(13,"00");
                                    pstmts.setString(15,datePicker1.getDate().toString());
                                    pstmts.setObject(17,jTable2.getValueAt(j,0).toString());
                                    pstmts.setString(16,invoiceNo);
                                    pstmts.setObject(18,"false");
                                    pstmts.setObject(19,"false");
                                    pstmts.setString(20,user);
                                    pstmts.executeUpdate();
                                    
                                    java.sql.PreparedStatement pstmtw = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"',mtd_credit = mtd_credit + '"+jTable2.getModel().getValueAt(j,1).toString()+"' where code = '"+jTextField7.getText()+"'");
                                    pstmtw.executeUpdate();
                                    // java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("update ac_accounts_payable set paid ='true' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"' and dealer = '"+jTextField9.getText()+"'");
                                    // pstmt2.executeUpdate();
                                    //   java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("update ac_accounts_payable set approved ='"+jTable1.getValueAt(i,4).toString()+"' where invoice_no ='"+jTable1.getValueAt(i,0).toString()+"'");
                                    //  pstmt21.executeUpdate();
                                }
                            }
                            
                        }
                    }else{
                    }
                }
                
                java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("update pb_documents_register set used ='true' where chq_no ='"+jTextField92.getText()+"' and doc_no = '"+jTextField11.getText()+"'");
                pstmt2a.executeUpdate();
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully Voucher No is '"+vouchNo+"'","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                jButton1.setEnabled(false);
                jButton12.setEnabled(false);
                jButton5.setEnabled(true);
                com.afrisoftech.reports.VoucherPdf policy = new com.afrisoftech.reports.VoucherPdf();
                //  policy.VoucherPdf(connectDB,jComboBox131.getSelectedItem().toString());
                policy.VoucherPdf(connectDB,vouchNo);
                
                //            jTextField1.setText("");
                //  jTextField92.setText("");
                //  jTextField3.setText("");
                //   jTextField11.setText("");
                //   jTextField4.setText("");
                //   jTextField31.setText("");
                //   this.jComboBox1.setSelectedItem(null);
                //  jTextField5.setText("");
                //            jTextField9.setText("");
                //  crset1.execute();
                
                
            }   catch(java.sql.SQLException sq){
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                jLabel7.setForeground(java.awt.Color.red);
                jLabel7.setText("Sorry. Please Check The Fields");
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 12 and 21.");
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 4) != null) {
                
                if (jTable1.getSelectedColumn() == 2) {
                    
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 4).toString());
                    
                    //   }
                    
                    jTextField3.setText(java.lang.String.valueOf(resFloat1));
                    
                }else
                    //    if (jTable1.getSelectedColumn() == 4) {
                    
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i,4).toString());
                //    }
                jTextField3.setText(java.lang.String.valueOf(resFloat1));
                
                
            }
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 0) != null) {
                
                if (jTable1.getSelectedColumn() == 2) {
                    
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 4).toString());
                    
                    // }
                    
                    jTextField3.setText(java.lang.String.valueOf(resFloat1));
                    
                }else
                    //  if (jTable11.getSelectedColumn() == 4) {
                    
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i,4).toString());
                //  }
                jTextField3.setText(java.lang.String.valueOf(resFloat1));
                
            }
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton jButton2;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet1;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JButton jButton12;
    private javax.swing.JTextField jTextField8;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet22;
    private javax.swing.JButton jButton3;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel jLabel9;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet2;
    private javax.swing.JButton jButton9;
    private javax.swing.JList jList1;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton searchButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField81;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton jButton52;
    private org.netbeans.lib.sql.NBCachedRowSet crset21;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton522;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JSeparator jSeparator1;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JButton jButton4;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JPanel jPanel422;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JTable jSearchTable2;
    // End of variables declaration//GEN-END:variables
    
}
