/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.sacco;

/**
 *
 * @author  root
 */
public class RaiseVoucherintfr extends javax.swing.JInternalFrame {
    
    private  javax.swing.JComboBox cmbox1;
    private  javax.swing.JComboBox cmbox;
    private  javax.swing.JComboBox cmbox2;
    
    /** Creates new form loanpymntintfr */
    java.sql.Connection connectDB = null;
    javax.swing.JSpinner beginDateSpinner = null;
    
    javax.swing.JSpinner endDateSpinner = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public RaiseVoucherintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset4 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset5 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset6 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset21 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        try {
            crset7 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset8 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTextField10 = new javax.swing.JTextField();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton11 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton12 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable12 = new javax.swing.JTable();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton13 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();

        crset1.setConnectionSource(pConnDB);
        crset2.setCommand("SELECT table_name FROM table_acc order by table_name");
        crset2.setConnectionSource(pConnDB);
        crset3.setCommand("");
        crset3.setConnectionSource(pConnDB);
        crset4.setCommand("");
        crset4.setConnectionSource(pConnDB);
        crset5.setCommand("");
        crset5.setConnectionSource(pConnDB);
        crset6.setCommand("");
        crset6.setConnectionSource(pConnDB);
        crset21.setCommand("select bank_acc_no from bank_branches");
        crset21.setConnectionSource(pConnDB);
        crset7.setCommand("");
        crset7.setConnectionSource(pConnDB);
        crset8.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Raise Voucher");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder(" Tick  type of GL Account here"));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        /*  try {
            java.text.DateFormat dateFormat = java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM);
            java.util.Date dateInstance = java.util.Calendar.getInstance().getTime();
            //        java.lang.String dateString2Parse = null;
            //        dateString2Parse = String.valueOf(dateInstance.getDate())+"-"+String.valueOf(dateInstance.getMonth()+1)+"-200"+String.valueOf(dateInstance.getYear()-100);

            java.util.Date formattedDate = dateFormat.parse(dateInstance.toLocaleString());
            System.out.println(dateFormat.format(formattedDate));
            javax.swing.SpinnerDateModel beginDate = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);
            //   javax.swing.SpinnerDateModel endDate = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);

            beginDateSpinner = new javax.swing.JSpinner(beginDate);
            //     endDateSpinner = new javax.swing.JSpinner(endDate);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(beginDateSpinner, gridBagConstraints);

        } catch(java.text.ParseException parseExec) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), parseExec.getMessage());

        }
        */
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField10.setFocusable(false);
        jTextField10.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField10.setPreferredSize(new java.awt.Dimension(0, 0));
        jTextField10.setEnabled(false);
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        jPanel4.add(jTextField10, gridBagConstraints);

        jCheckBox3.setText("Other GL Accounts");
        buttonGroup1.add(jCheckBox3);
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jCheckBox3, gridBagConstraints);

        jCheckBox2.setText("Loans");
        buttonGroup1.add(jCheckBox2);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jCheckBox2, gridBagConstraints);

        jCheckBox1.setText("Shares");
        buttonGroup1.add(jCheckBox1);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jCheckBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Select Accounts here"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Loan Acc. No.", "Account", "Member No.", "Member Name", "Amount", "Gl Code", "Voucher No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setDragEnabled(true);
        jTable1.setShowHorizontalLines(false);
        jTable1.setSurrendersFocusOnKeystroke(true);
        jTable1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        /*   cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "activity_code", null, null, null));
        //javax.swing.table.TableColumn s = this.jTable1.getColumnModel().getColumn(0);
        javax.swing.table.TableColumn s = this.jTable1.getColumn("GL Code");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });
        */
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jScrollPane11.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(15, 30, 10, 30);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel3.add(jScrollPane11, gridBagConstraints);

        jButton11.setMnemonic('P');
        jButton11.setText("Post Entries to GL");
        jButton11.setToolTipText("Click here to enter data");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton11, gridBagConstraints);

        jButton51.setMnemonic('r');
        jButton51.setText("Remove Row");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jButton51, gridBagConstraints);

        jButton31.setMnemonic('l');
        jButton31.setText("Clear");
        jButton31.setToolTipText("Click here to clear fields");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton31, gridBagConstraints);

        jButton41.setMnemonic('C');
        jButton41.setText("Close");
        jButton41.setToolTipText("Click here to close ");
        jButton41.setSelected(true);
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton41, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel3, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Member No.", "Member Name", "Account", "Amount", "Gl Code", "Voucher No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable11.setDragEnabled(true);
        jTable11.setShowHorizontalLines(false);
        jTable11.setSurrendersFocusOnKeystroke(true);
        jTable11.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        /*   cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "activity_code", null, null, null));
        //javax.swing.table.TableColumn s = this.jTable1.getColumnModel().getColumn(0);
        javax.swing.table.TableColumn s = this.jTable1.getColumn("GL Code");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });
        */
        jScrollPane12.setViewportView(jTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(15, 30, 10, 30);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel5.add(jScrollPane12, gridBagConstraints);

        jButton12.setMnemonic('P');
        jButton12.setText("Post Entries to GL");
        jButton12.setToolTipText("Click here to enter data");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton12, gridBagConstraints);

        jButton52.setMnemonic('r');
        jButton52.setText("Remove Row");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jButton52, gridBagConstraints);

        jButton32.setMnemonic('l');
        jButton32.setText("Clear");
        jButton32.setToolTipText("Click here to clear fields");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton32, gridBagConstraints);

        jButton42.setMnemonic('C');
        jButton42.setText("Close");
        jButton42.setToolTipText("Click here to close ");
        jButton42.setSelected(true);
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton42, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel2.add(jPanel5, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTable12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Description", "Activity Code", "Payee", "Amount", "Reason for Payment", "Comments", "Voucher No."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable12.setShowHorizontalLines(false);
        cmbox = new javax.swing.JComboBox();
        //cmbox3 = new javax.swing.JComboBox();

        try {

            crset2.setConnectionSource(pConnDB);
            crset2.execute("select activity from activity WHERE payment_modes !='Receivable'");

            cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset2, "activity", null, null, null));
            javax.swing.table.TableColumn s = this.jTable12.getColumn("Description");
            s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
            cmbox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmboxActionPerformed(evt);
                }
            });

        } catch(java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }
        jScrollPane13.setViewportView(jTable12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(15, 30, 10, 30);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel6.add(jScrollPane13, gridBagConstraints);

        jButton13.setMnemonic('P');
        jButton13.setText("Post Entries to GL");
        jButton13.setToolTipText("Click here to enter data");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton13, gridBagConstraints);

        jButton53.setMnemonic('r');
        jButton53.setText("Remove Row");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jButton53, gridBagConstraints);

        jButton33.setMnemonic('l');
        jButton33.setText("Clear");
        jButton33.setToolTipText("Click here to clear fields");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton33, gridBagConstraints);

        jButton43.setMnemonic('C');
        jButton43.setText("Close");
        jButton43.setToolTipText("Click here to close ");
        jButton43.setSelected(true);
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton43, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel2.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        setBounds(0, 0, 895, 518);
    }//GEN-END:initComponents
    
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed
    
    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed
    
    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton42ActionPerformed
    
    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton32ActionPerformed
    
    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton43ActionPerformed
    
    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        for (int k = 0; k < jTable12.getRowCount(); k++ ) {
            for (int r = 0; r < jTable12.getColumnCount(); r++ ) {
                jTable12.getModel().setValueAt(null,k,r);
            }
        } // Add your handling code here:
    }//GEN-LAST:event_jButton33ActionPerformed
    
    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        int rows2Delete = jTable12.getSelectedRowCount();
        
        int[] selectedRows = jTable12.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable12.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable12.getModel();
                
                defTableModel.removeRow(jTable12.getSelectedRow());
                
                
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton53ActionPerformed
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        int rows2Delete = jTable11.getSelectedRowCount();
        
        int[] selectedRows = jTable11.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                
                defTableModel.removeRow(jTable11.getSelectedRow());
                
                
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
                
                
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        try{
            connectDB.setAutoCommit(false);
            java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into payments_approval values(?,initcap(?),?,?,?,?,?,?,?,?,?,?,?,?,?)");
            for (int k = 0; k < jTable1.getRowCount(); k++){
                if (jTable1.getModel().getValueAt(k,0) != null){
                    java.sql.Statement ps = connectDB.createStatement();
                    java.sql.ResultSet rst = ps.executeQuery("select nextval('voucher_no_seq')");
                    while (rst.next())
                        rst.getObject(1).toString();
                    String voucherNo = rst.getObject(1).toString();
                    
                    pstmt11.setObject(1,jTable1.getValueAt(k,5).toString());
                    pstmt11.setObject(2,jTable1.getValueAt(k,1).toString());
                    pstmt11.setObject(3,jTable1.getValueAt(k,3).toString());
                    pstmt11.setObject(4,jTable1.getValueAt(k,4).toString());
                    pstmt11.setBoolean(6,false);
                    pstmt11.setObject(5,"");
                    pstmt11.setObject(7,"");
                    
                    pstmt11.setString(8,""+voucherNo+"");
                    
                    pstmt11.setBoolean(9,false);
                    
                    pstmt11.setDate(10,datenowSql);
                    pstmt11.setBoolean(11,false);
                    pstmt11.setObject(13,jTable1.getValueAt(k,2).toString());
                    pstmt11.setObject(12,null);
                    pstmt11.setObject(14,jTable1.getValueAt(k,0).toString());
                    pstmt11.setObject(15,"Loans");
                }
            }
            pstmt11.executeUpdate();
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            jLabel7.setForeground(java.awt.Color.blue);
            jLabel7.setText("Data Inserted successfully");
            
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            ///// jLabel7.setForeground(java.awt.Color.red);
            // jLabel7.setText("Data not inserted");
            System.out.println(sq.getMessage());
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        try{
            connectDB.setAutoCommit(false);
            
            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into payments_approval values(?,initcap(?),?,?,?,?,?,?,?,?,?,?,?,?,?)");
            for (int j = 0; j < jTable11.getRowCount(); j++){
                if (jTable11.getModel().getValueAt(j,0) != null){
                    java.sql.Statement ps = connectDB.createStatement();
                    java.sql.ResultSet rst = ps.executeQuery("select nextval('voucher_no_seq')");
                    while (rst.next())
                        rst.getObject(1).toString();
                    String voucherNo = rst.getObject(1).toString();
                    
                    pstmt1.setObject(1,jTable11.getValueAt(j,4).toString());
                    pstmt1.setObject(2,jTable11.getValueAt(j,2).toString());
                    pstmt1.setObject(3,jTable11.getValueAt(j,1).toString());
                    pstmt1.setObject(4,jTable11.getValueAt(j,3).toString());
                    pstmt1.setBoolean(6,false);
                    pstmt1.setObject(5,"");
                    pstmt1.setObject(7,"");
                    
                    pstmt1.setString(8,""+voucherNo+"");
                    
                    pstmt1.setBoolean(9,false);
                    
                    pstmt1.setDate(10,datenowSql);
                    pstmt1.setBoolean(11,false);
                    pstmt1.setObject(13,jTable11.getValueAt(j,0).toString());
                    pstmt1.setObject(12,null);
                    pstmt1.setString(14,"");
                    pstmt1.setObject(15,"Shares");
                }
            }
            pstmt1.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            jLabel7.setForeground(java.awt.Color.blue);
            jLabel7.setText("Data Inserted successfully");
            
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            ///// jLabel7.setForeground(java.awt.Color.red);
            // jLabel7.setText("Data not inserted");
            System.out.println(sq.getMessage());
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        
        try {
            connectDB.setAutoCommit(false);
            
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into payments_approval values(?,initcap(?),?,?,?,?,?,?,?,?,?,?,?,?,?)");
            for (int i = 0; i < jTable12.getRowCount(); i++){
                if (jTable12.getModel().getValueAt(i,0) != null){
                    java.sql.Statement ps = connectDB.createStatement();
                    java.sql.ResultSet rst = ps.executeQuery("select nextval('voucher_no_seq')");
                    while (rst.next())
                        rst.getObject(1).toString();
                    String voucherNo = rst.getObject(1).toString();
                    
                    pstmt.setObject(1,jTable12.getValueAt(i,1).toString());
                    pstmt.setObject(2,jTable12.getValueAt(i,0).toString());
                    pstmt.setObject(3,jTable12.getValueAt(i,2).toString());
                    pstmt.setObject(4,jTable12.getValueAt(i,3).toString());
                    pstmt.setBoolean(6,false);
                    pstmt.setObject(5,jTable12.getValueAt(i,4).toString());
                    if(jTable12.getValueAt(i,5) == null) {
                        pstmt.setObject(7,"");
                    }else{
                        pstmt.setObject(7,jTable12.getValueAt(i,5).toString());
                    }
                    pstmt.setString(8,""+voucherNo+"");
                    
                    pstmt.setBoolean(9,false);
                    
                    pstmt.setDate(10,datenowSql);
                    pstmt.setBoolean(11,false);
                    pstmt.setObject(12,null);
                    pstmt.setObject(13,"");
                    pstmt.setString(14,"");
                    pstmt.setObject(15,"Others");
                }
            }
            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            jLabel7.setForeground(java.awt.Color.blue);
            jLabel7.setText("Data Inserted successfully");
            
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            ///// jLabel7.setForeground(java.awt.Color.red);
            // jLabel7.setText("Data not inserted");
            System.out.println(sq.getMessage());
        }// Add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed
    
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        jPanel3.setVisible(false);
        jPanel5.setVisible(false);
        this.invalidate();
        jPanel6.grabFocus();
        this.jPanel6.setVisible(true);
        this.jScrollPane13.setViewportView(jTable12);
        this.validate();
        cmbox = new javax.swing.JComboBox();
        
        try {
            
            // crset2.setCommand("select item_description from order_details where order_no = '"+jComboBox1.getSelectedItem()+"'");
            crset4.setConnectionSource(pConnDB);
            //crset2.execute("select distinct drug_prescribed from general_patient_diagnosis where patient_no = '"+jComboBox1.getSelectedItem()+"'");
            crset4.execute("SELECT activity from activity EXCEPT (SELECT bank_branches.bank_account_name FROM bank_branches) ORDER BY activity");
            
            cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset4, "activity", null, null,null));
            
            javax.swing.table.TableColumn seditor = this.jTable12.getColumn("Description");
            
            seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
            
            cmbox.addActionListener(new java.awt.event.ActionListener() {
                
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    
                    cmboxActionPerformed(evt);
                }
            });
            crset3.close();
        } catch(java.sql.SQLException sqlExecp) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExecp.getMessage());
            
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        jPanel6.setVisible(false);
        jPanel5.setVisible(false);
        this.invalidate();
        jPanel3.grabFocus();
        this.jPanel3.setVisible(true);
        this.jScrollPane11.setViewportView(jTable1);
        this.validate();
        cmbox1 = new javax.swing.JComboBox();
        
        try {
            
            crset1.setConnectionSource(pConnDB);
            crset1.execute("SELECT DISTINCT loan_acc_no FROM approved_loans WHERE paid = false AND Loan_type !='Property Loan' order by loan_acc_no EXCEPT select loan_account_no from payments_approval where approved = 'true'");
            cmbox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "loan_acc_no", null, null,null));
            
            javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Loan Acc. No.");
            
            seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox1));
            
            cmbox1.addActionListener(new java.awt.event.ActionListener() {
                
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    
                    cmbox1ActionPerformed(evt);
                }
            });
            //crset1.close();
            
            
            
        } catch(java.sql.SQLException sqlExecp) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExecp.getMessage());
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        jPanel3.setVisible(false);
        jPanel6.setVisible(false);
        
        this.invalidate();
        jPanel5.grabFocus();
        this.jPanel5.setVisible(true);
        this.jScrollPane12.setViewportView(jTable11);
        this.validate();
        
        
        
        cmbox1 = new javax.swing.JComboBox();
        cmbox2 = new javax.swing.JComboBox();
        try {
            
            // crset2.setCommand("select item_description from order_details where order_no = '"+jComboBox1.getSelectedItem()+"'");
            crset6.setConnectionSource(pConnDB);
            //crset2.execute("select distinct drug_prescribed from general_patient_diagnosis where patient_no = '"+jComboBox1.getSelectedItem()+"'");
            crset6.execute("select DISTINCT member_no from member_resignation ORDER BY member_no EXCEPT select member_no from payments_approval where approved = 'true'");// where "+table+" = '"+jComboBox1.getSelectedItem()+"'");
            
            cmbox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset6, "member_no", null, null,null));
            
            javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Member No.");
            
            seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));
            
            cmbox2.addActionListener(new java.awt.event.ActionListener() {
                
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    
                    cmbox2ActionPerformed(evt);
                }
            });
            
            
            
        } catch(java.sql.SQLException sqlExecp) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExecp.getMessage());
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran2 = cmbox2.getSelectedItem();
        
        int j = jTable11.getSelectedRow();
        if (selectedGuaran2 != null) {
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select member_name,sum(amount_payable - amount_paid) from member_resignation where member_no ='"+selectedGuaran2+"' GROUP BY member_name,member_no");
                
                while (rs.next()){
                    jTable11.setValueAt(rs.getObject(1),j,1);
                    jTable11.setValueAt(rs.getObject(2),j,3);
                    jTable11.setValueAt("Shares Refund",j,2);
                    
                }
                
                java.sql.Statement pstmt1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pstmt1.executeQuery("select code from activity where activity = 'Shares Refund'");
                
                while (rs1.next()){
                    jTable11.setValueAt(rs1.getObject(1),j,4);
                    
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
    }
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    private void cmbox1ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran1 = cmbox1.getSelectedItem();
        
        System.out.println("Selected Guarntor : "+selectedGuaran1);
        
        int i = jTable1.getSelectedRow();
        if (selectedGuaran1 != null) {
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select member_name,member_no,loan_purpose,sum(principal)-sum(debit) from loan_transactions where loan_account_no ='"+selectedGuaran1+"' GROUP BY member_name,member_no,loan_purpose");
                
                while (rs.next()){
                    jTable1.setValueAt(rs.getObject(1),i,3);
                    jTable1.setValueAt(rs.getObject(2),i,2);
                    jTable1.setValueAt(rs.getObject(3),i,1);
                    jTable1.setValueAt(rs.getObject(4),i,4);
                }
                
                java.sql.Statement pstmt1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pstmt1.executeQuery("select code from activity where activity = '"+jTable1.getValueAt(i,1).toString()+"'");
                
                while (rs1.next()){
                    jTable1.setValueAt(rs1.getObject(1),i,5);
                    
                }
                
                
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
    }
    
    
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        
        System.out.println("Selected Guarntor : "+selectedGuaran);
        
        int k = jTable12.getSelectedRow();
        if (selectedGuaran != null) {
            
            try {
                
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rst = pstmt.executeQuery("select code from activity where activity = '"+selectedGuaran+"'");
                while (rst.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable12.setValueAt(rst.getObject(1),k,1);
                }
                
                
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
    }
    
    
    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        
        // Add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated
    
    //private void cmboxActionPerformed(javax.swing.
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.netbeans.lib.sql.NBCachedRowSet crset5;
    private javax.swing.JButton jButton43;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton52;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton jButton31;
    private javax.swing.JScrollPane jScrollPane13;
    private org.netbeans.lib.sql.NBCachedRowSet crset21;
    private javax.swing.JButton jButton42;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton11;
    private javax.swing.JPanel jPanel2;
    private org.netbeans.lib.sql.NBCachedRowSet crset4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTable jTable11;
    private javax.swing.JScrollPane jScrollPane12;
    private org.netbeans.lib.sql.NBCachedRowSet crset8;
    private javax.swing.JTable jTable12;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JButton jButton41;
    private javax.swing.JLabel jLabel7;
    private org.netbeans.lib.sql.NBCachedRowSet crset6;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton13;
    private javax.swing.JPanel jPanel1;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JButton jButton51;
    private javax.swing.JPanel jPanel6;
    private org.netbeans.lib.sql.NBCachedRowSet crset7;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JButton jButton32;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
}
