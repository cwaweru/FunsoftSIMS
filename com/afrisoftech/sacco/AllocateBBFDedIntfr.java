/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.sacco;

/**
 *
 * @author  root
 */
public class AllocateBBFDedIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    javax.swing.table.TableModel tableModel = null;
    
    // javax.swing.table.TableModel tableModel1 = null;
    boolean controlFlag = true;
    
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public AllocateBBFDedIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new javax.swing.JTable();
        jButton51 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new javax.swing.JTable();
        jButton511 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new javax.swing.JTable();
        jButton52 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel81 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel91 = new javax.swing.JLabel();
        datePicker21 = new com.afrisoftech.lib.DatePicker();
        jTextField1 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel9 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton511.setText("Dispose");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Process Monthly Deductions");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('O');
        jButton1.setText("Allocate");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jTable1.setShowHorizontalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        jPanel21.add(jScrollPane1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel2.add(jPanel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        jButton2.setText("Oldest");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton2, gridBagConstraints);

        jButton5.setText("Cancel Deductions");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton5, gridBagConstraints);

        jButton6.setText("Cancel All");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton6, gridBagConstraints);

        jLabel4.setText("Total Allocated");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        getContentPane().add(jLabel4, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTextField2, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.blue, java.awt.Color.magenta, null, null));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter range of TSC Nos. that you want to process now + period start and end", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jTextField4, gridBagConstraints);

        jLabel5.setText("TSC No. to");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jTextField3, gridBagConstraints);

        jLabel3.setText("TSC No. from");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jLabel3, gridBagConstraints);

        jCheckBox1.setForeground(new java.awt.Color(204, 51, 0));
        jCheckBox1.setText("Confirmed ");
        jCheckBox1.setToolTipText("Click To View Invoices");
        jCheckBox1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckBox1, gridBagConstraints);

        jLabel81.setText("Period From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel3.add(jLabel81, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 11);
        jPanel3.add(datePicker1, gridBagConstraints);

        jLabel91.setText("Period To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel3.add(jLabel91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(datePicker21, gridBagConstraints);

        jTextField1.setText("jTextField1");
        jPanel3.add(jTextField1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel1.add(jPanel4, new java.awt.GridBagConstraints());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField9, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jPanel42, gridBagConstraints);

        jLabel2.setText("Allocation form No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel5.add(datePicker2, gridBagConstraints);

        jLabel9.setText("Month Ending");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jLabel9, gridBagConstraints);

        jLabel21.setText("Grand Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jLabel21, gridBagConstraints);

        jTextField11.setEditable(false);
        jTextField11.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField11.setText(".00");
        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });
        jTextField11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField11KeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 12.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel5.add(jTextField11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        setBounds(0, 0, 697, 428);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();       // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField11.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        
        this.jSearchDialog2.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(this.jTextField113.getCaretPosition() < 3){
            System.out.print("Nothing");
        }else{
                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where (upper(second_name||' '||first_name||' '||last_name)) ILIKE '"+jTextField111.getText().toString()+"%' ORDER BY second_name"));
          
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
           /*
            try {
                searchRowSet2.execute("select distinct acc_no,amount_unalloc from db_allocation_forms WHERE acc_no ILIKE '"+jTextField113.getText()+"' and DATE BETWEEN '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker21.getDate().toString()+"' order by acc_no");
                jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                       new org.netbeans.lib.sql.models.TableModel.Column("acc_no", "By-product no.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("amount_unalloc", "Amount.", false)
                  }));
                jSearchScrollPane2.setViewportView(jSearchTable2);
                System.out.println("Cannot sort out");
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
            */
        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();        // Add your handling code here:
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
    }
    private void jTextField11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyReleased
        // Add your handling code here:
        //   float num_b = java.lang.Float.parseFloat(jTextField2.getText());
        
        
    }//GEN-LAST:event_jTextField11KeyReleased
    
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        this.jTextField2.setText(jTextField11.getText().toString());   // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField11.getText());
        
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 5) != null) {
            double amtToalloc = java.lang.Double.parseDouble(jTextField2.getText());
            double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
            
            double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
            double balance = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
            
            
            
            if (floatCol3 <= amtToalloc && amtToalloc >= 0){
                
                double resVal =floatCol2 - floatCol3;
                
                
                jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 6);
            }
            else
                if (floatCol3 > amtToalloc && amtToalloc > 0){
                    javax.swing.JOptionPane.showMessageDialog(this,"You cannot allocate amount higher than the amount to allocate","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
            
            
            this.tableModelTableChanged();
        }else
            if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 5) == null) {
                jTable1.setValueAt(new java.lang.Double(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()), jTable1.getSelectedRow(), 6);
                this.tableModelTableChanged();
            }
        
    }//GEN-LAST:event_jTable1KeyReleased

    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        jSearchDialog1.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        
    }//GEN-LAST:event_jTextField1111CaretUpdate
    /*
    
    public java.lang.Object[] getListofStaffNos() {
        
        java.lang.Object[] listofStaffNos = null;
        
        java.util.Vector listStaffNoVector = new java.util.Vector(1,1);
        
        
        try {
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rSet1 = stmt1.executeQuery("select payroll_no from process_sacco WHERE allocated = 'false' and payroll_no between '"+this.jTextField3.toString()+"' and '"+this.jTextField4.toString()+"' and DATE BETWEEN '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker21.getDate().toString()+"' and trans_type ilike 'bbf'");
            
            
            while (rSet1.next()) {
                
                listStaffNoVector.addElement(rSet1.getObject(1).toString());
                
            }
            
        }catch (java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
            
        }
        
        listofStaffNos = listStaffNoVector.toArray();
        System.out.println("Done list of Staff Nos ...");
        return listofStaffNos;
    }
    
    */
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        
        String staffNo = null;
        this.jButton1.setEnabled(true);
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
      //  java.lang.Object listofStaffNos[] = this.getListofStaffNos();
        
        
        
      //  for (int j = 0; j < listofStaffNos.length; j++) {
      //      System.out.println( "This are the # selected [ "+listofStaffNos[j].toString()+ "]");
            // this.populateTable1(listofStaffNos[j].toString());
            
     //   }
        this.populateTable1();
      
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() ==7) {
            if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 7).toString()) == java.lang.Boolean.TRUE) {
                
                // if(this.jTextField2.getText().equalsIgnoreCase("0.0")){
                if (jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()) != null) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), 2) != null){
                        this.tableModelTableChanged1();
                    }
                }
                
                
            }else{
                if (jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()) != null) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), 3) != null){
                        this.tableModelTableChanged1();
                    }
                }
            }
            this.tableModelTableChanged();
        }
    }//GEN-LAST:event_jTable1MouseClicked
    
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        double zeros = 0.00;
        double resFloat = java.lang.Double.parseDouble(jTextField11.getText());;
        double resFloat1 = java.lang.Double.parseDouble(jTextField2.getText());;
        
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 5) != null) {
                resFloat = resFloat - Double.parseDouble(jTable1.getModel().getValueAt(i, 5).toString());
                
            }
        }
        
        if (resFloat > 0){
            jTextField2.setText(java.lang.String.valueOf(resFloat));
        } else
            if (resFloat < 0){
                javax.swing.JOptionPane.showMessageDialog(this,"You cannot allocate amount higher than the Allocatable Balance","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTable1.setValueAt(new java.lang.Double(0), jTable1.getSelectedRow(), 5);
            }
        
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
        double resFloat = java.lang.Double.parseDouble(jTextField11.getText());
        double resFloat1 = java.lang.Double.parseDouble(jTextField2.getText());;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 5) != null) {
                
                resFloat = resFloat - Double.parseDouble(jTable1.getModel().getValueAt(i, 5).toString());
                
            }
        }
        if (resFloat1> 0){
            jTextField2.setText(java.lang.String.valueOf(resFloat));
        } else
            if (resFloat < 0){
                javax.swing.JOptionPane.showMessageDialog(this,"You cannot allocate amount higher than the amount to allocate","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTable1.setValueAt(new java.lang.Double(0), jTable1.getSelectedRow(), 5);
                
            }
        
    }
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        
        java.sql.Connection con;
        String vouchNo = null;
        String user = null;
        String invoiceNo = null;
        String KRA = null;
        String Code = null;
        String actNames1 = null;
        String actCode1 = null;
        String rNo = null;
        String Payer = null;
        String Vats = null;
        String glAcc = null;
        String Activity = null;
        String userName = null;
        String descriptions = null;
        double balance = 0.00;
        String loanNo = null;
        String Alloc = null;
        String User = null;
        String transNo = null;
        String receiptNo = null;
        
        try {
            
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rsts = pss1.executeQuery("select current_user,nextval('alloc_seq')");
            while (rsts.next()){
                user = rsts.getObject(1).toString();
                Alloc = rsts.getObject(2).toString();
            }
            
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq'),current_user");
            while (rst.next()){
                transNo = rst.getObject(1).toString();
            }
            
            java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq'),5,0)");
            while (rs22.next()){
                vouchNo = rs22.getObject(1).toString();
            }
            
            java.sql.Statement ps221 = connectDB.createStatement();
            java.sql.ResultSet rs221 = ps221.executeQuery("select supplier_name,code from st_suppliers where category ilike 'KRA%'");
            while (rs221.next()){
                KRA = rs221.getObject(1).toString();
                Code = rs221.getObject(2).toString();
            }
            
            java.sql.Statement pss11 = connectDB.createStatement();
            java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
            while (rsts1.next()){
                actCode1 = rsts1.getObject(1).toString();
                actNames1 = rsts1.getObject(2).toString();
                user = rsts1.getObject(3).toString();
            }
            
            java.sql.Statement pss11q = connectDB.createStatement();
            java.sql.ResultSet rsts1q = pss11q.executeQuery("select code,activity from pb_activity where activity_category ='EV'");
            while (rsts1q.next()){
                Vats = rsts1q.getObject(1).toString();
            }
            
            
            try {
                connectDB.setAutoCommit(false);
                
                java.sql.Statement pss = connectDB.createStatement();
                java.sql.ResultSet rstsd = pss.executeQuery("select nextval('receipt_no_seq')");
                while (rstsd.next()){
                    receiptNo = rstsd.getObject(1).toString();
                }
                
                for (int i = 0; i < jTable1.getModel().getRowCount(); i++){
                    double ded = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
                    if(jTable1.getValueAt(i,5) != null){
                        if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 7).toString()) == java.lang.Boolean.TRUE) {
                            java.sql.PreparedStatement pstmtDD = connectDB.prepareStatement("insert into deductions values(?,?,?,?,?,?,?,?,?,?,?)");
                            
                            pstmtDD.setObject(1,jTable1.getValueAt(i,2).toString());
                            pstmtDD.setObject(2,jTable1.getValueAt(i,1).toString());
                            pstmtDD.setObject(3,jTable1.getValueAt(i,0).toString());
                            if(ded < 0.00){
                                pstmtDD.setObject(4,"BBF Over-Deduction");
                            }else{
                                pstmtDD.setObject(4,"BBF Deduction Balance");
                            }
                            pstmtDD.setObject(5,jTable1.getValueAt(i,6).toString());
                            pstmtDD.setBoolean(6,false);
                            pstmtDD.setString(7,datePicker2.getDate().toString());
                            pstmtDD.setObject(8,"0.00");
                            pstmtDD.setObject(9,jTable1.getValueAt(i,4).toString());
                            pstmtDD.setString(10,""+transNo+"");
                            pstmtDD.setObject(11,user);
                            pstmtDD.executeUpdate();
                            
                            
                            java.sql.PreparedStatement pstmtD = connectDB.prepareStatement("insert into db_allocation values(?,?,?,?,?,?,?,?,?,?,?,?)");
                            
                            pstmtD.setObject(1,jTable1.getValueAt(i,2).toString());
                            pstmtD.setObject(2,"'now'");
                            pstmtD.setObject(3,"Allocation");
                            pstmtD.setObject(4,Alloc);
                            pstmtD.setObject(5,"");
                            if(jTextField3.getText().equals(null) || jTextField3.getText().equals("")){
                                pstmtD.setObject(6,"00");
                            }else{
                                pstmtD.setObject(6,jTable1.getValueAt(i,0).toString());
                            }
                            pstmtD.setObject(7,jTextField11.getText());
                            pstmtD.setObject(8,jTable1.getValueAt(i,5).toString());
                            pstmtD.setObject(9,jTextField9.getText());
                            pstmtD.setObject(10,user);
                            pstmtD.setObject(11,jTable1.getValueAt(i,2).toString());
                            pstmtD.setString(12,datePicker2.getDate().toString());
                            pstmtD.executeUpdate();
                            
                            
                            java.sql.PreparedStatement pstmtDP = connectDB.prepareStatement("update db_allocation_forms set alloc_status = 'true' where acc_no ilike '"+jTextField9.getText()+"'");
                            pstmtDP.executeUpdate();
                            
                            java.sql.PreparedStatement pstmtA = connectDB.prepareStatement("update process_sacco set allocated = 'true' WHERE allocated = 'false' and payroll_no = '"+jTable1.getModel().getValueAt(i,2).toString()+"' and DATE BETWEEN '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker21.getDate().toString()+"'");
                            pstmtA.executeUpdate();
                            
                            
                            
                            
                           // if (jTable1.getModel().getValueAt(i, 4).toString().equalsIgnoreCase("shares")){
                                double shareAmt = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
                                double AmtDue = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                                 double AmtAlloc = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
                              
                                double netShare = shareAmt;
                                double NetIfOverDeducted = AmtDue;
                                
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into shares_transactions values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt.setObject(1,jTable1.getValueAt(i,0).toString());
                                pstmt.setObject(2,jTable1.getValueAt(i,1).toString());
                                pstmt.setString(3,jTextField9.getText());
                                pstmt.setString(4,jTextField9.getText());
                                pstmt.setString(5,"Tsc Building Scheme");
                                pstmt.setString(6,"Knut Nairobi Branch");
                                pstmt.setString(7,"");
                                pstmt.setString(8,"");
                                pstmt.setString(9,"");
                                pstmt.setString(10,"BBF");
                                pstmt.setString(11,"0.00");
                                if(shareAmt > AmtDue){
                                    pstmt.setDouble(12,NetIfOverDeducted);
                                }else{
                                    pstmt.setDouble(12,netShare);
                                }
                                pstmt.setString(13,"");
                                pstmt.setString(14,"");
                                pstmt.setString(15,datePicker2.getDate().toString());
                                pstmt.setString(16,""+transNo+"");
                                pstmt.setBoolean(17,false);
                                pstmt.setString(18,""+receiptNo+"");
                                pstmt.setString(19,"");
                                pstmt.setString(20,"BBF Receipts");
                                pstmt.setObject(21,jTable1.getValueAt(i,2).toString());
                                pstmt.setObject(22,jTable1.getValueAt(i,5).toString());
                                pstmt.setObject(23,jTable1.getValueAt(i,6).toString());
                                pstmt.setObject(24,"0.00");
                                pstmt.setBoolean(25,false);
                                pstmt.setString(26,"ORDINARY");
                                pstmt.setString(27,"0.00");
                                pstmt.executeUpdate();
                                
                               // java.sql.PreparedStatement pstmt812 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+netShare+"',mtd_credit = mtd_credit + '"+netShare+"' where code = '"+glAcc+"'");
                               // pstmt812.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt812A = connectDB.prepareStatement("UPDATE bbf_update SET ytd_credit = ytd_credit + '"+netShare+"' where payroll_no = '"+jTable1.getModel().getValueAt(i,2).toString()+"'");
                                pstmt812A.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt812AB = connectDB.prepareStatement("UPDATE db_allocation_forms set amount_unalloc = amount_unalloc - '"+jTable1.getModel().getValueAt(i,5).toString()+"' where acc_no = '"+jTextField9.getText()+"' and DATE BETWEEN '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker21.getDate().toString()+"'");
                                pstmt812AB.executeUpdate();
                                
                                 java.sql.PreparedStatement pstmt30 = connectDB.prepareStatement("update process_sacco set amt_deducted = '"+AmtAlloc+"' WHERE allocated = 'true' and payroll_no = '"+jTable1.getModel().getValueAt(i,2).toString()+"' and DATE BETWEEN '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker21.getDate().toString()+"'");
                                pstmt30.executeUpdate();
                                
                                
                            }
                        
                    }
                    }
                
                connectDB.commit();
                
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully'","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }   catch(java.sql.SQLException sq){
                sq.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                
            }
            
            
        }   catch(java.sql.SQLException sq){
            sq.printStackTrace();
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
        
        // Add your handling code here:*/
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void populateTable1() {
        int i = 0;
        java.lang.Object tscNo = null;
        
        try {
            
          //  java.lang.Object listofStaffNos[] = this.getListofStaffNos();
            
            
          //   for (int j = 0; j < listofStaffNos.length; j++) {
             
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select mbr_no,  mbr_names, payroll_no::int4, total_due::numeric, 'BBF PAYMENTS - TSC' from process_sacco WHERE allocated = 'false' and payroll_no between '"+this.jTextField3.getText().toString()+"' and '"+this.jTextField4.getText().toString()+"' and DATE BETWEEN '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker21.getDate().toString()+"' AND trans_type ilike 'bbf'");// '"+listofStaffNos[j]+"'order by ld.staff_no  ");// and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
            
            while (rsetTable1.next()) {
                
                System.out.println("Working at table row "+i);
                jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                 
                i++;
            }
            
         //    }
        } catch(java.sql.SQLException sqlExec) {
            
            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
    }
    
    
    public void tableModelTableChanged1() {
        double totals = 0.00;
        double resFloat = 0.00;
        double amt = java.lang.Double.parseDouble(this.jTextField11.getText());
        double amt1 = java.lang.Double.parseDouble(this.jTextField2.getText());
        double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
        double bal = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
        double orig = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        
        int i = 0;
        if(amt > 0){
            for (int j = 0; j < jTable1.getRowCount(); j++) {
                
                jTable1.getModel().removeTableModelListener(new javax.swing.event.TableModelListener() {
                    
                    public void tableChanged(javax.swing.event.TableModelEvent evt) {
                        
                    }
                    
                });
                if(this.jTable1.getModel().getValueAt(j,7) != null){
                    
                    
                    jTextField2.setForeground(java.awt.Color.BLACK);
                    
                    
                    if(amt1 > floatCol2) {
                        
                        jTable1.setValueAt(new java.lang.Double(resFloat), jTable1.getSelectedRow(), 6);
                        
                        double balance = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
                        
                        jTable1.setValueAt(new java.lang.Double(orig-balance), jTable1.getSelectedRow(), 5);
                        
                    }else{
                        
                        
                        if (amt1 <= floatCol2 && amt1 >= 0){
                            
                            jTable1.setValueAt(new java.lang.Double(java.lang.Math.round(floatCol2-amt1)),jTable1.getSelectedRow(),6);
                            double balance = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
                            
                            jTable1.setValueAt(new java.lang.Double(amt1), jTable1.getSelectedRow(), 5);
                            
                            jTextField2.setForeground(java.awt.Color.RED);
                            
                        }
                    }
                    
                    
                    amt = amt - Double.parseDouble(jTable1.getModel().getValueAt(j, 3).toString());
                    
                    i++;
                    
                    
                    
                }
                if (amt > 0){
                    jTextField2.setText(Double.toString(amt));
                }else{
                    jTextField2.setText(Double.toString(0.00));
                    
                }
            }
            
        }else{
            
            jTable1.setValueAt(new java.lang.Double(floatCol2),jTable1.getSelectedRow(),6);
            
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker21;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
    
}
