/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.laboratory;

/**
 *
 * @author  root
 */
public class LabRegIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    
    private javax.swing.JComboBox cmbox;
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public LabRegIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset21 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        try {
            searchRowSet = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new javax.swing.JTable();
        jButton41 = new javax.swing.JButton();
        jButton511 = new javax.swing.JButton();
        try {
            searchRowSet1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        crset1.setCommand("select service_type from pb_operating_parameters where category = 'WP'");
        crset1.setConnectionSource(pConnDB);
        crset21.setConnectionSource(pConnDB);
        crset3.setConnectionSource(pConnDB);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(new javax.swing.border.EtchedBorder());
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
            new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Service type", false),
            new org.netbeans.lib.sql.models.TableModel.Column("price", "Price", true),
            new org.netbeans.lib.sql.models.TableModel.Column("gl_account", "Gl account", false)
        }));
        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        searchRowSet.setConnectionSource(pConnDB);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton41, gridBagConstraints);

        jButton511.setText("Close");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        searchRowSet1.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Laboratory Register");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Select patient here"));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Registration No.", "Patient Name", "Specimen", "Examination(Test)", "Billing Status", "User Name", "Receipt No/Slip No/Ip No"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setEditingColumn(jTable1.getSelectedColumn());
        jTable1.setEditingRow(jTable1.getSelectedRow());
        jTable1.setShowHorizontalLines(false);
        cmbox = new javax.swing.JComboBox();
        /*        crset21.setCommand("select service_type FROM pb_operating_parameters WHERE main_service = 'Wards' order by service_type");
        crset21.setConnectionSource(pConnDB);

        cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset21, "service_type", null, null, null));
        javax.swing.table.TableColumn s1 = this.jTable1.getColumn("Service");
        s1.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });
        */
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 7; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                //if (i == 2) {
                    column.setPreferredWidth(200);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }

        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField7.setEditable(false);
        jTextField7.setText("WardProcedures");
        jTextField7.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField7.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        jPanel2.add(jTextField7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabel53.setText("Amount KShs.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel53, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 40);
        getContentPane().add(jTextField3, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jCheckBox1.setText("Walk In");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckBox1, gridBagConstraints);

        jCheckBox4.setText("Inpatient");
        buttonGroup1.add(jCheckBox4);
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel3.add(jCheckBox4, gridBagConstraints);

        jCheckBox3.setText("Outpatient");
        buttonGroup1.add(jCheckBox3);
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel3.add(jCheckBox3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(datePicker1, gridBagConstraints);

        jLabel1.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel1, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.TitledBorder(""));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton1, gridBagConstraints);

        jButton6.setMnemonic('r');
        jButton6.setText("Remove Row");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        jPanel4.add(jButton6, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel4, gridBagConstraints);

        setBounds(0, 0, 697, 390);
    }//GEN-END:initComponents
    
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    
    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed
    
    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        jSearchDialog1.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTable1.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable1.getSelectedRow(), 1);
        //   jButton301.setEnabled(true);
        
        jSearchDialog1.dispose();           // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        
        if(this.jCheckBox3.isSelected()){
            if(jTextField1111.getCaretPosition() < 3){
                
                System.out.println("Nothing");
            }else{
                try {
                    
                    searchRowSet1.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_patient_register where (upper(second_name||' '||first_name||' '||last_name))  ILIKE '"+jTextField1111.getText()+"%' order by second_name");
                    
                    jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                    jSearchTable1.setShowHorizontalLines(false);
                    jSearchScrollPane1.setViewportView(jSearchTable1);
                    
                    
                } catch(java.sql.SQLException sqlExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
        }else{
            if(this.jCheckBox4.isSelected()){
                if(jTextField1111.getCaretPosition() < 3){
                    
                    System.out.println("Nothing");
                }else{
                    try {
                        
                        searchRowSet1.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1111.getText()+"%' order by second_name");
                        
                        jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                            // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                        jSearchTable1.setShowHorizontalLines(false);
                        jSearchScrollPane1.setViewportView(jSearchTable1);
                        
                        
                    } catch(java.sql.SQLException sqlExec) {
                        
                        javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                        
                    }
                }
            }else{
                if(this.jCheckBox1.isSelected()){
                    if(jTextField1111.getCaretPosition() < 3){
                        
                        System.out.println("Nothing");
                    }else{
                        try {
                            
                            searchRowSet1.execute("SELECT 'wk' as wk,patient_name from pb_walkins where patient_name ILIKE '"+jTextField1111.getText()+"%' order by patient_name");
                            
                            jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                                new org.netbeans.lib.sql.models.TableModel.Column("wk", "patient_no", false),
                                new org.netbeans.lib.sql.models.TableModel.Column("patient_name", "Name", false)
                                // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                                // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                            }));
                            jSearchTable1.setShowHorizontalLines(false);
                            jSearchScrollPane1.setViewportView(jSearchTable1);
                            
                            
                        } catch(java.sql.SQLException sqlExec) {
                            
                            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                            
                        }
                    }
                }
            }
            
        }
        
        
       /*
        if(jTextField1111.getCaretPosition() < 3){
        
            System.out.println("Nothing");
        }else{
        
        
            try {
                  searchRowSet1.execute("SELECT patient_no,patient_name from hp_admission where patient_name ILIKE '"+jTextField1111.getText().toString()+"%' AND discharge = false ORDER BY patient_name");
        
             //   searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where (upper(first_name||' '||second_name||' '||last_name)) ILIKE '"+jTextField111.getText().toString()+"%' EXCEPT select patient_no,patient_name from hp_admission where patient_name ILIKE '"+jTextField111.getText().toString()+"%' ORDER BY name");
                //   searchRowSet.execute();
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where first_name '~ '~"+jTextField11.getText()+"' order by name");
        
                jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_name", "Name", false),
                //    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                //    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                }));
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);
        
        
            } catch(java.sql.SQLException sqlExec) {
        
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        
            }
        }
        */// Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
   /* private void searchButtonClicked() {
    
        System.out.println("Showing dialog");
    
        java.awt.Point point = this.jTextField12.getLocationOnScreen();
    
        jSearchDialog1.setSize(400,200);
    
        jSearchDialog1.setLocation(point);
    
        jSearchDialog1.show();
    
    }
    */
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    private void cmboxMouseClicked1() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable1.getLocationOnScreen();
        jSearchDialog1.setSize(400,200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.show();
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked();
        }
        
        if (jTable1.getSelectedColumn() == 1) {
            
            this.cmboxMouseClicked1();
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable1.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.show();
    }
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable1.getSelectedRow(), 1);
        //  jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable1.getSelectedRow(), 4);
        
        jSearchDialog.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        
        if(this.jCheckBox3.isSelected()){
            if(jTextField111.getCaretPosition() < 3){
                
                System.out.println("Nothing");
            }else{
                try {
                    
                    searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_patient_register where patient_no ILIKE '"+jTextField111.getText()+"%' order by patient_no");
                    
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);
                    
                    
                } catch(java.sql.SQLException sqlExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
        }else{
            if(this.jCheckBox4.isSelected()){
                if(jTextField111.getCaretPosition() < 3){
                    
                    System.out.println("Nothing");
                }else{
                    try {
                        
                        searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField111.getText()+"%' order by patient_no");
                        
                        jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                            // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                        jSearchTable.setShowHorizontalLines(false);
                        jSearchScrollPane.setViewportView(jSearchTable);
                        
                        
                    } catch(java.sql.SQLException sqlExec) {
                        
                        javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                        
                    }
                }
            }
        }     // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
        
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
            
            double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
            
            double resVal = floatCol2 * floatCol3;
            
            
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
            
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                
                if (jTable1.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            this.tableModelTableChanged();
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable1.getSelectedRow();
        
        if (selectedGuaran != null) {
            
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"'");
                
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable1.setValueAt(rs.getObject(1),i,2);
                    jTable1.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
        
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //   jTextField1.setText("");
        // jTextField2.setText("");
        //        jTextField4.setText("");
        //        jTextField5.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        
        //   this.jComboBox131.setSelectedItem(null);
        jTextField3.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String billNo = null;
        
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        try {
            connectDB.setAutoCommit(false);
            //            if(!(jTextField41.getText().equals("Cash") ||jTextField41.getText().equals(""))){
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            while (rse12.next())
                
                patientAcc = rse12.getObject(1).toString();
            AccDesc = rse12.getObject(2).toString();
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
            while (rst11.next())
                
                rst11.getObject(1).toString();
            billNo = rst11.getObject(1).toString();
            user = rst11.getObject(2).toString();
            
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next())
                rst.getObject(1).toString();
            
            transNo = rst.getObject(1).toString();
            
            for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getModel().getValueAt(i,0) != null){
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity from pb_activity where code ='"+jTable1.getModel().getValueAt(i,4).toString()+"'");
                    while (rse121.next())
                        
                        glAcc = rse121.getObject(1).toString();
                    
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                    //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                    
                    
                    //                    pstmt.setString(1,jTextField12.getText());
                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                    //                    pstmt.setString(3,jTextField2.getText());
                    //                    pstmt.setString(4,jTextField41.getText());
                    pstmt.setString(5,billNo);
                    pstmt.setString(7,scheme);
                    pstmt.setString(6,cardNo);
                    pstmt.setString(8,cardName);
                    pstmt.setString(9,isurer);
                    pstmt.setString(10,expDate);
                    pstmt.setString(11,"");
                    pstmt.setObject(12,jTable1.getValueAt(i,3).toString());
                    pstmt.setString(13,"00");
                    pstmt.setString(14,"'now'");
                    pstmt.setObject(15,patientAcc);
                    pstmt.setString(16,glAcc);
                    pstmt.setObject(17,jTable1.getValueAt(i,1).toString());
                    pstmt.setObject(18,staffNo);
                    pstmt.setBoolean(19,true);
                    pstmt.setString(20,"Billing");
                    pstmt.setBoolean(21,false);
                    pstmt.setString(22,AccDesc);
                    pstmt.setString(23,billNo);
                    pstmt.setString(24,user);
                    pstmt.setString(25,"");
                    pstmt.setString(26,"Inpatient");
                    pstmt.executeUpdate();
                    
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                    pstmt2.setString(2,glAcc);
                    //                    pstmt2.setString(3,jTextField12.getText());
                    ///                    pstmt2.setString(4,jTextField1.getText());
                    pstmt2.setString(5,"");
                    pstmt2.setString(6,"");
                    pstmt2.setString(7,"");
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,"");
                    pstmt2.setString(10,"");
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                    pstmt2.setString(15,"Billing");
                    pstmt2.setString(16,"0.00");
                    pstmt2.setObject(17,jTable1.getValueAt(i,3).toString());
                    pstmt2.setString(18,"'now'");
                    pstmt2.setString(19,transNo);
                    pstmt2.setString(20,"false");
                    pstmt2.setString(21,"false");
                    pstmt2.setString(22,"false");
                    pstmt2.setString(23,user);
                    pstmt2.executeUpdate();
                }
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            //            jTextField1.setText("");
            //            jTextField2.setText("");
            jTextField3.setText("");
            for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
            
            //jTextField12.setText("");
            jTextField3.setText("0.00");
            
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 0) != null) {
                
                //    if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        
        
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 0) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField6;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JTextField jTextField1111;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private javax.swing.JPanel jPanel4;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField7;
    private org.netbeans.lib.sql.NBCachedRowSet crset21;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton6;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton41;
    private javax.swing.JLabel jLabel7;
    private javax.swing.ButtonGroup buttonGroup1;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jButton511;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JButton jButton4;
    private javax.swing.JTable jSearchTable1;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
}
