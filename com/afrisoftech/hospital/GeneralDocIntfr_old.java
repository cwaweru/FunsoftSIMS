/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.hospital;

import com.sun.star.lib.uno.environments.java.java_environment;

/**
 *
 * @author  root
 */
public class GeneralDocIntfr_old extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    com.afrisoftech.lib.DBObject dbObject;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    java.sql.Connection connectDB = null;
    private GeneralDocIntfr_old.SearchThread searchThread = null;
    private GeneralDocIntfr_old.SearchServicesThread searchServicesThread = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    private boolean DirectRev;
    
    
    public GeneralDocIntfr_old(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        searchThread = new GeneralDocIntfr_old.SearchThread();
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new com.afrisoftech.dbadmin.JTable();
        jButton421 = new javax.swing.JButton();
        jButton521 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton911 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog211 = new javax.swing.JDialog();
        jSearchPanel211 = new javax.swing.JPanel();
        jTextField11311 = new javax.swing.JTextField();
        jSearchScrollPane211 = new javax.swing.JScrollPane();
        jSearchTable211 = new com.afrisoftech.dbadmin.JTable();
        jButton4211 = new javax.swing.JButton();
        jButton5211 = new javax.swing.JButton();
        jSearchDialog12 = new javax.swing.JDialog();
        jSearchPanel12 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane12 = new javax.swing.JScrollPane();
        jSearchTable12 = new com.afrisoftech.dbadmin.JTable();
        jButton912 = new javax.swing.JButton();
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        jButton9111 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jPanel21 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jTextField41 = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();

        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select distinct main_service from pb_operating_parameters  where category = 'CA'");
            while (rset.next()){
                jTextField5.setText(rset.getObject(1).toString());

            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        jTextField71 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel531 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel71 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton11 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jPanel111 = new javax.swing.JPanel();
        jPanel111.setVisible(false);
        jScrollPane211 = new javax.swing.JScrollPane();
        jTable111 = new com.afrisoftech.dbadmin.JTable();
        jPanel211 = new javax.swing.JPanel();
        jLabel911 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jTextField121 = new javax.swing.JTextField();
        jLabel211 = new javax.swing.JLabel();
        jLabel311 = new javax.swing.JLabel();
        jTextField211 = new javax.swing.JTextField();
        jTextField411 = new javax.swing.JTextField();
        jPanel411 = new javax.swing.JPanel();
        jTextField911 = new javax.swing.JTextField();
        searchButton11 = new javax.swing.JButton();
        jTextField51 = new javax.swing.JTextField();

        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select distinct main_service from pb_operating_parameters  where category = 'CA'");
            while (rset.next()){
                jTextField51.setText(rset.getObject(1).toString());

            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        jTextField711 = new javax.swing.JTextField();
        jLabel411 = new javax.swing.JLabel();
        jLabel5311 = new javax.swing.JLabel();
        jTextField311 = new javax.swing.JTextField();
        jSeparator111 = new javax.swing.JSeparator();
        jLabel711 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton111 = new javax.swing.JButton();
        jButton611 = new javax.swing.JButton();
        jButton311 = new javax.swing.JButton();
        jButton411 = new javax.swing.JButton();
        jButton511 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jCheckBox31 = new javax.swing.JCheckBox();
        jCheckBox41 = new javax.swing.JCheckBox();
        jCheckBox61 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog21.setUndecorated(true);
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });

        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton421.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton421, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Close");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });

        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton911.setText("Close");
        jButton911.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton911ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton911, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        jSearchDialog211.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog211.setUndecorated(true);
        jSearchPanel211.setLayout(new java.awt.GridBagLayout());

        jSearchPanel211.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11311.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11311CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel211.add(jTextField11311, gridBagConstraints);

        jSearchTable211.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable211.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable211.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable211MouseClicked(evt);
            }
        });

        jSearchScrollPane211.setViewportView(jSearchTable211);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel211.add(jSearchScrollPane211, gridBagConstraints);

        jButton4211.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel211.add(jButton4211, gridBagConstraints);

        jButton5211.setText("Close");
        jButton5211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5211ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel211.add(jButton5211, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog211.getContentPane().add(jSearchPanel211, gridBagConstraints);

        jSearchDialog12.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog12.setUndecorated(true);
        jSearchPanel12.setLayout(new java.awt.GridBagLayout());

        jSearchPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1112CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel12.add(jTextField1112, gridBagConstraints);

        jSearchTable12.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable12MouseClicked(evt);
            }
        });

        jSearchScrollPane12.setViewportView(jSearchTable12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel12.add(jSearchScrollPane12, gridBagConstraints);

        jButton912.setText("Close");
        jButton912.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton912ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel12.add(jButton912, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog12.getContentPane().add(jSearchPanel12, gridBagConstraints);

        jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog111.setUndecorated(true);
        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

        jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11111ActionPerformed(evt);
            }
        });
        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel111.add(jTextField11111, gridBagConstraints);

        jSearchTable111.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable111MouseClicked(evt);
            }
        });

        jSearchScrollPane111.setViewportView(jSearchTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

        jButton9111.setText("Close");
        jButton9111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel111.add(jButton9111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Consultants Ledger");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient here"));
        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Service", "Quantity", "Price", "Total", "Gl Account", "Doctor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.setGridColor(new java.awt.Color(204, 204, 255));
        javax.swing.table.TableColumn column1 = null;
        for (int i = 0; i < 6; i++) {
            column1 = jTable11.getColumnModel().getColumn(i);
            if (i == 0 | i == 5) {

                column1.setPreferredWidth(300); //sport column is bigger
            } else {

                //if (i == 2) {
                    column1.setPreferredWidth(150);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        jTable11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable11KeyReleased(evt);
            }
        });
        jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable11MouseClicked(evt);
            }
        });

        jScrollPane21.setViewportView(jTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel11.add(jScrollPane21, gridBagConstraints);

        jPanel21.setLayout(new java.awt.GridBagLayout());

        jLabel91.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel91, gridBagConstraints);

        jLabel11.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel11, gridBagConstraints);

        jTextField12.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel21.add(jTextField12, gridBagConstraints);

        jLabel21.setText("Revenue Dep.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel21, gridBagConstraints);

        jLabel31.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel31, gridBagConstraints);

        jTextField21.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel21.add(jTextField21, gridBagConstraints);

        jTextField41.setEditable(false);
        jTextField41.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField41.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jTextField41, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField91.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jTextField91, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jPanel41, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jTextField5, gridBagConstraints);

        jTextField71.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel21.add(jTextField71, gridBagConstraints);

        jLabel41.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel41, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jPanel21, gridBagConstraints);

        jLabel531.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jLabel531, gridBagConstraints);

        jTextField31.setEditable(false);
        jTextField31.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField31.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 40);
        jPanel11.add(jTextField31, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jSeparator11, gridBagConstraints);

        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jLabel71, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton11.setMnemonic('O');
        jButton11.setText("Ok");
        jButton11.setToolTipText("Click here enter data");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton11, gridBagConstraints);

        jButton61.setMnemonic('r');
        jButton61.setText("Remove Row");
        jButton61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton61ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jButton61, gridBagConstraints);

        jButton31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton31.setMnemonic('l');
        jButton31.setText("Clear");
        jButton31.setToolTipText("Click here to clear textfields");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton31, gridBagConstraints);

        jButton41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton41.setMnemonic('C');
        jButton41.setText("Close");
        jButton41.setToolTipText("Click here to close window");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton41, gridBagConstraints);

        jButton51.setMnemonic('h');
        jButton51.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel11, gridBagConstraints);

        jPanel111.setLayout(new java.awt.GridBagLayout());

        jPanel111.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient here"));
        jTable111.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Service", "Quatity", "Price", "Total", "Gl Account", "Doctor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable111.setGridColor(new java.awt.Color(204, 204, 255));
        jTable111.setShowHorizontalLines(false);
        javax.swing.table.TableColumn column111 = null;
        for (int i = 0; i < 6; i++) {
            column111 = jTable111.getColumnModel().getColumn(i);
            if (i == 0 | i == 5) {

                column111.setPreferredWidth(300); //sport column is bigger
            } else {

                //if (i == 2) {
                    column111.setPreferredWidth(150);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        jTable111.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable111KeyReleased(evt);
            }
        });
        jTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable111MouseClicked(evt);
            }
        });

        jScrollPane211.setViewportView(jTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        jPanel111.add(jScrollPane211, gridBagConstraints);

        jPanel211.setLayout(new java.awt.GridBagLayout());

        jLabel911.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel911, gridBagConstraints);

        jLabel111.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel111, gridBagConstraints);

        jTextField121.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel211.add(jTextField121, gridBagConstraints);

        jLabel211.setText("Revenue Dep.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel211, gridBagConstraints);

        jLabel311.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel311, gridBagConstraints);

        jTextField211.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel211.add(jTextField211, gridBagConstraints);

        jTextField411.setEditable(false);
        jTextField411.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField411.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jTextField411, gridBagConstraints);

        jPanel411.setLayout(new java.awt.GridBagLayout());

        jPanel411.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField911.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel411.add(jTextField911, gridBagConstraints);

        searchButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton11.setToolTipText("Search");
        searchButton11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton11.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton11.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel411.add(searchButton11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jPanel411, gridBagConstraints);

        jTextField51.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jTextField51, gridBagConstraints);

        jTextField711.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel211.add(jTextField711, gridBagConstraints);

        jLabel411.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel411, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jPanel211, gridBagConstraints);

        jLabel5311.setText("Amount KShs.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jLabel5311, gridBagConstraints);

        jTextField311.setEditable(false);
        jTextField311.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField311.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 10);
        jPanel111.add(jTextField311, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel111.add(jSeparator111, gridBagConstraints);

        jLabel711.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel111.add(jLabel711, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jButton111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton111.setMnemonic('O');
        jButton111.setText("Ok");
        jButton111.setToolTipText("Click here enter data");
        jButton111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton111, gridBagConstraints);

        jButton611.setMnemonic('r');
        jButton611.setText("Remove Row");
        jButton611.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton611ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(jButton611, gridBagConstraints);

        jButton311.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton311.setMnemonic('l');
        jButton311.setText("Clear");
        jButton311.setToolTipText("Click here to clear textfields");
        jButton311.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton311ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton311, gridBagConstraints);

        jButton411.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton411.setMnemonic('C');
        jButton411.setText("Close");
        jButton411.setToolTipText("Click here to close window");
        jButton411.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton411ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton411, gridBagConstraints);

        jButton511.setMnemonic('h');
        jButton511.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jPanel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel111, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setForeground(new java.awt.Color(51, 51, 255));
        jCheckBox1.setMnemonic('o');
        jCheckBox1.setText("Out Patients");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jCheckBox1, gridBagConstraints);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setForeground(new java.awt.Color(255, 0, 51));
        jCheckBox2.setMnemonic('i');
        jCheckBox2.setText("InPatients");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel3.add(jCheckBox2, gridBagConstraints);

        jLabel6.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(datePicker2, gridBagConstraints);

        buttonGroup2.add(jCheckBox31);
        jCheckBox31.setText("Search By  No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jCheckBox31, gridBagConstraints);

        buttonGroup2.add(jCheckBox41);
        jCheckBox41.setText("Search By Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel3.add(jCheckBox41, gridBagConstraints);

        buttonGroup1.add(jCheckBox61);
        jCheckBox61.setForeground(new java.awt.Color(153, 0, 153));
        jCheckBox61.setText("Others");
        jCheckBox61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox61ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel3.add(jCheckBox61, gridBagConstraints);

        jLabel1.setText("Invoice No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        jTextField1.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jTextField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel6.add(jPanel3, gridBagConstraints);

        jTabbedPane1.addTab("Consultancy Ledger", jPanel6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 697, 446);
    }// </editor-fold>//GEN-END:initComponents
    
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
        javax.swing.JOptionPane.showMessageDialog(this, "Key Pressed");
// TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed
    private void searchButtonClickedw() {
        
        System.out.println("Showing dialog");
        
  /*      // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField92.getLocationOnScreen();
   
        jSearchDialog31.setSize(400,200);
   
        jSearchDialog31.setLocation(point);
   
        jSearchDialog31.show();
   
   */
        
    }
    private void jCheckBox61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox61ActionPerformed
        this.jTextField12.setEditable(true);
        this.jTextField71.setEditable(true);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox61ActionPerformed
    
    private void jTable111KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable111KeyReleased
        if (jTable111.getValueAt(jTable111.getSelectedRow(), 1) != null) {
            float floatCol2 = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 1).toString());
            
            float floatCol3 = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 2).toString());
            
            float resVal = floatCol2 * floatCol3;
            
            java.lang.Float resFloat =new java.lang.Float(resVal);
            
            if (jTable111.getValueAt(jTable111.getSelectedRow(), 1) != null) {
                // if (jTable111.getSelectedColumn() == 1) {
                
                jTable111.setValueAt(resFloat, jTable111.getSelectedRow(), 3);
                
                double Total = java.lang.Double.parseDouble(jTextField311.getText().toString());
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = Total + tableSum;
                jTextField311.setText(""+totalSum+"");
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable111KeyReleased
    
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if(jTextField11111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField11111.getText()+"%' order by first_name"));
            
            
          /*  try {
           
                searchRowSet111.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField11111.getText()+"%' order by first_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
           
                jSearchTable111.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet111, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
           
                }));
           */
            jSearchTable111.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(jSearchTable111);
            
            
        }          // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate
    
    private void jButton5211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5211ActionPerformed
        this.jSearchDialog211.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton5211ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        this.jPanel111.setVisible(false);
        this.jPanel11.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void searchButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton11ActionPerformed
        searchButton11Clicked();      // Add your handling code here:
    }//GEN-LAST:event_searchButton11ActionPerformed
    
    private void jButton411ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton411ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton411ActionPerformed
    private void searchButton11Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField911.getLocationOnScreen();
        
        jSearchDialog211.setSize(400,200);
        
        jSearchDialog211.setLocation(point);
        
        jSearchDialog211.show();
    }
    private void jButton311ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton311ActionPerformed
        jTextField111.setText("");
        jTextField211.setText("");
        jTextField311.setText("");
        for (int k = 0; k < jTable111.getRowCount(); k++ ) {
            for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                jTable111.getModel().setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField311.setText("0.00");   // Add your handling code here:
    }//GEN-LAST:event_jButton311ActionPerformed
    
    private void jButton611ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton611ActionPerformed
        
        int rows2Delete = jTable111.getSelectedRowCount();
        
        int[] selectedRows = jTable111.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                
                defTableModel.removeRow(jTable111.getSelectedRow());
            }
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton611ActionPerformed
    
    private void jButton9111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9111ActionPerformed
        jSearchDialog111.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton9111ActionPerformed
    
    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
        jTable111.setValueAt(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(),1),jTable111.getSelectedRow(), 5);
        //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
        //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        jTextField11111.setText("");
        jSearchDialog111.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked
    
    private void jTextField11111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11111ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11111ActionPerformed
    private void cmbox211MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable111.getLocationOnScreen();
        jSearchDialog111.setSize(400,200);
        jSearchDialog111.setLocation(point);
        jSearchDialog111.show();
    }
    private void jButton912ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton912ActionPerformed
        jSearchDialog12.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton912ActionPerformed
    
    private void jSearchTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable12MouseClicked
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),0),jTable111.getSelectedRow(), 0);
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),1),jTable111.getSelectedRow(), 2);
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),2),jTable111.getSelectedRow(), 4);
        jTextField1112.setText("");
        jSearchDialog12.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTable12MouseClicked
    
    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate
        jSearchTable12.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField1112.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type"));
        
     /*   try {
            searchRowSet12.execute("select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField1112.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type");
      
            jSearchTable12.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet12, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Service", false),
                new org.netbeans.lib.sql.models.TableModel.Column("price", "Price", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
            }));
      */
        jSearchScrollPane12.setViewportView(jSearchTable12);
        System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1112CaretUpdate
    private void cmbox111MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable111.getLocationOnScreen();
        jSearchDialog12.setSize(400,200);
        jSearchDialog12.setLocation(point);
        jSearchDialog12.show();
    }
    private void jTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable111MouseClicked
        if (jTable111.getSelectedColumn() == 0) {
            
            this.cmbox111MouseClicked();
        }          // Add your handling code here:
        if (jTable111.getSelectedColumn() == 5) {
            
            this.cmbox211MouseClicked();
        }       // Add your handling code here:
    }//GEN-LAST:event_jTable111MouseClicked
    
    private void jButton111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton111ActionPerformed
        if(jTextField121.getText().equalsIgnoreCase("")){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without the name","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql1= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql1.toString());
            
            java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
            
            System.out.println(datenowSql.toString());
            // try{
            String billNo = null;
            
            String transNo = null;
            String payMode = null;
            String patientAcc = null;
            String cardNo = null;
            String AccDesc = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            String expDate = null;
            String staffNo = null;
            String glAcc = null;
            String user = null;
            String accDesc1 = null;
            String insAcc = null;
            String visitid = "-";
            try {
                connectDB.setAutoCommit(false);
                if(!(jTextField711.getText().equals("Cash")||jTextField711.getText().equals(""))){
                    
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTextField911.getText()+"'");
                    while (rse1.next()){
                        
                        // patientAcc = rse1.getObject(1).toString();
                        payMode = rse1.getObject(1).toString();
                        
                        cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                        scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                        cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                        isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                        // expDate = (dbObject.getDBObject(rset1.getObject(6), "null");
                        staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                    }
                }
                java.sql.Statement stm12 = connectDB.createStatement();
                java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rse12.next())
                    
                    patientAcc = rse12.getObject(1).toString();
                AccDesc = rse12.getObject(2).toString();
                
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                while (rst.next())
                    rst.getObject(1).toString();
                
                transNo = rst.getObject(1).toString();
                
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
                while (rst11.next())
                    rst11.getObject(1).toString();
                
                billNo = rst11.getObject(1).toString();
                user = rst11.getObject(2).toString();
            /*    java.sql.Statement ps11w1 = connectDB.createStatement();
                java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select visit_id from hp_admission where patient_no = '"+jTextField9.getText()+"' and discharge = false");
                while (rst11w1.next()){
             
             
                    visitid = rst11w1.getObject(1).toString();
                }
             */
                for (int i = 0; i < jTable111.getRowCount(); i++){
                    if (jTable111.getValueAt(i,0) != null){
                        java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = stm121.executeQuery("select main_service,current_user from pb_operating_parameters where gl_account ='"+jTable111.getValueAt(i,4).toString()+"'");
                        while (rse121.next()){
                            
                            glAcc = rse121.getObject(1).toString();
                            user = rse121.getObject(2).toString();
                        }
                        java.sql.Statement stm2 = connectDB.createStatement();
                        java.sql.ResultSet rse2 = stm2.executeQuery("SELECT staff_no from pb_doctors_list where (upper(first_name||' '||middle_name)) = '"+jTable111.getValueAt(i,5).toString()+"'");
                        while (rse2.next()){
                            
                            insAcc = rse2.getObject(1).toString();
                        }
                        java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_doctors_ledger_off values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        pstmt21.setString(1,insAcc);
                        pstmt21.setString(2,jTable111.getValueAt(i,0).toString());
                        pstmt21.setString(3,jTable111.getValueAt(i,5).toString());
                        pstmt21.setString(4,transNo);
                        pstmt21.setString(5,jTable111.getValueAt(i,4).toString());
                        pstmt21.setString(6,"Doctors Fee");
                        pstmt21.setString(7,"00");
                        pstmt21.setString(8,jTable111.getValueAt(i,3).toString());
                        if(jTextField1.getText().toString().equalsIgnoreCase("-")){
                            pstmt21.setString(9,"");
                        }else{
                            pstmt21.setString(9,jTextField1.getText());
                        }
                        pstmt21.setString(10,jTextField911.getText());
                        
                        pstmt21.setString(11,jTable111.getValueAt(i,0).toString());
                        pstmt21.setString(12,"false");
                        pstmt21.setString(14,datePicker2.getDate().toString());
                        pstmt21.setString(13,user);
                        pstmt21.setString(15,"00");
                        pstmt21.setString(19,jTextField711.getText());
                        pstmt21.setString(17,"0.0");
                        pstmt21.setString(16,jTextField121.getText());
                        
                        pstmt21.setString(18,jTable111.getValueAt(i,3).toString());
                        pstmt21.executeUpdate();
                        
                        
                       /* java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                        
                        pstmt.setString(1,jTextField911.getText());
                        pstmt.setObject(2,jTable111.getValueAt(i,0).toString());
                        pstmt.setString(3,jTextField211.getText());
                        pstmt.setString(4,jTextField711.getText());
                        pstmt.setString(5,transNo);
                        pstmt.setString(7,scheme);
                        pstmt.setString(6,cardNo);
                        pstmt.setString(8,cardName);
                        pstmt.setString(9,isurer);
                        pstmt.setString(10,null);
                        pstmt.setString(11,"");
                        pstmt.setObject(12,jTable111.getValueAt(i,3).toString());
                        pstmt.setString(13,"00");
                        pstmt.setString(14,datePicker2.getDate().toString());
                        pstmt.setObject(15,patientAcc);
                        pstmt.setString(16,glAcc);
                        pstmt.setObject(17,jTable111.getValueAt(i,1).toString());
                        pstmt.setObject(18,staffNo);
                        pstmt.setBoolean(19,false);
                        pstmt.setString(20,"Billing");
                        pstmt.setBoolean(21,false);
                        pstmt.setString(22,AccDesc);
                        pstmt.setString(23,visitid);
                        pstmt.setString(24,user);
                        pstmt.setString(25,billNo);
                        pstmt.setString(26,"IP");
                        pstmt.setString(27,"'now'");
                        pstmt.setString(28,visitid);
                        pstmt.executeUpdate();
                    /*
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                    pstmt2.setString(2,glAcc);
                    pstmt2.setString(3,jTextField9.getText());
                    pstmt2.setString(4,jTextField1.getText());
                    pstmt2.setString(5,"");
                    pstmt2.setString(6,cardNo);
                    pstmt2.setString(7,cardName);
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,isurer);
                    pstmt2.setString(10,"");
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                    pstmt2.setString(15,"Revenue");
                    pstmt2.setString(16,"0.00");
                    pstmt2.setObject(17,jTable1.getValueAt(i,3).toString());
                    pstmt2.setString(18,"'now'");
                    pstmt2.setString(19,transNo);
                    pstmt2.setString(20,"false");
                    pstmt2.setString(21,"false");
                    pstmt2.setString(22,"false");
                    pstmt2.setString(23,user);
                    pstmt2.executeUpdate();
                        */
                    }
                }
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                jTextField111.setText("");
                jTextField211.setText("");
                jTextField711.setText("");
                for (int k = 0; k < jTable111.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                        jTable111.setValueAt(null,k,r);
                    }
                }
                
                //  this.jComboBox131.setSelectedItem(null);
                jTextField311.setText("0.00");
                //  jComboBox2.setSelectedItem(null);
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        }
        
     /*   } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
      
      
        }
      */
        // Add your handling code here:
    }//GEN-LAST:event_jButton111ActionPerformed
    
    private void jSearchTable211MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable211MouseClicked
        jTextField121.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 1).toString());
        jTextField911.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 0).toString());
        double limit = 0.00;
        double bal = 0.00;
        double rect = 0.00;
        try {
            
            
            java.sql.Statement stmt11 = connectDB.createStatement();
            java.sql.ResultSet rset11 = stmt11.executeQuery("select iplimit from hp_inpatient_register where patient_no  ='"+jTextField911.getText()+"'");
            while (rset11.next()){
                limit = rset11.getDouble(1);
                
                //  jTextField71.setText(rset1.getObject(2).toString());
            }
            java.sql.Statement stmt111 = connectDB.createStatement();
            java.sql.ResultSet rset111 = stmt111.executeQuery("select sum(debit) from hp_patient_card where patient_no  ='"+jTextField911.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is null)");
            while (rset111.next()){
                bal = rset111.getDouble(1);
                
                //  jTextField71.setText(rset1.getObject(2).toString());
            }
            java.sql.Statement stmt1111 = connectDB.createStatement();
            java.sql.ResultSet rset1111 = stmt1111.executeQuery("select sum(credit) from hp_patient_card where patient_no  ='"+jTextField911.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is null)");
            while (rset1111.next()){
                rect = rset1111.getDouble(1);
                
                //  jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        if(bal>(limit+rect)){
            javax.swing.JOptionPane.showMessageDialog(this, "Limit Exceeded","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            this.jButton111.setEnabled(false);
        }else{
            this.jButton111.setEnabled(true);
            
            try {
                
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_inpatient_register where patient_no  ='"+jTextField911.getText()+"'");
                while (rset1.next()){
                    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField711.setText(rset1.getObject(2).toString());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        }
        jTextField11311.setText("");
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog211.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jSearchTable211MouseClicked
    
    private void jTextField11311CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11311CaretUpdate
        if(this.jCheckBox2.isSelected() && jCheckBox31.isSelected()){
            if(jTextField11311.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                
                jSearchTable211.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where patient_no ILIKE '"+jTextField11311.getText()+"%' order by second_name"));
            /*
                try {
             
                    searchRowSet211.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where patient_no ILIKE '"+jTextField11311.getText()+"%' order by second_name");
             
                    jSearchTable211.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet211, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
             */
                jSearchTable211.setShowHorizontalLines(false);
                jSearchScrollPane211.setViewportView(jSearchTable211);
                
                
            }
        }else{
            if(this.jCheckBox2.isSelected() && jCheckBox41.isSelected()){
                if(jTextField11311.getCaretPosition() < 1){
                    
                    System.out.println("Nothing");
                }else{
                    jSearchTable211.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField11311.getText()+"%' order by second_name"));
                    
                 /*       searchRowSet211.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField11311.getText()+"%' order by second_name");
                  
                        jSearchTable211.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet211, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                            // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                  */
                    jSearchTable211.setShowHorizontalLines(false);
                    jSearchScrollPane211.setViewportView(jSearchTable211);
                    
                    
                }
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11311CaretUpdate
    private void searchButton211Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog211.setSize(400,200);
        
        jSearchDialog211.setLocation(point);
        
        jSearchDialog211.show();
        
        
        
    }
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        this.jPanel11.setVisible(false);
        this.jPanel111.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed
    
    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        //    jTextField11.setText("");
        jTextField21.setText("");
        jTextField71.setText("");
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField31.setText("0.00");     // Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed
    
    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        
        int rows2Delete = jTable11.getSelectedRowCount();
        
        int[] selectedRows = jTable11.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                
                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }
        
        this.tableModelTableChanged1();
        // Add your handling code here:
    }//GEN-LAST:event_jButton61ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if(jTextField12.getText().equalsIgnoreCase("")){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without the name","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            //   this.tableModelTableChanged1();
            
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql1= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql1.toString());
            
            java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
            
            System.out.println(datenowSql.toString());
            //  try{
            String billNo = null;
            
            String transNo = null;
            String payMode = null;
            String patientAcc = null;
            String cardNo = null;
            String AccDesc = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            String expDate = null;
            String staffNo = null;
            String glAcc = null;
            String user = null;
            String accDesc1 = null;
            String insAcc = null;
            String patientAcc1 = null;
            String AccDesc1 = null;
            try {
                connectDB.setAutoCommit(false);
                
                
                java.sql.Statement stm12 = connectDB.createStatement();
                java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rse12.next()){
                    
                    patientAcc = rse12.getObject(1).toString();
                    AccDesc = rse12.getObject(2).toString();
                }
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                while (rst.next()){
                    rst.getObject(1).toString();
                    
                    transNo = rst.getObject(1).toString();
                }
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
                while (rst11.next()){
                    rst11.getObject(1).toString();
                    
                    billNo = rst11.getObject(1).toString();
                    user = rst11.getObject(2).toString();
                }
                
                for (int i = 0; i < jTable11.getRowCount(); i++){
                    if (jTable11.getValueAt(i,0) != null){
                      /*  java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = stm121.executeQuery("select main_service,current_user from pb_operating_parameters where gl_account ='"+jTable11.getValueAt(i,4).toString()+"'");
                        while (rse121.next()){
                       
                            glAcc = rse121.getObject(1).toString();
                            user = rse121.getObject(2).toString();
                       
                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?)");
                       
                            pstmt2.setString(1,jTextField91.getText());
                            pstmt2.setString(2,jTextField5.getText());
                            pstmt2.setString(3,jTextField71.getText());
                            pstmt2.setString(4,jTextField21.getText());
                            pstmt2.setString(5,jTable11.getValueAt(i,0).toString());
                            pstmt2.setString(6,jTable11.getValueAt(i,1).toString());
                            pstmt2.setString(7,jTable11.getValueAt(i,3).toString());
                            pstmt2.setObject(8,jTable11.getValueAt(i,4).toString());
                            pstmt2.setString(9,datePicker2.getDate().toString());
                            pstmt2.setString(10,"");
                            pstmt2.setString(11,user);
                            pstmt2.setString(12,"false");
                            pstmt2.setString(13,glAcc);
                            pstmt2.executeUpdate();
                       
                            java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                       
                            pstmt21.setString(1,jTextField91.getText());
                            pstmt21.setString(10,"");
                       
                            pstmt21.setString(2,jTextField12.getText());
                            pstmt21.setString(3,"OP");
                            pstmt21.setString(4,jTextField71.getText());
                            pstmt21.setString(5,"0");
                            pstmt21.setString(8,glAcc);
                            pstmt21.setString(6,jTable11.getValueAt(i,0).toString());
                            pstmt21.setString(7,jTable11.getValueAt(i,1).toString());
                            pstmt21.setString(9,jTable11.getValueAt(i,3).toString());
                            pstmt21.setObject(12,"0");
                            pstmt21.setString(11,datePicker2.getDate().toString());
                            pstmt21.setString(13,jTable11.getValueAt(i,5).toString());
                            pstmt21.setString(14,user);
                            pstmt21.setString(15,"'now'");
                            pstmt21.setString(16,"Billing");
                            pstmt21.executeUpdate();
                        }*/
                        
                        java.sql.Statement stm2 = connectDB.createStatement();
                        java.sql.ResultSet rse2 = stm2.executeQuery("SELECT staff_no from pb_doctors_list where (upper(first_name||' '||middle_name)) = '"+jTable11.getValueAt(i,5).toString()+"'");
                        while (rse2.next()){
                            
                            insAcc = rse2.getObject(1).toString();
                        }
                        java.sql.PreparedStatement pstmt211 = connectDB.prepareStatement("insert into ac_doctors_ledger_off values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                        pstmt211.setString(1,insAcc);
                        pstmt211.setString(2,jTable11.getValueAt(i,0).toString());
                        pstmt211.setString(3,jTable11.getValueAt(i,5).toString());
                        pstmt211.setString(4,transNo);
                        pstmt211.setString(5,jTable11.getValueAt(i,4).toString());
                        pstmt211.setString(6,"Doctors Fee");
                        pstmt211.setString(7,"00");
                        pstmt211.setString(8,jTable11.getValueAt(i,3).toString());
                        if(jTextField1.getText().toString().equalsIgnoreCase("-")){
                            pstmt211.setString(9,"");
                        }else{
                            pstmt211.setString(9,jTextField1.getText());
                        }
                        pstmt211.setString(10,jTextField91.getText());
                        pstmt211.setString(11,jTable11.getValueAt(i,0).toString());
                        pstmt211.setString(12,"false");
                        pstmt211.setString(14,datePicker2.getDate().toString());
                        pstmt211.setString(13,user);
                        pstmt211.setString(15,"00");
                        pstmt211.setString(19,jTextField71.getText());
                        pstmt211.setString(17,"00");
                        pstmt211.setString(16,jTextField12.getText());
                        pstmt211.setString(18,jTable11.getValueAt(i,3).toString());
                        pstmt211.executeUpdate();
                    }
                }
                
                      /*  java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                       
                        pstmt.setString(1,jTextField91.getText());
                        pstmt.setObject(2,jTable11.getValueAt(i,0).toString());
                        pstmt.setString(3,jTextField21.getText());
                        pstmt.setString(4,jTextField71.getText());
                        pstmt.setString(5,transNo);
                        pstmt.setString(7,scheme);
                        pstmt.setString(6,cardNo);
                        pstmt.setString(8,cardName);
                        pstmt.setString(9,isurer);
                        pstmt.setString(10,null);
                        pstmt.setString(11,"");
                        pstmt.setObject(12,jTable11.getValueAt(i,3).toString());
                        pstmt.setString(13,"00");
                        pstmt.setString(14,datePicker2.getDate().toString());
                        pstmt.setObject(15,patientAcc);
                        pstmt.setString(16,glAcc);
                        pstmt.setObject(17,jTable11.getValueAt(i,1).toString());
                        pstmt.setObject(18,staffNo);
                        pstmt.setBoolean(19,false);
                        pstmt.setString(20,"Billing");
                        pstmt.setBoolean(21,false);
                        pstmt.setString(22,AccDesc);
                        pstmt.setString(23,billNo);
                        pstmt.setString(24,user);
                        pstmt.setString(25,billNo);
                        pstmt.setString(26,"IP");
                        pstmt.setString(27,"'now'");
                        pstmt.setString(28,billNo);
                        pstmt.executeUpdate();
                       
                    }
                }
 /*                       System.out.println("Can you print this "+jTable11.getValueAt(i,3).toString());
                        java.sql.Statement stm1212 = connectDB.createStatement();
                        java.sql.ResultSet rse1212 = stm1212.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                        while (rse1212.next())
                       
                            patientAcc1 = rse1212.getObject(1).toString();
                        AccDesc1 = rse1212.getObject(2).toString();
                       
                        System.out.println("Yes I Can print this "+patientAcc1);
                        java.sql.PreparedStatement pstmt29 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                        pstmt29.setObject(1,patientAcc1);
                        pstmt29.setObject(2,AccDesc1);
                        pstmt29.setString(3,jTextField91.getText());
                        pstmt29.setObject(4,jTextField12.getText());
                        pstmt29.setObject(5,"");
                        pstmt29.setObject(6,"");
                        pstmt29.setObject(7,"_");
                        pstmt29.setString(8,"");
                        pstmt29.setString(9,jTextField8.getText());
                        pstmt29.setString(10,"");
                        pstmt29.setString(11,"");
                        pstmt29.setString(12,"");
                        pstmt29.setString(13,"");
                        pstmt29.setString(14,jTable11.getValueAt(i,0).toString());
                        pstmt29.setString(15,"Billing");
                        pstmt29.setObject(16,jTable11.getValueAt(i,3));
                        pstmt29.setString(17,"00");
                        pstmt29.setString(18,datePicker2.getDate().toString());
                        pstmt29.setString(19,transNo);
                        pstmt29.setBoolean(20,false);
                        pstmt29.setBoolean(21,false);
                        pstmt29.setBoolean(22,false);
                        pstmt29.setString(23,user);
                       
                        pstmt29.executeUpdate();
                       
                       
                    }
                }
                       */
  /*         for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getValueAt(i,0) != null){
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity from pb_activity where code ='"+jTable1.getValueAt(i,4).toString()+"'");
                    while (rse121.next())
   
                        glAcc = rse121.getObject(1).toString();
   
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                    //1 for (int i = 0; i < jTable1.getRowCount(); i++){
   
   
                    pstmt.setString(1,jTextField9.getText());
                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                    pstmt.setString(3,jTextField2.getText());
                    pstmt.setString(4,payMode);
                    pstmt.setString(5,transNo);
                    pstmt.setString(7,scheme);
                    pstmt.setString(6,cardNo);
                    pstmt.setString(8,cardName);
                    pstmt.setString(9,isurer);
                    pstmt.setString(10,expDate);
                    pstmt.setString(11,"");
                    pstmt.setObject(12,jTable1.getValueAt(i,3).toString());
                    pstmt.setString(13,"00");
                    pstmt.setString(14,"'now'");
                    pstmt.setObject(15,patientAcc);
                    pstmt.setString(16,glAcc);
                    pstmt.setObject(17,jTable1.getValueAt(i,1).toString());
                    pstmt.setObject(18,staffNo);
                    pstmt.setBoolean(19,false);
                    pstmt.setString(20,"Billing");
                    pstmt.setBoolean(21,false);
                    pstmt.setString(22,AccDesc);
                    pstmt.setString(23,billNo);
                    pstmt.setString(24,user);
   
                    pstmt.executeUpdate();
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                    pstmt2.setString(2,glAcc);
                    pstmt2.setString(3,jTextField9.getText());
                    pstmt2.setString(4,jTextField1.getText());
                    pstmt2.setString(5,"");
                    pstmt2.setString(6,cardNo);
                    pstmt2.setString(7,cardName);
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,isurer);
                    pstmt2.setString(10,"");
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                    pstmt2.setString(15,"Revenue");
                    pstmt2.setString(16,"0.00");
                    pstmt2.setObject(17,jTable1.getValueAt(i,3).toString());
                    pstmt2.setString(18,"'now'");
                    pstmt2.setString(19,transNo);
                    pstmt2.setString(20,"false");
                    pstmt2.setString(21,"false");
                    pstmt2.setString(22,"false");
                    pstmt2.setString(23,user);
                    pstmt2.executeUpdate();
                }
            }
   */
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                //jLabel71.setForeground(java.awt.Color.blue);
                //  jLabel71.setText("Insert successful");
                jTextField21.setText("");
                jTextField71.setText("");
                jTextField91.setText("");
                jTextField12.setText("");
                jTextField1.setText("-");
                for (int k = 0; k < jTable11.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                        jTable11.setValueAt(null,k,r);
                    }
                }
                
                //  this.jComboBox131.setSelectedItem(null);
                jTextField31.setText("0.00");
                //  jComboBox2.setSelectedItem(null);
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
     /*   } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
      
      
        }
      */
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void jButton911ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton911ActionPerformed
        jSearchDialog11.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jButton911ActionPerformed
    private void cmbox2MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable11.getLocationOnScreen();
        jSearchDialog11.setSize(400,200);
        jSearchDialog11.setLocation(point);
        jSearchDialog11.show();
    }
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        String status = null;
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select status from pb_doctors_list where staff_no  ='"+this.jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),0)+"'");
            while (rset1.next()){
                status = rset1.getObject(1).toString();
                //jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        if(status.equalsIgnoreCase("Suspended")||status.equalsIgnoreCase("Closed")){
            javax.swing.JOptionPane.showMessageDialog(this,"Account Closed","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }else{
            jTable11.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),1),jTable11.getSelectedRow(), 5);
            //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
            //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        }
        
        jTextField1111.setText("");
        jSearchDialog11.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1111.getText()+"%' order by first_name"));
            
          /*  try {
           
                searchRowSet11.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1111.getText()+"%' order by first_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
           
                jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
           
                }));
           */
            jSearchTable11.setShowHorizontalLines(false);
            jSearchScrollPane11.setViewportView(jSearchTable11);
            
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jTable11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable11KeyReleased
        
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField31.getText());
        
        if (jTable11.getValueAt(jTable11.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 1).toString());
            
            double floatCol3 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 2).toString());
            
            double resVal = floatCol2 * floatCol3;
            
            
            jTable11.setValueAt(new java.lang.Float(resVal), jTable11.getSelectedRow(), 3);
            
            for (int i = 0; i < jTable11.getRowCount(); i++) {
                
                if (jTable11.getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            this.tableModelTableChanged1();
        }
        
 /*       if (jTable11.getValueAt(jTable11.getSelectedRow(), 1) != null) {
            float floatCol2 = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 1).toString());
  
            float floatCol3 = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 2).toString());
  
            float resVal = floatCol2 * floatCol3;
  
            java.lang.Float resFloat =new java.lang.Float(resVal);
  
            if (jTable11.getSelectedColumn() == 1) {
  
                jTable11.setValueAt(resFloat, jTable11.getSelectedRow(), 3);
  
                double Total = java.lang.Double.parseDouble(jTextField31.getText().toString());
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = Total + tableSum;
                jTextField31.setText(""+totalSum+"");
  
            }
        }
  */
        // Add your handling code here:
    }//GEN-LAST:event_jTable11KeyReleased
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable11.getRowCount(); i++) {
            
            if (jTable11.getValueAt(i, 0) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable11.getRowCount(); i++) {
            
            if (jTable11.getValueAt(i, 0) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog1.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),0),jTable11.getSelectedRow(), 0);
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        jTextField111.setText("");
        jSearchDialog1.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField111.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type"));
       /*
        try {
            searchRowSet1.execute("select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField111.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type");
        
            jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Service", false),
                new org.netbeans.lib.sql.models.TableModel.Column("price", "Price", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
            }));
        */
        jSearchScrollPane1.setViewportView(jSearchTable1);
        System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void jTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MouseClicked
        if (jTable11.getSelectedColumn() == 0) {
            
            this.cmbox1MouseClicked();
        }          // Add your handling code here:
        if (jTable11.getSelectedColumn() == 5) {
            
            this.cmbox2MouseClicked();
        }          // Add your handling code here:
        
        // Add your handling code here:
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable11MouseClicked
    private void cmbox1MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable11.getLocationOnScreen();
        jSearchDialog1.setSize(400,200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.show();
    }
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
    
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        jTextField12.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        
        
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_patient_register where patient_no  ='"+jTextField91.getText()+"'");
            while (rset1.next()){
                jTextField21.setText(rset1.getObject(1).toString());
                jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        jTextField1131.setText("");
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog21.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        if(this.jCheckBox1.isSelected() && this.jCheckBox31.isSelected()){
            
            if(jTextField1131.getCaretPosition() < 3){
                
                System.out.println("Nothing");
            }else{
                jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField1131.getText()+"%' and last_visit > current_date - 15 order by second_name"));
                
                jSearchTable21.setShowHorizontalLines(false);
                jSearchScrollPane21.setViewportView(jSearchTable21);
                
                
                
            }
        }else{
            if(this.jCheckBox1.isSelected() && this.jCheckBox41.isSelected()){
                
                if(jTextField1131.getCaretPosition() < 3){
                    
                    System.out.println("Nothing");
                }else{
                    jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1131.getText()+"%' and last_visit > current_date - 15 order by second_name"));
                    
                    
                    jSearchTable21.setShowHorizontalLines(false);
                    jSearchScrollPane21.setViewportView(jSearchTable21);
                    
                    
                    
                }
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton1Clicked();
        try {
            String code = null;
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select code from pb_activity where activity_category  ILIKE 'CA'");
            while (rset1.next()){
                code = rset1.getObject(1).toString();
                
            }
            
            java.sql.Statement stmt2 = connectDB.createStatement();
            java.sql.ResultSet rset2 = stmt2.executeQuery("select DISTINCT main_service from pb_operating_parameters where gl_account  ILIKE '"+code+"'");
            while (rset2.next()){
                jTextField5.setText(rset2.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
// Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton1Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog21.setSize(400,200);
        
        jSearchDialog21.setLocation(point);
        
        jSearchDialog21.show();
        
        
        
    }
    
    
    private void cmbox4ActionPerformed(java.awt.event.ActionEvent evt){
   /*     java.lang.Object selectedGuaran = cmbox4.getSelectedItem();
//        int i = jTable2.getSelectedRow();
    
        if (selectedGuaran != null) {
    
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
    
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
    */
        
    }    private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox3.getSelectedItem();
  /*      int i = jTable2.getSelectedRow();
   
        if (selectedGuaran != null) {
   
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
   
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
   
   */
    }
    
    
    private class SearchThread extends java.lang.Thread {
        
        public void SearchThread(){}
        
        public void run(){
            
            searchNames();
            
        }
        
    }
    private class SearchServicesThread extends java.lang.Thread {
        
        public void SearchServicesThread(){}
        
        public void run(){
            
            searchServices();
            
        }
        
    }
    
    public void searchNames(){
        int j = 0;
        int i = 0;
        
      /* if(jTextField113.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
        try {
            System.out.println("Starting select clause");
          /*  java.sql.Statement stmtTable11 = connectDB.createStatement();
       
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_name)  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false UNION SELECT count(patient_name)  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
       
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {*/
           /*     java.sql.Statement stmtTable1 = connectDB.createStatement();
            
                // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField113.getText()+"%' and last_visit > current_date - 20 order by second_name");// AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
                 java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' order by second_name");
                while (rsetTable1.next()) {
            
                    System.out.println("Working at table row "+i);
                    jSearchTable2.setValueAt(rsetTable1.getObject(1), i, 0);
                    jSearchTable2.setValueAt(rsetTable1.getObject(2), i, 1);
                   // jTable111.setValueAt(rsetTable1.getObject(3), i, 2);
                   // jTable111.setValueAt(rsetTable1.getObject(4), i, 3);
                   // jTable111.setValueAt(rsetTable1.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
            
                    i++;
            
                }
            
            
            //}
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
            }
            */
    }
    
    public void searchServices(){
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton111;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton311;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton411;
    private javax.swing.JButton jButton421;
    private javax.swing.JButton jButton4211;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton5211;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton611;
    private javax.swing.JButton jButton91;
    private javax.swing.JButton jButton911;
    private javax.swing.JButton jButton9111;
    private javax.swing.JButton jButton912;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox41;
    private javax.swing.JCheckBox jCheckBox61;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel211;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel311;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel411;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel5311;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel711;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel911;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel111;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel411;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane211;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog111;
    private javax.swing.JDialog jSearchDialog12;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JDialog jSearchDialog211;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel12;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JPanel jSearchPanel211;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JScrollPane jSearchScrollPane12;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JScrollPane jSearchScrollPane211;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTable jSearchTable12;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTable jSearchTable211;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator111;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable111;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTextField jTextField11311;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField121;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField211;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField311;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField411;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField71;
    private javax.swing.JTextField jTextField711;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JTextField jTextField911;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton11;
    // End of variables declaration//GEN-END:variables
    
}
