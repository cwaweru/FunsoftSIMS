/*
 * banksintfr.java
 *
 * Created on August 13, 2002, 3:24 PM
 */

package com.afrisoftech.hospital;

import java.text.ParseException;
/**
 *
 * @author  root
 */
public class PatientRegisterIntfr extends javax.swing.JInternalFrame {
    com.afrisoftech.lib.DBObject dbObject;
    /** Creates new form banksintfr */
    javax.swing.table.TableModel tableModel = null;
    java.sql.Connection connectDB = null;
    javax.swing.ComboBoxModel mainComboBoxModel;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private final javax.swing.JTextField comboTextField = new javax.swing.JTextField();
    javax.swing.ComboBoxModel oldComboBox6Model;
    
    boolean panel5Showing = false;
    
    private java.lang.String cash_no = null;
    String cashPoint = null;
    
    private boolean manualNo;
    
    private boolean autonumber;
    public PatientRegisterIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        
        dbObject = new com.afrisoftech.lib.DBObject();
        jTextField14.setText(getCashPoint());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        dispose = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        dispose1 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        select2 = new javax.swing.JButton();
        dispose2 = new javax.swing.JButton();
        jDialog31 = new javax.swing.JDialog();
        //jDialog3.setSize(600,400);
        jPanel121 = new javax.swing.JPanel();
        jPanel1111 = new javax.swing.JPanel();
        jLabel66111 = new javax.swing.JLabel();
        jTextField14111 = new javax.swing.JTextField();
        jLabel3111 = new javax.swing.JLabel();
        jTextField4111 = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jLabel582211 = new javax.swing.JLabel();
        jLabel5821111 = new javax.swing.JLabel();
        jTextField3111 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextField1611 = new javax.swing.JTextField();
        searchButton13 = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        jSeparator111 = new javax.swing.JSeparator();
        jButton301111 = new javax.swing.JButton();
        jButton252111 = new javax.swing.JButton();
        jButton1111 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        dispose11 = new javax.swing.JButton();
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        dispose111 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton51 = new javax.swing.JButton();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel5.setVisible(false);
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel64 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jTextField13 = new javax.swing.JTextField();
        jPanel641 = new javax.swing.JPanel();
        jTextField361 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jTextField18 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel2.setVisible(false);
        jLabel7 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jTextField7 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jTextField15 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jCheckBox11 = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        datePicker4 = new com.afrisoftech.lib.DatePicker();
        jLabel23 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jTextField99 = new javax.swing.JTextField();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jTextField171 = new javax.swing.JTextField();
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            //java.sql.ResultSet rset = stmt.executeQuery("select 'P'||lpad(currval('outpatient_no_seq'),5,0)");
            java.sql.ResultSet rset = stmt.executeQuery("select distinct patient_no from hp_patient_register where patient_no is not null AND patient_no ilike 'K0%' ORDER BY patient_no DESC limit 1");

            //java.sql.ResultSet rset = stmt.executeQuery("select distinct patient_no,oid from hp_patient_register where patient_no is not null AND department = '"+getCashPoint()+"' ORDER BY oid DESC LIMIT 1");

            while (rset.next()){
                jTextField171.setText(rset.getObject(1).toString());
            }
            rset.close();
            stmt.close();

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("selection not successful");
        }
        jPanel6 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel572 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel582 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel4111 = new javax.swing.JPanel();
        jCheckBox1111 = new javax.swing.JCheckBox();
        jCheckBox2111 = new javax.swing.JCheckBox();
        jLabel66 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        datePickerYOB = new com.afrisoftech.lib.DatePicker();
        jLabel1 = new javax.swing.JLabel();
        jPanel4113 = new javax.swing.JPanel();
        jCheckBox1113 = new javax.swing.JCheckBox();
        jCheckBox2113 = new javax.swing.JCheckBox();
        jCheckBox2114 = new javax.swing.JCheckBox();
        jCheckBox2115 = new javax.swing.JCheckBox();
        jLabel27 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel5721 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField5821 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        idNoLbl = new javax.swing.JLabel();
        idNoTxt = new javax.swing.JTextField();
        passPortNoLbl = new javax.swing.JLabel();
        occupationTxt = new javax.swing.JTextField();
        idNoLbl1 = new javax.swing.JLabel();
        NationalityTxt1 = new javax.swing.JTextField();
        emailAddTxt = new javax.swing.JTextField();
        passPortNoLbl1 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jTextField14 = new javax.swing.JTextField();
        jPanel61 = new javax.swing.JPanel();
        jTextField3611 = new javax.swing.JTextField();
        searchButton11 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        relationTxt = new javax.swing.JTextField();
        idNoLbl2 = new javax.swing.JLabel();
        nokResidenceTxt = new javax.swing.JTextField();
        NokEmailTxt = new javax.swing.JLabel();
        emailAddTxt1 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        idNoLbl3 = new javax.swing.JLabel();
        nokTelTxt = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jTextField100 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        otherSourceTxt = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jLabel30 = new javax.swing.JLabel();
        NokEmailTxt1 = new javax.swing.JLabel();
        refDocHosTxt = new javax.swing.JTextField();
        docSpecTxt = new javax.swing.JTextField();
        jCheckBox18 = new javax.swing.JCheckBox();
        jPanel13 = new javax.swing.JPanel();
        jButton301 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton152 = new javax.swing.JButton();
        jButton202 = new javax.swing.JButton();
        jButton252 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setResizable(false);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jSearchDialogComponentHidden(evt);
            }
        });

        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });
        jTextField11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField11FocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTableMouseClicked(evt);
                }
            });

            jSearchScrollPane.setViewportView(jSearchTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

            dispose.setText("Dispose");
            dispose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    disposeActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel.add(dispose, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

            jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchDialog1.setUndecorated(true);
            jSearchPanel1.setLayout(new java.awt.GridBagLayout());

            jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField111CaretUpdate(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 300.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jSearchPanel1.add(jTextField111, gridBagConstraints);

            jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
            jSearchTable1.setShowHorizontalLines(false);
            /*int rowsNo = 0;
            //try {

                crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

                crset1.setConnectionSource(pConnDB);

                // try {
                    //crset1.execute();

                    // crset2.setExecuteOnLoad(true);
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                        new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                        new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                    }));

                    tableModel = jSearchTable.getModel();

                    jSearchScrollPane.setViewportView(jSearchTable);

                    /*   }catch(java.sql.SQLException sqlex){
                    javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                    System.out.println(sqlex.getMessage());

                }

                javax.swing.table.TableColumn column = null;

                for (int i = 0; i < 4; i++) {

                    column = jSearchTable.getColumnModel().getColumn(i);

                    if (i == 1) {

                        column.setPreferredWidth(400);
                        //sport column is bigger
                    } else {

                        column.setPreferredWidth(200);

                    }
                }*/
                jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        jSearchTable1MouseClicked(evt);
                    }
                });

                jSearchScrollPane1.setViewportView(jSearchTable1);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.gridwidth = 3;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 20.0;
                jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

                dispose1.setMnemonic('l');
                dispose1.setText("Close");
                dispose1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        dispose1ActionPerformed(evt);
                    }
                });

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jSearchPanel1.add(dispose1, gridBagConstraints);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

                jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

                jSearchDialog2.setUndecorated(true);
                jSearchPanel2.setLayout(new java.awt.GridBagLayout());

                jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
                    public void caretUpdate(javax.swing.event.CaretEvent evt) {
                        jTextField112CaretUpdate(evt);
                    }
                });

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 300.0;
                gridBagConstraints.weighty = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
                jSearchPanel2.add(jTextField112, gridBagConstraints);

                jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
                jSearchTable2.setShowHorizontalLines(false);
                /*int rowsNo = 0;
                //try {

                    crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

                    crset1.setConnectionSource(pConnDB);

                    // try {
                        //crset1.execute();

                        // crset2.setExecuteOnLoad(true);
                        jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                            new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                            new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                        }));

                        tableModel = jSearchTable.getModel();

                        jSearchScrollPane.setViewportView(jSearchTable);

                        /*   }catch(java.sql.SQLException sqlex){
                        javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                        System.out.println(sqlex.getMessage());

                    }

                    javax.swing.table.TableColumn column = null;

                    for (int i = 0; i < 4; i++) {

                        column = jSearchTable.getColumnModel().getColumn(i);

                        if (i == 1) {

                            column.setPreferredWidth(400);
                            //sport column is bigger
                        } else {

                            column.setPreferredWidth(200);

                        }
                    }*/
                    jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            jSearchTable2MouseClicked(evt);
                        }
                    });

                    jSearchScrollPane2.setViewportView(jSearchTable2);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.gridwidth = 3;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 20.0;
                    jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

                    select2.setText("Select");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 1;
                    gridBagConstraints.gridy = 0;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jSearchPanel2.add(select2, gridBagConstraints);

                    dispose2.setText("Close");
                    dispose2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            dispose2ActionPerformed(evt);
                        }
                    });

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 2;
                    gridBagConstraints.gridy = 0;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jSearchPanel2.add(dispose2, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

                    jDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

                    jDialog31.setTitle("Enter Doctors Fee");
                    jDialog31.setResizable(false);
                    jDialog31.setSize(400,200);
                    jPanel121.setLayout(new java.awt.GridBagLayout());

                    jPanel1111.setLayout(new java.awt.GridBagLayout());

                    jPanel1111.setBackground(new java.awt.Color(130, 232, 255));
                    jPanel1111.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Doctor's details here"));
                    jLabel66111.setText("Amount");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 2;
                    gridBagConstraints.gridy = 2;
                    jPanel1111.add(jLabel66111, gridBagConstraints);

                    jTextField14111.setEditable(false);
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 3;
                    gridBagConstraints.gridy = 2;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                    jPanel1111.add(jTextField14111, gridBagConstraints);

                    jLabel3111.setText("Category");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 2;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.weightx = 1.0;
                    jPanel1111.add(jLabel3111, gridBagConstraints);

                    jTextField4111.setEditable(false);
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 3;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                    jPanel1111.add(jTextField4111, gridBagConstraints);

                    jPanel31.setLayout(new java.awt.GridBagLayout());

                    jPanel31.setBackground(new java.awt.Color(204, 204, 255));
                    jLabel582211.setText("Doctor's No.");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel31.add(jLabel582211, gridBagConstraints);

                    jLabel5821111.setText("Doc. Name");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 2;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel31.add(jLabel5821111, gridBagConstraints);

                    jTextField3111.setEditable(false);
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 1;
                    gridBagConstraints.gridy = 2;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 4.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel31.add(jTextField3111, gridBagConstraints);

                    jPanel4.setLayout(new java.awt.GridBagLayout());

                    jTextField1611.setEditable(false);
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 1;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel4.add(jTextField1611, gridBagConstraints);

                    searchButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
                    searchButton13.setToolTipText("Search");
                    searchButton13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                    searchButton13.setMaximumSize(new java.awt.Dimension(74, 53));
                    searchButton13.setMinimumSize(new java.awt.Dimension(74, 53));
                    searchButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                    searchButton13.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            searchButton13ActionPerformed(evt);
                        }
                    });

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 2;
                    gridBagConstraints.gridy = 1;
                    jPanel4.add(searchButton13, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 1;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel31.add(jPanel4, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.gridwidth = 2;
                    gridBagConstraints.gridheight = 5;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                    gridBagConstraints.weightx = 2.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel1111.add(jPanel31, gridBagConstraints);

                    jTextField10.setPreferredSize(new java.awt.Dimension(0, 0));
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    jPanel1111.add(jTextField10, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.gridwidth = 5;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
                    gridBagConstraints.weightx = 5.0;
                    gridBagConstraints.weighty = 10.0;
                    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
                    jPanel121.add(jPanel1111, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 4;
                    gridBagConstraints.gridwidth = 6;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel121.add(jSeparator111, gridBagConstraints);

                    jButton301111.setMnemonic('O');
                    jButton301111.setText("Ok");
                    jButton301111.setToolTipText("Click here to enter data");
                    jButton301111.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            jButton301111ActionPerformed(evt);
                        }
                    });

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 10;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel121.add(jButton301111, gridBagConstraints);

                    jButton252111.setMnemonic('c');
                    jButton252111.setText("Close");
                    jButton252111.setToolTipText("Click here to close window");
                    jButton252111.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            jButton252111ActionPerformed(evt);
                        }
                    });

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 3;
                    gridBagConstraints.gridy = 10;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel121.add(jButton252111, gridBagConstraints);

                    jButton1111.setMnemonic('h');
                    jButton1111.setText("Help");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 4;
                    gridBagConstraints.gridy = 10;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel121.add(jButton1111, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jDialog31.getContentPane().add(jPanel121, gridBagConstraints);

                    jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

                    jSearchDialog11.setUndecorated(true);
                    jSearchPanel11.setLayout(new java.awt.GridBagLayout());

                    jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                    jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
                        public void caretUpdate(javax.swing.event.CaretEvent evt) {
                            jTextField1111CaretUpdate(evt);
                        }
                    });

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 0;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 300.0;
                    gridBagConstraints.weighty = 1.0;
                    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
                    jSearchPanel11.add(jTextField1111, gridBagConstraints);

                    jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
                    jSearchTable11.setShowHorizontalLines(false);
                    /*int rowsNo = 0;
                    //try {

                        crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

                        crset1.setConnectionSource(pConnDB);

                        // try {
                            //crset1.execute();

                            // crset2.setExecuteOnLoad(true);
                            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                                new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                                new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                                new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                                new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                            }));

                            tableModel = jSearchTable.getModel();

                            jSearchScrollPane.setViewportView(jSearchTable);

                            /*   }catch(java.sql.SQLException sqlex){
                            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                            System.out.println(sqlex.getMessage());

                        }

                        javax.swing.table.TableColumn column = null;

                        for (int i = 0; i < 4; i++) {

                            column = jSearchTable.getColumnModel().getColumn(i);

                            if (i == 1) {

                                column.setPreferredWidth(400);
                                //sport column is bigger
                            } else {

                                column.setPreferredWidth(200);

                            }
                        }*/
                        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                            public void mouseClicked(java.awt.event.MouseEvent evt) {
                                jSearchTable11MouseClicked(evt);
                            }
                        });

                        jSearchScrollPane11.setViewportView(jSearchTable11);

                        gridBagConstraints = new java.awt.GridBagConstraints();
                        gridBagConstraints.gridx = 0;
                        gridBagConstraints.gridy = 1;
                        gridBagConstraints.gridwidth = 3;
                        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                        gridBagConstraints.weightx = 1.0;
                        gridBagConstraints.weighty = 20.0;
                        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

                        dispose11.setMnemonic('l');
                        dispose11.setText("Close");
                        dispose11.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                dispose11ActionPerformed(evt);
                            }
                        });

                        gridBagConstraints = new java.awt.GridBagConstraints();
                        gridBagConstraints.gridx = 2;
                        gridBagConstraints.gridy = 0;
                        gridBagConstraints.weightx = 1.0;
                        gridBagConstraints.weighty = 1.0;
                        jSearchPanel11.add(dispose11, gridBagConstraints);

                        gridBagConstraints = new java.awt.GridBagConstraints();
                        gridBagConstraints.gridx = 0;
                        gridBagConstraints.gridy = 1;
                        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                        gridBagConstraints.weightx = 1.0;
                        gridBagConstraints.weighty = 1.0;
                        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

                        jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

                        jSearchDialog111.setUndecorated(true);
                        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

                        jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
                            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                                jTextField11111CaretUpdate(evt);
                            }
                        });

                        gridBagConstraints = new java.awt.GridBagConstraints();
                        gridBagConstraints.gridx = 1;
                        gridBagConstraints.gridy = 0;
                        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                        gridBagConstraints.weightx = 300.0;
                        gridBagConstraints.weighty = 1.0;
                        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
                        jSearchPanel111.add(jTextField11111, gridBagConstraints);

                        jSearchTable111.setToolTipText("Click on the target row to select the patient from the search.");
                        jSearchTable111.setShowHorizontalLines(false);
                        /*int rowsNo = 0;
                        //try {

                            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

                            crset1.setConnectionSource(pConnDB);

                            // try {
                                //crset1.execute();

                                // crset2.setExecuteOnLoad(true);
                                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                                }));

                                tableModel = jSearchTable.getModel();

                                jSearchScrollPane.setViewportView(jSearchTable);

                                /*   }catch(java.sql.SQLException sqlex){
                                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                                System.out.println(sqlex.getMessage());

                            }

                            javax.swing.table.TableColumn column = null;

                            for (int i = 0; i < 4; i++) {

                                column = jSearchTable.getColumnModel().getColumn(i);

                                if (i == 1) {

                                    column.setPreferredWidth(400);
                                    //sport column is bigger
                                } else {

                                    column.setPreferredWidth(200);

                                }
                            }*/
                            jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
                                public void mouseClicked(java.awt.event.MouseEvent evt) {
                                    jSearchTable111MouseClicked(evt);
                                }
                            });

                            jSearchScrollPane111.setViewportView(jSearchTable111);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.gridwidth = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 20.0;
                            jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

                            dispose111.setMnemonic('l');
                            dispose111.setText("Close");
                            dispose111.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    dispose111ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jSearchPanel111.add(dispose111, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

                            jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

                            jSearchDialog3.setUndecorated(true);
                            jSearchPanel3.setLayout(new java.awt.GridBagLayout());

                            jSearchPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                            jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
                                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                                    jTextField1112CaretUpdate(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 300.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
                            jSearchPanel3.add(jTextField1112, gridBagConstraints);

                            jSearchTable3.setToolTipText("Click on the target row to select the patient from the search.");
                            jSearchTable3.setShowHorizontalLines(false);
                            /*javax.swing.table.TableColumn column = null;

                            for (int i = 0; i < 4; i++) {

                                column = jSearchTable.getColumnModel().getColumn(i);

                                if (i == 1) {

                                    column.setPreferredWidth(400);
                                    //sport column is bigger
                                } else {

                                    column.setPreferredWidth(200);

                                }
                            }
                            */
                            jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
                                public void mouseClicked(java.awt.event.MouseEvent evt) {
                                    jSearchTable3MouseClicked(evt);
                                }
                            });

                            jSearchScrollPane3.setViewportView(jSearchTable3);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.gridwidth = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 20.0;
                            jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

                            jButton51.setText("Close");
                            jButton51.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton51ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jSearchPanel3.add(jButton51, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jSearchDialog3.getContentPane().add(jSearchPanel3, gridBagConstraints);

                            getContentPane().setLayout(new java.awt.GridBagLayout());

                            setClosable(true);
                            setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
                            setIconifiable(true);
                            setMaximizable(true);
                            setResizable(true);
                            setTitle("Patient Registration");
                            try {
                                setSelected(true);
                            } catch (java.beans.PropertyVetoException e1) {
                                e1.printStackTrace();
                            }
                            setVisible(true);
                            addComponentListener(new java.awt.event.ComponentAdapter() {
                                public void componentShown(java.awt.event.ComponentEvent evt) {
                                    formComponentShown(evt);
                                }
                            });
                            addFocusListener(new java.awt.event.FocusAdapter() {
                                public void focusGained(java.awt.event.FocusEvent evt) {
                                    formFocusGained(evt);
                                }
                            });

                            mainPanel.setLayout(new java.awt.GridBagLayout());

                            jPanel5.setLayout(new java.awt.GridBagLayout());

                            jPanel5.setBackground(new java.awt.Color(255, 239, 255));
                            jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select type of scheme & then select staff no", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(102, 102, 255)));
                            jPanel5.setMinimumSize(new java.awt.Dimension(100, 143));
                            jPanel5.setPreferredSize(new java.awt.Dimension(100, 129));
                            jLabel10.setText("Scheme Membership Name");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel5.add(jLabel10, gridBagConstraints);

                            jLabel12.setText("Scheme Membership No.");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel5.add(jLabel12, gridBagConstraints);

                            jLabel17.setText("Expiry Date");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel5.add(jLabel17, gridBagConstraints);

                            jLabel14.setText("Scheme Manager");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel5.add(jLabel14, gridBagConstraints);

                            jTextField2.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel5.add(jTextField2, gridBagConstraints);

                            jLabel18.setText("Scheme Name");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel5.add(jLabel18, gridBagConstraints);

                            jPanel64.setLayout(new java.awt.GridBagLayout());

                            jPanel64.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                            jPanel64.setMinimumSize(new java.awt.Dimension(82, 37));
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel64.add(jTextField36, gridBagConstraints);

                            searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
                            searchButton.setToolTipText("Search");
                            searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                            searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
                            searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
                            searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                            searchButton.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    searchButtonActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 1;
                            jPanel64.add(searchButton, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
                            jPanel5.add(jPanel64, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
                            jPanel5.add(jTextField13, gridBagConstraints);

                            jPanel641.setLayout(new java.awt.GridBagLayout());

                            jPanel641.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                            jPanel641.setMinimumSize(new java.awt.Dimension(82, 37));
                            jPanel641.setPreferredSize(new java.awt.Dimension(4, 20));
                            jTextField361.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel641.add(jTextField361, gridBagConstraints);

                            searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
                            searchButton2.setToolTipText("Search");
                            searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                            searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
                            searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
                            searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                            searchButton2.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    searchButton2ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 1;
                            jPanel641.add(searchButton2, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel5.add(jPanel641, gridBagConstraints);

                            jPanel7.setLayout(new java.awt.GridBagLayout());

                            jPanel7.setBackground(new java.awt.Color(204, 204, 255));
                            jCheckBox4.setBackground(new java.awt.Color(204, 204, 255));
                            buttonGroup2.add(jCheckBox4);
                            jCheckBox4.setSelected(true);
                            jCheckBox4.setText("Search By No");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel7.add(jCheckBox4, gridBagConstraints);

                            jCheckBox5.setBackground(new java.awt.Color(204, 204, 255));
                            buttonGroup2.add(jCheckBox5);
                            jCheckBox5.setText("Search By Name");
                            jPanel7.add(jCheckBox5, new java.awt.GridBagConstraints());

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 8;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
                            jPanel5.add(jPanel7, gridBagConstraints);

                            jCheckBox6.setBackground(new java.awt.Color(255, 255, 204));
                            jCheckBox6.setText("View Account Status");
                            jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox6ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 0;
                            jPanel5.add(jCheckBox6, gridBagConstraints);

                            jTextField18.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel5.add(jTextField18, gridBagConstraints);

                            jLabel25.setText("Member Balance");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel5.add(jLabel25, gridBagConstraints);

                            jTextField12.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
                            jPanel5.add(jTextField12, gridBagConstraints);

                            jLabel19.setText("A/C No");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel5.add(jLabel19, gridBagConstraints);

                            jPanel2.setLayout(new java.awt.GridBagLayout());

                            jPanel2.setBackground(new java.awt.Color(219, 243, 255));
                            jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select card name then enter card No.and the expiry date "));
                            jPanel2.setEnabled(false);
                            jLabel7.setText("Card Name");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel2.add(jLabel7, gridBagConstraints);

                            jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT card_name FROM pb_creditcard_types ORDER By card_name"));
                            jComboBox3.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jComboBox3ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel2.add(jComboBox3, gridBagConstraints);

                            jTextField7.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel2.add(jTextField7, gridBagConstraints);

                            jLabel8.setText("Issurer");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel2.add(jLabel8, gridBagConstraints);

                            jLabel9.setText("Card No.");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel2.add(jLabel9, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel2.add(jTextField8, gridBagConstraints);

                            jLabel15.setText("Expiry Date");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.weightx = 1.0;
                            jPanel2.add(jLabel15, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel2.add(datePicker1, gridBagConstraints);

                            jPanel5.add(jPanel2, new java.awt.GridBagConstraints());

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            jPanel5.add(datePicker2, gridBagConstraints);

                            jTextField15.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel5.add(jTextField15, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.gridwidth = 6;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 3.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
                            mainPanel.add(jPanel5, gridBagConstraints);

                            jLabel2.setFont(new java.awt.Font("Dialog", 1, 18));
                            jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 9;
                            gridBagConstraints.gridwidth = 6;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            mainPanel.add(jLabel2, gridBagConstraints);

                            jPanel1.setLayout(new java.awt.GridBagLayout());

                            jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
                            jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
                                public void mouseClicked(java.awt.event.MouseEvent evt) {
                                    jPanel1MouseClicked(evt);
                                }
                                public void mouseEntered(java.awt.event.MouseEvent evt) {
                                    jPanel1MouseEntered(evt);
                                }
                            });
                            jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
                                public void componentShown(java.awt.event.ComponentEvent evt) {
                                    jPanel1ComponentShown(evt);
                                }
                            });

                            jLabel22.setText("Consultation Amt.");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 24, 0, 0);
                            jPanel1.add(jLabel22, gridBagConstraints);

                            jTextField16.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            jPanel1.add(jTextField16, gridBagConstraints);

                            jPanel10.setLayout(new java.awt.GridBagLayout());

                            jPanel10.setBackground(new java.awt.Color(255, 204, 255));
                            jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                            jCheckBox8.setBackground(new java.awt.Color(255, 204, 255));
                            buttonGroup3.add(jCheckBox8);
                            jCheckBox8.setSelected(true);
                            jCheckBox8.setText("Search By Patient No");
                            jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox8ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
                            gridBagConstraints.weightx = 3.0;
                            jPanel10.add(jCheckBox8, gridBagConstraints);

                            jCheckBox7.setBackground(new java.awt.Color(255, 204, 255));
                            buttonGroup3.add(jCheckBox7);
                            jCheckBox7.setText("By Patient name");
                            jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox7ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 3.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel10.add(jCheckBox7, gridBagConstraints);

                            jRadioButton1.setBackground(new java.awt.Color(255, 204, 255));
                            buttonGroup4.add(jRadioButton1);
                            jRadioButton1.setForeground(new java.awt.Color(51, 51, 255));
                            jRadioButton1.setText("Create new patient File");
                            jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jRadioButton1ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 3.0;
                            jPanel10.add(jRadioButton1, gridBagConstraints);

                            jRadioButton2.setBackground(new java.awt.Color(255, 204, 255));
                            buttonGroup4.add(jRadioButton2);
                            jRadioButton2.setForeground(new java.awt.Color(102, 0, 0));
                            jRadioButton2.setSelected(true);
                            jRadioButton2.setText("Open Existing File");
                            jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jRadioButton2ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 3.0;
                            jPanel10.add(jRadioButton2, gridBagConstraints);

                            buttonGroup4.add(jCheckBox11);
                            jCheckBox11.setText("Create a Pry No. for Existing File");
                            jCheckBox11.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
                            jCheckBox11.setMargin(new java.awt.Insets(0, 0, 0, 0));
                            jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox11ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
                            jPanel10.add(jCheckBox11, gridBagConstraints);

                            jLabel13.setForeground(new java.awt.Color(255, 51, 153));
                            jLabel13.setText("Patient Entry Point");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
                            gridBagConstraints.weightx = 1.0;
                            jPanel10.add(jLabel13, gridBagConstraints);

                            jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT patient_type FROM pb_patient_categories ORDER BY patient_type"));
                            jComboBox4.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jComboBox4ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = -5.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel10.add(jComboBox4, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = -5.0;
                            jPanel10.add(datePicker4, gridBagConstraints);

                            jLabel23.setText("Current Visit Date");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            jPanel10.add(jLabel23, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.gridwidth = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            jPanel1.add(jPanel10, gridBagConstraints);

                            jPanel3.setLayout(new java.awt.GridBagLayout());

                            jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
                            buttonGroup5.add(jCheckBox9);
                            jCheckBox9.setText("Special");
                            jCheckBox9.setEnabled(false);
                            jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox9ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 9;
                            gridBagConstraints.weightx = 1.0;
                            jPanel3.add(jCheckBox9, gridBagConstraints);

                            buttonGroup7.add(jCheckBox2);
                            jCheckBox2.setText("Review");
                            jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox2ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 9;
                            gridBagConstraints.weightx = 1.0;
                            jPanel3.add(jCheckBox2, gridBagConstraints);

                            buttonGroup7.add(jCheckBox1);
                            jCheckBox1.setSelected(true);
                            jCheckBox1.setText("Charge Consultation Fee?");
                            jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox1ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 9;
                            gridBagConstraints.weightx = 1.0;
                            jPanel3.add(jCheckBox1, gridBagConstraints);

                            buttonGroup5.add(jCheckBox10);
                            jCheckBox10.setText("Off Peak");
                            jCheckBox10.setEnabled(false);
                            jCheckBox10.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox10ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 9;
                            gridBagConstraints.weightx = 1.0;
                            jPanel3.add(jCheckBox10, gridBagConstraints);

                            jTextField99.setText("800");
                            jTextField99.setMinimumSize(new java.awt.Dimension(0, 0));
                            jTextField99.setPreferredSize(new java.awt.Dimension(0, 0));
                            jTextField99.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jTextField99ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
                            jPanel3.add(jTextField99, gridBagConstraints);

                            jCheckBox3.setText("Activate No.");
                            jCheckBox3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
                            jCheckBox3.setMargin(new java.awt.Insets(0, 0, 0, 0));
                            jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox3ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 9;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel3.add(jCheckBox3, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.gridwidth = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            jPanel1.add(jPanel3, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 1;
                            jPanel1.add(jPanel8, gridBagConstraints);

                            jPanel9.setLayout(new java.awt.GridBagLayout());

                            jPanel9.setBackground(new java.awt.Color(153, 255, 204));
                            jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 102, 255), new java.awt.Color(102, 255, 51), null), "Patient Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255)));
                            jTextField171.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel9.add(jTextField171, gridBagConstraints);

                            jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.X_AXIS));

                            jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                            jPanel6.setMaximumSize(new java.awt.Dimension(4, 19));
                            jPanel6.setMinimumSize(new java.awt.Dimension(4, 19));
                            jPanel6.setPreferredSize(new java.awt.Dimension(4, 19));
                            jTextField3.setEditable(false);
                            jTextField3.setMinimumSize(new java.awt.Dimension(5, 19));
                            jTextField3.setPreferredSize(new java.awt.Dimension(5, 19));
                            jPanel6.add(jTextField3);

                            searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
                            searchButton1.setToolTipText("Search");
                            searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                            searchButton1.setMaximumSize(new java.awt.Dimension(40, 25));
                            searchButton1.setMinimumSize(new java.awt.Dimension(40, 25));
                            searchButton1.setPreferredSize(new java.awt.Dimension(40, 25));
                            searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                            searchButton1.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    searchButton1ActionPerformed(evt);
                                }
                            });

                            jPanel6.add(searchButton1);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel9.add(jPanel6, gridBagConstraints);

                            jLabel572.setForeground(new java.awt.Color(255, 51, 153));
                            jLabel572.setText("Patient No");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel9.add(jLabel572, gridBagConstraints);

                            jLabel20.setForeground(new java.awt.Color(255, 51, 153));
                            jLabel20.setText("Surname");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel9.add(jLabel20, gridBagConstraints);

                            jTextField21.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel9.add(jTextField21, gridBagConstraints);

                            jTextField6.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel9.add(jTextField6, gridBagConstraints);

                            jLabel582.setForeground(new java.awt.Color(255, 51, 153));
                            jLabel582.setText("Other Names");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel9.add(jLabel582, gridBagConstraints);

                            jLabel16.setForeground(new java.awt.Color(255, 51, 153));
                            jLabel16.setText("Gender");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 6;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel9.add(jLabel16, gridBagConstraints);

                            jPanel4111.setLayout(new java.awt.GridBagLayout());

                            jPanel4111.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
                            buttonGroup1.add(jCheckBox1111);
                            jCheckBox1111.setSelected(true);
                            jCheckBox1111.setText("Male ");
                            jCheckBox1111.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                            jCheckBox1111.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            jPanel4111.add(jCheckBox1111, gridBagConstraints);

                            buttonGroup1.add(jCheckBox2111);
                            jCheckBox2111.setText("Female ");
                            jCheckBox2111.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                            jCheckBox2111.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.weightx = 1.0;
                            jPanel4111.add(jCheckBox2111, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 6;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            jPanel9.add(jPanel4111, gridBagConstraints);

                            jLabel66.setText("Year of Birth");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel9.add(jLabel66, gridBagConstraints);

                            jComboBox1.setPreferredSize(new java.awt.Dimension(130, 20));
                            jComboBox1.setSelectedItem(null);
                            // javax.swing.JComboBox strCmb;
                            java.lang.Object[] strCmb = {"-","Cash","Credit Card","Scheme","Cheque","Eft", "Privilege"};

                            javax.swing.DefaultComboBoxModel comboModel = new javax.swing.DefaultComboBoxModel(strCmb);

                            jComboBox1.setModel(comboModel);

                            jComboBox1.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jComboBox1ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 12;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel9.add(jComboBox1, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel9.add(datePickerYOB, gridBagConstraints);

                            jLabel1.setForeground(new java.awt.Color(255, 51, 153));
                            jLabel1.setText("Payment Mode");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 12;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel9.add(jLabel1, gridBagConstraints);

                            jPanel4113.setLayout(new java.awt.GridBagLayout());

                            jPanel4113.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
                            buttonGroup6.add(jCheckBox1113);
                            jCheckBox1113.setSelected(true);
                            jCheckBox1113.setText("Single");
                            jCheckBox1113.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                            jCheckBox1113.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            jPanel4113.add(jCheckBox1113, gridBagConstraints);

                            buttonGroup6.add(jCheckBox2113);
                            jCheckBox2113.setText("Married");
                            jCheckBox2113.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                            jCheckBox2113.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.weightx = 1.0;
                            jPanel4113.add(jCheckBox2113, gridBagConstraints);

                            buttonGroup6.add(jCheckBox2114);
                            jCheckBox2114.setText("Divorced");
                            jCheckBox2114.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                            jCheckBox2114.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 7;
                            jPanel4113.add(jCheckBox2114, gridBagConstraints);

                            buttonGroup6.add(jCheckBox2115);
                            jCheckBox2115.setText("Others");
                            jCheckBox2115.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                            jCheckBox2115.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.weightx = 1.0;
                            jPanel4113.add(jCheckBox2115, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            jPanel9.add(jPanel4113, gridBagConstraints);

                            jLabel27.setForeground(new java.awt.Color(255, 51, 153));
                            jLabel27.setText("Marital Status");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel9.add(jLabel27, gridBagConstraints);

                            jTextField5.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel9.add(jTextField5, gridBagConstraints);

                            jLabel5721.setBackground(new java.awt.Color(255, 204, 255));
                            jLabel5721.setForeground(new java.awt.Color(255, 51, 102));
                            jLabel5721.setText("Postal Address");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel9.add(jLabel5721, gridBagConstraints);

                            jLabel5.setBackground(new java.awt.Color(255, 0, 0));
                            jLabel5.setForeground(new java.awt.Color(255, 0, 0));
                            jLabel5.setText("Cell Phone No:");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 8;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel9.add(jLabel5, gridBagConstraints);

                            jTextField5821.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 8;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel9.add(jTextField5821, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.gridwidth = 2;
                            gridBagConstraints.gridheight = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jPanel9, gridBagConstraints);

                            jPanel12.setLayout(new java.awt.GridBagLayout());

                            jPanel12.setBackground(new java.awt.Color(153, 255, 204));
                            jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 102, 102), null, null), "Other Patient Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255)));
                            jLabel3.setBackground(new java.awt.Color(255, 204, 255));
                            jLabel3.setForeground(new java.awt.Color(255, 51, 102));
                            jLabel3.setText("Physical Residence");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel12.add(jLabel3, gridBagConstraints);

                            jTextField4.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 10.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel12.add(jTextField4, gridBagConstraints);

                            idNoLbl.setText("ID/NO or PassPort No.");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel12.add(idNoLbl, gridBagConstraints);

                            idNoTxt.setEditable(false);
                            idNoTxt.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    idNoTxtActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 10.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel12.add(idNoTxt, gridBagConstraints);

                            passPortNoLbl.setText("Occupation");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 8;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel12.add(passPortNoLbl, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 8;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 10.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel12.add(occupationTxt, gridBagConstraints);

                            idNoLbl1.setText("Nationality");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel12.add(idNoLbl1, gridBagConstraints);

                            NationalityTxt1.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 10.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel12.add(NationalityTxt1, gridBagConstraints);

                            emailAddTxt.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 10.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel12.add(emailAddTxt, gridBagConstraints);

                            passPortNoLbl1.setText("Email Address");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel12.add(passPortNoLbl1, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.gridwidth = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jPanel12, gridBagConstraints);

                            jPanel11.setLayout(null);

                            jPanel11.setBackground(new java.awt.Color(255, 204, 255));
                            jTextField14.setEditable(false);
                            jTextField14.addComponentListener(new java.awt.event.ComponentAdapter() {
                                public void componentShown(java.awt.event.ComponentEvent evt) {
                                    jTextField14ComponentShown(evt);
                                }
                            });

                            jPanel11.add(jTextField14);
                            jTextField14.setBounds(0, 15, 218, 20);

                            jPanel61.setLayout(new java.awt.GridBagLayout());

                            jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                            jPanel61.setPreferredSize(new java.awt.Dimension(48, 20));
                            jTextField3611.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel61.add(jTextField3611, gridBagConstraints);

                            searchButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
                            searchButton11.setToolTipText("Search");
                            searchButton11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                            searchButton11.setMaximumSize(new java.awt.Dimension(40, 25));
                            searchButton11.setMinimumSize(new java.awt.Dimension(40, 25));
                            searchButton11.setPreferredSize(new java.awt.Dimension(30, 22));
                            searchButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                            searchButton11.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    searchButton11ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            jPanel61.add(searchButton11, gridBagConstraints);

                            jPanel11.add(jPanel61);
                            jPanel61.setBounds(218, 15, 133, 20);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.weightx = 1.0;
                            jPanel1.add(jPanel11, gridBagConstraints);

                            jLabel21.setFont(new java.awt.Font("Dialog", 1, 18));
                            jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 8;
                            gridBagConstraints.gridwidth = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            jPanel1.add(jLabel21, gridBagConstraints);

                            jPanel14.setLayout(new java.awt.GridBagLayout());

                            jPanel14.setBackground(new java.awt.Color(153, 255, 204));
                            jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 102, 102), null, null), "Next Of Kin (NOK)Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255)));
                            jLabel6.setBackground(new java.awt.Color(255, 204, 255));
                            jLabel6.setForeground(new java.awt.Color(255, 51, 102));
                            jLabel6.setText("NOK Names");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel14.add(jLabel6, gridBagConstraints);

                            jTextField1.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.ipadx = 90;
                            gridBagConstraints.weightx = 2.5;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel14.add(jTextField1, gridBagConstraints);

                            jLabel11.setBackground(new java.awt.Color(255, 204, 255));
                            jLabel11.setText("Relationship");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel14.add(jLabel11, gridBagConstraints);

                            relationTxt.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel14.add(relationTxt, gridBagConstraints);

                            idNoLbl2.setText("Physical Residence");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 6;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel14.add(idNoLbl2, gridBagConstraints);

                            nokResidenceTxt.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 6;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel14.add(nokResidenceTxt, gridBagConstraints);

                            NokEmailTxt.setText("Email Address");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel14.add(NokEmailTxt, gridBagConstraints);

                            emailAddTxt1.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel14.add(emailAddTxt1, gridBagConstraints);

                            jTextField17.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.ipadx = 90;
                            gridBagConstraints.weightx = 2.5;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel14.add(jTextField17, gridBagConstraints);

                            jLabel26.setBackground(new java.awt.Color(255, 204, 255));
                            jLabel26.setForeground(new java.awt.Color(255, 51, 102));
                            jLabel26.setText("Postal Address");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel14.add(jLabel26, gridBagConstraints);

                            idNoLbl3.setText("Tel No.");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel14.add(idNoLbl3, gridBagConstraints);

                            nokTelTxt.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel14.add(nokTelTxt, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.gridwidth = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jPanel14, gridBagConstraints);

                            jTextField9.setText("800.00");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            jPanel1.add(jTextField9, gridBagConstraints);

                            jLabel24.setText("Last Visit Date");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 24, 0, 0);
                            jPanel1.add(jLabel24, gridBagConstraints);

                            jPanel15.setLayout(new java.awt.GridBagLayout());

                            jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Patient statistical details in the provided fields", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 51, 0)));
                            jTextField100.setText("800");
                            jTextField100.setMinimumSize(new java.awt.Dimension(0, 0));
                            jTextField100.setPreferredSize(new java.awt.Dimension(0, 0));
                            jTextField100.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jTextField100ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
                            jPanel15.add(jTextField100, gridBagConstraints);

                            jLabel28.setBackground(new java.awt.Color(255, 204, 255));
                            jLabel28.setForeground(new java.awt.Color(51, 0, 204));
                            jLabel28.setText("Reffered By:");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel15.add(jLabel28, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 8;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 100.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel15.add(otherSourceTxt, gridBagConstraints);

                            jLabel29.setBackground(new java.awt.Color(255, 204, 255));
                            jLabel29.setForeground(new java.awt.Color(51, 0, 204));
                            jLabel29.setText("Patient Source:");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel15.add(jLabel29, gridBagConstraints);

                            buttonGroup9.add(jCheckBox13);
                            jCheckBox13.setText("Doctor");
                            jCheckBox13.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox13ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 5;
                            gridBagConstraints.gridy = 0;
                            jPanel15.add(jCheckBox13, gridBagConstraints);

                            buttonGroup8.add(jCheckBox14);
                            jCheckBox14.setText("Cooporate");
                            jCheckBox14.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox14ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.weightx = 1.0;
                            jPanel15.add(jCheckBox14, gridBagConstraints);

                            buttonGroup8.add(jCheckBox15);
                            jCheckBox15.setText("Insurance");
                            jCheckBox15.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox15ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.weightx = 1.0;
                            jPanel15.add(jCheckBox15, gridBagConstraints);

                            buttonGroup8.add(jCheckBox16);
                            jCheckBox16.setSelected(true);
                            jCheckBox16.setText("Self");
                            jCheckBox16.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox16ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.weightx = 1.0;
                            jPanel15.add(jCheckBox16, gridBagConstraints);

                            buttonGroup9.add(jCheckBox17);
                            jCheckBox17.setText("Hospital");
                            jCheckBox17.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox17ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 6;
                            gridBagConstraints.gridy = 0;
                            jPanel15.add(jCheckBox17, gridBagConstraints);

                            jLabel30.setForeground(new java.awt.Color(51, 0, 204));
                            jLabel30.setText("Reffering Doctor/Hospital Name:");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel15.add(jLabel30, gridBagConstraints);

                            NokEmailTxt1.setForeground(new java.awt.Color(51, 0, 204));
                            NokEmailTxt1.setText("Doctor's Specialisation:");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                            jPanel15.add(NokEmailTxt1, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.gridwidth = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel15.add(refDocHosTxt, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 5;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.gridwidth = 4;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel15.add(docSpecTxt, gridBagConstraints);

                            buttonGroup9.add(jCheckBox18);
                            jCheckBox18.setText("Others");
                            jCheckBox18.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox18ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 7;
                            gridBagConstraints.gridy = 0;
                            jPanel15.add(jCheckBox18, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.gridwidth = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            jPanel1.add(jPanel15, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.gridwidth = 6;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.ipady = 5;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 10.0;
                            gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
                            mainPanel.add(jPanel1, gridBagConstraints);

                            jPanel13.setLayout(new java.awt.GridBagLayout());

                            jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                            jButton301.setMnemonic('S');
                            jButton301.setText("Save");
                            jButton301.setToolTipText("Click here to enter data");
                            jButton301.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                                public void mouseMoved(java.awt.event.MouseEvent evt) {
                                    jButton301MouseMoved(evt);
                                }
                            });
                            jButton301.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton301ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel13.add(jButton301, gridBagConstraints);

                            jButton3.setMnemonic('P');
                            jButton3.setText("Preview");
                            jButton3.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton3ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            jPanel13.add(jButton3, gridBagConstraints);

                            jButton152.setMnemonic('E');
                            jButton152.setText("Edit");
                            jButton152.setToolTipText("Click here to edit data");
                            jButton152.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton152ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel13.add(jButton152, gridBagConstraints);

                            jButton202.setMnemonic('l');
                            jButton202.setText("Clear");
                            jButton202.setToolTipText("Click here to clear fields");
                            jButton202.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton202ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel13.add(jButton202, gridBagConstraints);

                            jButton252.setMnemonic('c');
                            jButton252.setText("Close");
                            jButton252.setToolTipText("Click here to close window");
                            jButton252.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton252ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 5;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel13.add(jButton252, gridBagConstraints);

                            jButton1.setMnemonic('h');
                            jButton1.setText("Help");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 7;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel13.add(jButton1, gridBagConstraints);

                            jButton2.setText("Read Smart Card");
                            jButton2.setEnabled(false);
                            jButton2.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton2ActionPerformed(evt);
                                }
                            });

                            jPanel13.add(jButton2, new java.awt.GridBagConstraints());

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridy = 11;
                            gridBagConstraints.gridwidth = 6;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            mainPanel.add(jPanel13, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            getContentPane().add(mainPanel, gridBagConstraints);

                            setBounds(0, 0, 806, 807);
                        }// </editor-fold>//GEN-END:initComponents
    
    private void jCheckBox18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox18ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox18ActionPerformed
    
    private void jCheckBox17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox17ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox17ActionPerformed
    
    private void jCheckBox16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox16ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox16ActionPerformed
    
    private void jCheckBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox15ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox15ActionPerformed
    
    private void jCheckBox14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox14ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox14ActionPerformed
    
    private void jCheckBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox13ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox13ActionPerformed
    
    private void jTextField100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField100ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField100ActionPerformed
    
    private void jTextField99ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField99ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField99ActionPerformed
    
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        com.afrisoftech.hospital.ActivatePatNointfr other = new ActivatePatNointfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    
    private void idNoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idNoTxtActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_idNoTxtActionPerformed
    
    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("A&E")){
            
            try {
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ='CF' and service_type ilike '%cons%'");
                while (rset.next()){
                    jTextField9.setText(rset.getObject(1).toString());
                    System.out.println(jTextField9.getText());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Select not successful");
            }
            
        }else
            if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("CLINICAL CONSULTANTS")){
            
            try {
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select '1500.00' from pb_operating_parameters");
                while (rset.next()){
                    jTextField9.setText(rset.getObject(1).toString());
                    System.out.println(jTextField9.getText());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Select not successful");
            }
            }else{
            jCheckBox2.setSelected(true);
            jTextField9.setText("0.00");
            }
        
        //jPanel5.invalidate();
        jButton3.setEnabled(true);// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed
    
    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        this.jButton301.setText("Save");
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed
    
    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
        this.jButton301.setText("Save");
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox8ActionPerformed
    
    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("A&E")){
            
            try {
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ='CF' and service_type ilike '%cons%'");
                while (rset.next()){
                    jTextField9.setText(rset.getObject(1).toString());
                    System.out.println(jTextField9.getText());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Select not successful");
            }
            
        }else{
            if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("CLINICAL CONSULTANTS")){
                
                try {
                    
                    java.sql.Statement stmt = connectDB.createStatement();
                    java.sql.ResultSet rset = stmt.executeQuery("select '1500.00' from pb_operating_parameters");
                    while (rset.next()){
                        jTextField9.setText(rset.getObject(1).toString());
                        System.out.println(jTextField9.getText());
                    }
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    System.out.println("Select not successful");
                }
            }else{
                jCheckBox1.setSelected(false);
                jTextField9.setText("0.00");
            }
        }
        this.jButton301.setText("Save");
        if(jTextField3.getText().toString().equalsIgnoreCase("") ||jTextField3.getText().toString().equalsIgnoreCase("-")){
            javax.swing.JOptionPane.showMessageDialog(this,"You must open an existing file first", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            jRadioButton2.setSelected(true);
            
        }else{
            if(jTextField3.getText().toString().startsWith("K0")){
                javax.swing.JOptionPane.showMessageDialog(this,"Patient already has the new number [K] ", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                // this.jCheckBox11.setSelected(false);
                this.jRadioButton2.setSelected(true);
            }else{
                jPanel2.invalidate();
                jPanel5.invalidate();
                jButton3.setEnabled(true);
                
                this.jButton301.setText("Save");
                jLabel21.setText("");
                jTextField4.setEditable(true);
                jTextField1.setEditable(true);
                jTextField17.setEditable(true);
                jTextField21.setEditable(true);
                jTextField16.setEditable(false);
                jTextField5.setEditable(true);
                jTextField5821.setEditable(true);
                idNoTxt.setEditable(true);
                emailAddTxt.setEditable(true);
                NationalityTxt1.setEditable(true);
                relationTxt.setEditable(true);
                nokTelTxt.setEditable(true);
                nokResidenceTxt.setEditable(true);
                emailAddTxt1.setEditable(true);
                docSpecTxt.setText("");
                refDocHosTxt.setText("");
                otherSourceTxt.setText("");
                occupationTxt.setText("");
            }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox11ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        jButton3.setEnabled(false);
        java.io.File xmlDocFile = null;
        
        xmlDocFile = new java.io.File(System.getProperty("docsdir"),"ForwardedCardData.xml");//.createTempFile("HospitalClaimsFile", ".xml", new java.io.File(System.getProperty("docsdir")));
        
        biz.systempartners.claims.XMLClaimFile claimFile = new biz.systempartners.claims.XMLClaimFile();
        
        claimFile.processFile(xmlDocFile);
        
        jTextField3.setText(claimFile.patientNumber);
        jTextField21.setText(claimFile.patientSurName);
        jTextField6.setText(claimFile.patientForenames);
        jComboBox1.setSelectedItem("Scheme");
        jTextField5.setText(claimFile.patientAddress);
        jTextField5821.setText(claimFile.patientTelephone);
        emailAddTxt.setText(claimFile.patientEmail);
        java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat();//.getInstance();
        dateFormat.applyPattern("yyyy-MM-dd");
        
        if(claimFile.patientDOB != null) {
            try {
                datePickerYOB.setDate(dateFormat.parse(claimFile.patientDOB));
            } catch (ParseException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
        jTextField13.setText(claimFile.cardNumber);
        jTextField36.setText(claimFile.patientSurName+" "+claimFile.patientForenames);
        jTextField361.setText(claimFile.medicalAidCode);
        jTextField2.setText(claimFile.medicalAidNumber);
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jSearchDialogComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jSearchDialogComponentHidden
//        jSearchDialog.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jSearchDialogComponentHidden
    
    private void jTextField11FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField11FocusLost
        
        //      jSearchDialog.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField11FocusLost
    
    private void jTextField14ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTextField14ComponentShown
// Add your handling code here:
    }//GEN-LAST:event_jTextField14ComponentShown
    
    private void jCheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox10ActionPerformed
/*        try {
 
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ILIKE 'OP%'");
            while (rset.next()){
                jTextField9.setText(rset.getObject(1).toString());
                System.out.println(jTextField9.getText());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        } */  // Add your handling code here:
    }//GEN-LAST:event_jCheckBox10ActionPerformed
    
    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        String name = null;
        int pNo = 0;
        
      /*  jTextField72.setText("");
        jTextField82.setText("");
        jTextField91.setText("");
        jTextField32.setText("");
        jTextField42.setText("");
       */
        jTextField2.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 0).toString());
        
        jTextField3611.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 0).toString());
        jTextField6.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 1).toString());
        jTextField21.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 2).toString());
        
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select nok,residence,year_of_birth,address,sex,tel_no from hp_inpatient_register where patient_no ='"+jTextField3611.getText()+"'");
            while (rset.next()){
                //  jTextField2.setText(rset.getObject(1).toString());
                jTextField1.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField4.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                // datePickerYOB.setDate(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField5.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField5821.setText(dbObject.getDBObject(rset.getObject(6), "-"));
                
                if(rset.getObject(5).toString().startsWith("M")){
                    jCheckBox1111.setSelected(true);
                }else{
                    jCheckBox2111.setSelected(true);
                }
            }
            
            
            
            
            
            
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        
        //   jButton301.setEnabled(true);
        
        jSearchDialog3.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable3MouseClicked
    
    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        jSearchDialog3.dispose();// Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed
    
    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate
        if(jTextField1112.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            if(this.jCheckBox7.isSelected()){
                jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||last_name)) as name,first_name AS surname from hp_inpatient_register where (upper(second_name||' '||first_name||' '||last_name)) ILIKE '%"+jTextField1112.getText().toString()+"%' ORDER BY second_name"));
           /*
                try {
                    searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where (upper(second_name||' '||first_name||' '||last_name)) ILIKE '"+jTextField111.getText().toString()+"%' ORDER BY second_name");
            
                    //   searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where (upper(first_name||' '||second_name||' '||last_name)) ILIKE '"+jTextField111.getText().toString()+"%' EXCEPT select patient_no,patient_name from hp_admission where patient_name ILIKE '"+jTextField111.getText().toString()+"%' ORDER BY name");
                    //   searchRowSet.execute();
                    //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where first_name '~ '~"+jTextField11.getText()+"' order by name");
            
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                        //    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
            */
                jSearchTable3.setShowHorizontalLines(false);
                jSearchScrollPane3.setViewportView(jSearchTable3);
                
                
                
            }else{
                if(this.jCheckBox8.isSelected()){
                    jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||last_name)) as name,first_name AS surname from hp_inpatient_register where patient_no ILIKE '%"+jTextField1112.getText().toString()+"%' ORDER BY second_name"));
                    
                   /* try {
                        searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField111.getText().toString()+"%' ORDER BY second_name");
                    
                        //   searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where (upper(first_name||' '||second_name||' '||last_name)) ILIKE '"+jTextField111.getText().toString()+"%' EXCEPT select patient_no,patient_name from hp_admission where patient_name ILIKE '"+jTextField111.getText().toString()+"%' ORDER BY name");
                        //   searchRowSet.execute();
                        //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where first_name '~ '~"+jTextField11.getText()+"' order by name");
                    
                        jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                            //    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            //    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                    */
                    jSearchTable3.setShowHorizontalLines(false);
                    jSearchScrollPane3.setViewportView(jSearchTable3);
                    
                    
                }
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1112CaretUpdate
    
    private void searchButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton11ActionPerformed
        this.jButton1.setVisible(true);
        searchButton3Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButton11ActionPerformed
    private void searchButton3Clicked() {
        
        System.out.println("Showing dialog");
        
        java.awt.Point point = this.jTextField3611.getLocationOnScreen();
        
        jSearchDialog3.setSize(450,200);
        
        jSearchDialog3.setLocation(point);
        
        jSearchDialog3.show();
        
    }
    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
/*        try {
 
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ILIKE 'SP%'");
            while (rset.next()){
                jTextField9.setText(rset.getObject(1).toString());
                System.out.println(jTextField9.getText());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }   */     // Add your handling code here:
    }//GEN-LAST:event_jCheckBox9ActionPerformed
    
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select '0.00'");
            while (rset.next()){
                jTextField9.setText(rset.getObject(1).toString());
                System.out.println(jTextField9.getText());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }      // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("A&E")){
            
            try {
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ='CF' and service_type ilike '%cons%'");
                while (rset.next()){
                    jTextField9.setText(rset.getObject(1).toString());
                    System.out.println(jTextField9.getText());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Select not successful");
            }
            
        }else{
            if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("CLINICAL CONSULTANTS")){
                
                try {
                    
                    java.sql.Statement stmt = connectDB.createStatement();
                    java.sql.ResultSet rset = stmt.executeQuery("select '1500.00' from pb_operating_parameters");
                    while (rset.next()){
                        jTextField9.setText(rset.getObject(1).toString());
                        System.out.println(jTextField9.getText());
                    }
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    System.out.println("Select not successful");
                }
            }else{
                jCheckBox1.setSelected(false);
                jTextField9.setText("0.00");
            }
        }
        this.jButton301.setText("Save");
        jPanel2.invalidate();
        jPanel5.invalidate();
        jButton3.setEnabled(true);
        
        jLabel21.setText("");
        
        jCheckBox7.setEnabled(true);
        jCheckBox8.setEnabled(true);
        searchButton1.setEnabled(true);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField1.setEditable(false);
        //   datePickerYOB.setEditable(false);
        jTextField5.setEditable(false);
        jTextField7.setEditable(false);
        jTextField8.setEditable(false);
        jTextField5821.setEditable(false);
        jTextField2.setEditable(false);
        jTextField21.setEditable(false);
        jTextField6.setEditable(false);
        idNoTxt.setEditable(false);
        NationalityTxt1.setEditable(true);
        NationalityTxt1.setText("Kenyan");
        emailAddTxt.setText("");
        emailAddTxt.setEditable(false);
        jTextField4.setText("");
        NationalityTxt1.setText("");
        idNoTxt.setText("");
        jTextField4.setText("");
        jTextField1.setText("");
        // jTextField14.setText("");
        jTextField5.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField5821.setText("");
        jTextField2.setText("");
        jTextField21.setText("");
        jTextField6.setText("");
        relationTxt.setText("");
        nokTelTxt.setText("");
        nokResidenceTxt.setText("");
        emailAddTxt1.setText("");
        relationTxt.setEditable(true);
        nokTelTxt.setEditable(true);
        nokResidenceTxt.setEditable(true);
        emailAddTxt1.setEditable(true);
        jButton301.setEnabled(true);
        jButton3.setEnabled(true);
        docSpecTxt.setText("");
        refDocHosTxt.setText("");
        otherSourceTxt.setText("");
        occupationTxt.setText("");
        this.jButton301.setText("Save");
        // Add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed
    
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("A&E")){
            
            try {
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ='CF' and service_type ilike '%cons%'");
                while (rset.next()){
                    jTextField9.setText(rset.getObject(1).toString());
                    System.out.println(jTextField9.getText());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Select not successful");
            }
            
        }else{
            if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("CLINICAL CONSULTANTS")){
                
                try {
                    
                    java.sql.Statement stmt = connectDB.createStatement();
                    java.sql.ResultSet rset = stmt.executeQuery("select '1500.00' from pb_operating_parameters");
                    while (rset.next()){
                        jTextField9.setText(rset.getObject(1).toString());
                        System.out.println(jTextField9.getText());
                    }
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    System.out.println("Select not successful");
                }
            }else{
                jCheckBox1.setSelected(false);
                jTextField9.setText("0.00");
            }
        }
        String selectedchkbx;
        jPanel2.invalidate();
        jPanel5.invalidate();
        
        if (this.jRadioButton1.isSelected()){
            int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure the patient does not have the New Reg. No?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
            
            if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
                
                
                jLabel21.setText("");
                
                jCheckBox7.setEnabled(false);
                jCheckBox8.setEnabled(false);
                searchButton1.setEnabled(false);
                jTextField3.setEditable(false);
                jTextField4.setEditable(true);
                jTextField1.setEditable(true);
                jTextField17.setEditable(true);
                jTextField5.setEditable(true);
                jTextField7.setEditable(true);
                jTextField8.setEditable(true);
                jTextField5821.setEditable(true);
                jTextField2.setEditable(false);
                jTextField21.setEditable(true);
                jTextField6.setEditable(true);
                idNoTxt.setEditable(true);
                emailAddTxt.setEditable(true);
                jTextField3.setText("");
                jTextField4.setText("");
                jTextField1.setText("");
                jTextField17.setText("");
                jTextField5.setText("");
                jTextField7.setText("");
                jTextField8.setText("");
                jTextField5821.setText("");
                jTextField2.setText("");
                jTextField21.setText("");
                jTextField6.setText("");
                NationalityTxt1.setEditable(true);
                NationalityTxt1.setText("Kenyan");
                relationTxt.setEditable(true);
                nokTelTxt.setEditable(true);
                nokResidenceTxt.setEditable(true);
                emailAddTxt1.setEditable(true);
                docSpecTxt.setText("");
                refDocHosTxt.setText("");
                otherSourceTxt.setText("");
                occupationTxt.setText("");
                
                
                
            }else{
                javax.swing.JOptionPane.showMessageDialog(this, "Thank You for taking caution","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //  jButton301ActionPerformed(evt);
        
        //  if(this.jRadioButton1.isSelected()){
        
//        com.afrisoftech.reports.PatientDetailsPdf policy = new com.afrisoftech.reports.PatientDetailsPdf();
//        policy.PatientDetailsPdf(connectDB, jTextField3.getText());
        
        
        //  }
        /*
        int slipNo = 0;
        String rct =null;
        if(jComboBox1.getSelectedItem().equals("Scheme")){
         
            try{
                java.sql.Statement stm = connectDB.createStatement();
                java.sql.ResultSet rs = stm.executeQuery("select currval('creditslip_no_seq')");
                while (rs.next()){
                    slipNo = rs.getInt(1);
         
                }
                java.sql.Statement ps112 = connectDB.createStatement();
                java.sql.ResultSet rst112 = ps112.executeQuery("select rct_format from receipt_pref");
                while (rst112.next()){
                    rct = rst112.getObject(1).toString();
                }
                if(rct.equalsIgnoreCase("Pdf") ){
                    com.afrisoftech.reports.SchemeCreditSlipPdf policy = new com.afrisoftech.reports.SchemeCreditSlipPdf();
                    policy.SchemeCreditSlipPdf(connectDB, jTextField3.getText(),jTextField361.getText(),jTextField6.getText()+" "+jTextField21.getText(),jTextField2.getText(),jTextField13.getText(),slipNo);
                }else{
         
                    com.afrisoftech.txtreports.CreditSlipTxt policy = new com.afrisoftech.txtreports.CreditSlipTxt(connectDB, jTextField3.getText(),jTextField361.getText(),jTextField6.getText()+" "+jTextField21.getText(),jTextField2.getText(),jTextField13.getText(),slipNo);
         
         
                }
         
         
         
         
            }catch(java.sql.SQLException sq){
         
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
         
            }
         
        }
         **/
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        javax.swing.JInternalFrame dismth = new SchemeStatusIntfr(connectDB,pConnDB);
        
        this.getParent().add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed
    
    private void dispose111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose111ActionPerformed
        jSearchDialog111.dispose();        // Add your handling code here:
    }//GEN-LAST:event_dispose111ActionPerformed
    
    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
        //  jComboBox2.setSelectedItem(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0));
        jTextField3.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(), 0).toString());
        jTextField6.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(), 1).toString());
        jSearchDialog111.dispose();
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select nok,residence,year_of_birth,tel_no,address,sex,last_visit,pay_mode from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                jComboBox1.setSelectedItem(dbObject.getDBObject(rset.getObject(8), "-"));
                jTextField16.setText(dbObject.getDBObject(rset.getObject(7), "-"));
                jTextField1.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField4.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                //  jTextField14.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField5821.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField5.setText(dbObject.getDBObject(rset.getObject(5), "-"));
                if (rset.getObject(6).toString().startsWith("M")){
                    jCheckBox1111.setSelected(true);
                    
                }else{
                    
                    if (rset.getObject(6).toString().startsWith("F")){
                        jCheckBox2111.setSelected(true);
                    }else{
                    }
                }
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        //    if(jComboBox1.getSelectedItem().equals("Scheme")){
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payer,description,account_no,member_name,expiry_date from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField2.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField361.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                jTextField13.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField36.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField18.setText(dbObject.getDBObject(rset.getObject(5), "-"));
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        // }
        
        
        jButton301.setEnabled(true);
        jButton3.setEnabled(true);
        jSearchDialog111.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked
    
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if(jTextField11111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField11111.getText()+"%' order by patient_no"));
              /*
                searchRowSet111.execute("SELECT patient_no, (upper(second_name||' '||first_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField11111.getText()+"%' order by patient_no");
                jSearchTable111.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet111, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
               
                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                }));
               */
            jSearchTable111.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(jSearchTable111);
            
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate
    
    private void dispose11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose11ActionPerformed
        jSearchDialog11.dispose();    // Add your handling code here:
    }//GEN-LAST:event_dispose11ActionPerformed
    
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        boolean applylimit = false;
        String accNo = null;
        jTextField361.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 1).toString());
        jTextField18.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 3).toString());
        jTextField2.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 2).toString());
        jTextField15.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
        
        accNo = jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString();
        java.util.Date exp = null;
        java.util.Date date = null;
        double limit = 0.00;
        double outstanding = 0.00;
        double balance = 0.00;
        String Suspended = null;
        String Closed = null;
        
        //Additionals. These code have been substituted for the ones commented below
        jTextField36.setEditable(true);
        jTextField13.setEditable(true);
        
        jSearchDialog11.dispose();
        
        /*
         try {
            connectDB.setAutoCommit(false);
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select sum(balance-credit_bal) from ac_debtors where ACCOUNT_NO ILIKE '"+jTextField15.getText()+"' and dealer ILIKE '"+jTextField2.getText()+"'");
            while (rset1.next()){
                balance = rset1.getDouble(1);
            }
         
            //Old for Scheme members
         
           // java.sql.Statement stmt1x = connectDB.createStatement();
           // java.sql.ResultSet rset1x = stmt1x.executeQuery("select distinct applylimit from hp_schemestaff where account_no = '"+accNo+"'");
           // while (rset1x.next()){
           //     applylimit = rset1x.getBoolean(1);
          //  }
         
         
            java.sql.Statement stmt1x = connectDB.createStatement();
            java.sql.ResultSet rset1x = stmt1x.executeQuery("select distinct suspended from ac_schemes where account_no = '"+jTextField15.getText()+"'");
            while (rset1x.next()){
                applylimit = rset1x.getBoolean(1);
            }
         
            if(applylimit){
                jTextField36.setEditable(false);
                jTextField13.setEditable(false);
            }else{
                jTextField36.setEditable(true);
                jTextField13.setEditable(true);
            }
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select suspended, closed,expiry_date,current_date,scheme_limit from ac_schemes where ACCOUNT_NO ILIKE '"+jTextField15.getText()+"' and payer_name ILIKE '"+jTextField2.getText()+"'");
            while (rset.next()){
                java.text.DateFormat df = java.text.DateFormat.getDateInstance();
         
                java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
         
                sdf.applyPattern("yyyy-MM-dd");
         
                try {
                    datePicker2.setDate(sdf.parse(rset.getObject(3).toString()));
                } catch (java.text.ParseException pe) {
                    javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                }
         
                Suspended = rset.getObject(1).toString();
                Closed = rset.getObject(2).toString();
                exp = rset.getDate(3);
                date = rset.getDate(4);
                limit = rset.getDouble(5);
         
            }
            outstanding=limit-balance;
            jTextField12.setText(java.lang.String.valueOf(outstanding));
            if (balance < limit){
                if (Suspended.equals("true")){
         
                    javax.swing.JOptionPane.showMessageDialog(this, "SCHEME SUSPENDED !!", "Suspension MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    jTextField361.setText("");
                    jTextField2.setText("");
                }else{
                    if (Closed.equals("true")){
         
                        javax.swing.JOptionPane.showMessageDialog(this, "SCHEME CLOSED !!", "Viability MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        jTextField361.setText("");
                        jTextField2.setText("");
                    }else {
         
                        if (exp.before(date)){
         
                            javax.swing.JOptionPane.showMessageDialog(this, "SCHEME EXPIRED !! ON " +date, "Expiry MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                            jTextField361.setText("");
                            jTextField2.setText("");
                        }else{
                            if (balance > limit){
         
                                javax.swing.JOptionPane.showMessageDialog(this, "SCHEME LIMIT IS " + limit + " AND DEBT IS " + balance + "\n Hence Limit exceeded by " +(balance - limit), "Debt Status MESSAGE",javax.swing.JOptionPane.PLAIN_MESSAGE);
                                jTextField361.setText("");
                                jTextField2.setText("");
                            }
                        }
                    }
                }
            }else{
                javax.swing.JOptionPane.showMessageDialog(this, "Limit Exceeded", "Credit balance Confirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);
         
            }
        } catch(java.sql.SQLException sqlExec) {
         
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
         
        }
         */
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Privilege")){
                jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT account_no,scheme_name,payer_name,expiry_date from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%' and payer_name ilike 'PRIVILEGE CARD%' order by scheme_name"));
                jSearchTable11.setShowHorizontalLines(false);
                jSearchScrollPane11.setViewportView(jSearchTable11);
                
            } else{
                jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT account_no,scheme_name,payer_name,expiry_date from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%'  order by scheme_name"));
                jSearchTable11.setShowHorizontalLines(false);
                jSearchScrollPane11.setViewportView(jSearchTable11);
                
            }
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        
        jButton3.setEnabled(true);
        searchButton11aClicked();        // Add your handling code here:
        
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void searchButton11aClicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog11.dispose();
        java.awt.Point point = this.jTextField361.getLocationOnScreen();
        
        jSearchDialog11.setSize(400,200);
        
        jSearchDialog11.setLocation(point);
        jSearchDialog11.show();
        
        
    }
    private void jButton301111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton301111ActionPerformed
        try {
            
            //            java.lang.Object selectedGuaran = jComboBox2.getSelectedItem();
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql1= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql1.toString());
            
            //     java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
            
            //     System.out.println(datenowSql.toString());
            
            
            String activity = null;
            String actNo = null;
            String billNo = null;
            String rate = null;
            String transNo = null;
            String patientAcc = null;
            String insAcc = null;
            String cardAcc = null;
            String AccDesc = null;
            String cardName = null;
            String insName = null;
            String user = null;
            
            try {
                connectDB.setAutoCommit(false);
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select activity,code,current_user from pb_activity where activity_category ='CF'");
                while (rset.next())
                    activity = rset.getObject(1).toString();
                actNo = rset.getObject(2).toString();
                user = rset.getObject(3).toString();
                
                
                
/*                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE hp_patient_register set values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
 */
                
           /*
                java.sql.Statement stm1 = connectDB.createStatement();
                java.sql.ResultSet rse1 = stm1.executeQuery("select code,activity,user from pb_activity where activity_category ='PR'");
                while (rse1.next())
            
                    patientAcc = rse1.getObject(1).toString();
                AccDesc = rse1.getObject(2).toString();
                user = rse1.getObject(3).toString();
            
                java.sql.Statement stm3 = connectDB.createStatement();
                java.sql.ResultSet rse3 = stm3.executeQuery("select code,activity from pb_activity where activity_category ='RC'");
                while (rse3.next())
            
                    cardAcc = rse3.getObject(1).toString();
                cardName = rse3.getObject(2).toString();
            */
                java.sql.Statement stm2 = connectDB.createStatement();
                java.sql.ResultSet rse2 = stm2.executeQuery("select code,activity from pb_activity where activity_category ='DA'");
                while (rse2.next())
                    
                    insAcc = rse2.getObject(1).toString();
                insName = rse2.getObject(2).toString();
                //     if(jCheckBox1.isSelected()||jCheckBox2.isSelected()){
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select nextval('billing_no_seq')");
                while (rset1.next())
                    billNo = rset1 .getObject(1).toString();
                
                java.sql.Statement stmt3 = connectDB.createStatement();
                java.sql.ResultSet rset3 = stmt3.executeQuery("select nextval('transaction_no_seq')");
                while (rset3.next())
                    transNo = rset3 .getObject(1).toString();
                /*
                java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                pstmt21.setString(1,jTextField1611.getText());
                pstmt21.setString(2,""+activity+"");
                pstmt21.setString(3,jTextField3111.getText());
                pstmt21.setString(4,transNo);
                pstmt21.setString(5,actNo);
                pstmt21.setString(6,"Doctors Fee");
                pstmt21.setString(7,"00");
                pstmt21.setString(8,jTextField14111.getText());
                pstmt21.setString(9,"");
                pstmt21.setString(10,jTextField3.getText());
                 
                pstmt21.setString(11,activity);
                pstmt21.setString(12,"false");
                pstmt21.setString(14,"'now'");
                pstmt21.setString(13,user);
                pstmt21.executeUpdate();
                 
                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                pstmt2.setString(1,actNo);
                pstmt2.setString(2,""+activity+"");
                pstmt2.setString(3,jTextField3.getText());
                pstmt2.setString(4,jTextField6.getText()+" "+jTextField21.getText());
                pstmt2.setString(5,"");
                pstmt2.setString(6,"");
                pstmt2.setString(7,"");
                pstmt2.setString(8,"");
                pstmt2.setString(9,"");
                pstmt2.setString(10,"");
                pstmt2.setString(11,"");
                pstmt2.setString(12,"");
                pstmt2.setString(13,"");
                pstmt2.setString(14,activity);
                pstmt2.setString(15,"Revenue");
                pstmt2.setString(16,"00");
                pstmt2.setString(17,jTextField10.getText());
                pstmt2.setString(18,"'now'");
                pstmt2.setString(19,""+transNo+"");
                pstmt2.setString(20,"false");
                pstmt2.setString(21,"false");
                pstmt2.setString(22,"false");
                pstmt2.setString(23,user);
                pstmt2.executeUpdate();
                 */
                // com.afrisoftech.nochospital.PatientCardPdf policy = new PatientCardPdf();
                // policy.PatientCardPdf(connectDB, jComboBox2.getSelectedItem().toString());
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                this.jDialog31.dispose();
                
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }     // Add your handling code here:
    }//GEN-LAST:event_jButton301111ActionPerformed
    
    private void jButton252111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton252111ActionPerformed
        this.jDialog31.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton252111ActionPerformed
    
    private void searchButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton13ActionPerformed
        searchButton111Clicked();       // Add your handling code here:
    }//GEN-LAST:event_searchButton13ActionPerformed
    
    private void dispose2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose2ActionPerformed
        jSearchDialog2.dispose(); // Add your handling code here:
    }//GEN-LAST:event_dispose2ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        double rate = 0.00;
        double amt = 0.00;
        double total = 0.00;
        double HosRate = 0.00;
        jTextField3111.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField1611.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField4111.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select doctor/100 from pb_patient_categories where patient_type = '"+this.jComboBox4.getSelectedItem().toString()+"'");
            while (rset.next())
                amt = rset.getDouble(1);
            rate = Double.parseDouble(jTextField9.getText());
            total = (amt * rate);
            HosRate = (rate - total);
            jTextField14111.setText(""+total+"");
            jTextField10.setText(""+HosRate+"");
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        
        
        jSearchDialog2.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    private void searchButton111Clicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog2.dispose();
        java.awt.Point point = this.jTextField3111.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        jSearchDialog2.show();
        
        
    }
    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        if(jTextField112.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField112.getText()+"%' order by first_name"));
            
             /*   searchRowSet2.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField112.getText()+"%' order by first_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
              
                jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
              
                }));
              */
            jSearchTable2.setShowHorizontalLines(false);
            jSearchScrollPane2.setViewportView(jSearchTable2);
            
            
            
        }  // Add your handling code here:
    }//GEN-LAST:event_jTextField112CaretUpdate
    
    private void dispose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose1ActionPerformed
        jSearchDialog1.dispose();          // Add your handling code here:
    }//GEN-LAST:event_dispose1ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        boolean applylimit = false;
        String accNo = null;
        double limit = 0.00;
        double bill = 0.00;
        double balance = 0.00;
        jTextField36.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        jTextField13.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        //  jTextField15.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        
        try {
            /*
             ///// OLD CODE FOR CHECKING STAFF BALANCE
            java.sql.Statement stmt1x = connectDB.createStatement();
            java.sql.ResultSet rset1x = stmt1x.executeQuery("select applylimit,account_no,limit_amount from hp_schemestaff where staff_no = '"+jTextField13.getText()+"'");
            while (rset1x.next()){
                applylimit = rset1x.getBoolean(1);
                accNo = rset1x.getString(2);
                limit = rset1x.getDouble(3);
            }
             */
            
            java.sql.Statement stmt1x = connectDB.createStatement();
            java.sql.ResultSet rset1x = stmt1x.executeQuery("select suspended,account_no,scheme_limit from ac_schemes where account_no = '"+jTextField13.getText()+"'");
            while (rset1x.next()){
                applylimit = rset1x.getBoolean(1);
                accNo = rset1x.getString(2);
                limit = rset1x.getDouble(3);
            }
            
            if(applylimit){
                java.sql.Statement stmt = connectDB.createStatement();
                ///// OLD CODE FOR CHECKING STAFF BALANCE
                ///java.sql.ResultSet rset = stmt.executeQuery("select sum(balance) from ac_debtors where account_no = '"+accNo+"' and member_no = '"+jTextField13.getText()+"'");
                java.sql.ResultSet rset = stmt.executeQuery("select sum(balance) from ac_debtors where account_no = '"+accNo+"'");
                
                while (rset.next()){
                    bill = rset.getDouble(1);
                }
                balance = limit-bill;
                
                if(balance <= limit){
                    jTextField12.setText(java.lang.String.valueOf(balance));
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this, "Your limit is " + limit + " AND balance = " + balance + "\n Hence Limit exceeded by " +(balance - limit), "Debt Status MESSAGE",javax.swing.JOptionPane.PLAIN_MESSAGE);
                    
                }
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            // System.out.println("Insert not successful");
        }
        
        
        jSearchDialog1.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if(jTextField111.getCaretPosition() < 2){
            
            System.out.println("Nothing");
        }else{
            if(this.jCheckBox5.isSelected()){
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_name ILIKE '"+jTextField111.getText().toString()+"%' and sheme_name ilike '"+jTextField361.getText().toString()+"' ORDER BY staff_name"));
            /*
                    searchRowSet1.execute("select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_name ILIKE '"+jTextField111.getText().toString()+"%' and sheme_name = '"+jTextField361.getText().toString()+"' ORDER BY staff_name");
             
                    jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Member Acc.", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("sheme_name", "Scheme Name", false)
             
                    }));
             */
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);
                
                
            }else{
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_no ILIKE '"+jTextField111.getText().toString()+"%' and sheme_name ilike '"+jTextField361.getText().toString()+"' ORDER BY staff_no"));
                
                 /*   searchRowSet1.execute("select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_no ILIKE '"+jTextField111.getText().toString()+"%' and sheme_name = '"+jTextField361.getText().toString()+"' ORDER BY staff_no");
                  
                    jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Member Acc.", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("sheme_name", "Scheme Name", false)
                  
                    }));
                  */
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);
                
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton11Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton11Clicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog1.dispose();
        java.awt.Point point = this.jTextField36.getLocationOnScreen();
        
        jSearchDialog1.setSize(400,200);
        
        jSearchDialog1.setLocation(point);
        
        jSearchDialog1.show();
        
        
    }
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        this.jSearchDialog.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        
        //  jComboBox2.setSelectedItem(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0));
        jTextField3.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        jTextField6.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        jTextField21.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2).toString());
        jSearchDialog.dispose();
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select nok,residence,year_of_birth,tel_no,address,upper(sex) as sex,pay_mode,last_visit, nok_add, id_no, emails, CARD_NO, PAT_NATIONALITY,NOk_TELNO,nok_relationship, nok_residence,nok_email,pat_marital_status from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                jComboBox1.setSelectedItem(dbObject.getDBObject(rset.getObject(7), "-"));
                jTextField16.setText(dbObject.getDBObject(rset.getObject(8), "-"));
                jTextField1.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField4.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                // jTextField14.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField5821.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField5.setText(dbObject.getDBObject(rset.getObject(5), "-"));
                if(rset.getObject(6) != null){
                    if (rset.getObject(6).toString().startsWith("M")){
                        jCheckBox1111.setSelected(true);
                        
                    }else{
                        
                        if (rset.getObject(6).toString().startsWith("F")){
                            jCheckBox2111.setSelected(true);
                        }else{
                        }
                    }
                }
                jTextField17.setText(dbObject.getDBObject(rset.getObject(9), "-"));
                idNoTxt.setText(rset.getObject(10).toString());
                emailAddTxt.setText(rset.getObject(11).toString());
                jTextField13.setText(rset.getObject(12).toString());
                NationalityTxt1.setText(dbObject.getDBObject(rset.getObject(13), "-"));
                nokTelTxt.setText(dbObject.getDBObject(rset.getObject(14), "-"));
                relationTxt.setText(dbObject.getDBObject(rset.getObject(15), "-"));
                nokResidenceTxt.setText(dbObject.getDBObject(rset.getObject(16), "-"));
                emailAddTxt1.setText(dbObject.getDBObject(rset.getObject(17), "-"));
                if(rset.getObject(18) != null){
                    if (rset.getObject(18).toString().startsWith("S")){
                        jCheckBox1113.setSelected(true);
                        
                    }else{
                        
                        if (rset.getObject(18).toString().startsWith("M")){
                            jCheckBox2113.setSelected(true);
                        }else{
                        }
                    }
                }
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        //   if(jComboBox1.getSelectedItem().equals("Scheme")){
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payer,description,account_no,member_name,expiry_date,CARD_NO,id_no, emails from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField2.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField361.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                jTextField15.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField36.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField18.setText(dbObject.getDBObject(rset.getObject(5), "-"));
                java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                
                java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
                
                sdf.applyPattern("yyyy-MM-dd");
                
                try {
                    datePicker2.setDate(sdf.parse(rset.getObject(5).toString()));
                } catch (java.text.ParseException pe) {
                    javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                }
                
                jTextField13.setText(dbObject.getDBObject(rset.getObject(6), "-"));
                idNoTxt.setText(dbObject.getDBObject(rset.getObject(7), "-"));
                emailAddTxt.setText(dbObject.getDBObject(rset.getObject(8), "-"));
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        //}
        
        //emailAddTxt.setText("");
        //idNoTxt.setText("");
        jButton301.setEnabled(true);
        
        jSearchDialog.dispose();
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        if(jCheckBox7.isSelected()){
            if(jTextField11.getCaretPosition() < 3){
                
                System.out.println("Nothing");
            }else{
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, upper(second_name) as other_names, upper(first_name) as surname, year_of_birth, residence from hp_patient_register where second_name||' '||first_name ILIKE '%"+jTextField11.getText()+"%' order by second_name"));
              /*  searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name ILIKE '"+jTextField11.getText()+"%' order by second_name");
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
               
                        new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
               */
                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);
                
                
                
            }
            
        }else  if(jCheckBox8.isSelected()){
            if(jTextField11.getCaretPosition() < 3){
                
                System.out.println("Nothing");
            }else{
                
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, upper(second_name) as other_names, upper(first_name) as surname, year_of_birth, residence from hp_patient_register where patient_no ILIKE '%"+jTextField11.getText()+"%' order by patient_no"));
                
                 /*   searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField11.getText()+"%' order by patient_no");
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                  
                        new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                  */
                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);
                
                
            }
            
        }// Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
    
    private void disposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposeActionPerformed
        
        jSearchDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_disposeActionPerformed
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("A&E")){
            
            try {
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ='CF' and service_type ilike '%cons%'");
                while (rset.next()){
                    jTextField9.setText(rset.getObject(1).toString());
                    System.out.println(jTextField9.getText());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Select not successful");
            }
            
        }else{
            if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("CLINICAL CONSULTANTS")){
                
                try {
                    
                    java.sql.Statement stmt = connectDB.createStatement();
                    java.sql.ResultSet rset = stmt.executeQuery("select '1500.00' from pb_operating_parameters");
                    while (rset.next()){
                        jTextField9.setText(rset.getObject(1).toString());
                        System.out.println(jTextField9.getText());
                    }
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    System.out.println("Select not successful");
                }
            }else{
                jCheckBox1.setSelected(false);
                jTextField9.setText("0.00");
            }
        }
        jButton301.setEnabled(true);
        
        jButton3.setEnabled(true);
        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    
    private void jButton152ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton152ActionPerformed
        this.jButton301.setText("Update");
        String selectedchkbx = null;
        
        if (this.jCheckBox2111.isSelected()){
            selectedchkbx = jCheckBox2111.getText();
        }  else{
            
            selectedchkbx = jCheckBox1111.getText();
        }
        
        jLabel21.setText("");
        
        jCheckBox7.setEnabled(false);
        jCheckBox8.setEnabled(false);
        searchButton1.setEnabled(false);
        jTextField3.setEditable(false);
        jTextField4.setEditable(true);
        jTextField1.setEditable(true);
        jTextField17.setEditable(true);
        jTextField5.setEditable(true);
        jTextField7.setEditable(true);
        jTextField8.setEditable(true);
        jTextField5821.setEditable(true);
        jTextField2.setEditable(false);
        jTextField21.setEditable(true);
        jTextField6.setEditable(true);
        idNoTxt.setEditable(true);
        emailAddTxt.setEditable(true);
        //jTextField3.setEditable(true);
        jTextField4.setEditable(true);
        jTextField1.setEditable(true);
        jTextField17.setEditable(true);
        jTextField5.setEditable(true);
        jTextField7.setEditable(true);
        jTextField8.setEditable(true);
        jTextField5821.setEditable(true);
        jTextField2.setEditable(true);
        jTextField21.setEditable(true);
        jTextField6.setEditable(true);
        NationalityTxt1.setEditable(true);
        relationTxt.setEditable(true);
        nokTelTxt.setEditable(true);
        nokResidenceTxt.setEditable(true);
        emailAddTxt1.setText("");
        relationTxt.setText("");
        nokTelTxt.setText("");
        nokResidenceTxt.setText("");
        emailAddTxt1.setText("");
        
        emailAddTxt1.setEditable(true);
        docSpecTxt.setText("");
        refDocHosTxt.setText("");
        otherSourceTxt.setText("");
        occupationTxt.setText("");
                            /*
                                 java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE hp_patient_register SET  old_patient_no, first_name='"+jTextField21.getText()+"',  second_name='"+jTextField6.getText()+"',  nok='"+jTextField1.getText()+"',   residence='"+jTextField4.getText()+"',  address='"+jTextField5.getText()+"',  year_of_birth='"+datePickerYOB.getDate().toString()+"',  tel_no='"+jTextField5821.getText()+"',  sex='"+selectedchkbx+"',  date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  pay_mode='"+jComboBox1.getSelectedItem()+"',  payer='"+jTextField2.getText()+"',  account_no='"+jTextField15.getText()+"',  description='"+jTextField361.getText()+"',  category='"+jComboBox4.getSelectedItem()+"',"+
  "expiry_date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  last_visit='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  department='"+jComboBox4.getSelectedItem()+"',  member_name='"+jTextField36.getText()+"',  card_no='"+jTextField13.getText()+"',  emails='"+emailAddTxt.getText()+"',  id_no='"+idNoTxt.getText()+"',  nok_add='"+jTextField17.getText()+"'");
                    pstmt.executeUpdate();
                             
                             */
        
        /*  emailAddTxt.setText("");
        idNoTxt.setText("");
         
        jTextField4.setEditable(true);
         
        jTextField1.setEditable(true);
        //  jTextField14.setEditable(true);
        jTextField5.setEditable(true);
        jTextField7.setEditable(true);
        jTextField8.setEditable(true);
        jTextField5821.setEditable(true);
        jTextField2.setEditable(true);
        jTextField21.setEditable(true);
        jTextField6.setEditable(true);
        idNoTxt.setEditable(true);
        emailAddTxt.setEditable(true);
         
         
        try {
         
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select nok,residence,year_of_birth,tel_no,address,upper(sex) as sex,pay_mode,last_visit,upper(second_name) as other_names, upper(first_name) as surname from hp_patient_register where patient_no ILIKE '"+jTextField3.getText()+"'");
            while (rset.next()){
                jComboBox1.setSelectedItem(dbObject.getDBObject(rset.getObject(7), "-"));
                jTextField16.setText(dbObject.getDBObject(rset.getObject(8), "-"));
                jTextField1.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField4.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                //  jTextField14.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField5821.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField5.setText(dbObject.getDBObject(rset.getObject(5), "-"));
                if (rset.getObject(6).toString().startsWith("M")){
                    jCheckBox1111.setSelected(true);
         
                }else{
         
                    if (rset.getObject(6).toString().startsWith("F")){
                        jCheckBox2111.setSelected(true);
                    }else{
                    }
                }
                jTextField6.setText(dbObject.getDBObject(rset.getObject(9), "-"));
                jTextField21.setText(dbObject.getDBObject(rset.getObject(10), "-"));
         
         
                // jTextField12.setText(dbObject.getDBObject(rset.getObject(6), "-"));
                //  dbObject.getDBObject(rset1.getObject(3), "-")
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        //   if(jComboBox1.getSelectedItem().equals("Scheme")){
        try {
         
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payer,description,account_no,member_name,expiry_date from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField2.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField361.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                jTextField13.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField36.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField18.setText(dbObject.getDBObject(rset.getObject(5), "-"));
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        //}
        jButton301.setEnabled(true);
         
        jSearchDialog.dispose();
         */
        //  javax.swing.JFrame bank = new NewPatients(connectDB, pConnDB, jTextField3.getText().toString());
        // bank.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_jButton152ActionPerformed
    
    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where service_type ILIKE 'CF'");
            while (rset.next()){
                jTextField9.setText(rset.getObject(1).toString());
                System.out.println(rset.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        
        // this.jDialog31.setVisible(true);
        
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
       /* try {
        
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ='CF' and service_type ilike '%cons%'");
            while (rset.next()){
                jTextField9.setText(rset.getObject(1).toString());
                System.out.println(jTextField9.getText());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }*/
        //if(jCheckBox1.isSelected()){
        if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("A&E")){
            
            try {
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ='CF' and service_type ilike '%cons%'");
                while (rset.next()){
                    jTextField9.setText(rset.getObject(1).toString());
                    System.out.println(jTextField9.getText());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Select not successful");
            }
            
        }else
            if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("CLINICAL CONSULTANTS")){
            
            try {
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select '1500.00' from pb_operating_parameters where category ='CF' and service_type ilike '%cons%'");
                while (rset.next()){
                    jTextField9.setText(rset.getObject(1).toString());
                    System.out.println(jTextField9.getText());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Select not successful");
            }
            }else{
            jCheckBox1.setSelected(false);
            jTextField9.setText("0.00");
            }
        // }else{
        // jCheckBox1.setSelected(false);
        //jTextField9.setText("0.00");
        //}
        //this.jDialog31.setVisible(true);// Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jButton301MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton301MouseMoved
        jLabel2.setText("");        // Add your handling code here:
    }//GEN-LAST:event_jButton301MouseMoved
    
    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        
    }//GEN-LAST:event_jPanel1MouseEntered
    
    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        //      try {
        
        //            crset5.execute();
        //            crset11.execute();
        
        //      } catch(java.sql.SQLException sqlExec) {
        ///
        //          javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        
        //       }        // Add your handling code here:
    }//GEN-LAST:event_formFocusGained
    
    private void jButton202ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton202ActionPerformed
        //   jComboBox1.setSelectedItem(null);
        jComboBox4.setSelectedItem("-");
        //   jComboBox1.setSelectedItem(null);
        //        jComboBox9.setSelectedItem(null);
        //        jComboBox6.setSelectedItem(null);
        //        jComboBox2.setSelectedItem(null);
        jTextField4.setText("");
        jTextField1.setText("");
        jTextField17.setText("");
        jTextField5.setText("");
        jTextField7.setText("");
        jTextField16.setText("");
        jTextField8.setText("");
        jTextField5821.setText("");
        jTextField2.setText("");
        emailAddTxt.setText("");
        idNoTxt.setText("");
        jTextField13.setText("");
        jTextField361.setText("");
        //jTextField14.setText("");
        jTextField36.setText("");
        jTextField21.setText("");
        jTextField6.setText("");
        jTextField3.setText("");
        emailAddTxt1.setText("");
        relationTxt.setText("");
        nokTelTxt.setText("");
        nokResidenceTxt.setText("");
        emailAddTxt1.setText("");
        NationalityTxt1.setText("");
        jTextField361.setText("");
        jTextField2.setText("");
        jTextField18.setText("");
        jTextField36.setText("");
        jTextField13.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jButton202ActionPerformed
    
    private void jButton252ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton252ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton252ActionPerformed
    
    private void jPanel52ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel52ComponentShown
        //     jPanel2.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jPanel52ComponentShown
    
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select insurer from pb_creditcard_types where card_name ='"+jComboBox3.getSelectedItem()+"'");
            while (rset.next()){
                jTextField7.setText(rset.getObject(1).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }   // Add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Credit Card")){
            jPanel5.setVisible(false);
            jPanel2.setVisible(true);
            //panel5Showing = false;
        }else{
            if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Scheme") | jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Privilege")) {
                jPanel2.setVisible(false);
                jPanel5.setVisible(true);
                
            }else{
                jPanel2.setVisible(false);
                jPanel5.setVisible(false);
            }
        }
        
        jButton301.setEnabled(true);
        jButton3.setEnabled(true);
        jLabel21.setText("");
        
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void jButton301ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton301ActionPerformed
        
        //  java.sql.Savepoint savePointRegistration = null;
        
        java.lang.String tempPatientNO = com.afrisoftech.lib.DateLables.getDateLabel(); // Temporary patient registration number.
        java.lang.String tempSlipNO = com.afrisoftech.lib.DateLables.getDateLabel();  // Temporary credit slip number.
        java.lang.String tempTransactionNO = com.afrisoftech.lib.DateLables.getDateLabel(); // Temporary transaction number.
        
        if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("-") | jComboBox4.getSelectedItem().toString().equalsIgnoreCase("")){
            javax.swing.JOptionPane.showMessageDialog(this,"You must select Entry Point", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            //CHECK WHETHER ENTRY POINT IS SLECTED
            
        }else{
            
            //IF ENTRY IS SELECTED CHECK IF PAYMENT MODE IS SELECTED
            
            if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("-") | jComboBox1.getSelectedItem().toString().equalsIgnoreCase("")){
                javax.swing.JOptionPane.showMessageDialog(this,"You must select Payment Mode", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
                
            }else{
                
                if(!jTextField3.getText().toString().startsWith("K0") && jRadioButton2.isSelected()){
                    
                    //IF PAYMENT MODE IS SELECTED THIS IS FOR ACTIVATING EXISTING PATIENTS . IF NOT GIVEN NEW 'K' NUMBER REJECT
                    javax.swing.JOptionPane.showMessageDialog(this, "The Patient does not have the new No.\n Click on Create a Pry No For Existing....", "CAUTION MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    
                }else {
                    if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("scheme")){
                        
                        
                        if (jTextField2.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Payer Name", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }else
                            if (jTextField18.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter valid expiry date\n Pls select the scheme again", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                            }else
                                if (jTextField36.getText().equalsIgnoreCase("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter valid Scheme membership name", "Caution!",javax.swing.JOptionPane.ERROR_MESSAGE);
                            
                                }else
                                    if (jTextField13.getText().equalsIgnoreCase("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter valid Scheme membership name", "Caution!",javax.swing.JOptionPane.ERROR_MESSAGE);
                            
                                    }else
                                        
                                        if (jTextField21.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Surname", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                        }else
                                            if (jTextField6.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Other Names Field", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                            }else
                                                
                                                if (jTextField1.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Next Of Kin", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                }else
                                                    if (jTextField4.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Patient Residence", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                    }else
                                                        if (jTextField5.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must Patient Postal Address", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                        }else
                                                            if (jTextField5821.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Patient Cellphone", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                            }else
                                                                
                                                                if (NationalityTxt1.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Patient Nationality", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                }else
                                                                    if (idNoTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter ID/Passport No", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                    }else
                                                                        if (emailAddTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must Patient Email Address", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                        }else
                                                                            if (relationTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter NOK Relationship", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                            }else
                                                                                if (jTextField17.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter NOK Address", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                                }else
                                                                                    if (emailAddTxt1.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Patient Email Address", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                                    }else
                                                                                        if (nokTelTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter NOK Tel", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                                        }else
                                                                                            if (occupationTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Occupation", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                                            }else
                                                                                                if (nokResidenceTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must Patient Residence", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                                                }else
                                                                                                    if (jCheckBox13.isSelected() && (docSpecTxt.getText().equals("") | docSpecTxt.getText().equals("-"))) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must Enter refering doctor Specilaisation", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                                                    }else{
                            try {
                                
                                try {
                                    int patient = 0;
                                    java.sql.Statement stmt1 = connectDB.createStatement();
                                    
                                   java.sql.ResultSet rset11 = stmt1.executeQuery("SELECT DISTINCT count(patient_no) FROM hp_patient_visit where transaction_type ilike 'registration%' and (patient_no = '"+jTextField3.getText().toString()+"' AND patient_no !='' ) and date = '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"'");
                                    while (rset11.next()){
                                        patient = rset11.getInt(1);
                                        
                                    }
                                    if (patient > 0){
                                        javax.swing.JOptionPane.showMessageDialog(this,"Patient Already activated for that date.\n Proceed anyway", "Confimation Message",javax.swing.JOptionPane.ERROR_MESSAGE);
                                            if(jButton301.getText().equalsIgnoreCase("Update")){
                                                 java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE hp_patient_register SET  old_patient_no='"+jTextField3.getText()+"', first_name='"+jTextField21.getText()+"',  second_name='"+jTextField6.getText()+"',  nok='"+jTextField1.getText()+"',   residence='"+jTextField4.getText()+"',  address='"+jTextField5.getText()+"',  year_of_birth='"+datePickerYOB.getDate().toString()+"',  tel_no='"+jTextField5821.getText()+"',  date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  pay_mode='"+jComboBox1.getSelectedItem()+"',  payer='"+jTextField2.getText()+"',  account_no='"+jTextField15.getText()+"',  description='"+jTextField361.getText()+"',  category='"+jComboBox4.getSelectedItem()+"',"+
                                                "expiry_date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  last_visit='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  department='"+jComboBox4.getSelectedItem()+"',  member_name='"+jTextField36.getText()+"',  card_no='"+jTextField13.getText()+"',  emails='"+emailAddTxt.getText()+"',  id_no='"+idNoTxt.getText()+"',  nok_add='"+jTextField17.getText()+"', patient_no='"+jTextField3.getText()+"', pat_nationality='"+NationalityTxt1.getText()+"', nok_telno='"+nokTelTxt.getText()+"',nok_relationship='"+relationTxt.getText()+"',nok_residence='"+nokResidenceTxt.getText()+"',nok_email='"+emailAddTxt1.getText()+"', refering_doc_or_hosp='"+refDocHosTxt.getText()+"',occupation='"+occupationTxt.getText()+"',other='"+otherSourceTxt.getText()+"' WHERE patient_no = '"+jTextField3.getText()+"'");
                                        pstmt.executeUpdate();
                                        
                                        javax.swing.JOptionPane.showMessageDialog(this,"Update Successful.","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                        this.jComboBox4.setSelectedItem("-");
                           
                                            }else{
                                                       java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE hp_patient_register set pay_mode = '"+jComboBox1.getSelectedItem().toString()+"',category = '"+jComboBox4.getSelectedItem().toString()+"',last_visit = '"+datePicker4.getDate().toString()+"',payer = '',description = ''  WHERE patient_no = '"+jTextField3.getText()+"'");
                                                    pstmt1.executeUpdate();
                                        
                                            }
                                    }else{
                                    
                                    connectDB.setAutoCommit(false);
                                    
                                    int occurence = 0;
                                    String mainAcc = null;
                                    String activity = null;
                                    String actNo = null;
                                    String billNo = null;
                                    String rate = null;
                                    String transNo = null;
                                    String patientAcc = null;
                                    String insAcc = null;
                                    String cardAcc = null;
                                    String AccDesc = null;
                                    String cardName = null;
                                    String insName = null;
                                    String user = null;
                                    String preFix = null;
                                    int digitNo = 0;
                                    String yrEnd = null;
                                    boolean incYr = false;
                                    boolean ConsCharge = false;
                                    int slipNo = 0;
                                    String Cons = null;
                                    String selectedchkbx = null;
                                    String selectedchkbx1 = null;
                                    String patSourceChbx = null;
                                    String refferedByChbx = null;
                                    String patientNo = null;
                                    String patientsNo = null;
                                    
                                    java.sql.Statement stmt = connectDB.createStatement();
                                    if(jCheckBox9.isSelected()){
                                        java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service,rate from pb_operating_parameters where category ILIKE 'SP%'");
                                        while (rset.next()){
                                            activity = rset.getObject(1).toString();
                                            actNo = rset.getObject(2).toString();
                                            mainAcc = rset.getObject(3).toString();
                                            jTextField9.setText(rset.getObject(4).toString());
                                        }
                                    }else{
                                        if(jCheckBox2.isSelected()){
                                            java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service,rate from pb_operating_parameters where category ILIKE 'RV%'");
                                            while (rset.next()){
                                                activity = rset.getObject(1).toString();
                                                actNo = rset.getObject(2).toString();
                                                mainAcc = rset.getObject(3).toString();
                                                jTextField9.setText(rset.getObject(4).toString());
                                            }
                                        }else{
                                            if(jCheckBox1.isSelected()){
                                                java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service,rate from pb_operating_parameters where category ILIKE 'CF%'");
                                                while (rset.next()){
                                                    activity = rset.getObject(1).toString();
                                                    actNo = rset.getObject(2).toString();
                                                    mainAcc = rset.getObject(3).toString();
                                                    jTextField9.setText(rset.getObject(4).toString());
                                                    
                                                }
                                            }else{
                                                if(jCheckBox10.isSelected()){
                                                    java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service,rate from pb_operating_parameters where category ILIKE 'OP%'");
                                                    while (rset.next()){
                                                        activity = rset.getObject(1).toString();
                                                        actNo = rset.getObject(2).toString();
                                                        mainAcc = rset.getObject(3).toString();
                                                        jTextField9.setText(rset.getObject(4).toString());
                                                    }
                                                }
                                                
                                            }
                                        }
                                    }
                                    
                                    java.sql.Statement stmnzc = connectDB.createStatement();
                                    java.sql.ResultSet rsnzc = stmnzc.executeQuery("select ALLOWED from controls where control_type ilike 'charge_op_consultation'");
                                    while (rsnzc.next()){
                                        ConsCharge = rsnzc.getBoolean(1);
                                        System.out.println("status is "+ConsCharge);
                                    }
                                    
                                    
                                    patientsNo=tempPatientNO;
                                    //savePointRegistration = connectDB.setSavepoint("Registration"); // Creating a savepoint
                                    if(jButton301.getText().equalsIgnoreCase("Update")){
                                        //String Cons = null;
                                        // String selectedchkbx = null;
                                        //String selectedchkbx1 = null;
                                        
                                        
                                        if(jCheckBox9.isSelected()){
                                            Cons = jCheckBox9.getText();
                                        }else{
                                            if( jCheckBox2.isSelected()){
                                                Cons = jCheckBox2.getText();
                                            }
                                            Cons = jCheckBox1.getText();
                                        }
                                        if (this.jCheckBox2111.isSelected()){
                                            selectedchkbx = jCheckBox2111.getText();
                                        }  else{
                                            
                                            selectedchkbx = jCheckBox1111.getText();
                                        }
                                        if (this.jCheckBox2113.isSelected()){
                                            selectedchkbx1 = jCheckBox2113.getText();
                                        }  else   if (this.jCheckBox2114.isSelected()){
                                            selectedchkbx1 = jCheckBox2114.getText();
                                        }  else  if (this.jCheckBox2115.isSelected()){
                                            selectedchkbx1 = jCheckBox2115.getText();
                                        }  else{
                                            
                                            selectedchkbx1 = jCheckBox1113.getText();
                                        }
                                        
                                        if (this.jCheckBox16.isSelected()){
                                            patSourceChbx = jCheckBox16.getText();
                                        }   if (this.jCheckBox15.isSelected()){
                                            
                                            patSourceChbx = jCheckBox15.getText();
                                        }else{
                                            patSourceChbx = jCheckBox14.getText();
                                        }
                                        
                                        if (this.jCheckBox13.isSelected()){
                                            refferedByChbx = jCheckBox13.getText();
                                        }   if (this.jCheckBox17.isSelected()){
                                            
                                            refferedByChbx = jCheckBox17.getText();
                                        }else{
                                            refferedByChbx = jCheckBox18.getText();
                                        }
                                        
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE hp_patient_register SET  old_patient_no='"+jTextField3.getText()+"', first_name='"+jTextField21.getText()+"',  second_name='"+jTextField6.getText()+"',  nok='"+jTextField1.getText()+"',   residence='"+jTextField4.getText()+"',  address='"+jTextField5.getText()+"',  year_of_birth='"+datePickerYOB.getDate().toString()+"',  tel_no='"+jTextField5821.getText()+"',  sex='"+selectedchkbx+"',  date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  pay_mode='"+jComboBox1.getSelectedItem()+"',  payer='"+jTextField2.getText()+"',  account_no='"+jTextField15.getText()+"',  description='"+jTextField361.getText()+"',  category='"+jComboBox4.getSelectedItem()+"',"+
                                                "expiry_date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  last_visit='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  department='"+jComboBox4.getSelectedItem()+"',  member_name='"+jTextField36.getText()+"',  card_no='"+jTextField13.getText()+"',  emails='"+emailAddTxt.getText()+"',  id_no='"+idNoTxt.getText()+"',  nok_add='"+jTextField17.getText()+"', patient_no='"+jTextField3.getText()+"', pat_nationality='"+NationalityTxt1.getText()+"', nok_telno='"+nokTelTxt.getText()+"',nok_relationship='"+relationTxt.getText()+"',nok_residence='"+nokResidenceTxt.getText()+"',nok_email='"+emailAddTxt1.getText()+"',pat_marital_status='"+selectedchkbx1+"', patient_source='"+patSourceChbx+"',refered_by='"+refferedByChbx+"',refering_doc_or_hosp='"+refDocHosTxt.getText()+"',refering_doc_spec='"+docSpecTxt.getText()+"',occupation='"+occupationTxt.getText()+"',other='"+otherSourceTxt.getText()+"' WHERE patient_no = '"+jTextField3.getText()+"'");
                                        pstmt.executeUpdate();
                                        
                                        javax.swing.JOptionPane.showMessageDialog(this,"Update Successful.","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                        this.jComboBox4.setSelectedItem("-");
                                        
                                    }else{
                                        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Scheme")  && (jRadioButton1.isSelected() | jCheckBox11.isSelected())){
                                            
                                            
                                            int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Have you checked Consultation Fee?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
                                            
                                            if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
                                                
                                                
                                                if(jCheckBox9.isSelected()){
                                                    Cons = jCheckBox9.getText();
                                                }else{
                                                    if( jCheckBox2.isSelected()){
                                                        Cons = jCheckBox2.getText();
                                                    }
                                                    Cons = jCheckBox1.getText();
                                                }
                                                if (this.jCheckBox2111.isSelected()){
                                                    selectedchkbx = jCheckBox2111.getText();
                                                }  else{
                                                    
                                                    selectedchkbx = jCheckBox1111.getText();
                                                }
                                                if (this.jCheckBox2113.isSelected()){
                                                    selectedchkbx1 = jCheckBox2113.getText();
                                                }  else   if (this.jCheckBox2114.isSelected()){
                                                    selectedchkbx1 = jCheckBox2114.getText();
                                                }  else  if (this.jCheckBox2115.isSelected()){
                                                    selectedchkbx1 = jCheckBox2115.getText();
                                                }  else{
                                                    
                                                    selectedchkbx1 = jCheckBox1113.getText();
                                                }
                                                
                                                if (this.jCheckBox16.isSelected()){
                                                    patSourceChbx = jCheckBox16.getText();
                                                }   if (this.jCheckBox15.isSelected()){
                                                    
                                                    patSourceChbx = jCheckBox15.getText();
                                                }else{
                                                    patSourceChbx = jCheckBox14.getText();
                                                }
                                                
                                                if (this.jCheckBox13.isSelected()){
                                                    refferedByChbx = jCheckBox13.getText();
                                                }   if (this.jCheckBox17.isSelected()){
                                                    
                                                    refferedByChbx = jCheckBox17.getText();
                                                }else{
                                                    refferedByChbx = jCheckBox18.getText();
                                                }
                                                //String patientNo = null;
                                                // String patientsNo = null;
                                                int pNo = 0;
                                                ////  try{
                                                //            java.lang.Object selectedGuaran = jComboBox2.getSelectedItem();
                                                java.util.Calendar calendar = java.util.Calendar.getInstance();
                                                
                                                long dateNow = calendar.getTimeInMillis();
                                                
                                                java.sql.Date datenowSql1= new java.sql.Date(dateNow);
                                                
                                                System.out.println(datenowSql1.toString());
                                                
                                                
                                                
                                                java.sql.Statement stm12 = connectDB.createStatement();
                                                
                                                java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                                                while (rse12.next()){
                                                    
                                                    patientAcc = rse12.getObject(1).toString();
                                                    AccDesc = rse12.getObject(2).toString();
                                                }
                                                
                                                java.sql.Statement ps = connectDB.createStatement();
                                                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                                                
                                                
                                                while (rst.next()){
                                                    rst.getObject(1).toString();
                                                    
                                                    transNo = rst.getObject(1).toString();
                                                }
                                                
                                                java.sql.Statement stmp = connectDB.createStatement();
                                                java.sql.ResultSet rsp = stmp.executeQuery("select nextval('creditslip_no_seq'),current_user");
                                                while (rsp.next()){
                                                    slipNo = rsp.getInt(1);
                                                    
                                                    
                                                    //  user = rs.getObject(2).toString();
                                                }
                                                java.sql.Statement stmn = connectDB.createStatement();
                                                java.sql.ResultSet rsn = stmn.executeQuery("select current_user");
                                                while (rsn.next()){
                                                    user = rsn.getObject(1).toString();
                                                    
                                                    System.out.println("User is "+user);
                                                }
                                                
                                                java.sql.Statement stmnz = connectDB.createStatement();
                                                java.sql.ResultSet rsnz = stmnz.executeQuery("select auto_numbering from pb_patient_names");
                                                while (rsnz.next()){
                                                    manualNo = rsnz.getBoolean(1);
                                                }
                                                if(manualNo){
                                                    java.sql.Statement stmnz1 = connectDB.createStatement();
                                                    java.sql.ResultSet rsnz1 = stmnz1.executeQuery("select prefix_item,digit_no,yr_end,inc_year from pb_patient_names");
                                                    while (rsnz1.next()){
                                                        preFix = rsnz1.getString(1);
                                                        digitNo = rsnz1.getInt(2);
                                                        yrEnd = rsnz1.getString(3);
                                                        incYr = rsnz1.getBoolean(4);
                                                    }
                                                }
                                                
                                                // patientsNo =tempPatientNO;
                                                
                                                
                                                
                                                if (jPanel5.isShowing()){
                                                    
                                                    if (this.jCheckBox13.isSelected()){
                                                        refferedByChbx = jCheckBox13.getText();
                                                    }   if (this.jCheckBox17.isSelected()){
                                                        
                                                        refferedByChbx = jCheckBox17.getText();
                                                    }else{
                                                        refferedByChbx = jCheckBox18.getText();
                                                    }
                                                    java.util.Date time = null;
                                                    java.util.Date term = null;
                                                    java.util.Date exp = null;
                                                    java.util.Date date = null;
                                                    double limit = 0.00;
                                                    double balance = 0.00;
                                                    String Suspended = null;
                                                    String Closed = null;
                                                    jSearchDialog11.dispose();
                                                    /*
                                                    java.sql.Statement stmt1h = connectDB.createStatement();
                                                    java.sql.ResultSet rset1h = stmt1h.executeQuery("select count(payee) from ac_debtors where payee = '"+jTextField361.getText()+"' and dealer = '"+jTextField2.getText()+"'");
                                                    while (rset1h.next()){
                                                        occurence = rset1h.getInt(1);
                                                    }
                                                    if (occurence > 1){
                                                        java.sql.Statement stmt1 = connectDB.createStatement();
                                                        java.sql.ResultSet rset1 = stmt1.executeQuery("select sum(balance-credit_bal) from ac_debtors where payee = '"+jTextField361.getText()+"' and dealer = '"+jTextField2.getText()+"'");
                                                        while (rset1.next())
                                                            balance = rset1.getDouble(1);
                                                    }else{
                                                        balance = 0.00;
                                                    }
                                                    java.sql.Statement stmtq = connectDB.createStatement();
                                                    java.sql.ResultSet rsetq = stmtq.executeQuery("select suspended, closed,expiry_date,current_date,scheme_limit,term_date,current_timestamp from ac_schemes where scheme_name = '"+jTextField361.getText()+"' and payer_name = '"+jTextField2.getText()+"'");
                                                    while (rsetq.next()){
                                                        Suspended = rsetq.getObject(1).toString();
                                                        Closed = rsetq.getObject(2).toString();
                                                        exp = rsetq.getDate(3);
                                                        date = rsetq.getDate(4);
                                                        limit = rsetq.getDouble(5);
                                                        term = rsetq.getTimestamp(6);
                                                        time = rsetq.getTimestamp(7);
                                                    }
                                                    if (Suspended.equals("true")){
                                                     
                                                        javax.swing.JOptionPane.showMessageDialog(this, "SCHEME SUSPENDED !!", "Suspension MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                        jTextField361.setText("");
                                                        jTextField2.setText("");
                                                    }else{
                                                        if (Closed.equals("true")){
                                                     
                                                            javax.swing.JOptionPane.showMessageDialog(this, "SCHEME CLOSED !!", "Viability MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                            jTextField361.setText("");
                                                            jTextField2.setText("");
                                                        }else {
                                                            if (exp.before(date)){
                                                     
                                                                javax.swing.JOptionPane.showMessageDialog(this, "SCHEME EXPIRED !! ON " +exp, "Expiry MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                                jTextField361.setText("");
                                                                jTextField2.setText("");
                                                            }else{
                                                                if (term.before(time)){
                                                     
                                                                    javax.swing.JOptionPane.showMessageDialog(this, "SCHEME TERMINATED !! ON " +term, "Expiry MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                                    jTextField361.setText("");
                                                                    jTextField2.setText("");
                                                                }else{
                                                     
                                                                    if (balance > limit){
                                                     
                                                                        javax.swing.JOptionPane.showMessageDialog(this, "SCHEME LIMIT IS " + limit + " AND DEBT IS " + balance + "\n Hence Limit exceeded by " +(balance - limit), "Debt Status MESSAGE",javax.swing.JOptionPane.PLAIN_MESSAGE);
                                                                        jTextField361.setText("");
                                                                        jTextField2.setText("");
                                                                    }else{
                                                     */
                                                    
                                                    if (jRadioButton1.isSelected()){
                                                        
                                                        if (jTextField13.getText().equalsIgnoreCase("")) {
                                                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter valid Scheme membership NUMBER", "Caution!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                            
                                                        }else{
                                                            java.sql.Statement stm1 = connectDB.createStatement();
                                                            
                                                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_register values(upper(?), upper(?), upper(?), upper(?), ?,?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                                            
                                                            pstmt.setString(1,patientsNo);
                                                            
                                                            if (jTextField21.getText().equals("")) {
                                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter Surname", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                            }else{
                                                                pstmt.setString(2,jTextField21.getText());
                                                            }
                                                            if (jTextField6.getText().equals("")) {
                                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter Other Names Field", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                            }else{
                                                                pstmt.setString(3,jTextField6.getText());
                                                            }
                                                            pstmt.setString(4,"");
                                                            if (jTextField1.getText().equals("")) {
                                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter Next Of Kin", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                            }else{
                                                                pstmt.setString(5,jTextField1.getText());
                                                            }
                                                            if (jTextField4.getText().equals("")) {
                                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter Residence", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                            }else{
                                                                pstmt.setString(6,jTextField4.getText());
                                                            }
                                                            if (jTextField5.getText().equals("")) {
                                                                javax.swing.JOptionPane.showMessageDialog(this,"You must Patient Postal Address", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                            }else{
                                                                pstmt.setString(7,jTextField5.getText());
                                                            }
                                                            pstmt.setString(8,datePickerYOB.getDate().toString());
                                                            pstmt.setString(9,jTextField5821.getText());
                                                            if(selectedchkbx == null){
                                                                javax.swing.JOptionPane.showMessageDialog(this,"You must tick patient Gender", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                            }else{
                                                                pstmt.setObject(10,selectedchkbx);
                                                            }
                                                            
                                                            pstmt.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                            pstmt.setObject(12,jComboBox1.getSelectedItem());
                                                            pstmt.setString(13,jTextField2.getText());
                                                            pstmt.setString(14,jTextField15.getText());
                                                            pstmt.setString(15,jTextField361.getText());
                                                            if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("-")){
                                                                javax.swing.JOptionPane.showMessageDialog(this,"You must select Patient Entry point", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                
                                                            }else{
                                                                pstmt.setObject(16,jComboBox4.getSelectedItem());
                                                            }
                                                            pstmt.setDate(17,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                            if (jTextField14.getText().equals("")) {
                                                                javax.swing.JOptionPane.showMessageDialog(this,"Check Scheme expiry date Field", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                
                                                            }else{
                                                                pstmt.setDate(17,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
                                                                
                                                                // pstmt.setString(17,jTextField18.getText());
                                                            }
                                                            pstmt.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                            pstmt.setObject(19,jTextField14.getText());
                                                            if (jTextField36.getText().equalsIgnoreCase("")) {
                                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter valid Scheme membership name", "Caution!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                
                                                            }else{
                                                                
                                                                pstmt.setString(20,jTextField36.getText());
                                                            }
                                                            if (jTextField13.getText().equalsIgnoreCase("")) {
                                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter valid Scheme membership NUMBER", "Caution!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                
                                                            }else{
                                                                
                                                                pstmt.setString(21,jTextField13.getText());
                                                            }
                                                            //pstmt.setString(21,jTextField13.getText());
                                                            pstmt.setString(22,emailAddTxt.getText());
                                                            pstmt.setString(23,idNoTxt.getText());
                                                            pstmt.setString(24,jTextField17.getText());
                                                            pstmt.setObject(25,patientsNo);
                                                            pstmt.setString(26,NationalityTxt1.getText());
                                                            pstmt.setString(27,nokTelTxt.getText());
                                                            pstmt.setString(28,relationTxt.getText());
                                                            pstmt.setString(29,nokResidenceTxt.getText());
                                                            pstmt.setString(30,emailAddTxt1.getText());
                                                            pstmt.setObject(31,selectedchkbx1);
                                                            pstmt.setString(32,patSourceChbx);
                                                            pstmt.setString(33,refferedByChbx);
                                                            pstmt.setString(34,refDocHosTxt.getText());
                                                            pstmt.setString(35,docSpecTxt.getText());
                                                            pstmt.setObject(36,occupationTxt.getText());
                                                            pstmt.setObject(37,otherSourceTxt.getText());
                                                            
                                                            
                                                            pstmt.executeUpdate();
                                                            
                                                            java.sql.PreparedStatement pstmt21a = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                                            pstmt21a.setString(1,patientsNo);
                                                            pstmt21a.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                            pstmt21a.setString(3,"OP");
                                                            pstmt21a.setString(4,jComboBox1.getSelectedItem().toString());
                                                            pstmt21a.setInt(5,slipNo);
                                                            pstmt21a.setString(6,activity);
                                                            pstmt21a.setInt(7,1);
                                                            // pstmt21a.setString(8,jTextField14.getText());
                                                            pstmt21a.setString(8,jComboBox4.getSelectedItem().toString());
                                                            pstmt21a.setDouble(9,0.00);
                                                            pstmt21a.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                            pstmt21a.setString(10,"");
                                                            pstmt21a.setDouble(12,0);
                                                            pstmt21a.setString(14,user);
                                                            pstmt21a.setString(13,"");
                                                            pstmt21a.setTimestamp(15,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                                            pstmt21a.setString(16,"Registration");
                                                            pstmt21a.setString(17,"");
                                                            pstmt21a.setInt(18,1);
                                                            pstmt21a.setString(19,"");
                                                            pstmt21a.setString(20,"");
                                                            pstmt21a.setBoolean(21,false);
                                                            pstmt21a.setString(22,patSourceChbx);
                                                            pstmt21a.setString(23,refferedByChbx);
                                                            pstmt21a.setString(24,refDocHosTxt.getText());
                                                            pstmt21a.setString(25,docSpecTxt.getText());
                                                            pstmt21a.setObject(26,occupationTxt.getText());
                                                            pstmt21a.setObject(27,otherSourceTxt.getText());
                                                            pstmt21a.executeUpdate();
                                                            
                                                            
                                                            java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into credit_acc_slip values(?,?,?,?,?,?, ?, ?,?,?,?,?,?,?,?,?)");
                                                            pstmt2a.setString(1,patientsNo);
                                                            pstmt2a.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                            pstmt2a.setString(3,jTextField361.getText());
                                                            pstmt2a.setString(4,jTextField2.getText());
                                                            pstmt2a.setDouble(5,0.00);
                                                            pstmt2a.setInt(6,slipNo);
                                                            pstmt2a.setDate(8,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                            pstmt2a.setString(7,jComboBox4.getSelectedItem().toString()+"-"+user);
                                                            pstmt2a.setString(9,jTextField15.getText());
                                                            pstmt2a.setString(10,jTextField13.getText());
                                                            pstmt2a.setString(11,patSourceChbx);
                                                            pstmt2a.setString(12,refferedByChbx);
                                                            pstmt2a.setString(13,refDocHosTxt.getText());
                                                            pstmt2a.setString(14,docSpecTxt.getText());
                                                            pstmt2a.setObject(15,occupationTxt.getText());
                                                            pstmt2a.setObject(16,otherSourceTxt.getText());
                                                            pstmt2a.executeUpdate();
                                                            
                                                            if(ConsCharge){
                                                                if (jCheckBox1.isSelected()){
                                                                    java.sql.PreparedStatement pstmth = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                                                    pstmth.setString(1,patientsNo);
                                                                    pstmth.setObject(2,activity);
                                                                    pstmth.setString(3,jComboBox4.getSelectedItem().toString());
                                                                    pstmth.setString(4,"Scheme");
                                                                    pstmth.setString(5,transNo);
                                                                    pstmth.setString(7,"");
                                                                    pstmth.setString(6,"");
                                                                    pstmth.setString(8,"");
                                                                    pstmth.setString(9,"");
                                                                    pstmth.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                                                    pstmth.setString(11,"");
                                                                    pstmth.setDouble(12,java.lang.Double.parseDouble(jTextField9.getText()));
                                                                    pstmth.setDouble(13,0.00);
                                                                    pstmth.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                                    pstmth.setObject(15,patientAcc);
                                                                    pstmth.setString(16,mainAcc);
                                                                    pstmth.setDouble(17,1);
                                                                    pstmth.setObject(18,jTextField15.getText());
                                                                    pstmth.setBoolean(19,false);
                                                                    pstmth.setString(20,"Billing");
                                                                    pstmth.setBoolean(21,false);
                                                                    pstmth.setString(22,AccDesc);
                                                                    pstmth.setInt(23,slipNo);
                                                                    pstmth.setString(24,user);
                                                                    pstmth.setInt(25,slipNo);
                                                                    pstmth.setString(26,"OP");
                                                                    pstmth.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                                                    pstmth.setInt(28,slipNo);
                                                                    pstmth.executeUpdate();
                                                                    
                                                                    
                                                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?)");
                                                                    
                                                                    pstmt2.setString(1,patientsNo);
                                                                    pstmt2.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                                    pstmt2.setString(3,jComboBox1.getSelectedItem().toString());
                                                                    pstmt2.setString(4,jComboBox4.getSelectedItem().toString());
                                                                    pstmt2.setString(5,activity);
                                                                    pstmt2.setString(6,"1");
                                                                    pstmt2.setDouble(7,java.lang.Double.parseDouble(jTextField9.getText()));
                                                                    pstmt2.setString(8,actNo);
                                                                    pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                                    pstmt2.setString(10,"");
                                                                    pstmt2.setBoolean(12,false);
                                                                    pstmt2.setString(11,user);
                                                                    pstmt2.setString(13,mainAcc);
                                                                    pstmt2.executeUpdate();
                                                                }
                                                            }
                                                        }
                                                    }else
                                                        if (jCheckBox11.isSelected()){
                                                        
                                                        if(jTextField36.getText().equalsIgnoreCase("") || jTextField13.getText().equalsIgnoreCase("")){
                                                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter scheme membership number and name.","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                            
                                                        }else {
                                                            //scheme and is existing wanting new registration no start here
                                                            
                                                            java.sql.Statement stm1 = connectDB.createStatement();
                                                            
                                                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE hp_patient_register SET  old_patient_no='"+jTextField3.getText()+"', first_name='"+jTextField21.getText()+"',  second_name='"+jTextField6.getText()+"',  nok='"+jTextField1.getText()+"',   residence='"+jTextField4.getText()+"',  address='"+jTextField5.getText()+"',  year_of_birth='"+datePickerYOB.getDate().toString()+"',  tel_no='"+jTextField5821.getText()+"',  sex='"+selectedchkbx+"',  date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  pay_mode='"+jComboBox1.getSelectedItem()+"',  payer='"+jTextField2.getText()+"',  account_no='"+jTextField15.getText()+"',  description='"+jTextField361.getText()+"',  category='"+jComboBox4.getSelectedItem()+"',"+
                                                                    "expiry_date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  last_visit='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  department='"+jComboBox4.getSelectedItem()+"',  member_name='"+jTextField36.getText()+"',  card_no='"+jTextField13.getText()+"',  emails='"+emailAddTxt.getText()+"',  id_no='"+idNoTxt.getText()+"',  nok_add='"+jTextField17.getText()+"',  patient_no='"+patientsNo+"', pat_nationality='"+NationalityTxt1.getText()+"', nok_telno='"+nokTelTxt.getText()+"',nok_relationship='"+relationTxt.getText()+"',nok_residence='"+nokResidenceTxt.getText()+"',nok_email='"+emailAddTxt1.getText()+"',pat_marital_status='"+selectedchkbx1+"', patient_source='"+patSourceChbx+"',refered_by='"+refferedByChbx+"',refering_doc_or_hosp='"+refDocHosTxt.getText()+"',refering_doc_spec='"+docSpecTxt.getText()+"',occupation='"+occupationTxt.getText()+"',other='"+otherSourceTxt.getText()+"' WHERE patient_no = '"+jTextField3.getText()+"'");
                                                            pstmt.executeUpdate();
                                                            
                                                            
                                                            java.sql.PreparedStatement pstmt21a = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                                            
                                                            pstmt21a.setString(1,patientsNo);
                                                            pstmt21a.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                            pstmt21a.setString(3,"OP");
                                                            pstmt21a.setString(4,jComboBox1.getSelectedItem().toString());
                                                            pstmt21a.setInt(5,slipNo);
                                                            pstmt21a.setString(6,activity);
                                                            pstmt21a.setInt(7,1);
                                                            pstmt21a.setString(8,jComboBox4.getSelectedItem().toString());
                                                            pstmt21a.setDouble(9,0.00);
                                                            pstmt21a.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                            pstmt21a.setString(10,"");
                                                            pstmt21a.setDouble(12,0);
                                                            pstmt21a.setString(14,user);
                                                            pstmt21a.setString(13,"");
                                                            pstmt21a.setTimestamp(15,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                                            pstmt21a.setString(16,"Registration");
                                                            pstmt21a.setString(17,"");
                                                            pstmt21a.setInt(18,1);
                                                            pstmt21a.setString(19,"");
                                                            pstmt21a.setString(20,"");
                                                            pstmt21a.setBoolean(21,false);
                                                            pstmt21a.setString(22,patSourceChbx);
                                                            pstmt21a.setString(23,refferedByChbx);
                                                            pstmt21a.setString(24,refDocHosTxt.getText());
                                                            pstmt21a.setString(25,docSpecTxt.getText());
                                                            pstmt21a.setObject(26,occupationTxt.getText());
                                                            pstmt21a.setObject(27,otherSourceTxt.getText());
                                                            pstmt21a.executeUpdate();
                                                            
                                                            java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into credit_acc_slip values(?,?,?,?,?,?,?,?,?,?,?,?, ?, ?,?,?)");
                                                            pstmt2a.setString(1,patientsNo);
                                                            pstmt2a.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                            pstmt2a.setString(3,jTextField361.getText());
                                                            pstmt2a.setString(4,jTextField2.getText());
                                                            pstmt2a.setDouble(5,0.00);
                                                            pstmt2a.setInt(6,slipNo);
                                                            pstmt2a.setDate(8,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                            pstmt2a.setString(7,jComboBox4.getSelectedItem().toString()+"-"+user);
                                                            pstmt2a.setString(9,jTextField15.getText());
                                                            pstmt2a.setString(10,jTextField13.getText());
                                                            pstmt2a.setString(11,patSourceChbx);
                                                            pstmt2a.setString(12,refferedByChbx);
                                                            pstmt2a.setString(13,refDocHosTxt.getText());
                                                            pstmt2a.setString(14,docSpecTxt.getText());
                                                            pstmt2a.setObject(15,occupationTxt.getText());
                                                            pstmt2a.setObject(16,otherSourceTxt.getText());
                                                            
                                                            pstmt2a.executeUpdate();
                                                            
                                                            if(ConsCharge){
                                                                if (jCheckBox1.isSelected()){
                                                                    java.sql.PreparedStatement pstmth = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                                                    pstmth.setString(1,patientsNo);
                                                                    pstmth.setObject(2,activity);
                                                                    pstmth.setString(3,jComboBox4.getSelectedItem().toString());
                                                                    pstmth.setString(4,"Scheme");
                                                                    pstmth.setString(5,transNo);
                                                                    pstmth.setString(7,"");
                                                                    pstmth.setString(6,"");
                                                                    pstmth.setString(8,"");
                                                                    pstmth.setString(9,"");
                                                                    pstmth.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                                                    pstmth.setString(11,"");
                                                                    pstmth.setDouble(12,java.lang.Double.parseDouble(jTextField9.getText()));
                                                                    pstmth.setDouble(13,0.00);
                                                                    pstmth.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                                    pstmth.setObject(15,patientAcc);
                                                                    pstmth.setString(16,mainAcc);
                                                                    pstmth.setDouble(17,1);
                                                                    pstmth.setObject(18,jTextField15.getText());
                                                                    pstmth.setBoolean(19,false);
                                                                    pstmth.setString(20,"Billing");
                                                                    pstmth.setBoolean(21,false);
                                                                    pstmth.setString(22,AccDesc);
                                                                    pstmth.setInt(23,slipNo);
                                                                    pstmth.setString(24,user);
                                                                    pstmth.setInt(25,slipNo);
                                                                    pstmth.setString(26,"OP");
                                                                    pstmth.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                                                    pstmth.setInt(28,slipNo);
                                                                    pstmth.executeUpdate();
                                                                    
                                                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?)");
                                                                    
                                                                    pstmt2.setString(1,patientsNo);
                                                                    pstmt2.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                                    pstmt2.setString(3,jComboBox1.getSelectedItem().toString());
                                                                    pstmt2.setString(4,jComboBox4.getSelectedItem().toString());
                                                                    pstmt2.setString(5,activity);
                                                                    pstmt2.setString(6,"1");
                                                                    pstmt2.setDouble(7,java.lang.Double.parseDouble(jTextField9.getText()));
                                                                    pstmt2.setString(8,actNo);
                                                                    pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                                    pstmt2.setString(10,"");
                                                                    pstmt2.setBoolean(12,false);
                                                                    pstmt2.setString(11,user);
                                                                    pstmt2.setString(13,mainAcc);
                                                                    pstmt2.executeUpdate();
                                                                }
                                                            }
                                                            
                                                            
                                                        }
                                                        }
                                                    
                                                    
                                                    //}
                                                    //}
                                                    //}
                                                    // }
                                                    //}
                                                }
                                                
                                                
                                                
                                                
                                            }else{
                                                javax.swing.JOptionPane.showMessageDialog(this, "Thank You for taking caution","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                
                                            }
                                            
                                            //  }
                                            jTextField361.setText("");
                                            jTextField2.setText("");
                                            jTextField18.setText("");
                                            jTextField36.setText("");
                                            jTextField13.setText("");
                                        }else
                                            
                                            
                                            if( jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Scheme")  && jRadioButton2.isSelected()){
                                            
                                            if (this.jCheckBox16.isSelected()){
                                                patSourceChbx = jCheckBox16.getText();
                                            }   if (this.jCheckBox15.isSelected()){
                                                
                                                patSourceChbx = jCheckBox15.getText();
                                            }else{
                                                patSourceChbx = jCheckBox14.getText();
                                            }
                                            
                                            if (this.jCheckBox13.isSelected()){
                                                refferedByChbx = jCheckBox13.getText();
                                            }   if (this.jCheckBox17.isSelected()){
                                                
                                                refferedByChbx = jCheckBox17.getText();
                                            }else{
                                                refferedByChbx = jCheckBox18.getText();
                                            }
                                            
                                            if (jTextField361.getText().equals("")) {
                                                
                                                //IF ITS ACTIVATION OF EXISTING FILE AND IS SCHEME
                                                //CHECK THAT ALL FIELDS ARE OK
                                                
                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter Scheme name", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                            }else
                                                if (jTextField2.getText().equals("")) {
                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter Payer Name", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                }else
                                                    if (jTextField18.getText().equals("")) {
                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter valid expiry date\n Pls select the scheme again", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                    }else
                                                        if (jTextField36.getText().equalsIgnoreCase("")) {
                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter valid Scheme membership name", "Caution!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                
                                                        }else
                                                            if (jTextField13.getText().equalsIgnoreCase("")) {
                                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter valid Scheme membership name", "Caution!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                
                                                            }else{
                                                
                                                int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Have you checked Charge Consultation Fee?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
                                                
                                                if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
                                                    
                                                    
                                                    patientsNo =tempPatientNO;
                                                    
                                                    
                                                    if (jPanel5.isShowing()){
                                                        java.util.Date time = null;
                                                        java.util.Date term = null;
                                                        java.util.Date exp = null;
                                                        java.util.Date date = null;
                                                        double limit = 0.00;
                                                        double balance = 0.00;
                                                        String Suspended = null;
                                                        String Closed = null;
                                                        jSearchDialog11.dispose();/*
                                                        java.sql.Statement stmt1h = connectDB.createStatement();
                                                        java.sql.ResultSet rset1h = stmt1h.executeQuery("select count(payee) from ac_debtors where payee = '"+jTextField361.getText()+"' and dealer = '"+jTextField2.getText()+"'");
                                                        while (rset1h.next()){
                                                            occurence = rset1h.getInt(1);
                                                        }
                                                        if (occurence > 1){
                                                            java.sql.Statement stmt1 = connectDB.createStatement();
                                                            java.sql.ResultSet rset1 = stmt1.executeQuery("select sum(balance-credit_bal) from ac_debtors where payee = '"+jTextField361.getText()+"' and dealer = '"+jTextField2.getText()+"'");
                                                            while (rset1.next())
                                                                balance = rset1.getDouble(1);
                                                        }else{
                                                            balance = 0.00;
                                                        }
                                                        java.sql.Statement stmtq = connectDB.createStatement();
                                                        java.sql.ResultSet rsetq = stmtq.executeQuery("select suspended, closed,expiry_date,current_date,scheme_limit,term_date,current_timestamp from ac_schemes where scheme_name = '"+jTextField361.getText()+"' and payer_name = '"+jTextField2.getText()+"'");
                                                        while (rsetq.next()){
                                                            Suspended = rsetq.getObject(1).toString();
                                                            Closed = rsetq.getObject(2).toString();
                                                            exp = rsetq.getDate(3);
                                                            date = rsetq.getDate(4);
                                                            limit = rsetq.getDouble(5);
                                                            term = rsetq.getTimestamp(6);
                                                            time = rsetq.getTimestamp(7);
                                                        }
                                                        if (Suspended.equals("true")){
                                                                                   
                                                            javax.swing.JOptionPane.showMessageDialog(this, "SCHEME SUSPENDED !!", "Suspension MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                            jTextField361.setText("");
                                                            jTextField2.setText("");
                                                        }else{
                                                                                   
                                                            if (Closed.equals("true")){
                                                                                   
                                                                javax.swing.JOptionPane.showMessageDialog(this, "SCHEME CLOSED !!", "Viability MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                                jTextField361.setText("");
                                                                jTextField2.setText("");
                                                            }else {
                                                                if (exp.before(date)){
                                                                                   
                                                                    javax.swing.JOptionPane.showMessageDialog(this, "SCHEME EXPIRED !! ON " +exp, "Expiry MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                                    jTextField361.setText("");
                                                                    jTextField2.setText("");
                                                                }else{
                                                                    if (term.before(time)){
                                                                                   
                                                                        javax.swing.JOptionPane.showMessageDialog(this, "SCHEME TERMINATED !! ON " +term, "Expiry MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                                        jTextField361.setText("");
                                                                        jTextField2.setText("");
                                                                    }else{
                                                                                   
                                                                        if (balance > limit){
                                                                                   
                                                                            javax.swing.JOptionPane.showMessageDialog(this, "SCHEME LIMIT IS " + limit + " AND DEBT IS " + balance + "\n Hence Limit exceeded by " +(balance - limit), "Debt Status MESSAGE",javax.swing.JOptionPane.PLAIN_MESSAGE);
                                                                            jTextField361.setText("");
                                                                            jTextField2.setText("");
                                                                        }else{
                                                         */
                                                        
                                                        if(jTextField36.getText().equalsIgnoreCase("") || jTextField13.getText().equalsIgnoreCase("")){
                                                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter scheme membership number and name.","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                            
                                                        }else {
                                                            
                                                            java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("UPDATE hp_patient_register set description = '"+jTextField361.getText()+"',payer = '"+jTextField2.getText()+"',account_no ='"+jTextField15.getText()+"',expiry_date = '"+datePicker2.getDate().toString()+"',member_name ='"+jTextField36.getText()+"',last_visit = '"+datePicker4.getDate().toString()+"',pay_mode = '"+jComboBox1.getSelectedItem().toString()+"',category = '"+jComboBox4.getSelectedItem()+"',card_no = '"+jTextField13.getText()+"' WHERE patient_no ilike '"+jTextField3.getText()+"'");
                                                            pstmt11.executeUpdate();
                                                            
                                                            java.sql.PreparedStatement pstmt21a = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                                            
                                                            if (jRadioButton1.isSelected()){
                                                                
                                                                pstmt21a.setString(1,patientsNo);
                                                            }else{
                                                                pstmt21a.setString(1,jTextField3.getText());
                                                            }
                                                            //pstmt21a.setString(1,jTextField3.getText());
                                                            pstmt21a.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                            pstmt21a.setString(3,"OP");
                                                            pstmt21a.setString(4,jComboBox1.getSelectedItem().toString());
                                                            pstmt21a.setInt(5,slipNo);
                                                            pstmt21a.setString(6,activity);
                                                            pstmt21a.setInt(7,1);
                                                            pstmt21a.setString(8,jComboBox4.getSelectedItem().toString());
                                                            pstmt21a.setDouble(9,0.00);
                                                            pstmt21a.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                            pstmt21a.setString(10,"");
                                                            pstmt21a.setDouble(12,0);
                                                            pstmt21a.setString(14,user);
                                                            pstmt21a.setString(13,"");
                                                            pstmt21a.setTimestamp(15,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                                            pstmt21a.setString(16,"Registration");
                                                            pstmt21a.setString(17,"");
                                                            pstmt21a.setInt(18,1);
                                                            pstmt21a.setString(19,"");
                                                            pstmt21a.setString(20,"");
                                                            pstmt21a.setBoolean(21,false);
                                                            pstmt21a.setString(22,patSourceChbx);
                                                            pstmt21a.setString(23,refferedByChbx);
                                                            pstmt21a.setString(24,refDocHosTxt.getText());
                                                            pstmt21a.setString(25,docSpecTxt.getText());
                                                            pstmt21a.setObject(26,occupationTxt.getText());
                                                            pstmt21a.setObject(27,otherSourceTxt.getText());
                                                            pstmt21a.executeUpdate();
                                                            
                                                            
                                                            java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into credit_acc_slip values(?,?,?,?,?,?,?,?,?,?,?,?, ?, ?,?,?)");
                                                            pstmt2a.setString(1,jTextField3.getText());
                                                            pstmt2a.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                            pstmt2a.setString(3,jTextField361.getText());
                                                            pstmt2a.setString(4,jTextField2.getText());
                                                            pstmt2a.setDouble(5,0.00);
                                                            pstmt2a.setInt(6,slipNo);
                                                            // pstmt2a.setDate(8,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datenowSql1));
                                                            pstmt2a.setDate(8,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                            pstmt2a.setString(7,jComboBox4.getSelectedItem().toString()+"-"+user);
                                                            pstmt2a.setString(9,jTextField15.getText());
                                                            pstmt2a.setString(10,jTextField13.getText());
                                                            pstmt2a.setString(11,patSourceChbx);
                                                            pstmt2a.setString(12,refferedByChbx);
                                                            pstmt2a.setString(13,refDocHosTxt.getText());
                                                            pstmt2a.setString(14,docSpecTxt.getText());
                                                            pstmt2a.setObject(15,occupationTxt.getText());
                                                            pstmt2a.setObject(16,otherSourceTxt.getText());
                                                            
                                                            pstmt2a.executeUpdate();
                                                            
                                                            if(ConsCharge){
                                                                if (jCheckBox1.isSelected()){
                                                                    java.sql.PreparedStatement pstmth = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                                                    pstmth.setString(1,jTextField3.getText());
                                                                    pstmth.setObject(2,activity);
                                                                    pstmth.setString(3,jComboBox4.getSelectedItem().toString());
                                                                    pstmth.setString(4,"Scheme");
                                                                    pstmth.setString(5,transNo);
                                                                    pstmth.setString(7,"");
                                                                    pstmth.setString(6,"");
                                                                    pstmth.setString(8,"");
                                                                    pstmth.setString(9,"");
                                                                    pstmth.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                                                    pstmth.setString(11,"");
                                                                    pstmth.setDouble(12,java.lang.Double.parseDouble(jTextField9.getText()));
                                                                    pstmth.setDouble(13,0.00);
                                                                    pstmth.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                                    pstmth.setObject(15,patientAcc);
                                                                    pstmth.setString(16,mainAcc);
                                                                    pstmth.setDouble(17,1);
                                                                    pstmth.setObject(18,jTextField15.getText());
                                                                    pstmth.setBoolean(19,false);
                                                                    pstmth.setString(20,"Billing");
                                                                    pstmth.setBoolean(21,false);
                                                                    pstmth.setString(22,AccDesc);
                                                                    pstmth.setInt(23,slipNo);
                                                                    pstmth.setString(24,user);
                                                                    pstmth.setInt(25,slipNo);
                                                                    pstmth.setString(26,"OP");
                                                                    pstmth.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                                                    pstmth.setInt(28,slipNo);
                                                                    pstmth.executeUpdate();
                                                                    
                                                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?)");
                                                                    
                                                                    pstmt2.setString(1,jTextField3.getText());
                                                                    pstmt2.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                                    pstmt2.setString(3,jComboBox1.getSelectedItem().toString());
                                                                    pstmt2.setString(4,jComboBox4.getSelectedItem().toString());
                                                                    pstmt2.setString(5,activity);
                                                                    pstmt2.setString(6,"1");
                                                                    pstmt2.setDouble(7,java.lang.Double.parseDouble(jTextField9.getText()));
                                                                    pstmt2.setString(8,actNo);
                                                                    pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                                    pstmt2.setString(10,"");
                                                                    pstmt2.setBoolean(12,false);
                                                                    pstmt2.setString(11,user);
                                                                    pstmt2.setString(13,mainAcc);
                                                                    pstmt2.executeUpdate();
                                                                }
                                                            }
                                                            
                                                        }
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        // }
                                                        // }
                                                        //}
                                                        //  }
                                                        // }
                                                    }
                                                    
                                                    
                                                    
                                                    
                                                }else{
                                                    javax.swing.JOptionPane.showMessageDialog(this, "Thank You for taking caution","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                    
                                                }
                                                
                                                jTextField361.setText("");
                                                jTextField2.setText("");
                                                jTextField18.setText("");
                                                jTextField36.setText("");
                                                jTextField13.setText("");
                                                            }
                                            jTextField361.setText("");
                                            jTextField2.setText("");
                                            jTextField18.setText("");
                                            jTextField36.setText("");
                                            jTextField13.setText("");
                                            }
                                        
                                        
                                        
                                        
                                        
                                    }
                                    
                                    boolean manualNo = false;
                                    String patientsNo2 = null;
                                    
                                    java.sql.Statement stmnz = connectDB.createStatement();
                                    java.sql.ResultSet rsnz = stmnz.executeQuery("select auto_numbering from pb_patient_names");
                                    while (rsnz.next()){
                                        manualNo = rsnz.getBoolean(1);
                                    }
                                    if(manualNo){
                                        java.sql.Statement stmnz1 = connectDB.createStatement();
                                        java.sql.ResultSet rsnz1 = stmnz1.executeQuery("select prefix_item,digit_no,yr_end,inc_year from pb_patient_names");
                                        while (rsnz1.next()){
                                            preFix = rsnz1.getString(1);
                                            digitNo = rsnz1.getInt(2);
                                            yrEnd = rsnz1.getString(3);
                                            incYr = rsnz1.getBoolean(4);
                                        }
                                    }
                                    
                                    
                                    if(jRadioButton1.isSelected() | jCheckBox11.isSelected()){
                                        if (incYr){
                                            
                                            if(preFix.equalsIgnoreCase("noPrefix")){
                                                java.sql.Statement pss1 = connectDB.createStatement();
                                                java.sql.ResultSet rss1 = pss1.executeQuery("select lpad(nextval('outpatient_no_seq'),"+digitNo+",0)||'/'||07");
                                                while (rss1.next()){
                                                    patientsNo2 = rss1.getObject(1).toString();
                                                    //jTextField3.setText(rss1.getObject(1).toString());
                                                }
                                                
                                            }else{
                                                java.sql.Statement pss1 = connectDB.createStatement();
                                                java.sql.ResultSet rss1 = pss1.executeQuery("select '"+preFix+"'||lpad(nextval('outpatient_no_seq'),"+digitNo+",0)||'/'||07");
                                                while (rss1.next()){
                                                    patientsNo2 = rss1.getObject(1).toString();
                                                    // jTextField3.setText(rss1.getObject(1).toString());
                                                }
                                            }
                                        }else{
                                            if(preFix.equalsIgnoreCase("noPrefix")){
                                                java.sql.Statement pss1 = connectDB.createStatement();
                                                java.sql.ResultSet rss1 = pss1.executeQuery("select lpad(nextval('outpatient_no_seq'),"+digitNo+",0)");
                                                while (rss1.next()){
                                                    patientsNo2 = rss1.getObject(1).toString();
                                                    //  jTextField3.setText(rss1.getObject(1).toString());
                                                }
                                            }else{
                                                java.sql.Statement pss1 = connectDB.createStatement();
                                                java.sql.ResultSet rss1 = pss1.executeQuery("select '"+preFix+"'||lpad(nextval('outpatient_no_seq'),"+digitNo+",0)");
                                                while (rss1.next()){
                                                    patientsNo2 = rss1.getObject(1).toString();
                                                    //  jTextField3.setText(rss1.getObject(1).toString());
                                                }
                                            }
                                        }
                                        
                                    }else
                                        if (jRadioButton2.isSelected()){
                                        if(jTextField3.getText().toString().equalsIgnoreCase("") | jTextField3.getText().toString().equalsIgnoreCase(" ") | jTextField3.getText().toString().equalsIgnoreCase("  ") | jTextField3.getText().toString().equalsIgnoreCase("   ") | jTextField3.getText().toString().equalsIgnoreCase("    ")){
                                            // if(jTextField3.getText().toString().equalsIgnoreCase("") | jTextField3.getText().toString().equalsIgnoreCase(" ").concat("")){
                                            javax.swing.JOptionPane.showMessageDialog(this, "You cannot save without the patient no", "CAUTION MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                        }else{
                                            patientsNo2 = jTextField3.getText();
                                            
                                        }}
                                    java.sql.PreparedStatement updatePatientNoPstmt = connectDB.prepareStatement("UPDATE hp_patient_register SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"'");//
                                    updatePatientNoPstmt.executeUpdate();
                                    
                                    java.sql.PreparedStatement updatePatientNoPstmt2 = connectDB.prepareStatement("UPDATE hp_patient_VISIT SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"'");//
                                    updatePatientNoPstmt2.executeUpdate();
                                    
                                    java.sql.PreparedStatement updatePatientNoPstmt3 = connectDB.prepareStatement("UPDATE CREDIT_ACC_SLIP SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"'");//
                                    updatePatientNoPstmt3.executeUpdate();
                                    
                                    //java.sql.PreparedStatement updatePatientNoPstmt4 = connectDB.prepareStatement("UPDATE ac_ledger SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"' and date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"'");//
                                    // updatePatientNoPstmt4.executeUpdate();
                                    if(ConsCharge){
                                        java.sql.PreparedStatement updatePatientNoPstmt5 = connectDB.prepareStatement("UPDATE hp_patient_card SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"' and date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"'");//
                                        updatePatientNoPstmt5.executeUpdate();
                                        
                                        java.sql.PreparedStatement updatePatientNoPstmt6 = connectDB.prepareStatement("UPDATE hp_patient_billing SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"' and trans_date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"'");//
                                        updatePatientNoPstmt6.executeUpdate();
                                        
                                        if(jCheckBox1.isSelected()){
                                            java.sql.PreparedStatement pstmt24 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                            pstmt24.setObject(1,actNo);
                                            pstmt24.setString(2,mainAcc);
                                            pstmt24.setString(3,patientsNo2);
                                            pstmt24.setString(4,jTextField6.getText()+" "+jTextField21.getText());
                                            pstmt24.setString(5,"");
                                            pstmt24.setString(6,"-");
                                            pstmt24.setString(7,"-");
                                            pstmt24.setString(8,"OP");
                                            pstmt24.setString(9,"");
                                            if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("scheme")){
                                                pstmt24.setString(10,"Scheme");
                                            }else{
                                                pstmt24.setString(10,"Cash");
                                            }
                                            pstmt24.setString(11,"");
                                            pstmt24.setString(12,"");
                                            pstmt24.setString(13,"");
                                            pstmt24.setString(14,activity);
                                            pstmt24.setString(15,"Revenue");
                                            pstmt24.setDouble(16,0.00);
                                            pstmt24.setDouble(17,java.lang.Double.parseDouble(jTextField9.getText()));
                                            pstmt24.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                            pstmt24.setString(19,transNo);
                                            pstmt24.setBoolean(20,false);
                                            pstmt24.setBoolean(21,false);
                                            pstmt24.setBoolean(22,false);
                                            pstmt24.setString(23,user);
                                            pstmt24.executeUpdate();
                                        }
                                    }
                                    
                                    javax.swing.JOptionPane.showMessageDialog(this,"Data Saved Successfully. Patient No is "+patientsNo2+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                    jTextField3.setText(patientsNo2);
                                    jTextField171.setText(patientsNo2);
                                    this.jComboBox4.setSelectedItem("-");
                                    
                                    jButton202ActionPerformed(evt);
                                    // End of patientNo update code
                                    
                                    connectDB.commit();
                                    connectDB.setAutoCommit(true);
                                    
                                    docSpecTxt.setText("");
                                    refDocHosTxt.setText("");
                                    otherSourceTxt.setText("");
                                    occupationTxt.setText("");
                                }
                                } catch(java.sql.SQLException sq){
                                    sq.printStackTrace();
                                    try { // Roll back all transactions committed after the Savepoint (labelled - Registration)
                                        // connectDB.rollback(savePointRegistration);
                                        connectDB.rollback();
                                    }catch (java.sql.SQLException sql){
                                        sql.printStackTrace();
                                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    }
                                    System.out.println(sq.getMessage());
                                    javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    
                                }
                                
                            } catch(java.lang.Exception ex) {
                                System.out.println(ex.getMessage());
                                ex.printStackTrace();
                                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR! : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                try {   // Rollback all the transactions after the Savepoint whatever the error is.
                                    // connectDB.rollback(savePointRegistration);
                                    connectDB.rollback();
                                }catch (java.sql.SQLException sql){
                                    sql.printStackTrace();
                                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }
                                
                            }}
                        
                        //END OF IF SCHEME
                        
                    }else{
                        if (jTextField21.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Surname", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }else
                            if (jTextField6.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Other Names Field", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                            }else
                                
                                if (jTextField1.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Next Of Kin", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }else
                                    if (jTextField4.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Patient Residence", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    }else
                                        if (jTextField5.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must Patient Postal Address", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                        }else
                                            if (jTextField5821.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Patient Cellphone", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                            }else
                                                
                                                if (NationalityTxt1.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Patient Nationality", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                }else
                                                    if (idNoTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter ID/Passport No", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                    }else
                                                        if (emailAddTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must Patient Email Address", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                        }else
                                                            if (relationTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter NOK Relationship", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                            }else
                                                                if (jTextField17.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter NOK Address", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                }else
                                                                    if (emailAddTxt1.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Patient Email Address", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                    }else
                                                                        if (nokTelTxt.equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter NOK Tel", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                        }else
                                                                            if (occupationTxt.equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Occupation", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                            }else
                                                                                if (nokResidenceTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"You must Patient Residence", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                                                }else{
                            
                            
                            
                            try {
                                
                                try {
                                    
                                     int patient = 0;
                                    java.sql.Statement stmt1 = connectDB.createStatement();
                                    
                                    java.sql.ResultSet rset11 = stmt1.executeQuery("SELECT DISTINCT count(patient_no) FROM hp_patient_visit where transaction_type ilike 'registration%' and (patient_no = '"+jTextField3.getText().toString()+"' AND patient_no !='' ) and date = '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"'");
                                    while (rset11.next()){
                                        patient = rset11.getInt(1);
                                        
                                    }
                                    if (patient > 0){
                                        javax.swing.JOptionPane.showMessageDialog(this,"Patient Already activated for that date.\n Proceed anyway.....", "Confimation Message",javax.swing.JOptionPane.ERROR_MESSAGE);
                                     if(jButton301.getText().equalsIgnoreCase("Update")){
                                                 java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE hp_patient_register SET  old_patient_no='"+jTextField3.getText()+"', first_name='"+jTextField21.getText()+"',  second_name='"+jTextField6.getText()+"',  nok='"+jTextField1.getText()+"',   residence='"+jTextField4.getText()+"',  address='"+jTextField5.getText()+"',  year_of_birth='"+datePickerYOB.getDate().toString()+"',  tel_no='"+jTextField5821.getText()+"',   date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  pay_mode='"+jComboBox1.getSelectedItem()+"',  payer='"+jTextField2.getText()+"',  account_no='"+jTextField15.getText()+"',  description='"+jTextField361.getText()+"',  category='"+jComboBox4.getSelectedItem()+"',"+
                                                "expiry_date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  last_visit='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  department='"+jComboBox4.getSelectedItem()+"',  member_name='"+jTextField36.getText()+"',  card_no='"+jTextField13.getText()+"',  emails='"+emailAddTxt.getText()+"',  id_no='"+idNoTxt.getText()+"',  nok_add='"+jTextField17.getText()+"', patient_no='"+jTextField3.getText()+"', pat_nationality='"+NationalityTxt1.getText()+"', nok_telno='"+nokTelTxt.getText()+"',nok_relationship='"+relationTxt.getText()+"',nok_residence='"+nokResidenceTxt.getText()+"',nok_email='"+emailAddTxt1.getText()+"',refering_doc_or_hosp='"+refDocHosTxt.getText()+"',occupation='"+occupationTxt.getText()+"',other='"+otherSourceTxt.getText()+"' WHERE patient_no = '"+jTextField3.getText()+"'");
                                        pstmt.executeUpdate();
                                        
                                        javax.swing.JOptionPane.showMessageDialog(this,"Update Successful.","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                        this.jComboBox4.setSelectedItem("-");
                           
                                            }else{
                                                       java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE hp_patient_register set pay_mode = '"+jComboBox1.getSelectedItem().toString()+"',category = '"+jComboBox4.getSelectedItem().toString()+"',last_visit = '"+datePicker4.getDate().toString()+"',payer = '',description = ''  WHERE patient_no = '"+jTextField3.getText()+"'");
                                                    pstmt1.executeUpdate();
                                        
                                            }    
                                    }else{
                                    
                                    int occurence = 0;
                                    String mainAcc = null;
                                    String activity = null;
                                    String actNo = null;
                                    String billNo = null;
                                    String rate = null;
                                    String transNo = null;
                                    String patientAcc = null;
                                    String insAcc = null;
                                    String cardAcc = null;
                                    String AccDesc = null;
                                    String cardName = null;
                                    String insName = null;
                                    String user = null;
                                    String preFix = null;
                                    int digitNo = 0;
                                    String yrEnd = null;
                                    boolean incYr = false;
                                    boolean ConsCharge = false;
                                    int slipNo = 0;
                                    String Cons = null;
                                    String selectedchkbx = null;
                                    String selectedchkbx1 = null;
                                    String patSourceChbx = null;
                                    String refferedByChbx = null;
                                    String patientNo = null;
                                    String patientsNo = null;
                                    
                                    java.sql.Statement stmt = connectDB.createStatement();
                                    if(jCheckBox9.isSelected()){
                                        java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service,rate from pb_operating_parameters where category ILIKE 'SP%'");
                                        while (rset.next()){
                                            activity = rset.getObject(1).toString();
                                            actNo = rset.getObject(2).toString();
                                            mainAcc = rset.getObject(3).toString();
                                            jTextField9.setText(rset.getObject(4).toString());
                                        }
                                    }else{
                                        if(jCheckBox2.isSelected()){
                                            java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service,rate from pb_operating_parameters where category ILIKE 'RV%'");
                                            while (rset.next()){
                                                activity = rset.getObject(1).toString();
                                                actNo = rset.getObject(2).toString();
                                                mainAcc = rset.getObject(3).toString();
                                                jTextField9.setText(rset.getObject(4).toString());
                                            }
                                        }else{
                                            if(jCheckBox1.isSelected()){
                                                java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service,rate from pb_operating_parameters where category ILIKE 'CF%'");
                                                while (rset.next()){
                                                    activity = rset.getObject(1).toString();
                                                    actNo = rset.getObject(2).toString();
                                                    mainAcc = rset.getObject(3).toString();
                                                    jTextField9.setText(rset.getObject(4).toString());
                                                    
                                                }
                                            }else{
                                                if(jCheckBox10.isSelected()){
                                                    java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service,rate from pb_operating_parameters where category ILIKE 'OP%'");
                                                    while (rset.next()){
                                                        activity = rset.getObject(1).toString();
                                                        actNo = rset.getObject(2).toString();
                                                        mainAcc = rset.getObject(3).toString();
                                                        jTextField9.setText(rset.getObject(4).toString());
                                                    }
                                                }
                                                
                                            }
                                        }
                                    }
                                    
                                    java.sql.Statement stmnzc = connectDB.createStatement();
                                    java.sql.ResultSet rsnzc = stmnzc.executeQuery("select ALLOWED from controls where control_type ilike 'charge_op_consultation'");
                                    while (rsnzc.next()){
                                        ConsCharge = rsnzc.getBoolean(1);
                                    }
                                    
                                    connectDB.setAutoCommit(false);
                                    //savePointRegistration = connectDB.setSavepoint("Registration"); // Creating a savepoint
                                    if(jButton301.getText().equalsIgnoreCase("Update")){
                                        //  String Cons = null;
                                        //  String selectedchkbx = null;
                                        //String selectedchkbx1 = null;
                                        
                                        
                                        if(jCheckBox9.isSelected()){
                                            Cons = jCheckBox9.getText();
                                        }else{
                                            if( jCheckBox2.isSelected()){
                                                Cons = jCheckBox2.getText();
                                            }
                                            Cons = jCheckBox1.getText();
                                        }
                                        if (this.jCheckBox2111.isSelected()){
                                            selectedchkbx = jCheckBox2111.getText();
                                        }  else{
                                            
                                            selectedchkbx = jCheckBox1111.getText();
                                        }
                                       /* if (this.jCheckBox2113.isSelected()){
                                            selectedchkbx1 = jCheckBox2113.getText();
                                        }  else{
                                        
                                            selectedchkbx1 = jCheckBox1113.getText();
                                        }*/
                                        if (this.jCheckBox1113.isSelected()){
                                            selectedchkbx1 = jCheckBox2113.getText();
                                        }  else
                                            if (this.jCheckBox2113.isSelected()){
                                            selectedchkbx1 = jCheckBox2113.getText();
                                            }  else
                                                if (this.jCheckBox2114.isSelected()){
                                            selectedchkbx1 = jCheckBox2114.getText();
                                                }  else{
                                            
                                            selectedchkbx1 = jCheckBox2115.getText();
                                                }
                                        if (this.jCheckBox16.isSelected()){
                                            patSourceChbx = jCheckBox16.getText();
                                        }   if (this.jCheckBox15.isSelected()){
                                            
                                            patSourceChbx = jCheckBox15.getText();
                                        }else{
                                            patSourceChbx = jCheckBox14.getText();
                                        }
                                        
                                        if (this.jCheckBox13.isSelected()){
                                            refferedByChbx = jCheckBox13.getText();
                                        }   if (this.jCheckBox17.isSelected()){
                                            
                                            refferedByChbx = jCheckBox17.getText();
                                        }else{
                                            refferedByChbx = jCheckBox18.getText();
                                        }
                                        
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE hp_patient_register SET  old_patient_no='"+jTextField3.getText()+"', first_name='"+jTextField21.getText()+"',  second_name='"+jTextField6.getText()+"',  nok='"+jTextField1.getText()+"',   residence='"+jTextField4.getText()+"',  address='"+jTextField5.getText()+"',  year_of_birth='"+datePickerYOB.getDate().toString()+"',  tel_no='"+jTextField5821.getText()+"',  sex='"+selectedchkbx+"',  date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  pay_mode='"+jComboBox1.getSelectedItem()+"',  payer='"+jTextField2.getText()+"',  account_no='"+jTextField15.getText()+"',  description='"+jTextField361.getText()+"',  category='"+jComboBox4.getSelectedItem()+"',"+
                                                "expiry_date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  last_visit='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  department='"+jComboBox4.getSelectedItem()+"',  member_name='"+jTextField36.getText()+"',  card_no='"+jTextField13.getText()+"',  emails='"+emailAddTxt.getText()+"',  id_no='"+idNoTxt.getText()+"',  nok_add='"+jTextField17.getText()+"', patient_no='"+jTextField3.getText()+"', pat_nationality='"+NationalityTxt1.getText()+"', nok_telno='"+nokTelTxt.getText()+"',nok_relationship='"+relationTxt.getText()+"',nok_residence='"+nokResidenceTxt.getText()+"',nok_email='"+emailAddTxt1.getText()+"',pat_marital_status='"+selectedchkbx1+"', patient_source='"+patSourceChbx+"',refered_by='"+refferedByChbx+"',refering_doc_or_hosp='"+refDocHosTxt.getText()+"',refering_doc_spec='"+docSpecTxt.getText()+"',occupation='"+occupationTxt.getText()+"',other='"+otherSourceTxt.getText()+"' WHERE patient_no = '"+jTextField3.getText()+"'");
                                        pstmt.executeUpdate();
                                        
                                        javax.swing.JOptionPane.showMessageDialog(this,"Update Successful.","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                        this.jComboBox4.setSelectedItem("-");
                                        
                                        
                                        
                                        
                                    }else{
                                        
                                        
                                        if(!jTextField3.getText().toString().startsWith("K0") && jRadioButton2.isSelected()){
                                            
                                            //IF PAYMENT MODE IS SELECTED THIS IS FOR ACTIVATING EXISTING PATIENTS . IF NOT GIVEN NEW 'K' NUMBER REJECT
                                            javax.swing.JOptionPane.showMessageDialog(this, "The Patient does not have the new No.\n Click on Create a Pry No For Existing....", "CAUTION MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                        }else{
                                            
                                            
                                            if(!jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Scheme")  && (jRadioButton1.isSelected() | jCheckBox11.isSelected())){
                                                
                                                
                                                int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Have you checkedConsultation Fee?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
                                                
                                                if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
                                                    
                                                    
                                                    
                                                    if(jCheckBox9.isSelected()){
                                                        Cons = jCheckBox9.getText();
                                                    }else{
                                                        if( jCheckBox2.isSelected()){
                                                            Cons = jCheckBox2.getText();
                                                        }
                                                        Cons = jCheckBox1.getText();
                                                    }
                                                    if (this.jCheckBox2111.isSelected()){
                                                        selectedchkbx = jCheckBox2111.getText();
                                                    }  else{
                                                        
                                                        selectedchkbx = jCheckBox1111.getText();
                                                    }
                                                    if (this.jCheckBox2113.isSelected()){
                                                        selectedchkbx1 = jCheckBox2113.getText();
                                                    }  else   if (this.jCheckBox2114.isSelected()){
                                                        selectedchkbx1 = jCheckBox2114.getText();
                                                    }  else  if (this.jCheckBox2115.isSelected()){
                                                        selectedchkbx1 = jCheckBox2115.getText();
                                                    }  else{
                                                        
                                                        selectedchkbx1 = jCheckBox1113.getText();
                                                    }
                                                    
                                                    if (this.jCheckBox13.isSelected()){
                                                        refferedByChbx = jCheckBox13.getText();
                                                    }   if (this.jCheckBox17.isSelected()){
                                                        
                                                        refferedByChbx = jCheckBox17.getText();
                                                    }else{
                                                        refferedByChbx = jCheckBox18.getText();
                                                    }
                                                    int pNo = 0;
                                                    java.util.Calendar calendar = java.util.Calendar.getInstance();
                                                    
                                                    long dateNow = calendar.getTimeInMillis();
                                                    
                                                    java.sql.Date datenowSql1= new java.sql.Date(dateNow);
                                                    
                                                    System.out.println(datenowSql1.toString());
                                                    
                                                    
                                                    
                                                    java.sql.Statement stm12 = connectDB.createStatement();
                                                    
                                                    java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                                                    while (rse12.next()){
                                                        
                                                        patientAcc = rse12.getObject(1).toString();
                                                        AccDesc = rse12.getObject(2).toString();
                                                    }
                                                    
                                                    java.sql.Statement ps = connectDB.createStatement();
                                                    java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                                                    
                                                    
                                                    while (rst.next()){
                                                        rst.getObject(1).toString();
                                                        
                                                        transNo = rst.getObject(1).toString();
                                                    }
                                                    
                                                    java.sql.Statement stmp = connectDB.createStatement();
                                                    java.sql.ResultSet rsp = stmp.executeQuery("select nextval('creditslip_no_seq'),current_user");
                                                    while (rsp.next()){
                                                        slipNo = rsp.getInt(1);
                                                        
                                                    }
                                                    java.sql.Statement stmn = connectDB.createStatement();
                                                    java.sql.ResultSet rsn = stmn.executeQuery("select current_user");
                                                    while (rsn.next()){
                                                        user = rsn.getObject(1).toString();
                                                    }
                                                    
                                                    java.sql.Statement stmnz = connectDB.createStatement();
                                                    java.sql.ResultSet rsnz = stmnz.executeQuery("select auto_numbering from pb_patient_names");
                                                    while (rsnz.next()){
                                                        manualNo = rsnz.getBoolean(1);
                                                    }
                                                    if(manualNo){
                                                        
                                                        java.sql.Statement stmnz1 = connectDB.createStatement();
                                                        java.sql.ResultSet rsnz1 = stmnz1.executeQuery("select prefix_item,digit_no,yr_end,inc_year from pb_patient_names");
                                                        while (rsnz1.next()){
                                                            preFix = rsnz1.getString(1);
                                                            digitNo = rsnz1.getInt(2);
                                                            yrEnd = rsnz1.getString(3);
                                                            incYr = rsnz1.getBoolean(4);
                                                        }
                                                    }
                                                    
                                                    
                                                    patientsNo =tempPatientNO;
                                                    
                                                    
                                                    if (jRadioButton1.isSelected()){
                                                        
                                                        if (this.jCheckBox16.isSelected()){
                                                            patSourceChbx = jCheckBox16.getText();
                                                        }   if (this.jCheckBox15.isSelected()){
                                                            
                                                            patSourceChbx = jCheckBox15.getText();
                                                        }else{
                                                            patSourceChbx = jCheckBox14.getText();
                                                        }
                                                        
                                                        if (this.jCheckBox13.isSelected()){
                                                            refferedByChbx = jCheckBox13.getText();
                                                        }   if (this.jCheckBox17.isSelected()){
                                                            
                                                            refferedByChbx = jCheckBox17.getText();
                                                        }else{
                                                            refferedByChbx = jCheckBox18.getText();
                                                        }
                                                        
                                                        java.sql.Statement stm1 = connectDB.createStatement();
                                                        
                                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_register values(upper(?), upper(?), upper(?), upper(?), ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                                        
                                                        pstmt.setString(1,patientsNo);
                                                        
                                                        if (jTextField21.getText().equals("")) {
                                                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Surname", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                        }else{
                                                            pstmt.setString(2,jTextField21.getText());
                                                        }
                                                        if (jTextField6.getText().equals("")) {
                                                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Other Names Field", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                        }else{
                                                            pstmt.setString(3,jTextField6.getText());
                                                        }
                                                        pstmt.setString(4,"");
                                                        if (jTextField1.getText().equals("")) {
                                                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Next Of Kin", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                        }else{
                                                            pstmt.setString(5,jTextField1.getText());
                                                        }
                                                        if (jTextField4.getText().equals("")) {
                                                            javax.swing.JOptionPane.showMessageDialog(this,"You must enter Residence", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                        }else{
                                                            pstmt.setString(6,jTextField4.getText());
                                                        }
                                                        if (jTextField5.getText().equals("")) {
                                                            javax.swing.JOptionPane.showMessageDialog(this,"You must Patient Postal Address", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                        }else{
                                                            pstmt.setString(7,jTextField5.getText());
                                                        }
                                                        pstmt.setString(8,datePickerYOB.getDate().toString());
                                                        pstmt.setString(9,jTextField5821.getText());
                                                        if(selectedchkbx == null){
                                                            javax.swing.JOptionPane.showMessageDialog(this,"You must tick patient Gender", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                        }else{
                                                            pstmt.setObject(10,selectedchkbx);
                                                        }
                                                        
                                                        pstmt.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                        pstmt.setObject(12,jComboBox1.getSelectedItem());
                                                        pstmt.setString(13,jTextField2.getText());
                                                        pstmt.setString(14,jTextField15.getText());
                                                        pstmt.setString(15,jTextField361.getText());
                                                        if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("-")){
                                                            javax.swing.JOptionPane.showMessageDialog(this,"You must select Patient Entry point", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                                            
                                                        }else{
                                                            pstmt.setObject(16,jComboBox4.getSelectedItem());
                                                        }
                                                        pstmt.setDate(17,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                        pstmt.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                        pstmt.setObject(19,jTextField14.getText());
                                                        pstmt.setString(20,jTextField36.getText());
                                                        pstmt.setString(21,jTextField13.getText());
                                                        pstmt.setString(22,emailAddTxt.getText());
                                                        pstmt.setString(23,idNoTxt.getText());
                                                        pstmt.setString(24,jTextField17.getText());
                                                        pstmt.setObject(25,patientsNo);
                                                        pstmt.setString(26,NationalityTxt1.getText());
                                                        pstmt.setString(27,nokTelTxt.getText());
                                                        pstmt.setString(28,relationTxt.getText());
                                                        pstmt.setString(29,nokResidenceTxt.getText());
                                                        pstmt.setString(30,emailAddTxt1.getText());
                                                        pstmt.setObject(31,selectedchkbx1);
                                                        pstmt.setString(32,patSourceChbx);
                                                        pstmt.setString(33,refferedByChbx);
                                                        pstmt.setString(34,refDocHosTxt.getText());
                                                        pstmt.setString(35,docSpecTxt.getText());
                                                        pstmt.setObject(36,occupationTxt.getText());
                                                        pstmt.setObject(37,otherSourceTxt.getText());
                                                        pstmt.executeUpdate();
                                                        
                                                        
                                                        java.sql.PreparedStatement pstmt21a = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                                                        
                                                        pstmt21a.setString(1,patientsNo);
                                                        pstmt21a.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                        pstmt21a.setString(3,"OP");
                                                        pstmt21a.setString(4,jComboBox1.getSelectedItem().toString());
                                                        pstmt21a.setInt(5,slipNo);
                                                        pstmt21a.setString(6,activity);
                                                        pstmt21a.setInt(7,1);
                                                        pstmt21a.setString(8,jComboBox4.getSelectedItem().toString());
                                                        pstmt21a.setDouble(9,0.00);
                                                        pstmt21a.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                        pstmt21a.setString(10,"");
                                                        pstmt21a.setDouble(12,0);
                                                        pstmt21a.setString(14,user);
                                                        pstmt21a.setString(13,"");
                                                        pstmt21a.setTimestamp(15,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                                        pstmt21a.setString(16,"Registration");
                                                        pstmt21a.setString(17,"");
                                                        pstmt21a.setInt(18,1);
                                                        pstmt21a.setString(19,"");
                                                        pstmt21a.setString(20,"");
                                                        pstmt21a.setBoolean(21,false);
                                                        pstmt21a.setString(22,patSourceChbx);
                                                        pstmt21a.setString(23,refferedByChbx);
                                                        pstmt21a.setString(24,refDocHosTxt.getText());
                                                        pstmt21a.setString(25,docSpecTxt.getText());
                                                        pstmt21a.setObject(26,occupationTxt.getText());
                                                        pstmt21a.setObject(27,otherSourceTxt.getText());
                                                        
                                                        pstmt21a.executeUpdate();
                                                        if(ConsCharge){
                                                            if (jCheckBox1.isSelected()){
                                                                java.sql.PreparedStatement pstmth = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                                                pstmth.setString(1,patientsNo);
                                                                pstmth.setObject(2,activity);
                                                                pstmth.setString(3,jComboBox4.getSelectedItem().toString());
                                                                pstmth.setString(4,"Scheme");
                                                                pstmth.setString(5,transNo);
                                                                pstmth.setString(7,"");
                                                                pstmth.setString(6,"");
                                                                pstmth.setString(8,"");
                                                                pstmth.setString(9,"");
                                                                pstmth.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                                                pstmth.setString(11,"");
                                                                pstmth.setDouble(12,java.lang.Double.parseDouble(jTextField9.getText()));
                                                                pstmth.setDouble(13,0.00);
                                                                pstmth.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                                pstmth.setObject(15,patientAcc);
                                                                pstmth.setString(16,mainAcc);
                                                                pstmth.setDouble(17,1);
                                                                pstmth.setObject(18,jTextField15.getText());
                                                                pstmth.setBoolean(19,false);
                                                                pstmth.setString(20,"Billing");
                                                                pstmth.setBoolean(21,false);
                                                                pstmth.setString(22,AccDesc);
                                                                pstmth.setInt(23,slipNo);
                                                                pstmth.setString(24,user);
                                                                pstmth.setInt(25,slipNo);
                                                                pstmth.setString(26,"OP");
                                                                pstmth.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                                                pstmth.setInt(28,slipNo);
                                                                pstmth.executeUpdate();
                                                                
                                                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?)");
                                                                
                                                                pstmt2.setString(1,patientsNo);
                                                                pstmt2.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                                pstmt2.setString(3,jComboBox1.getSelectedItem().toString());
                                                                pstmt2.setString(4,jComboBox4.getSelectedItem().toString());
                                                                pstmt2.setString(5,activity);
                                                                pstmt2.setString(6,"1");
                                                                pstmt2.setDouble(7,java.lang.Double.parseDouble(jTextField9.getText()));
                                                                pstmt2.setString(8,actNo);
                                                                pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                                pstmt2.setString(10,"");
                                                                pstmt2.setBoolean(12,false);
                                                                pstmt2.setString(11,user);
                                                                pstmt2.setString(13,mainAcc);
                                                                pstmt2.executeUpdate();
                                                            }
                                                        }
                                                        
                                                    }else
                                                        
                                                        if (jCheckBox11.isSelected()){
                                                        
                                                        if (this.jCheckBox16.isSelected()){
                                                            patSourceChbx = jCheckBox16.getText();
                                                        }   if (this.jCheckBox15.isSelected()){
                                                            
                                                            patSourceChbx = jCheckBox15.getText();
                                                        }else{
                                                            patSourceChbx = jCheckBox14.getText();
                                                        }
                                                        
                                                        if (this.jCheckBox13.isSelected()){
                                                            refferedByChbx = jCheckBox13.getText();
                                                        }   if (this.jCheckBox17.isSelected()){
                                                            
                                                            refferedByChbx = jCheckBox17.getText();
                                                        }else{
                                                            refferedByChbx = jCheckBox18.getText();
                                                        }
                                                        
                                                        java.sql.Statement stm1 = connectDB.createStatement();
                                                        
                                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE hp_patient_register SET  old_patient_no='"+jTextField3.getText()+"', first_name='"+jTextField21.getText()+"',  second_name='"+jTextField6.getText()+"',  nok='"+jTextField1.getText()+"',   residence='"+jTextField4.getText()+"',  address='"+jTextField5.getText()+"',  year_of_birth='"+datePickerYOB.getDate().toString()+"',  tel_no='"+jTextField5821.getText()+"',  sex='"+selectedchkbx+"',  date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  pay_mode='"+jComboBox1.getSelectedItem()+"',  payer='"+jTextField2.getText()+"',  account_no='"+jTextField15.getText()+"',  description='"+jTextField361.getText()+"',  category='"+jComboBox4.getSelectedItem()+"',"+
                                                                "expiry_date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  last_visit='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"',  department='"+jComboBox4.getSelectedItem()+"',  member_name='"+jTextField36.getText()+"',  card_no='"+jTextField13.getText()+"',  emails='"+emailAddTxt.getText()+"',  id_no='"+idNoTxt.getText()+"',  nok_add='"+jTextField17.getText()+"',  patient_no='"+patientsNo+"', pat_nationality='"+NationalityTxt1.getText()+"', nok_telno='"+nokTelTxt.getText()+"',nok_relationship='"+relationTxt.getText()+"',nok_residence='"+nokResidenceTxt.getText()+"',nok_email='"+emailAddTxt1.getText()+"',pat_marital_status='"+selectedchkbx1+"', patient_source='"+patSourceChbx+"',refered_by='"+refferedByChbx+"',refering_doc_or_hosp='"+refDocHosTxt.getText()+"',refering_doc_spec='"+docSpecTxt.getText()+"',occupation='"+occupationTxt.getText()+"',other='"+otherSourceTxt.getText()+"' WHERE patient_no = '"+jTextField3.getText()+"'");
                                                        pstmt.executeUpdate();
                                                        
                                                        
                                                        java.sql.PreparedStatement pstmt21a = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                                        
                                                        pstmt21a.setString(1,patientsNo);
                                                        pstmt21a.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                        pstmt21a.setString(3,"OP");
                                                        pstmt21a.setString(4,jComboBox1.getSelectedItem().toString());
                                                        pstmt21a.setInt(5,slipNo);
                                                        pstmt21a.setString(6,activity);
                                                        pstmt21a.setInt(7,1);
                                                        pstmt21a.setString(8,jComboBox4.getSelectedItem().toString());
                                                        pstmt21a.setDouble(9,0.00);
                                                        pstmt21a.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                        pstmt21a.setString(10,"");
                                                        pstmt21a.setDouble(12,0);
                                                        pstmt21a.setString(14,user);
                                                        pstmt21a.setString(13,"");
                                                        pstmt21a.setTimestamp(15,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                                        pstmt21a.setString(16,"Registration");
                                                        pstmt21a.setString(17,"");
                                                        pstmt21a.setInt(18,1);
                                                        pstmt21a.setString(19,"");
                                                        pstmt21a.setString(20,"");
                                                        pstmt21a.setBoolean(21,false);
                                                        pstmt21a.setString(22,patSourceChbx);
                                                        pstmt21a.setString(23,refferedByChbx);
                                                        pstmt21a.setString(24,refDocHosTxt.getText());
                                                        pstmt21a.setString(25,docSpecTxt.getText());
                                                        pstmt21a.setObject(26,occupationTxt.getText());
                                                        pstmt21a.setObject(27,otherSourceTxt.getText());
                                                        pstmt21a.executeUpdate();
                                                        
                                                        if(ConsCharge){
                                                            if (jCheckBox1.isSelected()){
                                                                java.sql.PreparedStatement pstmth = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                                                pstmth.setString(1,patientsNo);
                                                                pstmth.setObject(2,activity);
                                                                pstmth.setString(3,jComboBox4.getSelectedItem().toString());
                                                                pstmth.setString(4,"Scheme");
                                                                pstmth.setString(5,transNo);
                                                                pstmth.setString(7,"");
                                                                pstmth.setString(6,"");
                                                                pstmth.setString(8,"");
                                                                pstmth.setString(9,"");
                                                                pstmth.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                                                pstmth.setString(11,"");
                                                                pstmth.setDouble(12,java.lang.Double.parseDouble(jTextField9.getText()));
                                                                pstmth.setDouble(13,0.00);
                                                                pstmth.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                                pstmth.setObject(15,patientAcc);
                                                                pstmth.setString(16,mainAcc);
                                                                pstmth.setDouble(17,1);
                                                                pstmth.setObject(18,jTextField15.getText());
                                                                pstmth.setBoolean(19,false);
                                                                pstmth.setString(20,"Billing");
                                                                pstmth.setBoolean(21,false);
                                                                pstmth.setString(22,AccDesc);
                                                                pstmth.setInt(23,slipNo);
                                                                pstmth.setString(24,user);
                                                                pstmth.setInt(25,slipNo);
                                                                pstmth.setString(26,"OP");
                                                                pstmth.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                                                pstmth.setInt(28,slipNo);
                                                                pstmth.executeUpdate();
                                                                
                                                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?)");
                                                                
                                                                pstmt2.setString(1,patientsNo);
                                                                pstmt2.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                                pstmt2.setString(3,jComboBox1.getSelectedItem().toString());
                                                                pstmt2.setString(4,jComboBox4.getSelectedItem().toString());
                                                                pstmt2.setString(5,activity);
                                                                pstmt2.setString(6,"1");
                                                                pstmt2.setDouble(7,java.lang.Double.parseDouble(jTextField9.getText()));
                                                                pstmt2.setString(8,actNo);
                                                                pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                                pstmt2.setString(10,"");
                                                                pstmt2.setBoolean(12,false);
                                                                pstmt2.setString(11,user);
                                                                pstmt2.setString(13,mainAcc);
                                                                pstmt2.executeUpdate();
                                                            }
                                                        }
                                                        }
                                                    
                                                    
                                                    
                                                    
                                                }else{
                                                    // //IF ITS EITHER GIVE NEW NO OR CREATE NEW FILE AND IS CASH, AND THE FIELDS ARE ALL FILLED.....
                                                    //THIS IS IF YOU SELECT 'NO' THAT YOU ARE NOT SURE
                                                    javax.swing.JOptionPane.showMessageDialog(this, "Thank You for taking caution","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                    
                                                }
                                                
                                                
                                                
                                                
                                                
                                            }else
                                                if(!jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Scheme")  && jRadioButton2.isSelected()){
                                                
                                                int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Have you checked Charge Consultation Fee?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
                                                
                                                if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
                                                    
                                                    
                                                    if(jCheckBox9.isSelected()){
                                                        Cons = jCheckBox9.getText();
                                                    }else{
                                                        if( jCheckBox2.isSelected()){
                                                            Cons = jCheckBox2.getText();
                                                        }
                                                        Cons = jCheckBox1.getText();
                                                    }
                                                    if (this.jCheckBox2111.isSelected()){
                                                        selectedchkbx = jCheckBox2111.getText();
                                                    }  else{
                                                        
                                                        selectedchkbx = jCheckBox1111.getText();
                                                    }
                                                    if (this.jCheckBox2113.isSelected()){
                                                        selectedchkbx1 = jCheckBox2113.getText();
                                                    }  else{
                                                        
                                                        selectedchkbx1 = jCheckBox1113.getText();
                                                    }
                                                    
                                                    if (this.jCheckBox16.isSelected()){
                                                        patSourceChbx = jCheckBox16.getText();
                                                    }   if (this.jCheckBox15.isSelected()){
                                                        
                                                        patSourceChbx = jCheckBox15.getText();
                                                    }else{
                                                        patSourceChbx = jCheckBox14.getText();
                                                    }
                                                    
                                                    if (this.jCheckBox13.isSelected()){
                                                        refferedByChbx = jCheckBox13.getText();
                                                    }   if (this.jCheckBox17.isSelected()){
                                                        
                                                        refferedByChbx = jCheckBox17.getText();
                                                    }else{
                                                        refferedByChbx = jCheckBox18.getText();
                                                    }
                                                    //String patientNo = null;
                                                    //String patientsNo = null;
                                                    int pNo = 0;
                                                    ////   try{
                                                    //            java.lang.Object selectedGuaran = jComboBox2.getSelectedItem();
                                                    java.util.Calendar calendar = java.util.Calendar.getInstance();
                                                    
                                                    long dateNow = calendar.getTimeInMillis();
                                                    
                                                    java.sql.Date datenowSql1= new java.sql.Date(dateNow);
                                                    
                                                    System.out.println(datenowSql1.toString());
                                                    
                                                    ////    try {
                                                    
                                                    ////               connectDB.setAutoCommit(false);
                                                    
                                                    
                                                    
                                                    
                                                    java.sql.Statement stm12 = connectDB.createStatement();
                                                    
                                                    java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                                                    while (rse12.next()){
                                                        
                                                        patientAcc = rse12.getObject(1).toString();
                                                        AccDesc = rse12.getObject(2).toString();
                                                    }
                                                    
                                                    java.sql.Statement ps = connectDB.createStatement();
                                                    java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                                                    
                                                    
                                                    while (rst.next()){
                                                        rst.getObject(1).toString();
                                                        
                                                        transNo = rst.getObject(1).toString();
                                                    }
                                                    
                                                    java.sql.Statement stmp = connectDB.createStatement();
                                                    java.sql.ResultSet rsp = stmp.executeQuery("select nextval('creditslip_no_seq'),current_user");
                                                    while (rsp.next()){
                                                        slipNo = rsp.getInt(1);
                                                        //  user = rs.getObject(2).toString();
                                                    }
                                                    java.sql.Statement stmn = connectDB.createStatement();
                                                    java.sql.ResultSet rsn = stmn.executeQuery("select current_user");
                                                    while (rsn.next()){
                                                        user = rsn.getObject(1).toString();
                                                    }
                                                    
                                                    java.sql.Statement stmnz = connectDB.createStatement();
                                                    java.sql.ResultSet rsnz = stmnz.executeQuery("select auto_numbering from pb_patient_names");
                                                    while (rsnz.next()){
                                                        manualNo = rsnz.getBoolean(1);
                                                    }
                                                    if(manualNo){
                                                        java.sql.Statement stmnz1 = connectDB.createStatement();
                                                        java.sql.ResultSet rsnz1 = stmnz1.executeQuery("select prefix_item,digit_no,yr_end,inc_year from pb_patient_names");
                                                        while (rsnz1.next()){
                                                            preFix = rsnz1.getString(1);
                                                            digitNo = rsnz1.getInt(2);
                                                            yrEnd = rsnz1.getString(3);
                                                            incYr = rsnz1.getBoolean(4);
                                                        }
                                                    }
                                                  /*  java.sql.Statement stmt = connectDB.createStatement();
                                                    if(jCheckBox9.isSelected()){
                                                        java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service from pb_operating_parameters where category ILIKE 'SP%'");
                                                        while (rset.next()){
                                                            activity = rset.getObject(1).toString();
                                                            actNo = rset.getObject(2).toString();
                                                            mainAcc = rset.getObject(3).toString();
                                                   
                                                        }
                                                    }else{
                                                        if(jCheckBox2.isSelected()){
                                                            java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service from pb_operating_parameters where category ILIKE 'RV%'");
                                                            while (rset.next()){
                                                                activity = rset.getObject(1).toString();
                                                                actNo = rset.getObject(2).toString();
                                                                mainAcc = rset.getObject(3).toString();
                                                   
                                                            }
                                                        }else{
                                                            if(jCheckBox1.isSelected()){
                                                                java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service from pb_operating_parameters where category ILIKE 'CF%'");
                                                                while (rset.next()){
                                                                    activity = rset.getObject(1).toString();
                                                                    actNo = rset.getObject(2).toString();
                                                                    mainAcc = rset.getObject(3).toString();
                                                   
                                                                }
                                                            }else{
                                                                if(jCheckBox10.isSelected()){
                                                                    java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service from pb_operating_parameters where category ILIKE 'OP%'");
                                                                    while (rset.next()){
                                                                        activity = rset.getObject(1).toString();
                                                                        actNo = rset.getObject(2).toString();
                                                                        mainAcc = rset.getObject(3).toString();
                                                   
                                                                    }
                                                                }
                                                   
                                                            }
                                                        }
                                                    }
                                                   
                                                   */
                                                    patientsNo =tempPatientNO;
                                                    
                                                    
                                                    
                                                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE hp_patient_register set pay_mode = '"+jComboBox1.getSelectedItem().toString()+"',category = '"+jComboBox4.getSelectedItem().toString()+"',last_visit = '"+datePicker4.getDate().toString()+"',payer = '',description = ''  WHERE patient_no = '"+jTextField3.getText()+"'");
                                                    pstmt1.executeUpdate();
                                                    
                                                    java.sql.PreparedStatement pstmt21a = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                                    
                                                    pstmt21a.setString(1,jTextField3.getText());
                                                    pstmt21a.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                    pstmt21a.setString(3,"OP");
                                                    pstmt21a.setString(4,jComboBox1.getSelectedItem().toString());
                                                    pstmt21a.setInt(5,slipNo);
                                                    pstmt21a.setString(6,activity);
                                                    pstmt21a.setInt(7,1);
                                                    pstmt21a.setString(8,jComboBox4.getSelectedItem().toString());
                                                    pstmt21a.setDouble(9,0.00);
                                                    pstmt21a.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                    pstmt21a.setString(10,"");
                                                    pstmt21a.setDouble(12,0);
                                                    pstmt21a.setString(14,user);
                                                    pstmt21a.setString(13,"");
                                                    pstmt21a.setTimestamp(15,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                                    pstmt21a.setString(16,"Registration");
                                                    pstmt21a.setString(17,"");
                                                    pstmt21a.setInt(18,1);
                                                    pstmt21a.setString(19,"");
                                                    pstmt21a.setString(20,"");
                                                    pstmt21a.setBoolean(21,false);
                                                    pstmt21a.setString(22,patSourceChbx);
                                                    pstmt21a.setString(23,refferedByChbx);
                                                    pstmt21a.setString(24,refDocHosTxt.getText());
                                                    pstmt21a.setString(25,docSpecTxt.getText());
                                                    pstmt21a.setObject(26,occupationTxt.getText());
                                                    pstmt21a.setObject(27,otherSourceTxt.getText());
                                                    pstmt21a.executeUpdate();
                                                    javax.swing.JOptionPane.showMessageDialog(this,"Patient Activated Successfully.","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                    this.jComboBox4.setSelectedItem("-");
                                                    
                                                    if(ConsCharge){
                                                        if (jCheckBox1.isSelected()){
                                                            java.sql.PreparedStatement pstmth = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                                            pstmth.setString(1,jTextField3.getText());
                                                            pstmth.setObject(2,activity);
                                                            pstmth.setString(3,jComboBox4.getSelectedItem().toString());
                                                            pstmth.setString(4,"Scheme");
                                                            pstmth.setString(5,transNo);
                                                            pstmth.setString(7,"");
                                                            pstmth.setString(6,"");
                                                            pstmth.setString(8,"");
                                                            pstmth.setString(9,"");
                                                            pstmth.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                                            pstmth.setString(11,"");
                                                            pstmth.setDouble(12,java.lang.Double.parseDouble(jTextField9.getText()));
                                                            pstmth.setDouble(13,0.00);
                                                            pstmth.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                            pstmth.setObject(15,patientAcc);
                                                            pstmth.setString(16,mainAcc);
                                                            pstmth.setDouble(17,1);
                                                            pstmth.setObject(18,jTextField15.getText());
                                                            pstmth.setBoolean(19,false);
                                                            pstmth.setString(20,"Billing");
                                                            pstmth.setBoolean(21,false);
                                                            pstmth.setString(22,AccDesc);
                                                            pstmth.setInt(23,slipNo);
                                                            pstmth.setString(24,user);
                                                            pstmth.setInt(25,slipNo);
                                                            pstmth.setString(26,"OP");
                                                            pstmth.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                                            pstmth.setInt(28,slipNo);
                                                            pstmth.executeUpdate();
                                                            //     pstmt.setString(27,"'now'");
                                                            
                                                            
                                                            
                                                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?)");
                                                            
                                                            pstmt2.setString(1,jTextField3.getText());
                                                            pstmt2.setString(2,jTextField6.getText()+" "+jTextField21.getText());
                                                            pstmt2.setString(3,jComboBox1.getSelectedItem().toString());
                                                            pstmt2.setString(4,jComboBox4.getSelectedItem().toString());
                                                            pstmt2.setString(5,activity);
                                                            pstmt2.setString(6,"1");
                                                            pstmt2.setDouble(7,java.lang.Double.parseDouble(jTextField9.getText()));
                                                            pstmt2.setString(8,actNo);
                                                            pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                                            pstmt2.setString(10,"");
                                                            pstmt2.setBoolean(12,false);
                                                            pstmt2.setString(11,user);
                                                            pstmt2.setString(13,mainAcc);
                                                            pstmt2.executeUpdate();
                                                        }
                                                    }
                                                }else{
                                                    javax.swing.JOptionPane.showMessageDialog(this, "Thank You for taking caution","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                                    
                                                }
                                                
                                                
                                                // Add your handling code here:
                                                jTextField361.setText("");
                                                jTextField2.setText("");
                                                jTextField18.setText("");
                                                jTextField36.setText("");
                                                jTextField13.setText("");
                                                }
                                            
                                            
                                        }
                                        
                                        
                                        
                                    }
                                    
                                    // Put patientNo update code here.
                                    //String preFix = null;
                                    boolean manualNo = false;
                                    String patientsNo2 = null;
                                    //int digitNo = 0;
                                    // String yrEnd = null;
                                    // boolean incYr = false;
                                    
                                    java.sql.Statement stmnz = connectDB.createStatement();
                                    java.sql.ResultSet rsnz = stmnz.executeQuery("select auto_numbering from pb_patient_names");
                                    while (rsnz.next()){
                                        manualNo = rsnz.getBoolean(1);
                                    }
                                    if(manualNo){
                                        java.sql.Statement stmnz1 = connectDB.createStatement();
                                        java.sql.ResultSet rsnz1 = stmnz1.executeQuery("select prefix_item,digit_no,yr_end,inc_year from pb_patient_names");
                                        while (rsnz1.next()){
                                            preFix = rsnz1.getString(1);
                                            digitNo = rsnz1.getInt(2);
                                            yrEnd = rsnz1.getString(3);
                                            incYr = rsnz1.getBoolean(4);
                                        }
                                    }
                                    
                                    
                                    if(jRadioButton1.isSelected() | jCheckBox11.isSelected()){
                                        if (incYr){
                                            
                                            if(preFix.equalsIgnoreCase("noPrefix")){
                                                java.sql.Statement pss1 = connectDB.createStatement();
                                                java.sql.ResultSet rss1 = pss1.executeQuery("select lpad(nextval('outpatient_no_seq'),"+digitNo+",0)||'/'||07");
                                                while (rss1.next()){
                                                    patientsNo2 = rss1.getObject(1).toString();
                                                    //jTextField3.setText(rss1.getObject(1).toString());
                                                }
                                                
                                            }else{
                                                java.sql.Statement pss1 = connectDB.createStatement();
                                                java.sql.ResultSet rss1 = pss1.executeQuery("select '"+preFix+"'||lpad(nextval('outpatient_no_seq'),"+digitNo+",0)||'/'||07");
                                                while (rss1.next()){
                                                    patientsNo2 = rss1.getObject(1).toString();
                                                    // jTextField3.setText(rss1.getObject(1).toString());
                                                }
                                            }
                                        }else{
                                            if(preFix.equalsIgnoreCase("noPrefix")){
                                                java.sql.Statement pss1 = connectDB.createStatement();
                                                java.sql.ResultSet rss1 = pss1.executeQuery("select lpad(nextval('outpatient_no_seq'),"+digitNo+",0)");
                                                while (rss1.next()){
                                                    patientsNo2 = rss1.getObject(1).toString();
                                                    //  jTextField3.setText(rss1.getObject(1).toString());
                                                }
                                            }else{
                                                java.sql.Statement pss1 = connectDB.createStatement();
                                                java.sql.ResultSet rss1 = pss1.executeQuery("select '"+preFix+"'||lpad(nextval('outpatient_no_seq'),"+digitNo+",0)");
                                                while (rss1.next()){
                                                    patientsNo2 = rss1.getObject(1).toString();
                                                    //  jTextField3.setText(rss1.getObject(1).toString());
                                                }
                                            }
                                        }
                                        
                                    }else
                                        if (jRadioButton2.isSelected()){
                                        if(jTextField3.getText().toString().equalsIgnoreCase("") | jTextField3.getText().toString().equalsIgnoreCase(" ") | jTextField3.getText().toString().equalsIgnoreCase("  ") | jTextField3.getText().toString().equalsIgnoreCase("   ") | jTextField3.getText().toString().equalsIgnoreCase("    ")){
                                            // if(jTextField3.getText().toString().equalsIgnoreCase("") | jTextField3.getText().toString().equalsIgnoreCase(" ").concat("")){
                                            javax.swing.JOptionPane.showMessageDialog(this, "You cannot save without the patient no", "CAUTION MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                        }else{
                                            patientsNo2 = jTextField3.getText();
                                            
                                        }}
                                    java.sql.PreparedStatement updatePatientNoPstmt = connectDB.prepareStatement("UPDATE hp_patient_register SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"'");//
                                    updatePatientNoPstmt.executeUpdate();
                                    
                                    java.sql.PreparedStatement updatePatientNoPstmt2 = connectDB.prepareStatement("UPDATE hp_patient_VISIT SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"'");//
                                    updatePatientNoPstmt2.executeUpdate();
                                    
                                    java.sql.PreparedStatement updatePatientNoPstmt3 = connectDB.prepareStatement("UPDATE CREDIT_ACC_SLIP SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"'");//
                                    updatePatientNoPstmt3.executeUpdate();
                                    
                                    //java.sql.PreparedStatement updatePatientNoPstmt4 = connectDB.prepareStatement("UPDATE ac_ledger SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"' and date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"'");//
                                    //updatePatientNoPstmt4.executeUpdate();
                                    
                                    if(ConsCharge){
                                        java.sql.PreparedStatement updatePatientNoPstmt5 = connectDB.prepareStatement("UPDATE hp_patient_card SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"' and date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"'");//
                                        updatePatientNoPstmt5.executeUpdate();
                                        
                                        java.sql.PreparedStatement updatePatientNoPstmt6 = connectDB.prepareStatement("UPDATE hp_patient_billing SET  patient_no='"+patientsNo2+"' WHERE  patient_no='"+tempPatientNO+"' and trans_date='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate())+"'");//
                                        updatePatientNoPstmt6.executeUpdate();
                                        
                                        if(jCheckBox1.isSelected()){
                                            java.sql.PreparedStatement pstmt24 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                            pstmt24.setObject(1,actNo);
                                            pstmt24.setString(2,mainAcc);
                                            pstmt24.setString(3,patientsNo2);
                                            pstmt24.setString(4,jTextField6.getText()+" "+jTextField21.getText());
                                            pstmt24.setString(5,"");
                                            pstmt24.setString(6,"-");
                                            pstmt24.setString(7,"-");
                                            pstmt24.setString(8,"OP");
                                            pstmt24.setString(9,"");
                                            if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("scheme")){
                                                pstmt24.setString(10,"Scheme");
                                            }else{
                                                pstmt24.setString(10,"Cash");
                                            }
                                            pstmt24.setString(11,"");
                                            pstmt24.setString(12,"");
                                            pstmt24.setString(13,"");
                                            pstmt24.setString(14,activity);
                                            pstmt24.setString(15,"Revenue");
                                            pstmt24.setDouble(16,0.00);
                                            pstmt24.setDouble(17,java.lang.Double.parseDouble(jTextField9.getText()));
                                            pstmt24.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker4.getDate()));
                                            pstmt24.setString(19,transNo);
                                            pstmt24.setBoolean(20,false);
                                            pstmt24.setBoolean(21,false);
                                            pstmt24.setBoolean(22,false);
                                            pstmt24.setString(23,user);
                                            pstmt24.executeUpdate();
                                        }
                                    }
                                    
                                    
                                    javax.swing.JOptionPane.showMessageDialog(this,"Data Saved Successfully. Patient No is "+patientsNo2+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                    jTextField3.setText(patientsNo2);
                                    jTextField171.setText(patientsNo2);
                                    this.jComboBox4.setSelectedItem("-");
                                    
                                    
                                    
                                    jButton202ActionPerformed(evt);
                                    
                                    connectDB.commit();
                                    connectDB.setAutoCommit(true);
                                    docSpecTxt.setText("");
                                    refDocHosTxt.setText("");
                                    otherSourceTxt.setText("");
                                    occupationTxt.setText("");
                                }
                                } catch(java.sql.SQLException sq){
                                    sq.printStackTrace();
                                    try { // Roll back all transactions committed after the Savepoint (labelled - Registration)
                                        //connectDB.rollback(savePointRegistration);
                                        connectDB.rollback();
                                    }catch (java.sql.SQLException sql){
                                        sql.printStackTrace();
                                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    }
                                    System.out.println(sq.getMessage());
                                    javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    
                                }
                                
                            } catch(java.lang.Exception ex) {
                                System.out.println(ex.getMessage());
                                ex.printStackTrace();
                                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR! : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                try {   // Rollback all the transactions after the Savepoint whatever the error is.
                                    //connectDB.rollback(savePointRegistration);
                                    connectDB.rollback();
                                }catch (java.sql.SQLException sql){
                                    sql.printStackTrace();
                                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }
                                
                            }
                                                                                }
                    }
                }
            }
        }
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton301ActionPerformed
    
    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        // Add your handling code here:
    }//GEN-LAST:event_jPanel1ComponentShown
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        
        
    }//GEN-LAST:event_formComponentShown
    
/*    public class ComboTextField extends javax.swing.JTextField implements javax.swing.ComboBoxEditor {
 
        public ComboTextField() {
 
            initComponents();
 
        }
 
        void initComponents() {
 
            oldComboBox6Model = jTextField6.getModel();
 
            // comboTextField = new javax.swing.JTextField();
 
 
            comboTextField.addKeyListener(new java.awt.event.KeyAdapter() {
 
                public void keyTyped(java.awt.event.KeyEvent e) {
 
                    if (e.getID() == java.awt.event.KeyEvent.VK_BACK_SPACE) {
 
                        changeComboBoxModel(comboTextField.getText());
 
                        System.out.println(comboTextField.getText()+" Pressed Key "+e.getKeyText(e.getKeyCode()));
                    }
                }});
 
        }
        public java.awt.Component getEditorComponent() {
 
            return comboTextField;
 
        }
 
        public Object getItem() {
 
            return comboTextField.getText();
 
        }
 
        public void setItem(Object obj) {
 
            comboTextField.setText(jComboBox6.getSelectedItem().toString());
 
        }
 
 
 
        public void changeComboBoxModel(java.lang.String typedLetters) {
 
 
 
            javax.swing.DefaultComboBoxModel newComboBox6Model = new javax.swing.DefaultComboBoxModel();
 
            System.out.println("ComboBox Item No. "+oldComboBox6Model.getSize());
 
/*            if (typedLetters.equals("")) {
 
                jComboBox6.setModel(oldComboBox6Model);
 
            } else {
 
 *
                for (int i = 0; i < oldComboBox6Model.getSize(); i++) {
 
     if (oldComboBox6Model.getElementAt(i).toString().startsWith(typedLetters)) {
 
         newComboBox6Model.addElement(oldComboBox6Model.getElementAt(i));
 
         jComboBox6.setModel(newComboBox6Model);
 
     }
 
 }
 
        }
 
        //      }
    }
 */
    public java.lang.String getCashPoint() {
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
            while (rsetf.next()){
                cashPoint = rsetf.getObject(1).toString();
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        
        return cashPoint;
        
    }
    
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        java.awt.Point point = this.jTextField3.getLocationOnScreen();
        
        jSearchDialog.setSize(400,200);
        
        jSearchDialog.setLocation(point);
        
        jSearchDialog.show();
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NationalityTxt1;
    private javax.swing.JLabel NokEmailTxt;
    private javax.swing.JLabel NokEmailTxt1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker4;
    private com.afrisoftech.lib.DatePicker datePickerYOB;
    private javax.swing.JButton dispose;
    private javax.swing.JButton dispose1;
    private javax.swing.JButton dispose11;
    private javax.swing.JButton dispose111;
    private javax.swing.JButton dispose2;
    private javax.swing.JTextField docSpecTxt;
    private javax.swing.JTextField emailAddTxt;
    private javax.swing.JTextField emailAddTxt1;
    private javax.swing.JLabel idNoLbl;
    private javax.swing.JLabel idNoLbl1;
    private javax.swing.JLabel idNoLbl2;
    private javax.swing.JLabel idNoLbl3;
    private javax.swing.JTextField idNoTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton1111;
    private javax.swing.JButton jButton152;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton202;
    public javax.swing.JButton jButton252;
    private javax.swing.JButton jButton252111;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton301;
    private javax.swing.JButton jButton301111;
    private javax.swing.JButton jButton51;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox1111;
    private javax.swing.JCheckBox jCheckBox1113;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox2111;
    private javax.swing.JCheckBox jCheckBox2113;
    private javax.swing.JCheckBox jCheckBox2114;
    private javax.swing.JCheckBox jCheckBox2115;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JDialog jDialog31;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel3111;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel572;
    private javax.swing.JLabel jLabel5721;
    private javax.swing.JLabel jLabel582;
    private javax.swing.JLabel jLabel5821111;
    private javax.swing.JLabel jLabel582211;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel66111;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel1111;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel121;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel4111;
    private javax.swing.JPanel jPanel4113;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel641;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    public javax.swing.JRadioButton jRadioButton1;
    public javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog111;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JSeparator jSeparator111;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField100;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField14111;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField1611;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField171;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField3111;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField361;
    private javax.swing.JTextField jTextField3611;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField4111;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField5821;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextField99;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField nokResidenceTxt;
    private javax.swing.JTextField nokTelTxt;
    private javax.swing.JTextField occupationTxt;
    private javax.swing.JTextField otherSourceTxt;
    private javax.swing.JLabel passPortNoLbl;
    private javax.swing.JLabel passPortNoLbl1;
    private javax.swing.JTextField refDocHosTxt;
    private javax.swing.JTextField relationTxt;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton11;
    private javax.swing.JButton searchButton13;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton select2;
    // End of variables declaration//GEN-END:variables
    
}
