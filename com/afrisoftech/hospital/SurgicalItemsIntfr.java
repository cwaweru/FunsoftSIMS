/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.hospital;

/**
 *
 * @author  root
 */
public class SurgicalItemsIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public SurgicalItemsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog31 = new javax.swing.JDialog();
        jSearchPanel31 = new javax.swing.JPanel();
        jTextField1121 = new javax.swing.JTextField();
        jSearchScrollPane31 = new javax.swing.JScrollPane();
        jSearchTable31 = new com.afrisoftech.dbadmin.JTable();
        jButton921 = new javax.swing.JButton();

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        this.jTextField7.setVisible(false);
        jComboBox1 = new javax.swing.JComboBox();
        this.jComboBox1.setVisible(false);
        jPanel6 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jComboBox111 = new javax.swing.JComboBox();
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox31 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jCheckBox51 = new javax.swing.JCheckBox();
        jButton11 = new javax.swing.JButton();
        jButton11.setVisible(false);

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField111ActionPerformed(evt);
            }
        });
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton41, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel11.add(jTextField1112, gridBagConstraints);

        jSearchTable11.setShowHorizontalLines(false);
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });

        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        jSearchDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog31.setModal(true);
        jSearchDialog31.setUndecorated(true);
        jSearchPanel31.setLayout(new java.awt.GridBagLayout());

        jSearchPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1121.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1121CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel31.add(jTextField1121, gridBagConstraints);

        jSearchTable31.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable31MouseClicked(evt);
            }
        });

        jSearchScrollPane31.setViewportView(jSearchTable31);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel31.add(jSearchScrollPane31, gridBagConstraints);

        jButton921.setText("Close");
        jButton921.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton921ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel31.add(jButton921, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog31.getContentPane().add(jSearchPanel31, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Surgical Items");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient here"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });

        jLabel9.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel9, gridBagConstraints);

        jLabel1.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField1, gridBagConstraints);

        jLabel2.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jLabel3, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField2, gridBagConstraints);

        jLabel4.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel2.add(jLabel4, gridBagConstraints);

        jTextField4.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField4, gridBagConstraints);

        jTextField7.setEditable(false);
        jTextField7.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField7.setPreferredSize(new java.awt.Dimension(0, 0));
        jTextField7.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField7, gridBagConstraints);

        jComboBox1.setEditable(true);
        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct patient_name from hp_patient_billing where (patient_no ='' and inpatient_no ='') ORDER BY patient_name ASC"));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jComboBox1, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setMinimumSize(new java.awt.Dimension(82, 37));
        jTextField36.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jTextField36, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jPanel6, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Service", "Quantity", "Price", "Total", "Gl Account"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setEditingColumn(jTable1.getSelectedColumn());
        jTable1.setEditingRow(jTable1.getSelectedRow());
        jTable1.setShowHorizontalLines(false);
        jTable1.setSurrendersFocusOnKeystroke(true);
        /*  cmbox = new javax.swing.JComboBox();
        crset21.setCommand("select service_type FROM pb_operating_parameters WHERE main_service = 'Laboratory' order by service_type");
        crset21.setConnectionSource(pConnDB);

        cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset21, "service_type", null, null, null));
        javax.swing.table.TableColumn s1 = this.jTable1.getColumn("Service");
        s1.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });
        */

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 5; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {

                //if (i == 2) {
                    column.setPreferredWidth(150);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jComboBox111.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT store_name from st_stores WHERE  patient_store = 'true' ORDER BY store_name"));
        jComboBox111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel2.add(jComboBox111, gridBagConstraints);

        jTextField5.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField5.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jTextField5, gridBagConstraints);

        jLabel10.setText("Doctor No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel10, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField92.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField92, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = -10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jPanel42, gridBagConstraints);

        jTextField8.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField8, gridBagConstraints);

        jLabel8.setText("Doctor's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton5, gridBagConstraints);

        jButton6.setMnemonic('r');
        jButton6.setText("Remove Row");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton6, gridBagConstraints);

        jLabel53.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel53, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jTextField3, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Out Patient");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jCheckBox1, gridBagConstraints);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("In Patients");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jCheckBox2, gridBagConstraints);

        buttonGroup1.add(jCheckBox3);
        jCheckBox3.setText("Other Patients");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jCheckBox3, gridBagConstraints);

        buttonGroup2.add(jCheckBox4);
        jCheckBox4.setText("Search By name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jCheckBox4, gridBagConstraints);

        buttonGroup2.add(jCheckBox31);
        jCheckBox31.setText("Search No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jCheckBox31, gridBagConstraints);

        jLabel6.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(datePicker1, gridBagConstraints);

        jCheckBox51.setBackground(new java.awt.Color(204, 255, 204));
        jCheckBox51.setText("Confirm Visit");
        jCheckBox51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox51ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel3.add(jCheckBox51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton11.setMnemonic('O');
        jButton11.setText("Ok");
        jButton11.setToolTipText("Click here enter data");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton11, gridBagConstraints);

        setBounds(0, 0, 697, 390);
    }// </editor-fold>//GEN-END:initComponents

    private void jSearchTable31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable31MouseClicked
        jTextField92.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 0).toString());
        jTextField8.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 1).toString());
              this.jSearchDialog31.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable31MouseClicked

    private void jTextField1121CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1121CaretUpdate
      if(jTextField1121.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable31.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField1121.getText()+"%' order by first_name"));
           
              /*  searchRowSet31.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField1121.getText()+"%' order by first_name");
                 jSearchTable31.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet31, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
                    
                }));
               */
                jSearchTable31.setShowHorizontalLines(false);
                jSearchScrollPane31.setViewportView(jSearchTable31);
                
       
               
        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField1121CaretUpdate

    private void jButton921ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton921ActionPerformed
              this.jSearchDialog31.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton921ActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButtonClickedw();        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
      private void searchButtonClickedw() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField92.getLocationOnScreen();
        
        jSearchDialog31.setSize(400,200);
        
        jSearchDialog31.setLocation(point);
        
        jSearchDialog31.show();
       
    }
    private void jComboBox111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox111ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        try {
            java.sql.Statement pst211 = connectDB.createStatement();
            java.sql.ResultSet rs111 = pst211.executeQuery("select cs_code,store_name from st_stores where store_name ilike '%"+jComboBox111.getSelectedItem().toString()+"%'");
            while (rs111.next()){
                jTextField5.setText(rs111.getObject(1).toString());
                //  glType = rs111.getObject(2).toString();
            }
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox111ActionPerformed
    
    private void jCheckBox51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox51ActionPerformed
        javax.swing.JInternalFrame other = new ServiceAccSlipIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_jCheckBox51ActionPerformed
    
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        jSearchDialog11.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog11.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("0.00");
        jLabel7.setText("");
        int i = 0;
        int j = 0;
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        jTextField36.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        jTextField1.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        double limit = 0.00;
        double bal = 0.00;
        double rect = 0.00;
        //  this.jComboBox131.setSelectedItem(null);
        
        
        if(this.jCheckBox1.isSelected()){
            try {
                // if(this.jCheckBox1.isSelected()){
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_patient_register where patient_no ='"+jTextField36.getText()+"'");
                while (rset1.next()){
                    jTextField2.setText(rset1.getObject(1).toString());
                    jTextField4.setText(rset1.getObject(2).toString());
                }
                
                
                java.sql.Statement stmt = connectDB.createStatement();
                
                java.sql.ResultSet rset = stmt.executeQuery("SELECT count(service) FROM hp_patient_billing WHERE patient_no = '"+jTextField36.getText()+"' and revenue_code = '"+jComboBox111.getSelectedItem().toString()+"' AND paid = false");
                
                while (rset.next()) {
                    j = rset.getInt(1);
                }
                if (j > 0){
                    java.sql.Statement stmt11 = connectDB.createStatement();
                    java.sql.ResultSet rset11 = stmt11.executeQuery("SELECT sum(amount)  FROM hp_patient_billing WHERE patient_no = '"+jTextField36.getText()+"' and revenue_code = '"+jComboBox111.getSelectedItem().toString()+"' AND paid = false");
                    while (rset11.next()){
                        jTextField3.setText(rset11.getObject(1).toString());
                        //  jTextField4.setText(rset11.getObject(2).toString());
                    }
                    
                    
                    // }else{
                    
                    
                }
                
                
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
            this.populateTable1(jTextField36.getText());
            
        }else{
            if(jCheckBox2.isSelected()){
                try {
                    
                    
                    java.sql.Statement stmt11 = connectDB.createStatement();
                    java.sql.ResultSet rset11 = stmt11.executeQuery("select iplimit from hp_inpatient_register where patient_no  ='"+jTextField36.getText()+"'");
                    while (rset11.next()){
                        limit = rset11.getDouble(1);
                        
                        //  jTextField71.setText(rset1.getObject(2).toString());
                    }
                    java.sql.Statement stmt111 = connectDB.createStatement();
                    java.sql.ResultSet rset111 = stmt111.executeQuery("select sum(debit) from hp_patient_card where patient_no  ='"+jTextField36.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%')");
                    while (rset111.next()){
                        bal = rset111.getDouble(1);
                        
                        //  jTextField71.setText(rset1.getObject(2).toString());
                    }
                    java.sql.Statement stmt1111 = connectDB.createStatement();
                    java.sql.ResultSet rset1111 = stmt1111.executeQuery("select sum(credit) from hp_patient_card where patient_no  ='"+jTextField36.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is  null)");
                    while (rset1111.next()){
                        rect = rset1111.getDouble(1);
                        
                        //  jTextField71.setText(rset1.getObject(2).toString());
                    }
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    //  System.out.println("Insert not successful");
                }
                if(bal>(limit+rect)){
                    javax.swing.JOptionPane.showMessageDialog(this, "Limit Exceeded","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    this.jButton1.setEnabled(false);
                }else{
                    this.jButton1.setEnabled(true);
                    jTextField1.setText("");
                    jTextField36.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
                    jTextField1.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
                    
                    try {
                        // if(this.jCheckBox1.isSelected()){
                        java.sql.Statement stmt1 = connectDB.createStatement();
                        java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_inpatient_register where patient_no  ='"+jTextField36.getText()+"'");
                        while (rset1.next()){
                            jTextField2.setText(rset1.getObject(1).toString());
                            jTextField4.setText(rset1.getObject(2).toString());
                        }
                        
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        //  System.out.println("Insert not successful");
                    }
                    
                    
                }
            }
        }
        jSearchDialog1.dispose();
        //                       this.populateTable1(this.jComboBox131.getSelectedItem().toString());
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        
        
        if(this.jCheckBox1.isSelected() && this.jCheckBox31.isSelected()){
            
            if(jTextField1111.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
               jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField1111.getText()+"%' and last_visit > current_date - 20 order by second_name"));
              /* searchRowSet1.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField1111.getText()+"%' and last_visit > current_date - 20 order by second_name");
                    
                    //searchRowSet1.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField1111.getText()+"%' and last_visit > current_date - 5 order by second_name");
                    
                    jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
               */
                    jSearchTable1.setShowHorizontalLines(false);
                    jSearchScrollPane1.setViewportView(jSearchTable1);
                    
            
            }
        }else{
            if(this.jCheckBox1.isSelected() && this.jCheckBox4.isSelected()){
                if(jTextField1111.getCaretPosition() < 3){
                    System.out.println("Nothing");
                }else{
                       jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1111.getText()+"%' and last_visit > current_date - 20 order by second_name"));
                /*
                        searchRowSet1.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1111.getText()+"%' and last_visit > current_date - 20 order by second_name");
                        
                        jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                            //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                 */
                        jSearchTable1.setShowHorizontalLines(false);
                        jSearchScrollPane1.setViewportView(jSearchTable1);
                        
                 
                }
            }
        }
        // }else{
        if(this.jCheckBox2.isSelected() && this.jCheckBox31.isSelected()){
            
            // if(this.jCheckBox21.isSelected()){
            //   if( jTextField113.getCaretPosition() > 3){
            
            if(jTextField1111.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
              jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField1111.getText()+"%' order by second_name"));
                      
                  /*  searchRowSet1.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField1111.getText()+"%' order by second_name");
                    
                    jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        //   new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                   */
                    jSearchTable1.setShowHorizontalLines(false);
                    jSearchScrollPane1.setViewportView(jSearchTable1);
 
            }
        }else{
            if(this.jCheckBox2.isSelected() && this.jCheckBox4.isSelected()){
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1111.getText()+"%' order by second_name"));
                  
               /*     searchRowSet1.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1111.getText()+"%' order by second_name");
                    
                    jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                */
                    jSearchTable1.setShowHorizontalLines(false);
                    jSearchScrollPane1.setViewportView(jSearchTable1);
                    
           
            }
        }
        
   
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        this.jSearchDialog1.dispose();           // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton11Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton11Clicked() {
        
        System.out.println("Showing dialog");
        if(jCheckBox1.isSelected()){
            // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
            java.awt.Point point = this.jTextField36.getLocationOnScreen();
            
            jSearchDialog1.setSize(400,200);
            
            jSearchDialog1.setLocation(point);
            jSearchDialog1.show();
        }
        else
            if(jCheckBox2.isSelected()){
                jSearchDialog1.dispose();
                java.awt.Point point = this.jTextField36.getLocationOnScreen();
                
                jSearchDialog1.setSize(400,200);
                
                jSearchDialog1.setLocation(point);
                jSearchDialog1.show();
            }
        
    }
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String billNo = null;
        
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String visitid = null;
        try {
            connectDB.setAutoCommit(false);
            java.sql.Statement ps11w1 = connectDB.createStatement();
            java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select visit_id from hp_admission where patient_no = '"+jTextField36.getText()+"' and discharge = false");
            while (rst11w1.next()){
                
                
                visitid = rst11w1.getObject(1).toString();
            }
            
            if(!(jTextField4.getText().equals("Cash")||jTextField4.getText().equals(""))){
                java.sql.Statement stm1 = connectDB.createStatement();
                java.sql.ResultSet rse1 = stm1.executeQuery("select account_no,description,payer,expiry_date from hp_inpatient_register where patient_no ='"+jTextField36.getText()+"'");
                while (rse1.next())
                    // payMode = rse1.getObject(1).toString();
                    cardNo = rse1.getObject(1).toString();
                scheme = rse1.getObject(2).toString();
                cardName = rse1.getObject(2).toString();
                isurer = rse1.getObject(3).toString();
                expDate = rse1.getObject(4).toString();
                staffNo = rse1.getObject(1).toString();
            }
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            while (rse12.next())
                
                patientAcc = rse12.getObject(1).toString();
            AccDesc = rse12.getObject(2).toString();
            
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next())
                rst.getObject(1).toString();
            
            transNo = rst.getObject(1).toString();
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
            while (rst11.next())
                rst11.getObject(1).toString();
            
            billNo = rst11.getObject(1).toString();
            user = rst11.getObject(2).toString();
            for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getModel().getValueAt(i,0) != null){
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity from pb_activity where code ='"+jTable1.getModel().getValueAt(i,4).toString()+"'");
                    while (rse121.next())
                        
                        glAcc = rse121.getObject(1).toString();
                    
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                    //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                    
                    
                    pstmt.setString(1,jTextField36.getText());
                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                    pstmt.setString(3,jTextField2.getText());
                    pstmt.setString(4,jTextField4.getText());
                    pstmt.setString(5,transNo);
                    pstmt.setString(7,scheme);
                    pstmt.setString(6,cardNo);
                    pstmt.setString(8,cardName);
                    pstmt.setString(9,isurer);
                    
                    pstmt.setString(10,expDate);
                    pstmt.setString(11,"");
                    pstmt.setObject(12,jTable1.getValueAt(i,3).toString());
                    pstmt.setString(13,"00");
                    pstmt.setString(14,datePicker1.getDate().toString());
                    pstmt.setObject(15,patientAcc);
                    
                    pstmt.setString(16,glAcc);
                    pstmt.setObject(17,jTable1.getValueAt(i,1).toString());
                    pstmt.setObject(18,staffNo);
                    pstmt.setBoolean(19,false);
                    pstmt.setString(20,"Billing");
                    pstmt.setBoolean(21,false);
                    pstmt.setString(22,AccDesc);
                    pstmt.setString(23,visitid);
                    pstmt.setString(24,user);
                    pstmt.setString(25,billNo);
                    pstmt.setString(26,"IP");
                    pstmt.setString(27,"'now'");
                    pstmt.setString(28,visitid);
                    
                    
                    pstmt.executeUpdate();
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                    pstmt2.setString(2,glAcc);
                    pstmt2.setString(3,jTextField36.getText());
                    pstmt2.setString(4,jTextField1.getText());
                    pstmt2.setString(5,"");
                    pstmt2.setString(6,cardNo);
                    pstmt2.setString(7,cardName);
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,isurer);
                    pstmt2.setString(10,"");
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                    pstmt2.setString(15,"Revenue");
                    pstmt2.setString(16,"0.00");
                    pstmt2.setObject(17,jTable1.getValueAt(i,3).toString());
                    pstmt2.setString(18,datePicker1.getDate().toString());
                    pstmt2.setString(19,transNo);
                    pstmt2.setString(20,"false");
                    pstmt2.setString(21,"false");
                    pstmt2.setString(22,"false");
                    pstmt2.setString(23,user);
                    pstmt2.executeUpdate();
                    
                }
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
            
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField4.setText("");
            jTextField36.setText("");
            // }else{
            //     javax.swing.JOptionPane.showMessageDialog(this,"Insert NOT Successful","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            // }
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearchDialog.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if(jTextField111.getCaretPosition() < 3){
            System.out.println("Nothing");
        }else{
             jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select product,selling_price as price,gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField111.getText()+"%' AND department  ILIKE '"+jComboBox111.getSelectedItem().toString()+"' order by product"));
            /*       searchRowSet.execute("select product,selling_price as price,gl_code FROM st_stock_prices WHERE product ILIKE '"+jTextField111.getText()+"%' AND department  ILIKE '"+jComboBox111.getSelectedItem().toString()+"' order by product");
                
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("product", "Service", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("price", "Price", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
                }));
             */
                jSearchScrollPane.setViewportView(jSearchTable);
                System.out.println("Cannot sort out");
           
        }// Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable1.getSelectedRow(), 2);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable1.getSelectedRow(), 4);
        
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField111ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        jTextField111.setText("");
        if (jTable1.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked();
        }        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable1.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.show();
    }
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        this.populateTable2(this.jComboBox1.getSelectedItem().toString());
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        javax.swing.JInternalFrame other = new WalkinsIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);
        
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        for (int j = 0; j < this.jSearchTable1.getRowCount(); j++ ) {
            for (int m = 0; m < jSearchTable1.getColumnCount(); m++ ) {
                jSearchTable1.getModel().setValueAt(null,j,m);
            }
        }
        jTextField1.setEditable(true);
        //  jTextField2.setText("");
        jTextField4.setEditable(true);
        
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField4.setText("Cash");
        jTextField36.setText("");
        
        jPanel6.setVisible(false);
        // this.jLabel5.setVisible(false);
        this.jTextField7.setVisible(false);
        this.jLabel9.setVisible(false);
        //        this.jComboBox131.setVisible(false);
        this.jTextField1.setVisible(false);
        this.jComboBox1.setVisible(true);
        this.jButton1.setVisible(true);
        this.jButton11.setVisible(false);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    
    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
        // this.jLabel5.setVisible(false);
        this.jTextField7.setVisible(false);
        
        // Add your handling code here:
    }//GEN-LAST:event_jPanel2ComponentShown
    
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        for (int j = 0; j < this.jSearchTable1.getRowCount(); j++ ) {
            for (int m = 0; m < jSearchTable1.getColumnCount(); m++ ) {
                jSearchTable1.getModel().setValueAt(null,j,m);
            }
        }
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField4.setText("");
        jTextField36.setText("");
        jPanel6.setVisible(true);
        // this.jLabel5.setVisible(true);
        this.jTextField7.setVisible(true);
        this.jLabel9.setVisible(true);
        //       this.jComboBox131.setVisible(true);
        this.jTextField1.setVisible(true);
        this.jComboBox1.setVisible(false);
        this.jButton1.setVisible(true);
        //  this.jButton1.setVisible(false);
        // }catch (java.sql.SQLException sql){}        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        for (int j = 0; j < this.jSearchTable1.getRowCount(); j++ ) {
            for (int m = 0; m < jSearchTable1.getColumnCount(); m++ ) {
                jSearchTable1.getModel().setValueAt(null,j,m);
            }
        }
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField4.setText("");
        jTextField36.setText("");
        jPanel6.setVisible(true);
        //        this.jLabel5.setVisible(false);
        this.jTextField7.setVisible(false);
        this.jLabel9.setVisible(true);
        //        this.jComboBox131.setVisible(true);
        this.jTextField1.setVisible(true);
        this.jComboBox1.setVisible(false);
        
        this.jButton1.setVisible(true);
        this.jButton11.setVisible(false);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
        
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
            
            double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
            
            double resVal = floatCol2 * floatCol3;
            
            
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
            
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                
                if (jTable1.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            this.tableModelTableChanged();
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt){
 /*       java.lang.Object selectedGuaran = cmbox3.getSelectedItem();
        int i = jTable2.getSelectedRow();
  
        if (selectedGuaran != null) {
  
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
  
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
  
  */
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        
        
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField3.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    private void cmbox4ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox4.getSelectedItem();
/*        int i = jTable2.getSelectedRow();
 
        if (selectedGuaran != null) {
 
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
 
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
 */
        
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String billNo = null;
        
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        
        
        //   String billNo = null;
        
        //  String transNo = null;
        ///   String payMode = null;
        //String patientAcc = null;
        //  String cardNo = null;
        //  String AccDesc = null;
        // String scheme = null;
        //String cardName = null;
        // String isurer = null;
        //   String expDate = null;
        //   String staffNo = null;
        String BillNo = null;
        //   String glAcc = null;
        // String BillNo = null;
        String code = null;
        String visitid = null;
        String prescNo = null;
        String glAcc2 = null;
        
        String Stock = null;
        String actCode = null;
        String accountCode = null;
        String userName = null;
        String transNo1 = null;
        String glType = null;
        String glCode = null;
        String units = null;
        String chbox = null;
        try {
            connectDB.setAutoCommit(false);
            
            java.sql.Statement stm124 = connectDB.createStatement();
            java.sql.ResultSet rse124 = stm124.executeQuery("select current_user");
            while (rse124.next())
                
                
                user = rse124.getObject(1).toString();
            //  if(this.jCheckBox1.isSelected()){
            
            //  java.sql.PreparedStatement pstmRemove = connectDB.prepareStatement("DELETE FROM hp_patient_billing WHERE patient_no = '"+jTextField36.getText()+"' AND paid = false AND revenue_code = '"+jComboBox111.getSelectedItem().toString()+"' AND trans_date = date('now')");
            
            ///  pstmRemove.executeUpdate();
            
            
            
            // }else{
            
            //   if (jTable1.getModel().getValueAt(0,3) != null){
            
            
            
            
            //   double presc = java.lang.Double.parseDouble(jTextField8.getText());
            
            
            if (jCheckBox1.isSelected()){
                chbox = "OP";
            }else{
                if (jCheckBox2.isSelected()){
                    chbox = "WI";
                }else{
                    if (jCheckBox3.isSelected()){
                        chbox = "IP";
                    }
                }
            }
            double price = 0.00;
            double qty = 0.00;
            double amount = 0.00;
            
            //    try {
            
            //connectDB.setAutoCommit(false);
            
            java.sql.Statement ps11w1 = connectDB.createStatement();
            java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select visit_id from hp_admission where patient_no = '"+jTextField36.getText()+"' and discharge = false");
            while (rst11w1.next()){
                 
                visitid = rst11w1.getObject(1).toString();
            }
            java.sql.Statement psq = connectDB.createStatement();
            java.sql.ResultSet rstq = psq.executeQuery("select nextval('prescription_no')");
            while (rstq.next())
                rstq.getObject(1).toString();
            
            prescNo = rstq.getObject(1).toString();
            if( this.jCheckBox1.isSelected()||this.jCheckBox2.isSelected()){
                if (!(jTextField4.getText().equals("Cash"))){
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTextField36.getText()+"' UNION ALL select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_patient_register where patient_no ='"+jTextField36.getText()+"'");
                    while (rse1.next())
                        cardNo = rse1.getString(2);
                    scheme = rse1.getString(3);
                    cardName = rse1.getString(4);
                    isurer = rse1.getString(5);
                    expDate = rse1.getString(6);
                    staffNo = rse1.getString(7);
                }
            }
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            while (rse12.next())
                
                patientAcc = rse12.getObject(1).toString();
            AccDesc = rse12.getObject(2).toString();
            //  connectDB.setAutoCommit(false);
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next())
                rst.getObject(1).toString();
            
            transNo = rst.getObject(1).toString();
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
            while (rst11.next())
                rst11.getObject(1).toString();
            
            billNo = rst11.getObject(1).toString();
            user = rst11.getObject(2).toString();
            
           /* java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.ResultSet rse122 = stm122.executeQuery("select code,activity from pb_activity where activity_category ='IP'");
            while (rse122.next())
                
                code = rse122.getObject(1).toString();
            glAcc = rse122.getObject(2).toString();
            
            */
            
            
            java.sql.Statement pst21 = connectDB.createStatement();
            java.sql.ResultSet rs11 = pst21.executeQuery("select code,activity,current_user from pb_activity where activity_category = 'S'");
            while (rs11.next())
                actCode = rs11.getObject(1).toString();
            Stock = rs11.getObject(2).toString();
            userName = rs11.getObject(3).toString();
            
          /* java.sql.Statement pst211 = connectDB.createStatement();
            java.sql.ResultSet rs111 = pst211.executeQuery("select code,activity from pb_activity where activity_category = 'CS' and activity ilike '%"+jComboBox111.getSelectedItem().toString()+"%'");
            while (rs111.next()){
                glCode = rs111.getObject(1).toString();
                glType = rs111.getObject(2).toString();
           
           */
            
            java.sql.Statement pst211 = connectDB.createStatement();
            java.sql.ResultSet rs111 = pst211.executeQuery("select cs_code,store_name from st_stores where  code ilike '%"+jTextField5.getText()+"%'");
            while (rs111.next()){
                glCode = rs111.getObject(1).toString();
                glType = rs111.getObject(2).toString();
            }
            for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getModel().getValueAt(i,0) != null){
                    
                    
                    // java.sql.Statement stm121 = connectDB.createStatement();
                    //  java.sql.ResultSet rse121 = stm121.executeQuery("select units from st_stock_item where description ='"+jTable1.getModel().getValueAt(i,0).toString()+"'");
                    //  while (rse121.next())
                    
                    //    glAcc2 = rse121.getObject(1).toString();
                    
                    java.sql.Statement pstB = connectDB.createStatement();
                    java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units from st_stock_prices where product = '"+jTable1.getValueAt(i,0)+"'");
                    
                    while (rsB.next())
                        price = rsB.getDouble(1);
                    // units = rsB.getString(2);
                    qty = java.lang.Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                    amount = price*qty;
                    java.sql.Statement stm1212 = connectDB.createStatement();
                    java.sql.ResultSet rse1212 = stm1212.executeQuery("select activity from pb_activity where code ='"+jTable1.getModel().getValueAt(i,4).toString()+"'");
                    while (rse1212.next())
                        
                        glAcc = rse1212.getObject(1).toString();
                    
                    
                    java.sql.Statement stm1211 = connectDB.createStatement();
                    java.sql.ResultSet rse1211 = stm1211.executeQuery("select units from st_stock_prices where product ='"+jTable1.getModel().getValueAt(i,0).toString()+"'");
                    while (rse1211.next())
                        
                        units = rse1211.getObject(1).toString();
                    
                    if( this.jCheckBox1.isSelected() || this.jCheckBox3.isSelected()){
                        
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?)");
                        
                        pstmt2.setString(1,jTextField36.getText());
                        pstmt2.setString(10,"");
                        
                        pstmt2.setString(2,jTextField1.getText());
                        pstmt2.setString(3,jTextField4.getText());
                        pstmt2.setString(4,jTextField2.getText());
                        pstmt2.setString(5,jTable1.getValueAt(i,0).toString());
                        pstmt2.setString(6,jTable1.getValueAt(i,1).toString());
                        pstmt2.setString(7,jTable1.getValueAt(i,3).toString());
                        pstmt2.setObject(8,jTable1.getValueAt(i,4).toString());
                        pstmt2.setString(9,datePicker1.getDate().toString());
                        
                        pstmt2.setString(12,"false");
                        pstmt2.setString(11,user);
                        pstmt2.setString(13,jComboBox111.getSelectedItem().toString());
                        pstmt2.executeUpdate();
                        
                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                        pstmt1.setString(1,jTextField36.getText());
                        pstmt1.setString(2,jTextField1.getText());
                        pstmt1.setObject(3,jTable1.getValueAt(i,1).toString());
                        pstmt1.setObject(4,jTable1.getValueAt(i,3).toString());
                        //   pstmt1.setDouble(4,presc);
                        pstmt1.setObject(5,jTable1.getValueAt(i,0).toString());
                        pstmt1.setObject(7,jTable1.getValueAt(i,2).toString());
                        pstmt1.setObject(8,jTable1.getValueAt(i,4).toString());
                        pstmt1.setBoolean(6,true);
                        pstmt1.setString(9,prescNo);
                        pstmt1.setObject(10,"");
                        pstmt1.setString(11,"true");
                        pstmt1.setString(12,units);
                        pstmt1.setString(13,datePicker1.getDate().toString());
                        pstmt1.setObject(14,glAcc);
                        pstmt1.setString(15,"OP");
                        pstmt1.setString(16,jTextField4.getText());
                        pstmt1.setObject(17,"");
                        pstmt1.setObject(18,"0");
                        pstmt1.setString(19,userName);
                        pstmt1.executeUpdate();
                        
                        
                        java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                        pstmt33.setObject(2,jTable1.getValueAt(i,0).toString());
                        pstmt33.setString(12,units);
                        pstmt33.setString(7,jTable1.getValueAt(i,1).toString());
                        pstmt33.setObject(1,"-");
                        pstmt33.setString(3,"0");
                        pstmt33.setObject(4,"0");
                        pstmt33.setString(5,jTable1.getValueAt(i,2).toString());
                        pstmt33.setString(6,jTable1.getValueAt(i,3).toString());
                        // pstmt33.setString(7,"0");
                        pstmt33.setString(10,datePicker1.getDate().toString());
                        pstmt33.setString(8,transNo);
                        pstmt33.setObject(9,"");
                        //pstmt33.setString(11,code);
                        pstmt33.setString(13,glAcc);
                        pstmt33.setString(11,userName);
                        pstmt33.setString(14,"OP");
                        pstmt33.executeUpdate();
                        
                        java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        
                        pstmt21.setString(1,jTextField36.getText());
                        pstmt21.setString(2,jTextField1.getText());
                        pstmt21.setString(4,jTextField4.getText());
                        pstmt21.setString(5,transNo1);
                        //  pstmt2.setString(4,jTextField2.getText());
                        pstmt21.setString(6,jTable1.getValueAt(i,0).toString());
                        pstmt21.setString(7,jTable1.getValueAt(i,1).toString());
                        pstmt21.setString(8,glAcc);
                        pstmt21.setObject(9,jTable1.getValueAt(i,3).toString());
                        // pstmt21.setString(9,"");
                        pstmt21.setString(11,datePicker1.getDate().toString());
                        
                        pstmt21.setString(10,"");
                        pstmt21.setString(3,"OP");
                        pstmt21.setString(12,"0");
                        pstmt21.setString(13,"");
                        pstmt21.setString(14,user);
                        pstmt21.setString(15,datePicker1.getDate().toString());
                        pstmt21.setString(16,"Billing");
                        
                        pstmt21.executeUpdate();
                        
                        double quantity = Double.parseDouble(jTable1.getModel().getValueAt(i, 1).toString());
                        
                        
                        java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_stock_prices SET balance = balance - "+new java.lang.Double(quantity)+", requisition = requisition + "+new java.lang.Double(quantity)+" WHERE product = '"+jTable1.getValueAt(i,0).toString()+"' AND department = '"+jComboBox111.getSelectedItem().toString()+"'");
                        pstmt31.executeUpdate();
                        
                    }else{
                        if( this.jCheckBox2.isSelected()){
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                            //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                            
                            
                            pstmt.setString(1,jTextField36.getText());
                            pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                            pstmt.setString(3,jTextField2.getText());
                            pstmt.setString(4,jTextField4.getText());
                            pstmt.setString(5,transNo);
                            pstmt.setString(7,scheme);
                            pstmt.setString(6,cardNo);
                            pstmt.setString(8,cardName);
                            pstmt.setString(9,isurer);
                            pstmt.setString(10,expDate);
                            pstmt.setObject(11,"");
                            pstmt.setObject(12,jTable1.getValueAt(i,3).toString());
                            pstmt.setString(13,"00");
                            pstmt.setString(14,datePicker1.getDate().toString());
                            pstmt.setObject(15,patientAcc);
                            pstmt.setString(16,glAcc);
                            pstmt.setObject(17,jTable1.getValueAt(i,1).toString());
                            pstmt.setObject(18,staffNo);
                            pstmt.setBoolean(19,false);
                            pstmt.setString(20,"Billing");
                            pstmt.setBoolean(21,false);
                            pstmt.setString(22,AccDesc);
                            pstmt.setString(23,visitid);
                            pstmt.setString(24,user);
                            pstmt.setString(25,BillNo);
                            pstmt.setString(26,"IP");
                            pstmt.setString(27,"'now'");
                            pstmt.setString(28,visitid);
                            
                            pstmt.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt812 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTable1.getValueAt(i,3).toString()+"' where code = '"+patientAcc+"'");
                            pstmt812.executeUpdate();
                            // javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully" +code,"Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.ResultSet rse122 = stm122.executeQuery("select code,activity from pb_activity where code ='"+jTable1.getValueAt(i,4).toString()+"'");
            while (rse122.next())
                
                code = rse122.getObject(1).toString();
            glAcc = rse122.getObject(2).toString();
            
            
                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                            pstmt2.setString(1,jTable1.getValueAt(i,4).toString());
                            pstmt2.setString(2,glAcc);
                            pstmt2.setString(3,jTextField36.getText());
                            pstmt2.setString(4,jTextField1.getText());
                            pstmt2.setString(5,"");
                            pstmt2.setString(6,cardNo);
                            pstmt2.setString(7,cardName);
                            pstmt2.setString(8,"IP");
                            pstmt2.setString(9,isurer);
                            pstmt2.setString(10,jTextField4.getText());
                            pstmt2.setString(11,"");
                            pstmt2.setString(12,"");
                            pstmt2.setString(13,"");
                            pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                            pstmt2.setString(15,"Revenue");
                            pstmt2.setString(16,"0.00");
                            pstmt2.setObject(17,jTable1.getValueAt(i,3).toString());
                            pstmt2.setString(18,datePicker1.getDate().toString());
                            pstmt2.setString(19,transNo);
                            pstmt2.setString(20,"false");
                            pstmt2.setString(21,"false");
                            pstmt2.setString(22,"false");
                            pstmt2.setString(23,user);
                            pstmt2.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable1.getValueAt(i,3).toString()+"' where code = '"+code+"'");
                            pstmt8121.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt33.setObject(2,jTable1.getValueAt(i,0).toString());
                            pstmt33.setString(12,units);
                            pstmt33.setString(7,jTable1.getValueAt(i,1).toString());
                            pstmt33.setObject(1,"");
                            pstmt33.setString(3,"0");
                            pstmt33.setObject(4,"0");
                            pstmt33.setString(5,jTable1.getValueAt(i,2).toString());
                            pstmt33.setString(6,jTable1.getValueAt(i,3).toString());
                            // pstmt33.setString(7,"0");
                            pstmt33.setString(10,datePicker1.getDate().toString());
                            pstmt33.setString(8,transNo);
                            pstmt33.setObject(9,"");
                            //pstmt33.setString(11,code);
                            pstmt33.setString(13,glAcc);
                            pstmt33.setString(11,userName);
                            pstmt33.setString(14,"IP");
                            pstmt33.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt1.setString(1,jTextField36.getText());
                            pstmt1.setString(2,jTextField1.getText());
                            pstmt1.setObject(3,jTable1.getValueAt(i,1).toString());
                            pstmt1.setObject(4,jTable1.getValueAt(i,3).toString());
                            //   pstmt1.setDouble(4,presc);
                            pstmt1.setObject(5,jTable1.getValueAt(i,0).toString());
                            pstmt1.setObject(7,jTable1.getValueAt(i,2).toString());
                            pstmt1.setObject(8,jTable1.getValueAt(i,4).toString());
                            pstmt1.setBoolean(6,true);
                            pstmt1.setString(9,prescNo);
                            pstmt1.setObject(10,"");
                            pstmt1.setString(11,"true");
                            pstmt1.setString(12,units);
                            pstmt1.setString(13,datePicker1.getDate().toString());
                            pstmt1.setObject(14,glAcc);
                            pstmt1.setString(15,"IP");
                            pstmt1.setString(16,jTextField4.getText());
                            pstmt1.setObject(17,"");
                            pstmt1.setObject(18,"0");
                            pstmt1.setString(19,userName);
                            pstmt1.executeUpdate();
                            
                /*    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?)");
                    pstmt1.setString(1,jTextField92.getText());
                    pstmt1.setString(2,jTextField13.getText());
                    pstmt1.setObject(3,jTable13.getValueAt(i,1).toString());
                    pstmt1.setObject(4,jTable13.getValueAt(i,5).toString());
                    pstmt1.setObject(5,jTable13.getValueAt(i,0).toString());
                    pstmt1.setObject(7,jTable13.getValueAt(i,3).toString());
                    pstmt1.setObject(8,jTable13.getValueAt(i,6).toString());
                    pstmt1.setBoolean(6,true);
                    pstmt1.setString(9,prescNo);
                    pstmt1.setObject(10,jComboBox2.getSelectedItem().toString());
                    pstmt1.setString(11,"true");
                    pstmt1.setString(12,glAcc2);
                    pstmt1.executeUpdate();
                 */
                        }
                        java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                        
                        
                        pstmt1a.setString(1,null);
                        pstmt1a.setObject(3,jTable1.getValueAt(i,0));
                        pstmt1a.setString(2,glType);
                        pstmt1a.setString(4,null);
                        pstmt1a.setDouble(5,amount);
                        pstmt1a.setObject(6,"00");
                        pstmt1a.setObject(7,units);
                        pstmt1a.setObject(8,"");
                        pstmt1a.setString(9,null);
                        pstmt1a.setString(10,null);
                        pstmt1a.setString(11,"00");
                        pstmt1a.setString(12,"00");
                        pstmt1a.setString(13,"00");
                        //   if(jTextField13.getText().equals("")){
                        //  javax.swing.JOptionPane.showMessageDialog(this, "Enter patient","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        //}else{
                        pstmt1a.setString(14,jTextField1.getText());
                        //   }
                        
                        pstmt1a.setString(15,userName);
                        
                        pstmt1a.setString(16,"");
                        
                        pstmt1a.setString(17,null);
                        pstmt1a.setString(18,datePicker1.getDate().toString());
                        pstmt1a.setString(19,jComboBox111.getSelectedItem().toString());
                        pstmt1a.setString(20,"Issuing");
                        pstmt1a.setObject(21,"00");
                        pstmt1a.setString(23,actCode);
                        pstmt1a.setObject(22,"00");
                        pstmt1a.setString(24,"");
                        pstmt1a.setString(25,Stock);
                        pstmt1a.setString(26,transNo1);
                        pstmt1a.setObject(27,jTable1.getValueAt(i,1));
                        
                        pstmt1a.setString(28,userName);
                        pstmt1a.executeUpdate();
                        
                        java.sql.PreparedStatement pstmt8123 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+amount+"' where code = '"+actCode+"'");
                        pstmt8123.executeUpdate();
                        //javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully" +glCode,"Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        
                        java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt2a.setObject(1,glCode);
                        pstmt2a.setObject(2,glType);
                        pstmt2a.setString(3,jTextField36.getText());
                        pstmt2a.setString(4,jTextField1.getText());
                        pstmt2a.setString(5,"");
                        pstmt2a.setString(6,"");
                        pstmt2a.setString(7,"");
                        pstmt2a.setString(8,chbox);
                        pstmt2a.setString(9,"");
                        pstmt2a.setString(10,jTextField4.getText());
                        pstmt2a.setString(11,"");
                        pstmt2a.setString(12,"");
                        pstmt2a.setString(13,"");
                        pstmt2a.setString(14,jTable1.getValueAt(i,0).toString());
                        pstmt2a.setString(15,"Issuing");
                        pstmt2a.setDouble(16,amount);
                        pstmt2a.setObject(17,"00");
                        pstmt2a.setString(18,datePicker1.getDate().toString());
                        pstmt2a.setString(19,""+transNo1+"");
                        pstmt2a.setBoolean(20,false);
                        pstmt2a.setBoolean(21,false);
                        pstmt2a.setBoolean(22,false);
                        pstmt2a.setString(23,userName);
                        pstmt2a.executeUpdate();
                        
                        
                        java.sql.PreparedStatement pstmt812 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+amount+"' where code = '"+glCode+"'");
                        pstmt812.executeUpdate();
                        
                        
                        
                        java.sql.PreparedStatement pstmt3 = connectDB.prepareStatement("insert into st_analyse_requisation values( ?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                        pstmt3.setObject(1,jTable1.getValueAt(i,0).toString());
                        pstmt3.setString(2,units);
                        pstmt3.setString(3,jTable1.getValueAt(i,1).toString());
                        pstmt3.setObject(4,"0");
                        pstmt3.setString(5,"0");
                        pstmt3.setObject(6,"0");
                        pstmt3.setString(7,"0");
                        pstmt3.setString(8,datePicker1.getDate().toString());
                        pstmt3.setString(9,transNo);
                        pstmt3.setObject(10,"false");
                        pstmt3.setString(11,code);
                        pstmt3.setString(12,datePicker1.getDate().toString());
                        pstmt3.setString(13,userName);
                        pstmt3.setString(14,"N");
                        pstmt3.executeUpdate();
                        
                        double quantity = Double.parseDouble(jTable1.getModel().getValueAt(i, 1).toString());
                        
                        
                        java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_stock_prices SET balance = balance - "+new java.lang.Double(quantity)+", requisition = requisition + "+new java.lang.Double(quantity)+" WHERE product = '"+jTable1.getValueAt(i,0).toString()+"' AND department = '"+jComboBox111.getSelectedItem().toString()+"'");
                        pstmt31.executeUpdate();
                        
                        
                        // }
                        //}
          /*
             java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into pb_prescription_fee values(?,?,?,?,?,?,?,?)");
            pstmt11.setString(1,"ISP");
            pstmt11.setString(2,chbox);
            pstmt11.setObject(3,prescNo);
            pstmt11.setObject(4,"'now'");
            pstmt11.setObject(5,jTextField9.getText());
            pstmt11.setObject(6,jTextField1.getText());
            pstmt11.setObject(7,jTextField3.getText());
            pstmt11.setString(8,jTextField8.getText());
            pstmt11.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
           */
                        
                        //     this.getContentPane().removeAll();
                        //  this.initComponents();
                        //  jComboBox2.setSelectedItem(null);
                        
                        
                        //     }//else
                    }
                }
            }
            
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
            // }
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField4.setText("");
            jTextField36.setText("");
            // }else{
            //   javax.swing.JOptionPane.showMessageDialog(this,"Insert NOT Successful","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            // }
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    private void populateTable1(java.lang.String patient_no) {
        
        int i = 0;
        int j = 0;
        try {
            if(this.jCheckBox1.isSelected()){
                java.sql.Statement stmt = connectDB.createStatement();
                
                java.sql.ResultSet rset = stmt.executeQuery("SELECT count(service) FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' and revenue_code = '"+jComboBox111.getSelectedItem().toString()+"' AND paid = false");
                
                while (rset.next()) {
                    j = rset.getInt(1);
                }
                if (j > 0){
                    java.sql.Statement stmtTable1 = connectDB.createStatement();
                    
                    java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT service, quantity, amount, gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' and revenue_code = '"+jComboBox111.getSelectedItem().toString()+"' AND paid = false");
                    
                    while (rsetTable1.next()) {
                        
                        System.out.println("Working at table row "+i);
                        jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                        jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                        jTable1.setValueAt(rsetTable1.getObject(3), i, 3);
                        jTable1.setValueAt(rsetTable1.getObject(4), i, 4);
                        //  jTable1.setValueAt(rsetTable1.getObject(5), i, 5);
                        
                        i++;
                        
                        //                i = i + i;
                        //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    }
                }
            }else{
          /*         java.sql.Statement stmt = connectDB.createStatement();
           
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(service) FROM hp_patient_billing WHERE inpatient_no = '"+patient_no1+"' and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
           
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
           
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT service, quantity, amount, gl_code  FROM hp_patient_billing WHERE inpatient_no = '"+patient_no1+"' and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
           
                while (rsetTable1.next()) {
           
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 3);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 4);
                    //  jTable1.setValueAt(rsetTable1.getObject(5), i, 5);
           
                    i++;
           
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
           */
                //}
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        
    }
    
    
    
    
    
    private void populateTable2(java.lang.String patient_no) {
        
        int i = 0;
        int j = 0;
        try {
            if(this.jCheckBox3.isSelected()){
                java.sql.Statement stmt = connectDB.createStatement();
                
                java.sql.ResultSet rset = stmt.executeQuery("SELECT count(service) FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' and revenue_code = '"+jComboBox111.getSelectedItem().toString()+"' AND paid = false");
                
                while (rset.next()) {
                    j = rset.getInt(1);
                }
                if (j > 0){
                    java.sql.Statement stmtTable1 = connectDB.createStatement();
                    
                    java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT service, quantity, amount, gl_code  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' and revenue_code = '"+jComboBox111.getSelectedItem().toString()+"' AND paid = false");
                    
                    while (rsetTable1.next()) {
                        
                        System.out.println("Working at table row "+i);
                        jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                        jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                        jTable1.setValueAt(rsetTable1.getObject(3), i, 3);
                        jTable1.setValueAt(rsetTable1.getObject(4), i, 4);
                        //  jTable1.setValueAt(rsetTable1.getObject(5), i, 5);
                        
                        i++;
                        
                        //                i = i + i;
                        //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    }
                }
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        
    }
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 0) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 0) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JButton jButton921;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox51;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox111;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog31;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel31;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane31;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable31;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField jTextField1121;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton2;
    // End of variables declaration//GEN-END:variables
    
}
