/*
 * countryintfr.java
 *
 * Created on August 13, 2002, 12:15 PM
 */

package com.afrisoftech.hospital;

/**
 *
 * @author  root
 */
public class FinalisingInpatientBillIntfr1 extends javax.swing.JInternalFrame {
    
    /** Creates new form countryintfr */
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    private java.lang.String shift_no = null;
    
    public FinalisingInpatientBillIntfr1(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        //   System.out.println("Cashpoint : "+System.getProperty("cashpoint"));
        
        //        System.out.println("Shift No. : "+getShiftMunber());
        
        //   jTextField14.setText(System.getProperty("cashpoint"));
        
        //   jTextField81.setText(getShiftNumber());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jPanel711 = new javax.swing.JPanel();
        jLabel711 = new javax.swing.JLabel();
        jTextField611 = new javax.swing.JTextField();
        jPanel1111 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1111 = new javax.swing.JButton();
        jButton3111 = new javax.swing.JButton();
        jButton4111 = new javax.swing.JButton();
        jButton5111 = new javax.swing.JButton();
        jSeparator1111 = new javax.swing.JSeparator();
        jButton221 = new javax.swing.JButton();
        jPanel212 = new javax.swing.JPanel();
        jLabel911 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jLabel2122 = new javax.swing.JLabel();
        jLabel3121 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jTextField152 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField3111 = new javax.swing.JTextField();
        jLabel53111 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Finalising InPatient Bills");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        setVisible(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel3, gridBagConstraints);

        jPanel711.setLayout(new java.awt.GridBagLayout());

        jLabel711.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel711.add(jLabel711, gridBagConstraints);

        jTextField611.setEditable(false);
        jTextField611.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField611.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel711.add(jTextField611, gridBagConstraints);

        jPanel1111.setLayout(new java.awt.GridBagLayout());

        jButton1111.setBackground(new java.awt.Color(230, 230, 230));
        jButton1111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1111.setMnemonic('O');
        jButton1111.setText("Ok");
        jButton1111.setToolTipText("Click here enter data");
        jButton1111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton1111, gridBagConstraints);

        jButton3111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3111.setMnemonic('l');
        jButton3111.setText("Clear");
        jButton3111.setToolTipText("Click here to clear textfields");
        jButton3111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton3111, gridBagConstraints);

        jButton4111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4111.setMnemonic('C');
        jButton4111.setText("Close");
        jButton4111.setToolTipText("Click here to close window");
        jButton4111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton4111, gridBagConstraints);

        jButton5111.setMnemonic('h');
        jButton5111.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton5111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1111.add(jSeparator1111, gridBagConstraints);

        jButton221.setMnemonic('p');
        jButton221.setText("Preview");
        jButton221.setToolTipText("Click here to edit data");
        jButton221.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton221ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton221, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel711.add(jPanel1111, gridBagConstraints);

        jPanel212.setLayout(new java.awt.GridBagLayout());

        jPanel212.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Patient here"));
        jLabel911.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel911, gridBagConstraints);

        jLabel112.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel212.add(jLabel112, gridBagConstraints);

        jTextField20.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 10);
        jPanel212.add(jTextField20, gridBagConstraints);

        jLabel2122.setText("Visit No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel2122, gridBagConstraints);

        jLabel3121.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel212.add(jLabel3121, gridBagConstraints);

        jTextField25.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 10);
        jPanel212.add(jTextField25, gridBagConstraints);

        jTextField152.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField152.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        jPanel212.add(jTextField152, gridBagConstraints);

        jTextField16.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel212.add(jTextField16, gridBagConstraints);

        jLabel8.setText("Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel8, gridBagConstraints);

        jTextField3111.setEditable(false);
        jTextField3111.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 35);
        jPanel212.add(jTextField3111, gridBagConstraints);

        jLabel53111.setText("Amt Paid");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel212.add(jLabel53111, gridBagConstraints);

        jTextField17.setEditable(false);
        jTextField17.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 10);
        jPanel212.add(jTextField17, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jTextField9, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel212.add(datePicker1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel212.add(datePicker2, gridBagConstraints);

        jLabel1.setText("Admission Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Discharge Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel212.add(jLabel2, gridBagConstraints);

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Patient No");
        jPanel212.add(jCheckBox1, new java.awt.GridBagConstraints());

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(jCheckBox2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel711.add(jPanel212, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel711, gridBagConstraints);

        setBounds(0, 0, 600, 350);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton221ActionPerformed
        String receiptNo1 = null;
        try {
            connectDB.setAutoCommit(false);
            
           /* java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity,current_user from pb_activity where activity_category ='PR'");
            while (rse12.next())
            
                patientAcc = rse12.getObject(1).toString();
            AccDesc = rse12.getObject(2).toString();
            user = rse12.getObject(3).toString();
            
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next())
                rst.getObject(1).toString();
            
            transNo = rst.getObject(1).toString();
            //      if (!(jComboBox11.getSelectedItem().toString().equalsIgnoreCase("Pharmacy"))){
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq')");
            while (rst11.next())
                rst11.getObject(1).toString();
            
            billNo = rst11.getObject(1).toString();
            
            System.out.println("Bill No "+billNo);
            
            for (int i = 0; i < jTable11.getRowCount(); i++){
                if (jTable11.getModel().getValueAt(i,0) != null){
                    System.out.println("Bill No 2 "+billNo);
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity,code from pb_activity where code ='"+jTable11.getModel().getValueAt(i,4).toString()+"'");
                    while (rse121.next()){
            
                        glAcc = rse121.getObject(1).toString();
                        //    desc = rse121.getObject(2).toString();
            
                        java.sql.PreparedStatement pstmt1c = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                        System.out.println("g1acc No 3"+billNo);
                        pstmt1c.setString(1,jTextField9.getText());
                        pstmt1c.setObject(2,jTable11.getValueAt(i,0).toString());
                        pstmt1c.setString(3,jTextField211.getText());
                        pstmt1c.setString(4,jComboBox4.getSelectedItem().toString());
                        pstmt1c.setString(5,transNo);
                        pstmt1c.setString(7,"");
                        pstmt1c.setString(6,jTextField21.getText());
                        pstmt1c.setString(8,jTextField52.getText());
                        pstmt1c.setString(9,jTextField41.getText());
                        if (jTextField511.getText().equals("")){
                            pstmt1c.setString(10,null);
                        }else{
                            pstmt1c.setString(10,jTextField511.getText());
                        }
                        pstmt1c.setString(11,"");
                        pstmt1c.setObject(12,jTable11.getValueAt(i,3).toString());
                        pstmt1c.setString(13,"00");
                        pstmt1c.setString(14,datePicker11.getDate().toString());
                        System.out.println("Time now " +datenowSql.toString());
                        pstmt1c.setObject(15,patientAcc);
                        pstmt1c.setString(16,glAcc);
                        pstmt1c.setObject(17,jTable11.getValueAt(i,1).toString());
                        pstmt1c.setObject(18,staffNo);
                        pstmt1c.setBoolean(19,false);
                        pstmt1c.setString(20,"Billing");
                        pstmt1c.setBoolean(21,false);
                        pstmt1c.setString(22,AccDesc);
                        pstmt1c.setString(23,billNo);
                        pstmt1c.setString(24,user);
                        pstmt1c.setString(25,jTextField14.getText());
                        pstmt1c.executeUpdate();
            
                        System.out.println("Bill No 4"+billNo);
                        java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt212.setObject(1,jTable11.getValueAt(i,4).toString());
                        pstmt212.setString(2,glAcc);
                        pstmt212.setString(3,jTextField9.getText());
                        if(jTextField10.getText().equals("")){
                            pstmt212.setString(4,jTextField111.getText());
                        }else{
                            pstmt212.setString(4,jTextField10.getText());
                        }
                        //    pstmt212.setString(4,jTextField11.getText());
                        pstmt212.setString(5,"");
                        pstmt212.setString(6,"");
                        pstmt212.setString(7,"");
                        pstmt212.setString(8,"");
                        pstmt212.setString(9,"");
                        pstmt212.setString(10,"");
                        pstmt212.setString(11,"");
                        pstmt212.setString(12,"");
                        pstmt212.setString(13,"");
                        pstmt212.setString(14,jTable11.getValueAt(i,0).toString());
                        pstmt212.setString(15,"Revenue");
                        pstmt212.setString(16,"0.00");
                        pstmt212.setObject(17,jTable11.getValueAt(i,3).toString());
                        pstmt212.setString(18,datePicker11.getDate().toString());
                        pstmt212.setString(19,transNo);
                        pstmt212.setString(20,"false");
                        pstmt212.setString(21,"false");
                        pstmt212.setString(22,"false");
                        pstmt212.setString(23,user);
                        pstmt212.setString(24,jTextField14.getText());
                        pstmt212.setString(25,jTextField81.getText());
                        pstmt212.executeUpdate();
                        System.out.println("Bill No 5"+billNo);
                    }
                }
            }
            
            
            */
            
            // java.sql.Statement ps1 = connectDB.createStatement();
            // java.sql.ResultSet rst1 = ps1.executeQuery("select currval('receipt_no_seq')");
            // while (rst1.next())
            //     receiptNo1 = rst1.getObject(1).toString();
            /*
            java.sql.Statement pss = connectDB.createStatement();
            java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
            while (rss.next())
                transNo1 = rss.getObject(1).toString();
             
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.ResultSet rse122 = stm122.executeQuery("select payment_mode from pb_paymentmodes where gl_account ='"+jTextField8.getText()+"'");
            while (rse122.next())
             
                name = rse122.getObject(1).toString();
             
            for (int k = 0; k < jTable11.getRowCount(); k++){
                if (jTable11.getModel().getValueAt(k,0) != null){
                    java.sql.Statement pss1 = connectDB.createStatement();
                    java.sql.ResultSet rsts = pss1.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                    while (rsts.next())
                        actCode1 = rsts.getObject(1).toString();
                    actNames1 = rsts.getObject(2).toString();
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity,code from pb_activity where code ='"+jTable11.getModel().getValueAt(k,4).toString()+"'");
                    while (rse121.next())
             
                        glAcc1 = rse121.getObject(1).toString();
                    accDesc1 = rse121.getObject(2).toString();
             
                    java.sql.Statement stm1211 = connectDB.createStatement();
                    java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                    while (rse1211.next())
                        rname = rse1211.getObject(1).toString();
                    rcode = rse1211.getObject(2).toString();
             
             
                    System.out.println(actNames1);
                    java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                    pstmtx.setString(1,jTextField9.getText());
                    pstmtx.setObject(2,jTable11.getValueAt(k,0).toString());
                    pstmtx.setString(3,jTextField211.getText());
                    pstmtx.setString(4,jComboBox4.getSelectedItem().toString());
                    pstmtx.setString(5,transNo1);
                    pstmtx.setString(7,"");
                    pstmtx.setString(6,jTextField21.getText());
                    pstmtx.setString(8,jTextField52.getText());
                    pstmtx.setString(9,jTextField41.getText());
                    if (jTextField511.getText().equals("")){
                        pstmtx.setString(10,null);
                    }else{
                        pstmtx.setString(10,jTextField511.getText());
                    }
                    //  pstmtx.setString(10,jTextField511.getText());
                    pstmtx.setString(11,"");
                    pstmtx.setObject(13,jTable11.getValueAt(k,3).toString());
                    pstmtx.setString(12,"00");
                    pstmtx.setString(14,datePicker11.getDate().toString());
                    pstmtx.setObject(15,actCode1);
                    pstmtx.setObject(16,glAcc1);
                    pstmtx.setObject(17,jTable11.getValueAt(k,1).toString());
                    pstmtx.setObject(18,"");
                    pstmtx.setString(19,"false");
                    pstmtx.setString(20,"Receipts");
                    pstmtx.setString(21,"false");
                    pstmtx.setString(22,actNames1);
                    pstmtx.setString(23,"");
                    pstmtx.setString(24,user);
                    pstmtx.setString(25,jTextField14.getText());
                    pstmtx.executeUpdate();
             
             
                    java.sql.PreparedStatement pstmt25 = connectDB.prepareStatement("insert into ac_cash_collection values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                    pstmt25.setObject(1,jTable11.getValueAt(k,4).toString());
                    pstmt25.setObject(2,glAcc1);
                    pstmt25.setString(3,jTextField9.getText());
                    pstmt25.setString(4,jTextField111.getText());
                    pstmt25.setString(5,jComboBox4.getSelectedItem().toString());
                    pstmt25.setString(6,"");
                    pstmt25.setString(7,"");
                    pstmt25.setString(8,jTextField4.getText());
                    pstmt25.setString(9,jTextField5.getText());
                    pstmt25.setString(10,rcode);
                    pstmt25.setString(11,jTextField2.getText());
                    pstmt25.setString(12,receiptNo1);
                    pstmt25.setString(13,"");
                    if(jTextField10.getText().equals("")){
                        pstmt25.setString(14,jTextField111.getText());
                    }else{
                        pstmt25.setString(14,jTextField10.getText());
                    }
                    pstmt25.setString(15,"Receipts");
                    pstmt25.setObject(16,jTable11.getValueAt(k,3).toString());
                    pstmt25.setString(17,"0.00");
                    pstmt25.setString(18,datePicker11.getDate().toString());
                    pstmt25.setString(19,""+transNo1+"");
                    pstmt25.setString(20,"false");
                    pstmt25.setString(21,"false");
                    pstmt25.setString(22,"false");
                    pstmt25.setString(23,user);
                    pstmt25.setString(24,jTextField14.getText());
                    pstmt25.setString(25,jTextField81.getText());
                    pstmt25.setString(26,null);
                    pstmt25.setObject(27,jTable11.getValueAt(k,1).toString());
                    pstmt25.executeUpdate();
             
                    for (int s = 0; s < jTable11.getRowCount(); s++){
                        if (jTable11.getModel().getValueAt(s,0) == "Consultancy Fee"){
                            this.jDialog31.setVisible(true);
                        }
                    }
             
             
                }
            }
            java.sql.PreparedStatement pstmt41 = connectDB.prepareStatement("UPDATE hp_pharmacy SET paid ='true' WHERE patient_no = '"+jTextField9.getText()+"'");
            pstmt41.executeUpdate();
            java.sql.PreparedStatement pstmt411 = connectDB.prepareStatement("UPDATE hp_patient_billing SET paid ='true' WHERE patient_no = '"+jTextField9.getText()+"'");
            pstmt411.executeUpdate();
             
            connectDB.commit();
            connectDB.setAutoCommit(true);
             
             */
            
            // jTextField11.setText("");
            //    jTextField21.setText("");
            //    jTextField31.setText("0.00");
          /*
            for (int t = 0; t < jTable2.getRowCount(); t++ ) {
                for (int r = 0; r < jTable2.getColumnCount(); r++ ) {
                    jTable2.getModel().setValueAt(null,t,r);
                }
            }
           */
            
            // InPatientsReceiptsPdf policy = new InPatientsReceiptsPdf();
            //     policy.InPatientsReceiptsPdf(connectDB, jTextField9.getText(),jTextField20.getText(),jTextField17.getText(),receiptNo1,this.jComboBox411.getSelectedItem().toString(),jTextField221.getText(),this.jTextField1.getText());
            
           /*
            for (int s = 0; s < jTable11.getRowCount(); s++ ) {
                for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                    jTable11.getModel().setValueAt(null,s,r);
                }
            }
            */
            
            // jLabel7.setForeground(java.awt.Color.blue);
            //jLabel7.setText("Insert successful");
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }            // Add your handling code here:
    }//GEN-LAST:event_jButton221ActionPerformed
    
    private void jButton4111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4111ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton4111ActionPerformed
    
    private void jButton3111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3111ActionPerformed
        jTextField20.setText("");
        jTextField16.setText("");
        jTextField25.setText("");
        jTextField9.setText("");
        jTextField17.setText("");
        jTextField3111.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3111ActionPerformed
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        this.jButton1111.setEnabled(true);
        jTextField20.setText("");
        jTextField16.setText("");
        jTextField25.setText("");
        jTextField9.setText("");
        jTextField17.setText("");
        jTextField3111.setText("");
        int j = 0;
        
        jTextField20.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        jTextField9.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        jTextField16.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2).toString());
        
        java.text.DateFormat df = java.text.DateFormat.getDateInstance();
        
        java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
        
        sdf.applyPattern("yyyy-MM-dd");
        
        try {
            datePicker1.setDate(sdf.parse(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 3).toString()));
            datePicker2.setDate(sdf.parse(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 4).toString()));
        } catch (java.text.ParseException pe) {
            javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
        }
        
        try {
            
            java.sql.Statement stmt111 = connectDB.createStatement();
            java.sql.ResultSet rsetTable11 = stmt111.executeQuery("SELECT count(patient_no) FROM hp_patient_card WHERE patient_no = '"+jTextField9.getText()+"' and invoice_no not like 'I%' AND visit_id = '"+jTextField16.getText()+"'");
            
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select patient_category,payment_mode from hp_patient_card where patient_no  ='"+jTextField9.getText()+"' order by date desc limit 1");
                while (rset1.next()){
                    //    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField25.setText(rset1.getObject(1).toString());
                }
                
                java.sql.Statement stmt11 = connectDB.createStatement();
                java.sql.ResultSet rset11 = stmt11.executeQuery("select sum(debit-credit) from hp_patient_card where patient_no  ='"+jTextField9.getText()+"' AND visit_id = '"+jTextField16.getText()+"' AND (invoice_no NOT LIKE 'I%' OR invoice_no NOT LIKE 'O%')");
                while (rset11.next()){
                    //    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField3111.setText(rset11.getObject(1).toString());
                }
                
                
            }else{
                javax.swing.JOptionPane.showMessageDialog(this,"Bill Already Finalised !!! ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
            //}else{
            //  jTextField3111.setText("0.00");
            //}
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        //   jButton301.setEnabled(true);
        
        jSearchDialog.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        if(this.jCheckBox2.isSelected()){
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_name as name,patient_no,visit_id,date_admitted::date as date_admitted,discharge_date::date AS date_discharged from hp_admission where patient_name ILIKE '"+jTextField11.getText()+"%' AND mode_of_payment != 'Scheme'  order by patient_name,date_admitted"));
            
          /*  try {
           
                searchRowSet.execute("SELECT patient_name as name,patient_no,visit_id,date_admitted::date as date_admitted,discharge_date::date AS date_discharged from hp_admission where patient_name ILIKE '"+jTextField11.getText()+"%' AND mode_of_payment != 'Scheme'  order by patient_name,date_admitted");
           
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("visit_id", "Visit ID", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("date_admitted", "Date Admitted", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("date_discharged", "Date Discharged", false)
                }));
           */
            jSearchTable.setShowHorizontalLines(false);
            jSearchScrollPane.setViewportView(jSearchTable);
            
            
            
        }else{
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_name as name,patient_no,visit_id,date_admitted::date as date_admitted,discharge_date::date AS date_discharged from hp_admission where patient_no ILIKE '"+jTextField11.getText()+"%' AND mode_of_payment != 'Scheme' order by patient_no,date_admitted"));
            
            
              /*  searchRowSet.execute("SELECT patient_name as name,patient_no,visit_id,date_admitted::date as date_admitted,discharge_date::date AS date_discharged from hp_admission where patient_no ILIKE '"+jTextField11.getText()+"%' AND mode_of_payment != 'Scheme' order by patient_no,date_admitted");
               
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("visit_id", "Visit ID", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("date_admitted", "Date Admitted", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("date_discharged", "Date Discharged", false)
                }));
               */
            jSearchTable.setShowHorizontalLines(false);
            jSearchScrollPane.setViewportView(jSearchTable);
            
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();
        
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog.setSize(400,200);
        
        jSearchDialog.setLocation(point);
        
        jSearchDialog.show();
        
        
        
    }
    private void jButton1111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1111ActionPerformed
        double bill = java.lang.Double.parseDouble(jTextField3111.getText());
        //    try{
        // String userName = null;
        String voucherNo = null;
        //    String transNo = null;
        String Stock = null;
        String invoiceNo = null;
        String accountCode = null;
        String TransNo = null;
        String glType = null;
        try {
            connectDB.setAutoCommit(false);
            
            
            //   if(this.jTextField3111.getText().equalsIgnoreCase("0.00")){
            if (bill <= 0){
                
                java.sql.Statement pss1 = connectDB.createStatement();
                java.sql.ResultSet rss1 = pss1.executeQuery("select 'I'||(nextval('ipinvoice_no_seq'))");
                while (rss1.next()){
                    invoiceNo = rss1.getObject(1).toString();
                }
                
                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE hp_patient_card SET paid = true,collected = true,invoice_no = '"+invoiceNo+"',ip_no = 'IP' where patient_no = '"+this.jTextField9.getText()+"' AND visit_id = '"+jTextField16.getText()+"' AND invoice_no NOT ILIKE 'I%'");
                pstmt1.executeUpdate();
                
                java.sql.PreparedStatement pstmt12 = connectDB.prepareStatement("UPDATE hp_admission SET invoice_no = '"+invoiceNo+"',balance = '"+this.jTextField3111.getText()+"' where patient_no = '"+this.jTextField9.getText()+"' AND visit_id = '"+jTextField16.getText()+"'");
                pstmt12.executeUpdate();
                
                java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("UPDATE ac_doctors_ledger SET paid = true,pat_inv = '"+invoiceNo+"' where patient_no = '"+this.jTextField9.getText()+"' and input_date between '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"'");
                pstmt11.executeUpdate();
                
                this.jButton1111.setEnabled(false);
                
                javax.swing.JOptionPane.showMessageDialog(this,"Data Inserted Successfully \n  Inv. No. is "+invoiceNo+" ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }else{
                
                
                javax.swing.JOptionPane.showMessageDialog(this,"Outstanding Bill of \n   "+jTextField3111.getText()+" Cannot finalize as Cash invoice?","Confirmation Message!",javax.swing.JOptionPane.WARNING_MESSAGE);
      /*          java.sql.Statement pss1 = connectDB.createStatement();
       
       
                String receiptNo = null;
                String actCode = null;
                String glCode = null;
                String DischDate = null;
                String glCode1 = null;
                String bankAcc1 = null;
                String transNo = null;
                String payMode = null;
                String patCat = null;
                String patientAcc = null;
                String cardNo = null;
                String scheme = null;
                String cardName = null;
                String isurer = null;
                String expDate = null;
                String staffNo = null;
                String actNames = null;
                String user = null;
                String actNames1 = null;
                String actCode1 = null;
                java.sql.Statement stm1 = connectDB.createStatement();
       
       
                java.sql.Statement stm11 = connectDB.createStatement();
       
       
                java.sql.Statement pss12 = connectDB.createStatement();
                java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rsts11.next())
                    actCode = rsts11.getObject(1).toString();
                actNames = rsts11.getObject(2).toString();
       
                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
                while (rsts1.next())
                    actCode1 = rsts1.getObject(1).toString();
                actNames1 = rsts1.getObject(2).toString();
                user = rsts1.getObject(3).toString();
       
                java.sql.Statement pss = connectDB.createStatement();
                java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                while (rss.next())
                    transNo = rss.getObject(1).toString();
       
                   java.sql.ResultSet rss1 = pss1.executeQuery("select 'I'||(nextval('pinvoice_no_seq'))");
                while (rss1.next())
                    invoiceNo = rss1.getObject(1).toString();
       
       
              java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("UPDATE hp_patient_card SET paid = true,collected = true,invoice_no = '"+invoiceNo+"',ip_no = 'IP' where patient_no = '"+this.jTextField9.getText()+"'");
                pstmt11.executeUpdate();
       
                java.sql.Statement pssq = connectDB.createStatement();
                java.sql.PreparedStatement pstmtA = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
       
                pstmtA.setString(1,jTextField9.getText());
                pstmtA.setObject(2,"Invoice");
                pstmtA.setString(3,jTextField25.getText());
                pstmtA.setString(4,"Cash");
                pstmtA.setString(5,transNo);
                pstmtA.setString(7,jTextField20.getText());
                pstmtA.setString(6,"");
                pstmtA.setString(8,"");
                pstmtA.setString(9,jTextField20.getText());
                pstmtA.setString(10,null);
                pstmtA.setString(11,"");
                pstmtA.setObject(13,jTextField3111.getText());
                pstmtA.setString(12,"00");
                pstmtA.setString(14,datePicker2.getDate().toString());
                pstmtA.setObject(15,actCode);
                pstmtA.setString(16,"");
                pstmtA.setObject(17,"1");
                pstmtA.setObject(18,jTextField9.getText());
                pstmtA.setString(19,"true");
                pstmtA.setString(20,"Receipts");
                pstmtA.setString(21,"true");
                pstmtA.setString(22,actNames);
                pstmtA.setString(23,invoiceNo);
                pstmtA.setString(24,user);
                pstmtA.setString(25,"IP");
                pstmtA.executeUpdate();
       
                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_debtors values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                pstmt2.setObject(1,actCode1);
                pstmt2.setString(4,"INDIVIDUAL");
                pstmt2.setObject(3,jTextField20.getText());
                pstmt2.setString(2,jTextField9.getText());
                pstmt2.setString(5,jTextField20.getText());
                pstmt2.setString(6,"Cash");
                pstmt2.setString(7,"I");
                pstmt2.setString(8,"");
                pstmt2.setString(9,"");
                pstmt2.setString(10,jTextField9.getText());
                pstmt2.setString(11,transNo);
                pstmt2.setString(12,"Raise Invoice");
                pstmt2.setString(13,jTextField3111.getText());
                pstmt2.setObject(14,"00");
                pstmt2.setString(15,datePicker2.getDate().toString());
                pstmt2.setObject(16,invoiceNo);
                pstmt2.setString(17,actNames1);
                pstmt2.setBoolean(18,true);
                pstmt2.setBoolean(19,false);
                pstmt2.setString(20,user);
                pstmt2.setString(21,"");
                pstmt2.setString(22,jTextField3111.getText());
                pstmt2.setBoolean(23,false);
                pstmt2.executeUpdate();
       
                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE hp_patient_card SET paid = true,collected = true,invoice_no = '"+invoiceNo+"',ip_no = 'IP' where patient_no = '"+this.jTextField9.getText()+"'");
                pstmt1.executeUpdate();
       
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_schemes values( ?, upper(?), ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                pstmt.setString(1,"INDIVIDUAL");
                pstmt.setString(2,jTextField20.getText());
                pstmt.setString(3,"KENYA");
                pstmt.setString(4,"");
                pstmt.setString(5,"");
                pstmt.setString(6,"");
                pstmt.setString(7,"");
                pstmt.setString(8,"");
                pstmt.setString(9,"");
                pstmt.setString(10,null);
                pstmt.setString(11,"");
                pstmt.setString(12,"Both");
                pstmt.setString(13,"");
                pstmt.setString(14,jTextField9.getText());
                pstmt.setString(15,"");
                pstmt.setString(16,"");
                pstmt.setString(17,"");
                pstmt.setString(18,"");
                pstmt.setString(19,"");
                pstmt.setString(20,"");
                pstmt.setString(21,"");
                pstmt.setString(22,"");
                pstmt.setString(23,"");
                pstmt.setString(24,"00");
                pstmt.setString(25,"{Nothing}");
                pstmt.setString(26,"");
                pstmt.setString(27,"");
                pstmt.setString(28,"");
                pstmt.setString(29,datePicker2.getDate().toString());
                pstmt.setString(30,"");
                pstmt.setString(31,"");
                pstmt.setString(32,datePicker2.getDate().toString());
                pstmt.setBoolean(33,false);
                pstmt.setBoolean(34,false);
                pstmt.executeUpdate();
                  java.sql.PreparedStatement pstmt111 = connectDB.prepareStatement("UPDATE hp_patient_card SET paid = true,collected = true,invoice_no = '"+invoiceNo+"',ip_no = 'IP' where patient_no = '"+this.jTextField9.getText()+"'");
                pstmt111.executeUpdate();
       
       
                javax.swing.JOptionPane.showMessageDialog(this,"Data Inserted Successfully \n  Inv. No. is "+invoiceNo+" ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
       */
            }
            this.jButton1111.setEnabled(false);
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        
    /*     } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
     
     
        }
     */
        // Add your handling code here:
    }//GEN-LAST:event_jButton1111ActionPerformed
    
/*    public java.lang.String getShiftNumber() {
 
        try {
 
            java.sql.Statement stmt = connectDB.createStatement();
 
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
 
            while (rset.next()) {
 
                shift_no = rset.getString(1);
 
            }
 
        } catch(java.sql.SQLException sqlExec) {
 
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
 
        }
 
        return shift_no;
 
    }
 */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton jButton1111;
    private javax.swing.JButton jButton221;
    private javax.swing.JButton jButton3111;
    public javax.swing.JButton jButton4111;
    private javax.swing.JButton jButton5111;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2122;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel3121;
    private javax.swing.JLabel jLabel53111;
    private javax.swing.JLabel jLabel711;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel911;
    private javax.swing.JPanel jPanel1111;
    private javax.swing.JPanel jPanel212;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel711;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator1111;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField152;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField3111;
    private javax.swing.JTextField jTextField611;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
    
}
