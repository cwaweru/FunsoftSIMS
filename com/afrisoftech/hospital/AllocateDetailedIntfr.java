/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.hospital;

/**
 *
 * @author  root
 */
public class AllocateDetailedIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    javax.swing.table.TableModel tableModel = null;
    
    // javax.swing.table.TableModel tableModel1 = null;
    boolean controlFlag = true;
    
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public AllocateDetailedIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton51 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton511 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jPanel221 = new javax.swing.JPanel();
        jTextField361 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton511.setText("Dispose");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Detailed Allocation");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('O');
        jButton1.setText("Allocate");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Inv Date", "Invoice No.", "Patient no", "Inv Amt", "Amt To Alloc", "Allocate", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 255));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel2.add(jPanel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        jButton6.setText("Cancel All");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton6, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.blue, java.awt.Color.magenta, null, null));
        jLabel1.setText("Scheme");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jPanel22.setLayout(new java.awt.GridBagLayout());

        jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField36.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel22.add(jTextField36, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel22.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel22, gridBagConstraints);

        jLabel5.setText("Acc No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        jTextField4.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = -20;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker2, gridBagConstraints);

        jCheckBox1.setText("Confirm");
        jCheckBox1.setToolTipText("Click To View Invoices");
        jCheckBox1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jCheckBox1, gridBagConstraints);

        jLabel8.setText("Period From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel9.setText("Period To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Receipt No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel3.add(jLabel6, gridBagConstraints);

        jLabel4.setText("Cheque No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel3.add(jLabel4, gridBagConstraints);

        jTextField3.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField3, gridBagConstraints);

        jLabel10.setText("Acc No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel3.add(jLabel10, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jTextField5, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText(".00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jTextField2, gridBagConstraints);

        jPanel221.setLayout(new java.awt.GridBagLayout());

        jPanel221.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField361.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel221.add(jTextField361, gridBagConstraints);

        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel221.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel221, gridBagConstraints);

        jLabel13.setText("Original Amt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel3.add(jLabel13, gridBagConstraints);

        jLabel14.setText("Allocated Amt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel3.add(jLabel14, gridBagConstraints);

        jTextField8.setEditable(false);
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField8.setText(".00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jTextField8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabel12.setText("Allocatable Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        getContentPane().add(jLabel12, gridBagConstraints);

        jTextField7.setEditable(false);
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField7.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTextField7, gridBagConstraints);

        setBounds(0, 0, 697, 428);
    }// </editor-fold>//GEN-END:initComponents

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton1Clicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
     private void searchButton1Clicked() {
        
        System.out.println("Showing dialog");
        
        java.awt.Point point = this.jTextField361.getLocationOnScreen();
        
        jSearchDialog1.setSize(400,200);
        
        jSearchDialog1.setLocation(point);
        
        jSearchDialog1.show();
        
    }
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
    /* if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 5).toString()) == java.lang.Boolean.TRUE) {
               if(this.jTextField7.getText().equalsIgnoreCase("0.0")){
                    
                    javax.swing.JOptionPane.showMessageDialog(this,"Amount to allocate has been EXHAUSTED !","Information Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    
                }else{
                    if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 5) != null) {
                        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) != null){
                            this.tableModelTableChanged1();
                        }
                    }
                }
            
            }else{
                if (jTable1.getValueAt(jTable1.getSelectedRow(), 5) != null) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), 4) != null){
                        this.tableModelTableChanged1();
                    }
                }
            }
     */
            this.tableModelTableChanged();
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
     public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        double zeros = 0.00;
     //   double resFloat = java.lang.Double.parseDouble(jTextField2.getText());;
        
        double resFloat1 = java.lang.Double.parseDouble(jTextField7.getText());;
           double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
           // double resFloat = 0.00;
            if (jTable1.getModel().getValueAt(i, 4) != null) {
                
                //    if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat1 - Double.parseDouble(jTable1.getModel().getValueAt(i, 4).toString());
                
             /*  if (resFloat > 0){
                    jTextField2.setText(java.lang.String.valueOf(resFloat));
                } else
                    if (resFloat < 0){
                        javax.swing.JOptionPane.showMessageDialog(this,"You cannot allocate amount higher than the Allocatable Balance","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        jTable1.setValueAt(new java.lang.Double(0), jTable1.getSelectedRow(), 4);
                    }
              */
            }
        }
      //   jTextField7.setText(java.lang.String.valueOf(resFloat));
        if (resFloat1 > 0){
            jTextField7.setText(java.lang.String.valueOf(resFloat));
        } else
            if (resFloat1 < 0){
                javax.swing.JOptionPane.showMessageDialog(this,"You cannot allocate amount higher than the Allocatable Balance","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTable1.setValueAt(new java.lang.Double(0), jTable1.getSelectedRow(), 4);
            }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        jSearchDialog1.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
 jTextField3.setText("00");
        jTextField7.setText("0.00");
        jTextField2.setText("0.00");
        jTextField361.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
       // jTextField7.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
         // jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
   
        jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        jSearchDialog1.dispose();
        
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select db.cheque_no from ac_debtors db where db.account_no = '"+jTextField4.getText()+"' AND db.receipt_no = '"+this.jTextField361.getText()+"'");
            //  java.sql.ResultSet rset1 = stmt1.executeQuery("select count(debit) from ac_cash_collection where cash_point ='"+jComboBox2.getSelectedItem()+"' and shift_no = '"+jTextField9.getText()+"'");
            
            
            while (rset.next()){
                
                jTextField3.setText(rset.getObject(1).toString());
                //  jTextField1.setText(rset.getObject(2).toString());
            }
            
              java.sql.Statement stmt2 = connectDB.createStatement();
            //java.sql.ResultSet rset2 = stmt2.executeQuery("select db.debit from debtors_rect_alloc db where db.account_no = '"+jTextField4.getText()+"' AND db.receipt_no = '"+this.jTextField361.getText()+"'");
               java.sql.ResultSet rset2 = stmt2.executeQuery("select sum(amount_alloc) from db_allocation where acc_no = '"+jTextField4.getText()+"' AND cheque_no = '"+this.jTextField3.getText()+"'");
      
            //  java.sql.ResultSet rset1 = stmt1.executeQuery("select count(debit) from ac_cash_collection where cash_point ='"+jComboBox2.getSelectedItem()+"' and shift_no = '"+jTextField9.getText()+"'");
            
            
            while (rset2.next()){
                
                jTextField8.setText(rset.getObject(1).toString());
                //  jTextField1.setText(rset.getObject(2).toString());
            }
          
            
             float allocated = java.lang.Float.parseFloat(jTextField8.getText().toString());
                float original = java.lang.Float.parseFloat(jTextField2.getText().toString());
                 
                  
                    jTextField7.setText(java.lang.String.valueOf(original-allocated));
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        /*      jTextField3.setText("00");
        jTextField1.setText("0.00");
        jTextField2.setText("0.00");
        jTextField361.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        jTextField1.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        jSearchDialog1.dispose();
   
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rc.cheque_no,rc.account_no,rc.account_name from ac_accounts_payable db,ac_cash_book rc where  db.voucher_no = '"+this.jTextField361.getText()+"' and db.voucher_no = rc.voucher_no");
            //  java.sql.ResultSet rset1 = stmt1.executeQuery("select count(debit) from ac_cash_collection where cash_point ='"+jComboBox2.getSelectedItem()+"' and shift_no = '"+jTextField9.getText()+"'");
   
   
            while (rset.next()){
   
                jTextField3.setText(rset.getObject(1).toString());
                //  jTextField1.setText(rset.getObject(2).toString());
            }
   
        } catch(java.sql.SQLException sqlExec) {
   
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
   
        }
        jSearchDialog1.dispose();
   */
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
      //jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select receipt_no,sum(credit-debit) as balance from debtors_receipts where account_no ='"+jTextField4.getText()+"' and receipt_no ILIKE '"+jTextField1111.getText().toString()+"%' group by receipt_no"));
         jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select receipt_no,credit from ac_debtors where account_no ='"+jTextField4.getText()+"' and receipt_no ILIKE '"+jTextField1111.getText().toString()+"%'"));
 
     /*  try {
            // searchRowSet.execute("select scheme_manager as scheme from ac_schemes");
      
            searchRowSet1.execute("select receipt_no,credit_bal from ac_debtors where account_no ='"+jTextField4.getText()+"' and credit_bal > 0 and receipt_no ILIKE '"+jTextField1111.getText().toString()+"%'");
            //   searchRowSet.execute();
            //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where first_name '~ '~"+jTextField11.getText()+"' order by name");
      
            jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("receipt_no", "Receipt No.", false),
                new org.netbeans.lib.sql.models.TableModel.Column("credit_bal", "Amount", false)
                // new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
            }));
      */
        jSearchTable1.setShowHorizontalLines(false);
        jSearchScrollPane1.setViewportView(jSearchTable1);
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        this.jButton1.setEnabled(true);
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        this.populateTable1(this.jTextField4.getText());         // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 5).toString()) == java.lang.Boolean.TRUE) {
            
            if (jTable1.getValueAt(jTable1.getSelectedRow(), 3) != null) {
                if (jTable1.getValueAt(jTable1.getSelectedRow(), 3) != null){
                    jTable1.setValueAt(jTable1.getValueAt(jTable1.getSelectedRow(),3),jTable1.getSelectedRow(),4);
                }
            }
        }
        //  this.tableModelTableChanged();
        
        
    }//GEN-LAST:event_jTable1MouseClicked
 /*   public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
  
  
        for (int i = 0; i < jTable1.getRowCount(); i++) {
  
            if (jTable1.getModel().getValueAt(i, 0) != null) {
  
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
  
                jTextField3.setText(java.lang.String.valueOf(resFloat));
  
            } else{
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
  
                jTextField3.setText(java.lang.String.valueOf(resFloat));
  
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
  
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
  
        //        double resFloat = 0.00;
        double resFloat = 0.00;
  
        for (int i = 0; i < jTable1.getRowCount(); i++) {
  
            if (jTable1.getModel().getValueAt(i, 0) != null) {
  
                //   if (jTable11.getSelectedColumn() == 1) {
  
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
  
                //   }
  
                jTextField3.setText(java.lang.String.valueOf(resFloat));
  
            }else{
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
  
                //   }
  
                jTextField3.setText(java.lang.String.valueOf(resFloat));
            }
  
        }
  
        //   */    //        jTextField31.setText(java.lang.String.valueOf(resFloat));
    //    }
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTextField4.setText("");
        //  jTextField2.setText("");
        //     jTextField3.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        this.jTextField36.setText("");
        jButton1.setEnabled(true);
        
        jTextField36.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        jTextField4.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        jSearchDialog.dispose();
        
        //   this.populateTable1(this.jTextField4.getText());
        
        
        
        //jTextField361.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        
        
        
        
        
      /*  tableModel = jTable1.getModel();
       
        tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {
       
            public void tableChanged(javax.swing.event.TableModelEvent evt) {
       
                tableModelTableChanged(evt);
       
            }
       
        });
       */
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
          if(jTextField111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select trim(scheme_name) as scheme ,account_no,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField111.getText().toString()+"%'"));
            
          /*  try {
                // searchRowSet.execute("select scheme_manager as scheme from ac_schemes");
           
                searchRowSet.execute("select trim(scheme_name) as scheme ,account_no,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField111.getText().toString()+"%'");
                //   searchRowSet.execute();
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where first_name '~ '~"+jTextField11.getText()+"' order by name");
           
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Scheme", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Account No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
                }));
           */
            jSearchTable.setShowHorizontalLines(false);
            jSearchScrollPane.setViewportView(jSearchTable);
            
           /*
            } catch(java.sql.SQLException sqlExec) {
            
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
            }
            */
        }      // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        java.awt.Point point = this.jTextField36.getLocationOnScreen();
        
        jSearchDialog.setSize(400,200);
        
        jSearchDialog.setLocation(point);
        
        jSearchDialog.show();
        
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField4.setText("");
        //jTextField2.setText("");
        //   jTextField3.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        this.jTextField36.setText("");
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         double credits = 0.00;
        double quantity = 0.00;
        double price = 0.00;
        double pkge = 1.00;
        double qty = 0.00;
        double uprice = 0.00;
        double rates = 0.00;
        String Stock = null;
        String actCode = null;
        String accountCode = null;
        String glType = null;
        String transNo = null;
        String accountCoded = null;
        String glTyped = null;
        String VouchNo = null;
        String StocktransNo = null;
        int invoices = 0;
        String supCode = null;
        String Purchases = null;
        String cosCode = null;
        String CostofSale = null;
        
        
        jButton1.setEnabled(false);
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        // try{
        int j = jTable1.getRowCount();
        
        String Alloc = null;
        String User = null;
        try {
            connectDB.setAutoCommit(false);
            
            
            java.sql.Statement pst1i = connectDB.createStatement();
            java.sql.ResultSet rs1i = pst1i.executeQuery("select code,activity from pb_activity where activity_category ILIKE 'GRN'");
            while (rs1i.next()){
                accountCoded = rs1i.getObject(1).toString();
                glTyped = rs1i.getObject(2).toString();
            }
            
            java.sql.Statement pst1 = connectDB.createStatement();
            java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category ILIKE 'CP'");
            while (rs1.next()){
                accountCode = rs1.getObject(1).toString();
                glType = rs1.getObject(2).toString();
            }
          /*  java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rsts = pss1.executeQuery("select current_user");
            while (rsts.next()){
                User = rsts.getObject(1).toString();
            }
          */  
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next()){
                rst.getObject(1).toString();
                
                transNo = rst.getObject(1).toString();
            }
              java.sql.Statement pss12 = connectDB.createStatement();
                java.sql.ResultSet rsts2 = pss12.executeQuery("select current_user,nextval('alloc_seq')");
                while (rsts2.next()){
                    
                    User = rsts2.getObject(1).toString();
                Alloc = rsts2.getObject(2).toString();
                }
            
            Object newdate = datenowSql;
            for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getModel().getValueAt(i,4) != null){
                       if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 5).toString()) == java.lang.Boolean.TRUE) {
                  
                   // if (jTable1.getModel().getValueAt(i,5) != null){
                  credits = credits + Double.parseDouble(jTable1.getModel().getValueAt(i, 4).toString());
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into db_allocation values(?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt.setObject(1,jTextField4.getText());
                            pstmt.setDate(2,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                            pstmt.setObject(3,"Allocation");
                            pstmt.setObject(4,Alloc);
                            pstmt.setObject(5,"");
                            if(jTextField3.getText().equals(null) || jTextField3.getText().equals("")){
                                pstmt.setObject(6,"0.00");
                            }else{
                                pstmt.setObject(6,jTextField3.getText());
                            }
                            pstmt.setObject(7,jTextField7.getText());
                            pstmt.setDouble(8,java.lang.Double.valueOf(jTable1.getValueAt(i,4).toString()));
                            pstmt.setObject(9,jTable1.getValueAt(i,1).toString());
                            pstmt.setObject(10,User);
                            pstmt.setObject(11,jTable1.getValueAt(i,2).toString());
                            pstmt.setObject(12,jTable1.getValueAt(i,0).toString());
                            pstmt.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt3 = connectDB.prepareStatement("UPDATE ac_debtors set balance = balance - '"+jTable1.getModel().getValueAt(i,4).toString()+"' WHERE invoice_no = '"+jTable1.getModel().getValueAt(i,1).toString()+"' AND account_no = '"+jTextField4.getText()+"'");
                            pstmt3.executeUpdate();
                        
                            //java.sql.PreparedStatement pstmt4 = connectDB.prepareStatement("UPDATE ac_debtors set credit_bal = credit_bal-'"+credits+"' WHERE receipt_no = '"+this.jTextField361.getText()+"'");
               // pstmt4.executeUpdate();
                        }else{
                            if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 5).toString()) == java.lang.Boolean.FALSE) {
                                
                            }
                        }
                               // java.sql.PreparedStatement pstmt4 = connectDB.prepareStatement("UPDATE ac_debtors set credit_bal = credit_bal-'"+credits+"' WHERE receipt_no = '"+this.jTextField361.getText()+"'");
               // pstmt4.executeUpdate();
                    }
                }
          //  }
            
             java.sql.PreparedStatement pstmt4 = connectDB.prepareStatement("UPDATE ac_debtors set credit_bal = '"+jTextField7.getText()+"' WHERE receipt_no = '"+this.jTextField361.getText()+"'");
                pstmt4.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
             jButton1.setEnabled(false);
           
            javax.swing.JOptionPane.showMessageDialog(this,"Well Done !! Insert Done Successfully","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
           // jButton1.setEnabled(false);
            
            // nBCachedRowSet1.execute();
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            jLabel7.setForeground(java.awt.Color.red);
            jLabel7.setText("Sorry. Please Check The Fields");
        }
  /*
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
   
   
        }
   */
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    //    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
 /*
       // double totals = 0.00;
        double totals = Double.parseDouble(jTextField1.getText());
        int i = 0;
  
        for (int j = 0; j < jTable1.getRowCount(); j++) {
  
            System.out.println(jTable1.getModel().getValueAt(j, 4).toString());
  
            if (Boolean.valueOf(jTable1.getModel().getValueAt(j, 4).toString()) == java.lang.Boolean.FALSE) {
  
                totals = totals - Double.parseDouble(jTable1.getModel().getValueAt(j, 3).toString());
  
                i++;
            }
        }
  
        jTextField1.setText(Double.toString(totals));
  
     //   jTextField2.setText(Integer.toString(i));
  
        System.out.println(totals);
  
        System.out.println(i);
  
        System.out.println("This table has changed");
  */
    //}
    
    private void populateTable1(java.lang.String patient_no) {
        
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
              java.sql.ResultSet rset = stmt.executeQuery("SELECT count(dealer) FROM ac_debtors WHERE account_no = '"+patient_no+"' and balance > 0 and date between '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker2.getDate().toString()+"'");// and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
          
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT date, invoice_no, admission_no,debit::numeric,balance::numeric ,null::boolean as allocated FROM ac_debtors WHERE account_no = '"+patient_no+"' AND balance > 0 order by date");// and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT date, invoice_no, admission_no, balance FROM ac_debtors WHERE account_no = '"+patient_no+"' AND date between '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker2.getDate().toString()+"' AND balance >0 AND invoice_no != '' ORDER BY invoice_no");// and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable1.setValueAt(java.lang.Boolean.valueOf(false), i, 5);
                     jTable1.setValueAt(rsetTable1.getObject(1), i, 6);
                    
                    i++;
                    
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        
        
    }
    
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel221;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField361;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton2;
    // End of variables declaration//GEN-END:variables
    
}
