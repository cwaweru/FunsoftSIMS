/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.hospital;

import com.sun.star.lib.uno.environments.java.java_environment;
import org.jfree.xml.factory.objects.JavaBaseClassFactory;

/**
 *
 * @author  root
 */
public class GeneralBillingIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    com.afrisoftech.lib.DBObject dbObject;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    java.sql.Connection connectDB = null;
    //  GeneralBillingIntfrcurr.SearchThreadchThread searchThread = null;
    //  GeneralBillingIntfrcurr.SearchServicesThreadrvicesThread searchServicesThread = null;
    
    com.afrisoftech.timeseries.YearyAgeing ageingSeries= null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    private boolean DirectRev;
    
    DispatchThread dispatchThread;
    
    public GeneralBillingIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new com.afrisoftech.dbadmin.JTable();
        jButton421 = new javax.swing.JButton();
        jButton521 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton911 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog211 = new javax.swing.JDialog();
        jSearchPanel211 = new javax.swing.JPanel();
        jTextField11311 = new javax.swing.JTextField();
        jSearchScrollPane211 = new javax.swing.JScrollPane();
        jSearchTable211 = new com.afrisoftech.dbadmin.JTable();
        jButton4211 = new javax.swing.JButton();
        jButton5211 = new javax.swing.JButton();
        jSearchDialog12 = new javax.swing.JDialog();
        jSearchPanel12 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane12 = new javax.swing.JScrollPane();
        jSearchTable12 = new com.afrisoftech.dbadmin.JTable();
        jButton912 = new javax.swing.JButton();
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        jButton9111 = new javax.swing.JButton();
        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jSearchDialog31 = new javax.swing.JDialog();
        jSearchPanel31 = new javax.swing.JPanel();
        jTextField1121 = new javax.swing.JTextField();
        jSearchScrollPane31 = new javax.swing.JScrollPane();
        jSearchTable31 = new com.afrisoftech.dbadmin.JTable();
        jButton921 = new javax.swing.JButton();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jSearchDialog13 = new javax.swing.JDialog();
        jSearchPanel13 = new javax.swing.JPanel();
        jTextField1113 = new javax.swing.JTextField();
        jSearchScrollPane13 = new javax.swing.JScrollPane();
        jSearchTable13 = new com.afrisoftech.dbadmin.JTable();
        dispose11 = new javax.swing.JButton();
        jSearchDialog4 = new javax.swing.JDialog();
        jSearchPanel4 = new javax.swing.JPanel();
        jTextField14 = new javax.swing.JTextField();
        jSearchScrollPane4 = new javax.swing.JScrollPane();
        jSearchTable4 = new com.afrisoftech.dbadmin.JTable();
        jButton10 = new javax.swing.JButton();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable3 = new com.afrisoftech.dbadmin.JTable();

        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class,java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, false,false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jPanel42 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel641 = new javax.swing.JPanel();
        searchButton3 = new javax.swing.JButton();
        jTextField13 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton12 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jCheckBox42 = new javax.swing.JCheckBox();
        jCheckBox51 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jTextField10 = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jPanel21 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jTextField41 = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();

        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select distinct main_service from pb_operating_parameters  where category = 'CA'");
            while (rset.next()){
                jTextField5.setText(rset.getObject(1).toString());

            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        jTextField71 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel531 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel71 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton11 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jPanel111 = new javax.swing.JPanel();
        jPanel111.setVisible(false);
        jScrollPane211 = new javax.swing.JScrollPane();
        jTable111 = new com.afrisoftech.dbadmin.JTable();
        jPanel211 = new javax.swing.JPanel();
        jLabel911 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jTextField121 = new javax.swing.JTextField();
        jLabel211 = new javax.swing.JLabel();
        jLabel311 = new javax.swing.JLabel();
        jTextField211 = new javax.swing.JTextField();
        jTextField411 = new javax.swing.JTextField();
        jPanel411 = new javax.swing.JPanel();
        jTextField911 = new javax.swing.JTextField();
        searchButton11 = new javax.swing.JButton();
        jTextField51 = new javax.swing.JTextField();

        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select distinct main_service from pb_operating_parameters  where category = 'CA'");
            while (rset.next()){
                jTextField51.setText(rset.getObject(1).toString());

            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        jTextField711 = new javax.swing.JTextField();
        jLabel411 = new javax.swing.JLabel();
        jLabel5311 = new javax.swing.JLabel();
        jTextField311 = new javax.swing.JTextField();
        jSeparator111 = new javax.swing.JSeparator();
        jLabel711 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton111 = new javax.swing.JButton();
        jButton611 = new javax.swing.JButton();
        jButton311 = new javax.swing.JButton();
        jButton411 = new javax.swing.JButton();
        jButton511 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox31 = new javax.swing.JCheckBox();
        jCheckBox41 = new javax.swing.JCheckBox();
        jCheckBox61 = new javax.swing.JCheckBox();
        datePicker2 = new com.afrisoftech.lib.DatePicker();

        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchScrollPane2.setDoubleBuffered(true);
        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setDoubleBuffered(true);
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseEntered(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchScrollPane.setDoubleBuffered(true);
        jSearchTable.setDoubleBuffered(true);
        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog21.setUndecorated(true);
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });

        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton421.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton421, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Close");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });

        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton911.setText("Close");
        jButton911.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton911ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton911, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        jSearchDialog211.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog211.setUndecorated(true);
        jSearchPanel211.setLayout(new java.awt.GridBagLayout());

        jSearchPanel211.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11311.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11311CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel211.add(jTextField11311, gridBagConstraints);

        jSearchTable211.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable211.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable211.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable211MouseClicked(evt);
            }
        });

        jSearchScrollPane211.setViewportView(jSearchTable211);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel211.add(jSearchScrollPane211, gridBagConstraints);

        jButton4211.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel211.add(jButton4211, gridBagConstraints);

        jButton5211.setText("Close");
        jButton5211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5211ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel211.add(jButton5211, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog211.getContentPane().add(jSearchPanel211, gridBagConstraints);

        jSearchDialog12.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog12.setUndecorated(true);
        jSearchPanel12.setLayout(new java.awt.GridBagLayout());

        jSearchPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1112CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel12.add(jTextField1112, gridBagConstraints);

        jSearchTable12.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable12MouseClicked(evt);
            }
        });

        jSearchScrollPane12.setViewportView(jSearchTable12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel12.add(jSearchScrollPane12, gridBagConstraints);

        jButton912.setText("Close");
        jButton912.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton912ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel12.add(jButton912, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog12.getContentPane().add(jSearchPanel12, gridBagConstraints);

        jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog111.setUndecorated(true);
        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

        jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11111ActionPerformed(evt);
            }
        });
        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel111.add(jTextField11111, gridBagConstraints);

        jSearchTable111.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable111MouseClicked(evt);
            }
        });

        jSearchScrollPane111.setViewportView(jSearchTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

        jButton9111.setText("Close");
        jButton9111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel111.add(jButton9111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

        jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog3.setUndecorated(true);
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField112CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel3.add(jTextField112, gridBagConstraints);

        jSearchTable3.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseClicked(evt);
            }
        });

        jSearchScrollPane3.setViewportView(jSearchTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

        jButton92.setText("Dispose");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton92, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog3.getContentPane().add(jSearchPanel3, gridBagConstraints);

        jSearchDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog31.setModal(true);
        jSearchDialog31.setUndecorated(true);
        jSearchPanel31.setLayout(new java.awt.GridBagLayout());

        jSearchPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1121.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1121CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel31.add(jTextField1121, gridBagConstraints);

        jSearchTable31.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable31MouseClicked(evt);
            }
        });

        jSearchScrollPane31.setViewportView(jSearchTable31);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel31.add(jSearchScrollPane31, gridBagConstraints);

        jButton921.setText("Close");
        jButton921.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton921ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel31.add(jButton921, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog31.getContentPane().add(jSearchPanel31, gridBagConstraints);

        jSearchDialog13.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog13.setModal(true);
        jSearchDialog13.setUndecorated(true);
        jSearchPanel13.setLayout(new java.awt.GridBagLayout());

        jSearchPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel13.add(jTextField1113, gridBagConstraints);

        jSearchTable13.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable13.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchTable13.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable13MouseClicked(evt);
                }
            });

            jSearchScrollPane13.setViewportView(jSearchTable13);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel13.add(jSearchScrollPane13, gridBagConstraints);

            dispose11.setMnemonic('l');
            dispose11.setText("Close");
            dispose11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dispose11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel13.add(dispose11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog13.getContentPane().add(jSearchPanel13, gridBagConstraints);

            jSearchDialog4.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchDialog4.setUndecorated(true);
            jSearchPanel4.setLayout(new java.awt.GridBagLayout());

            jSearchPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField14.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField14CaretUpdate(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 10.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
            jSearchPanel4.add(jTextField14, gridBagConstraints);

            jSearchScrollPane4.setDoubleBuffered(true);
            jSearchTable4.setDoubleBuffered(true);
            jSearchTable4.setShowHorizontalLines(false);
            /*    try {
                searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
                searchRowSet.setConnectionSource(pConnDB);

                searchRowSet.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

                }));
                // jSearchScrollPane.setViewportView(jSearchTable);

            } catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());
            }
            */
            jSearchTable4.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable4MouseClicked(evt);
                }
            });

            jSearchScrollPane4.setViewportView(jSearchTable4);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel4.add(jSearchScrollPane4, gridBagConstraints);

            jButton10.setText("Dispose");
            jButton10.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton10ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel4.add(jButton10, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog4.getContentPane().add(jSearchPanel4, gridBagConstraints);

            getContentPane().setLayout(new java.awt.GridBagLayout());

            setClosable(true);
            setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("General Billing");
            setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
            try {
                setSelected(true);
            } catch (java.beans.PropertyVetoException e1) {
                e1.printStackTrace();
            }
            setVisible(true);
            addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    formKeyPressed(evt);
                }
            });

            jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            getContentPane().add(jLabel7, gridBagConstraints);

            jTextField6.setEditable(false);
            jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            getContentPane().add(jTextField6, gridBagConstraints);

            jPanel1.setLayout(new java.awt.GridBagLayout());

            jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jTable3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 255, 204), new java.awt.Color(255, 153, 255)));
            jTable3.setFont(new java.awt.Font("Lucida Sans", 0, 12));
            jTable3.setForeground(new java.awt.Color(255, 0, 0));
            jTable3.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null}
                },
                new String [] {
                    "Service / Item", "Qty", "Rate", "Total", "GL Code"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    true, true, true, true, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable3.setShowHorizontalLines(false);
            /*

            javax.swing.table.TableColumn column1 = null;
            for (int i = 0; i < 4; i++) {
                column1 = jTable1.getColumnModel().getColumn(i);
                if (i == 0) {

                    column1.setPreferredWidth(400); //sport column is bigger
                } else {

                    //if (i == 2) {
                        column1.setPreferredWidth(100);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }

            */
            jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable3MouseClicked(evt);
                }
            });
            jTable3.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable3KeyReleased(evt);
                }
            });

            jScrollPane2.setViewportView(jTable3);

            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null}
                },
                new String [] {
                    "Service", "Quantity", "Price", "Total", "GL Code", "subcode"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    false, true, true, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable1.setGridColor(new java.awt.Color(204, 204, 255));
            javax.swing.table.TableColumn column = null;
            for (int i = 0; i < 6; i++) {
                column = jTable1.getColumnModel().getColumn(i);
                if (i == 0) {

                    column.setPreferredWidth(500); //sport column is bigger
                } else {
                    if(i == 1){
                        column.setPreferredWidth(50);
                    }else{
                        if(i == 5){
                            column.setPreferredWidth(10);
                        }else{
                            //if (i == 6) {
                                column.setPreferredWidth(100);
                                // }  else
                            //column.setPreferredWidth(100);
                        }
                    }
                }
            }
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable1KeyReleased(evt);
                }
            });

            jScrollPane2.setViewportView(jTable1);
            jTable1.getAccessibleContext().setAccessibleParent(jScrollPane2);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipady = 100;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel1.add(jScrollPane2, gridBagConstraints);

            jPanel2.setLayout(new java.awt.GridBagLayout());

            jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Patient Here"));
            jLabel9.setText("Patient No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel9, gridBagConstraints);

            jLabel1.setText("Patient Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel1, gridBagConstraints);

            jTextField1.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField1, gridBagConstraints);

            jLabel2.setText("Revenue Dep.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel2, gridBagConstraints);

            jLabel3.setText("Patient Category");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel3, gridBagConstraints);

            jTextField2.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField2, gridBagConstraints);

            jTextField4.setEditable(false);
            jTextField4.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField4.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jTextField4, gridBagConstraints);

            jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION ALL SELECT distinct UPPER(activity) FROM pb_activity WHERE category_class ilike 'plid' and (activity not ilike '%discount%' or activity not ilike '%THEATRE%' or activity not ilike 'LAB%' or activity not ilike '%PHARMACY%' or activity not ilike '%ENDOSCOPY%' or activity not ilike '%PREVI%' or  activity not ilike '%cme%' or  activity not ilike '%adminis%' or activity not ilike '%rental%' or activity not ilike '%asset%' or activity not ilike '%karatina%' and activity not ilike '%interest%')"));
            jComboBox1.setMinimumSize(new java.awt.Dimension(32, 20));
            jComboBox1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jComboBox1, gridBagConstraints);

            jPanel4.setLayout(new java.awt.GridBagLayout());

            jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel4.setPreferredSize(new java.awt.Dimension(33, 20));
            jTextField9.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jTextField9, gridBagConstraints);

            searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton.setToolTipText("Search");
            searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton.setMinimumSize(new java.awt.Dimension(20, 53));
            searchButton.setPreferredSize(new java.awt.Dimension(10, 19));
            searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButtonActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel4.add(searchButton, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jPanel4, gridBagConstraints);

            jLabel4.setText("Payment Mode");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel4, gridBagConstraints);

            buttonGroup2.add(jCheckBox3);
            jCheckBox3.setText("Search By  No.");
            jCheckBox3.setMinimumSize(new java.awt.Dimension(112, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            jPanel2.add(jCheckBox3, gridBagConstraints);

            buttonGroup2.add(jCheckBox4);
            jCheckBox4.setText("Search By Name");
            jCheckBox4.setEnabled(false);
            jCheckBox4.setMinimumSize(new java.awt.Dimension(123, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 2;
            jPanel2.add(jCheckBox4, gridBagConstraints);

            jPanel42.setLayout(new java.awt.GridBagLayout());

            jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel42.setMinimumSize(new java.awt.Dimension(33, 20));
            jPanel42.setPreferredSize(new java.awt.Dimension(28, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel42.add(jTextField92, gridBagConstraints);

            searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton2.setToolTipText("Search");
            searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton2.setMinimumSize(new java.awt.Dimension(20, 19));
            searchButton2.setPreferredSize(new java.awt.Dimension(15, 19));
            searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton2ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel42.add(searchButton2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jPanel42, gridBagConstraints);

            jLabel8.setText("Doctor's Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel8, gridBagConstraints);

            jLabel10.setText("Doctor No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel10, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField8, gridBagConstraints);

            buttonGroup4.add(jRadioButton1);
            jRadioButton1.setSelected(true);
            jRadioButton1.setText("Normal Rate");
            jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jRadioButton1, gridBagConstraints);

            buttonGroup4.add(jRadioButton2);
            jRadioButton2.setText("Special Rate");
            jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jRadioButton2, gridBagConstraints);

            jLabel12.setText("Scheme");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel12, gridBagConstraints);

            jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Scheme" }));
            jComboBox2.setMinimumSize(new java.awt.Dimension(75, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel2.add(jComboBox2, gridBagConstraints);

            jPanel641.setLayout(new java.awt.GridBagLayout());

            jPanel641.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel641.setMinimumSize(new java.awt.Dimension(82, 37));
            jPanel641.setPreferredSize(new java.awt.Dimension(42, 20));
            searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton3.setToolTipText("Search");
            searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton3.setMaximumSize(new java.awt.Dimension(14, 53));
            searchButton3.setMinimumSize(new java.awt.Dimension(20, 53));
            searchButton3.setPreferredSize(new java.awt.Dimension(14, 10));
            searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton3ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            jPanel641.add(searchButton3, gridBagConstraints);

            jTextField13.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel641.add(jTextField13, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel2.add(jPanel641, gridBagConstraints);

            jLabel13.setText("Payer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel13, gridBagConstraints);

            jTextField17.setEditable(false);
            jTextField17.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField17ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField17, gridBagConstraints);

            jTextField18.setEditable(false);
            jTextField18.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField18ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField18, gridBagConstraints);

            jLabel14.setText("A/C No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel14, gridBagConstraints);

            jTextField7.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel2.add(jTextField7, gridBagConstraints);

            jCheckBox7.setBackground(new java.awt.Color(255, 255, 255));
            buttonGroup5.add(jCheckBox7);
            jCheckBox7.setText("View Existing Package?");
            jCheckBox7.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jCheckBox7.setMargin(new java.awt.Insets(0, 0, 0, 0));
            jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox7ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jCheckBox7, gridBagConstraints);

            jCheckBox8.setBackground(new java.awt.Color(255, 255, 255));
            jCheckBox8.setText("<< Back to Billing");
            jCheckBox8.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jCheckBox8.setMargin(new java.awt.Insets(0, 0, 0, 0));
            jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox8ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jCheckBox8, gridBagConstraints);

            buttonGroup6.add(jCheckBox9);
            jCheckBox9.setText("Charge existing");
            jCheckBox9.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jCheckBox9.setEnabled(false);
            jCheckBox9.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 6;
            jPanel2.add(jCheckBox9, gridBagConstraints);

            buttonGroup6.add(jCheckBox10);
            jCheckBox10.setText("Charge as Package");
            jCheckBox10.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jCheckBox10.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            jPanel2.add(jCheckBox10, gridBagConstraints);

            jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT patient_type FROM pb_patient_categories2 ORDER BY patient_type"));
            jComboBox3.setMinimumSize(new java.awt.Dimension(32, 20));
            jComboBox3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox3ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jComboBox3, gridBagConstraints);

            jLabel17.setBackground(new java.awt.Color(0, 255, 51));
            jLabel17.setForeground(new java.awt.Color(255, 0, 204));
            jLabel17.setText("Patient Source");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel17, gridBagConstraints);

            jTextField22.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel2.add(jTextField22, gridBagConstraints);

            jLabel18.setText("A/C Code");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel2.add(jLabel18, gridBagConstraints);

            jTextField16.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jTextField16, gridBagConstraints);

            jLabel15.setText("Ward");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 6;
            jPanel2.add(jLabel15, gridBagConstraints);

            jTextField19.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 22, 0, 0);
            jPanel2.add(jTextField19, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jPanel2, gridBagConstraints);

            jLabel53.setText("Charge Amount");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jLabel53, gridBagConstraints);

            jTextField3.setEditable(false);
            jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField3.setText("0.00");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel1.add(jTextField3, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
            gridBagConstraints.weightx = 1.0;
            jPanel1.add(jSeparator1, gridBagConstraints);

            jPanel5.setLayout(new java.awt.GridBagLayout());

            jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
            jButton1.setMnemonic('s');
            jButton1.setText("Save >> XML");
            jButton1.setToolTipText("Click here enter data");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jButton1, gridBagConstraints);

            jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
            jButton12.setMnemonic('R');
            jButton12.setText("Save & Print");
            jButton12.setToolTipText("Click here enter data");
            jButton12.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton12ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jButton12, gridBagConstraints);

            jButton2.setText("Reprint");
            jButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            jPanel5.add(jButton2, gridBagConstraints);

            jButton6.setMnemonic('r');
            jButton6.setText("Remove Row");
            jButton6.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton6ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            jPanel5.add(jButton6, gridBagConstraints);

            jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
            jButton3.setMnemonic('l');
            jButton3.setText("Clear");
            jButton3.setToolTipText("Click here to clear textfields");
            jButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jButton3, gridBagConstraints);

            jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
            jButton4.setMnemonic('C');
            jButton4.setText("Close");
            jButton4.setToolTipText("Click here to close window");
            jButton4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton4ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jButton4, gridBagConstraints);

            jButton5.setMnemonic('h');
            jButton5.setText("Delete Package Row");
            jButton5.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton5ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 6;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jButton5, gridBagConstraints);

            jButton7.setMnemonic('h');
            jButton7.setText("Read Card");
            jButton7.setEnabled(false);
            jButton7.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton7ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 7;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jButton7, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jPanel5, gridBagConstraints);

            jPanel10.setLayout(new java.awt.GridBagLayout());

            buttonGroup3.add(jCheckBox42);
            jCheckBox42.setText("Search By Code");
            jCheckBox42.setMinimumSize(new java.awt.Dimension(120, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            jPanel10.add(jCheckBox42, gridBagConstraints);

            buttonGroup3.add(jCheckBox51);
            jCheckBox51.setText("Search By Name");
            jCheckBox51.setMinimumSize(new java.awt.Dimension(123, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            jPanel10.add(jCheckBox51, gridBagConstraints);

            jScrollPane1.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jScrollPane1KeyReleased(evt);
                }
            });

            jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null}
                },
                new String [] {
                    "Description", "Qty", "Cost", "Total", "Gl Code"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    false, true, true, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable2MouseClicked(evt);
                }
            });
            jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable2KeyReleased(evt);
                }
            });

            jScrollPane1.setViewportView(jTable2);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel10.add(jScrollPane1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel1.add(jPanel10, gridBagConstraints);

            jPanel9.setLayout(new java.awt.GridBagLayout());

            jPanel31.setLayout(new java.awt.GridBagLayout());

            jPanel31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
            jPanel31.setMinimumSize(new java.awt.Dimension(258, 20));
            buttonGroup1.add(jCheckBox11);
            jCheckBox11.setForeground(new java.awt.Color(51, 51, 255));
            jCheckBox11.setMnemonic('o');
            jCheckBox11.setText("Out Patients");
            jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jCheckBox11, gridBagConstraints);

            buttonGroup1.add(jCheckBox21);
            jCheckBox21.setForeground(new java.awt.Color(255, 0, 51));
            jCheckBox21.setMnemonic('i');
            jCheckBox21.setText("InPatients");
            jCheckBox21.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox21ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jCheckBox21, gridBagConstraints);

            buttonGroup1.add(jCheckBox6);
            jCheckBox6.setForeground(new java.awt.Color(153, 0, 153));
            jCheckBox6.setText("Walk-In");
            jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox6ActionPerformed(evt);
                }
            });

            jPanel31.add(jCheckBox6, new java.awt.GridBagConstraints());

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel9.add(jPanel31, gridBagConstraints);

            jCheckBox5.setText("Confirm Visit");
            jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox5ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            jPanel9.add(jCheckBox5, gridBagConstraints);

            jLabel5.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            jPanel9.add(jLabel5, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(datePicker1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jPanel9, gridBagConstraints);

            jTextField10.setEditable(false);
            jTextField10.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField10.setText("0.00");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel1.add(jTextField10, gridBagConstraints);

            jLabel54.setText(" ");
            jPanel1.add(jLabel54, new java.awt.GridBagConstraints());

            jLabel16.setText("Bill Amount");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jLabel16, gridBagConstraints);

            jTextField15.setText("jTextField15");
            jPanel1.add(jTextField15, new java.awt.GridBagConstraints());

            jTabbedPane1.addTab("General", jPanel1);

            jPanel6.setLayout(new java.awt.GridBagLayout());

            jPanel11.setLayout(new java.awt.GridBagLayout());

            jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient here"));
            jTable11.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null}
                },
                new String [] {
                    "Service", "Quantity", "Price", "Total", "Gl Account", "Doctor"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    true, true, true, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable11.setGridColor(new java.awt.Color(204, 204, 255));
            javax.swing.table.TableColumn column1 = null;
            for (int i = 0; i < 5; i++) {
                column1 = jTable11.getColumnModel().getColumn(i);
                if (i == 0) {

                    column1.setPreferredWidth(300); //sport column is bigger
                } else {

                    //if (i == 2) {
                        column1.setPreferredWidth(150);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
            jTable11.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable11KeyReleased(evt);
                }
            });
            jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable11MouseClicked(evt);
                }
            });

            jScrollPane21.setViewportView(jTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipady = 10;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
            jPanel11.add(jScrollPane21, gridBagConstraints);

            jPanel21.setLayout(new java.awt.GridBagLayout());

            jLabel91.setText("Patient No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel91, gridBagConstraints);

            jLabel11.setText("Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel11, gridBagConstraints);

            jTextField12.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField12, gridBagConstraints);

            jLabel21.setText("Revenue Dep.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel21, gridBagConstraints);

            jLabel31.setText("Patient Category");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel31, gridBagConstraints);

            jTextField21.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField21, gridBagConstraints);

            jTextField41.setEditable(false);
            jTextField41.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField41.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel21.add(jTextField41, gridBagConstraints);

            jPanel41.setLayout(new java.awt.GridBagLayout());

            jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField91.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel41.add(jTextField91, gridBagConstraints);

            searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton1.setToolTipText("Search");
            searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel41.add(searchButton1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel21.add(jPanel41, gridBagConstraints);

            jTextField5.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel21.add(jTextField5, gridBagConstraints);

            jTextField71.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel21.add(jTextField71, gridBagConstraints);

            jLabel41.setText("Payment Mode");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel41, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jPanel21, gridBagConstraints);

            jLabel531.setText("Amount");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jLabel531, gridBagConstraints);

            jTextField31.setEditable(false);
            jTextField31.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField31.setText("0.00");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 40);
            jPanel11.add(jTextField31, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
            gridBagConstraints.weightx = 1.0;
            jPanel11.add(jSeparator11, gridBagConstraints);

            jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel11.add(jLabel71, gridBagConstraints);

            jPanel7.setLayout(new java.awt.GridBagLayout());

            jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
            jButton11.setMnemonic('O');
            jButton11.setText("Ok");
            jButton11.setToolTipText("Click here enter data");
            jButton11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jButton11, gridBagConstraints);

            jButton61.setMnemonic('r');
            jButton61.setText("Remove Row");
            jButton61.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton61ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            jPanel7.add(jButton61, gridBagConstraints);

            jButton31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
            jButton31.setMnemonic('l');
            jButton31.setText("Clear");
            jButton31.setToolTipText("Click here to clear textfields");
            jButton31.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton31ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jButton31, gridBagConstraints);

            jButton41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
            jButton41.setMnemonic('C');
            jButton41.setText("Close");
            jButton41.setToolTipText("Click here to close window");
            jButton41.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton41ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jButton41, gridBagConstraints);

            jButton51.setMnemonic('h');
            jButton51.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jButton51, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jPanel7, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jPanel11, gridBagConstraints);

            jPanel111.setLayout(new java.awt.GridBagLayout());

            jPanel111.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient here"));
            jTable111.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null}
                },
                new String [] {
                    "Service", "Quatity", "Price", "Total", "Gl Account", "Doctor"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    true, true, true, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable111.setGridColor(new java.awt.Color(204, 204, 255));
            jTable111.setShowHorizontalLines(false);
            javax.swing.table.TableColumn column111 = null;
            for (int i = 0; i < 5; i++) {
                column111 = jTable111.getColumnModel().getColumn(i);
                if (i == 0) {

                    column111.setPreferredWidth(300); //sport column is bigger
                } else {

                    //if (i == 2) {
                        column111.setPreferredWidth(150);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
            jTable111.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable111KeyReleased(evt);
                }
            });
            jTable111.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable111MouseClicked(evt);
                }
            });

            jScrollPane211.setViewportView(jTable111);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipady = 10;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
            jPanel111.add(jScrollPane211, gridBagConstraints);

            jPanel211.setLayout(new java.awt.GridBagLayout());

            jLabel911.setText("Patient No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel211.add(jLabel911, gridBagConstraints);

            jLabel111.setText("Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel211.add(jLabel111, gridBagConstraints);

            jTextField121.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel211.add(jTextField121, gridBagConstraints);

            jLabel211.setText("Revenue Dep.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            jPanel211.add(jLabel211, gridBagConstraints);

            jLabel311.setText("Patient Category");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            jPanel211.add(jLabel311, gridBagConstraints);

            jTextField211.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel211.add(jTextField211, gridBagConstraints);

            jTextField411.setEditable(false);
            jTextField411.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField411.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel211.add(jTextField411, gridBagConstraints);

            jPanel411.setLayout(new java.awt.GridBagLayout());

            jPanel411.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField911.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel411.add(jTextField911, gridBagConstraints);

            searchButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton11.setToolTipText("Search");
            searchButton11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton11.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton11.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel411.add(searchButton11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel211.add(jPanel411, gridBagConstraints);

            jTextField51.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel211.add(jTextField51, gridBagConstraints);

            jTextField711.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel211.add(jTextField711, gridBagConstraints);

            jLabel411.setText("Payment Mode");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            jPanel211.add(jLabel411, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel111.add(jPanel211, gridBagConstraints);

            jLabel5311.setText("Amount KShs.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel111.add(jLabel5311, gridBagConstraints);

            jTextField311.setEditable(false);
            jTextField311.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField311.setText("0.00");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 10);
            jPanel111.add(jTextField311, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
            gridBagConstraints.weightx = 1.0;
            jPanel111.add(jSeparator111, gridBagConstraints);

            jLabel711.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel111.add(jLabel711, gridBagConstraints);

            jPanel8.setLayout(new java.awt.GridBagLayout());

            jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jButton111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
            jButton111.setMnemonic('O');
            jButton111.setText("Ok");
            jButton111.setToolTipText("Click here enter data");
            jButton111.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton111ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jButton111, gridBagConstraints);

            jButton611.setMnemonic('r');
            jButton611.setText("Remove Row");
            jButton611.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton611ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            jPanel8.add(jButton611, gridBagConstraints);

            jButton311.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
            jButton311.setMnemonic('l');
            jButton311.setText("Clear");
            jButton311.setToolTipText("Click here to clear textfields");
            jButton311.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton311ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jButton311, gridBagConstraints);

            jButton411.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
            jButton411.setMnemonic('C');
            jButton411.setText("Close");
            jButton411.setToolTipText("Click here to close window");
            jButton411.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton411ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jButton411, gridBagConstraints);

            jButton511.setMnemonic('h');
            jButton511.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jButton511, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel111.add(jPanel8, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jPanel111, gridBagConstraints);

            jPanel3.setLayout(new java.awt.GridBagLayout());

            jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
            buttonGroup1.add(jCheckBox1);
            jCheckBox1.setForeground(new java.awt.Color(51, 51, 255));
            jCheckBox1.setMnemonic('o');
            jCheckBox1.setText("Out Patients");
            jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel3.add(jCheckBox1, gridBagConstraints);

            buttonGroup1.add(jCheckBox2);
            jCheckBox2.setForeground(new java.awt.Color(255, 0, 51));
            jCheckBox2.setMnemonic('i');
            jCheckBox2.setText("InPatients");
            jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox2ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jCheckBox2, gridBagConstraints);

            jLabel6.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(jLabel6, gridBagConstraints);

            buttonGroup2.add(jCheckBox31);
            jCheckBox31.setText("Search By  No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel3.add(jCheckBox31, gridBagConstraints);

            buttonGroup2.add(jCheckBox41);
            jCheckBox41.setText("Search By Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jCheckBox41, gridBagConstraints);

            buttonGroup1.add(jCheckBox61);
            jCheckBox61.setForeground(new java.awt.Color(153, 0, 153));
            jCheckBox61.setText("Others");
            jCheckBox61.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox61ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jCheckBox61, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(datePicker2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
            jPanel6.add(jPanel3, gridBagConstraints);

            jTabbedPane1.addTab("Consultancy Ledger", jPanel6);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            setBounds(0, 0, 766, 541);
        }// </editor-fold>//GEN-END:initComponents
    
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed
    
    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
        this.invalidate();
        jTable1.grabFocus();
        this.jTable1.setVisible(true);
        this.jLabel54.setVisible(false);
        this.jTextField10.setVisible(false);
        this.jButton5.setVisible(false);
        //  jPanel2.setVisible(true);
        
        this.jScrollPane2.setViewportView(jTable1);
        this.validate();// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox8ActionPerformed
    
    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
      /*
         for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.setValueAt(null,k,r);
            }
        }
       */
        //  this.jComboBox131.setSelectedItem(null);
      
        
       /* 
        jTextField3.setText("0.00");
        
        String pack =null;
        this.invalidate();
        jTable3.grabFocus();
        this.jTable3.setVisible(true);
        this.jLabel54.setVisible(true);
        this.jTextField10.setVisible(true);
        this.jButton5.setVisible(true);
        //jPanel12.setVisible(true);
        this.jScrollPane2.setViewportView(jTable3);
        this.validate();
        // if (jTable1.getValueAt(jTable1.getSelectedRow(), 0) != null) {
        //  pack = jTable1.getValueAt(jTable1.getSelectedRow(), 0) .toString();
        for (int m = 0; m < jTable3.getRowCount(); m++ ) {
            for (int r = 0; r < jTable3.getColumnCount(); r++ ) {
                jTable3.getModel().setValueAt(null,m,r);
            }
        }
        
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement pstBx2 = connectDB.createStatement();
            java.sql.ResultSet rsBx2 = pstBx2.executeQuery("select count(package) from packages where package ilike '"+jTable1.getValueAt(jTable1.getSelectedRow(),0)+"' and glcode =  '"+jTable1.getValueAt(jTable1.getSelectedRow(),4)+"'");
            
            while (rsBx2.next()){
                j = rsBx2.getInt(1);
            }
            
            if (j > 0){
                java.sql.Statement st1 = connectDB.createStatement();
                java.sql.ResultSet rsetTable1 = st1.executeQuery("select item_service,price,qty,total,glcode FROM packages WHERE package ILIKE '"+jTable1.getValueAt(jTable1.getSelectedRow(),0)+"' AND glcode = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4)+"' and department ilike '"+jComboBox1.getSelectedItem().toString()+"'");
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable3.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable3.setValueAt(rsetTable1.getObject(3), i, 1);
                    jTable3.setValueAt(rsetTable1.getObject(2), i, 2);
                    jTable3.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable3.setValueAt(rsetTable1.getObject(5), i, 4);
                    
                    i++;
                    
                    
                }
                
            }
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        */
        //}
        
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed
    
    // }
// TODO add your handling code here:
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        jSearchDialog4.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed
    
    private void jSearchTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable4MouseClicked
        float billNo = 0;
     /*   try{
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select discount from pb_smartcards WHERE card_name = '"+jTextField13.getText()+"'");
            while (rst11.next()){
      
                billNo = rst11.getFloat(1);
      
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
      */
        jTable3.setValueAt(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(),0),jTable3.getSelectedRow(), 0);
        jTable3.setValueAt(1,jTable3.getSelectedRow(), 1);
        jTable3.setValueAt(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(),1),jTable3.getSelectedRow(), 2);
        jTable3.setValueAt(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(),2),jTable3.getSelectedRow(), 4);
        jSearchDialog4.dispose();
        //      jTextField11.setText("");
        
        double floatCol2 = java.lang.Double.parseDouble(jTable3.getValueAt(jTable3.getSelectedRow(), 1).toString());
        
        double floatCol3 = java.lang.Double.parseDouble(jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString());
        
        if(billNo > 0){
            double resVal = (floatCol2 * floatCol3) - ((floatCol2 * floatCol3)*billNo/100);
            jTable3.setValueAt(new java.lang.Float(resVal), jTable3.getSelectedRow(), 3);
        }else{
            double resVal = floatCol2 * floatCol3;
            jTable3.setValueAt(new java.lang.Float(resVal), jTable3.getSelectedRow(), 3);
        }
        
        
/*
 
 // double floatCol2 = java.lang.Double.parseDouble(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
 
       // double floatCol3 = 1;
 
 try {
            javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
 
            connectDB.setAutoCommit(false);
 
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.ResultSet rse122x = stm122x.executeQuery("select '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0)+"' as description,'"+1+"'::numeric as qty,'"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1)+"'::numeric as price,'"+resVal+"'::numeric as total,'"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2)+"' as glcode");
            while (rse122x.next()){
                java.util.Vector rowsToAdd = new java.util.Vector(1,1);
                rowsToAdd.addElement(rse122x.getObject(1));
                rowsToAdd.addElement(rse122x.getObject(2));
                rowsToAdd.addElement(rse122x.getObject(3));
                rowsToAdd.addElement(rse122x.getObject(4));
                rowsToAdd.addElement(rse122x.getObject(5));
 
                defTableModel.addRow(rowsToAdd);
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
        }catch(java.sql.SQLException sq){
 
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
 
        }
 
 */
        jSearchDialog4.dispose();
        //  double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
        //  jTextField3.setText(java.lang.String.valueOf(totalSum));
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable4MouseClicked
    
    private void jTextField14CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField14CaretUpdate
        if(jTextField14.getCaretPosition() < 1){
            
            System.out.println("Nothing");
        }else{
            // if(jRadioButton1.isSelected()){
            jSearchTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as glcode FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField14.getText()+"%' AND gl_account = '"+jTextField7.getText()+"' UNION ALL select product as service_type,selling_price,gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField14.getText()+"%' AND gl_code = '"+jTextField7.getText()+"' order by service_type"));
             /*   }else{
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,anaesthetist_rate as price,gl_account as glcode FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField11.getText()+"%' AND main_service ILIKE '"+jComboBox1.getSelectedItem()+"%' UNION ALL select product as service_type,selling_price,gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND department ilike '"+jComboBox1.getSelectedItem()+"%' order by service_type"));
              
                }
              */
            System.out.println("Cannot sort out");
            
        }
//   jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,1 as qty,rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND main_service ilike '"+jComboBox1.getSelectedItem()+"%' UNION ALL select product,1 as qty,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox1.getSelectedItem()+"' order by service_type"));
        
     /*   if(jTextField11.getCaretPosition() < 1){
      
            System.out.println("Nothing");
        }else{
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND main_service ilike '"+jComboBox1.getSelectedItem()+"%' UNION ALL select product,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox1.getSelectedItem()+"' order by service_type"));
        /*}else{
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,anaesthetist_rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND main_service ilike '"+jComboBox1.getSelectedItem()+"%' UNION ALL select product,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox1.getSelectedItem()+"' order by service_type"));
      
        }
      
      
        jSearchScrollPane.setViewportView(jSearchTable);
      
      
    }
      */
        
        
        
        
// Add your handling code here:
    }//GEN-LAST:event_jTextField14CaretUpdate
    
    private void jTable3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable3KeyReleased
        float qty = java.lang.Float.parseFloat(jTable3.getValueAt(jTable3.getSelectedRow(), 1).toString());
        float price = java.lang.Float.parseFloat(jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString());
        
        
        float total = (qty*price);
        jTable3.setValueAt(total, jTable3.getSelectedRow(), 3);
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable3, 3);
        jTextField10.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));// TODO add your handling code here:
    }//GEN-LAST:event_jTable3KeyReleased
    
    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        
        if (jTable3.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked2();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jTable3MouseClicked
    private void cmboxMouseClicked2() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane2.getLocationOnScreen();
        jSearchDialog4.setSize(400,200);
        jSearchDialog4.setLocation(point);
        jSearchDialog4.show();
    }
    private void jSearchTable2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseEntered
// TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseEntered
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        int rows2Delete = jTable3.getSelectedRowCount();
        
        int[] selectedRows = jTable3.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable3.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable3.getModel();
                
                defTableModel.removeRow(jTable3.getSelectedRow());
            }
        }
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable3, 3);
        jTextField10.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));        //System.out.println("This date is todays date");
        //     System.out.print("This date is todays date");
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
//        System.setProperty("docsdir",System.getProperty("user.dir"));
        java.io.File xmlDocFile = null;
        
        
        xmlDocFile = new java.io.File(System.getProperty("docsdir"),"ForwardedCardData.xml");//.createTempFile("HospitalClaimsFile", ".xml", new java.io.File(System.getProperty("docsdir")));
        
        
        biz.systempartners.claims.XMLClaimFile claimFile = new biz.systempartners.claims.XMLClaimFile();
        
        claimFile.processFile(xmlDocFile);
        
        
        //  java.io.File xmlDocFile = null;
        //  try {
        
        // xmlDocFile = java.io.File.createTempFile("CLAIM"+biz.systempartners.claims.DateLables.getDateLabel()+"_", ".xml", new java.io.File(System.getProperty("docsdir")));
        xmlDocFile = new java.io.File(System.getProperty("docsdir"),"ForwardedCardData.xml");//.createTempFile("HospitalClaimsFile", ".xml", new java.io.File(System.getProperty("docsdir")));
        
        // } catch(java.io.IOException ioExec){
        //    ioExec.printStackTrace();
        // }
        
        //   biz.systempartners.claims.XMLClaimFile claimFile = new biz.systempartners.claims.XMLClaimFile();
        
        //   claimFile.processFile(xmlDocFile);
        
        javax.swing.JOptionPane.showMessageDialog(this, "Smart Card read successfully with identity:\nCard Number :["+claimFile.cardNumber+"] and Name : ["+claimFile.patientSurName+" "+claimFile.patientForenames+"]");
        
        com.afrisoftech.hospital.GeneralBillingIntfr.jTextField9.setText(claimFile.patientNumber);
        com.afrisoftech.hospital.GeneralBillingIntfr.jTextField1.setText(claimFile.patientSurName+" "+claimFile.patientForenames);
        com.afrisoftech.hospital.GeneralBillingIntfr.jComboBox2.setSelectedItem("Scheme");
        com.afrisoftech.hospital.GeneralBillingIntfr.jTextField13.setText(claimFile.medicalAidCode);
        com.afrisoftech.hospital.GeneralBillingIntfr.jTextField18.setText(claimFile.medicalAidPlan);
        com.afrisoftech.hospital.GeneralBillingIntfr.jTextField17.setText(claimFile.medicalAidNumber);
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed
    
    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jTable2KeyReleased
    
    private void jScrollPane1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane1KeyReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1KeyReleased
    
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
/*        if (jTable2.getSelectedColumn() == 0) {
 
            this.cmboxMouseClicked();
        }
 */
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked
    
    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed
    
    private void jTextField17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField17ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField17ActionPerformed
    
    private void dispose11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose11ActionPerformed
        jSearchDialog13.dispose(); // Add your handling code here:
    }//GEN-LAST:event_dispose11ActionPerformed
    
    private void jSearchTable13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable13MouseClicked
        jTextField13.setText(jSearchTable13.getValueAt(jSearchTable13.getSelectedRow(), 1).toString());
        jTextField18.setText(jSearchTable13.getValueAt(jSearchTable13.getSelectedRow(), 2).toString());
        jTextField17.setText(jSearchTable13.getValueAt(jSearchTable13.getSelectedRow(), 0).toString());
        
        jSearchDialog13.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable13MouseClicked
    
    private void jTextField1113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1113CaretUpdate
        if(jTextField1113.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable13.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField1113.getText()+"%' order by scheme_name"));
            
            
             /*   searchRowSet11.execute("SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%' order by scheme_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
              
                jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Account no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("scheme_name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
              
                }));
              */
            jSearchTable13.setShowHorizontalLines(false);
            jSearchScrollPane13.setViewportView(jSearchTable13);
            
            
        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField1113CaretUpdate
    
    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        searchButton11aClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed
    private void searchButton11aClicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog13.dispose();
        java.awt.Point point = this.jTextField13.getLocationOnScreen();
        
        jSearchDialog13.setSize(400,200);
        
        jSearchDialog13.setLocation(point);
        jSearchDialog13.show();
    }
    private void jCheckBox21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox21ActionPerformed
        this.jTextField1.setEditable(false);// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox21ActionPerformed
    
    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        this.jTextField1.setEditable(false);// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox11ActionPerformed
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        float billNo = 0;
        try{
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select discount from pb_smartcards WHERE card_name = '"+jTextField13.getText()+"'");
            while (rst11.next()){
                
                billNo = rst11.getFloat(1);
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1) != null) {
            if (jTable1.getSelectedColumn() == jTable1.getSelectedColumn()) {
                float qty = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                float price = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
                
                if(billNo > 0){
                    float total = (qty*price)-(qty*price*(billNo/100));
                    jTable1.setValueAt(total, jTable1.getSelectedRow(), 3);
                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
                    jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                }else{
                    float total = qty*price;
                    jTable1.setValueAt(total, jTable1.getSelectedRow(), 3);
                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
                    jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                    
                }
            }
            
        }
        
        
        
   /*     if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1) != null) {
            if (jTable1.getSelectedColumn() == jTable1.getSelectedColumn()) {
                float qty = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                float price = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
                float total = qty*price;
                jTable1.setValueAt(total, jTable1.getSelectedRow(), 3);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
    
                jTextField3.setText(java.lang.String.valueOf(totalSum));
            }
    
        }
    
    */
       /* double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
        
        //       if (jTable1.getValueAt(jTable1.getSelectedRow(), 1) != null) {
        double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        
        double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        
        double resVal = floatCol2 * floatCol3;
        
        
        jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
        
            if (jTable1.getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
        
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
        
        
                // totalSum = floatTotal + resFloat;
        
            }
        }
        this.tableModelTableChanged();
        //}
        */
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked();
        }          // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
        javax.swing.JOptionPane.showMessageDialog(this, "Key Pressed");
// TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButtonClickedw();
        
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void searchButtonClickedw() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField92.getLocationOnScreen();
        
        jSearchDialog31.setSize(400,200);
        
        jSearchDialog31.setLocation(point);
        
        jSearchDialog31.show();
        
        
        
    }
    private void jSearchTable31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable31MouseClicked
        jTextField92.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 0).toString());
        jTextField8.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 1).toString());
        this.jSearchDialog31.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable31MouseClicked
    
    private void jButton921ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton921ActionPerformed
        this.jSearchDialog31.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton921ActionPerformed
    
    private void jTextField1121CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1121CaretUpdate
        if(jTextField1121.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable31.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1121.getText()+"%' order by first_name"));
            
           /* try {
            
                searchRowSet31.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField1121.getText()+"%' order by first_name");
                jSearchTable31.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet31, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
            
                }));
            */
            //                jSearchTable31.setShowHorizontalLines(false);
            jSearchScrollPane31.setViewportView(jSearchTable31);
            
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1121CaretUpdate
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        String receiptNo = null;
        try {
            connectDB.setAutoCommit(false);
            
            
            
            java.sql.Statement ps1 = connectDB.createStatement();
            java.sql.ResultSet rst1 = ps1.executeQuery("select currval('billing_no_seq')");
            while (rst1.next())
                receiptNo = rst1.getObject(1).toString();
            
            if(jCheckBox21.isSelected()){
                IpRequestPdf policy = new IpRequestPdf();
                policy.IpRequestPdf(connectDB, jTextField9.getText(),jTextField1.getText(),jTextField3.getText(),receiptNo,this.jTextField13.getText());
            }else{
                
                RequestPdf policy = new RequestPdf();
                policy.RequestPdf(connectDB, jTextField9.getText(),jTextField1.getText(),jTextField3.getText(),receiptNo,this.jTextField13.getText());
                
            }
            
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }          // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String billNo = null;
        
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String chbox = null;
        String visitid = "-";
        if (jCheckBox11.isSelected()){
            chbox = "OP";
        }else{
            if (jCheckBox21.isSelected()){
                chbox = "WI";
            }else{
                if (jCheckBox6.isSelected()){
                    chbox = "IP";
                }
            }
        }
        try {
            connectDB.setAutoCommit(false);
            jButton1ActionPerformed(evt);
            
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select currval('billing_no_seq'),current_user");
            while (rst11.next()){
                rst11.getObject(1).toString();
                
                billNo = rst11.getObject(1).toString();
                user = rst11.getObject(2).toString();
            }
            
            if(jCheckBox21.isSelected()){
                IpRequestPdf policy = new IpRequestPdf();
                policy.IpRequestPdf(connectDB, jTextField9.getText(),jTextField1.getText(),jTextField3.getText(),billNo,this.jTextField13.getText());
            }else{
                RequestPdf policy = new RequestPdf();
                policy.RequestPdf(connectDB, jTextField9.getText(),jTextField1.getText(),jTextField3.getText(),billNo,this.jTextField13.getText());
                
            }
            //        ps11.close();
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            // jLabel7.setForeground(java.awt.Color.blue);
            // jLabel7.setText("Insert successful");
            jButton12.setEnabled(false);
            jButton1.setEnabled(false);
            jButton2.setEnabled(true);
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jCheckBox61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox61ActionPerformed
        this.jTextField12.setEditable(true);
        this.jTextField71.setEditable(true);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox61ActionPerformed
    
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        this.jTextField1.setEditable(true);
        this.jTextField2.setText("Walk In");
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed
    
    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        javax.swing.JInternalFrame other = new ServiceAccSlipIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed
    
    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        jSearchDialog3.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton92ActionPerformed
    
    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        
        jTextField1.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 0).toString());
        
        
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_patient_register where patient_no  ='"+jTextField91.getText()+"'");
            while (rset1.next()){
                jTextField2.setText(rset1.getObject(1).toString());
                jComboBox2.setSelectedItem(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        jTextField112.setText("");
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog3.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable3MouseClicked
    
    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        if(jTextField112.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField112.getText()+"%' and last_visit > current_date - 5 order by second_name"));
            
          /*  try {
           
                searchRowSet3.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField112.getText()+"%' and last_visit > current_date - 5 order by second_name");
           
                jSearchTable3.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet21, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                }));
           */
            jSearchTable3.setShowHorizontalLines(false);
            jSearchScrollPane3.setViewportView(jSearchTable3);
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField112CaretUpdate
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog3.setSize(400,200);
        
        jSearchDialog3.setLocation(point);
        
        jSearchDialog3.show();
        
        
        
    }
    private void jTable111KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable111KeyReleased
        if (jTable111.getValueAt(jTable111.getSelectedRow(), 1) != null) {
            float floatCol2 = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 1).toString());
            
            float floatCol3 = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 2).toString());
            
            float resVal = floatCol2 * floatCol3;
            
            java.lang.Float resFloat =new java.lang.Float(resVal);
            
            if (jTable111.getValueAt(jTable111.getSelectedRow(), 1) != null) {
                // if (jTable111.getSelectedColumn() == 1) {
                
                jTable111.setValueAt(resFloat, jTable111.getSelectedRow(), 3);
                
                double Total = java.lang.Double.parseDouble(jTextField311.getText().toString());
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = Total + tableSum;
                jTextField311.setText(""+totalSum+"");
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable111KeyReleased
    
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if(jTextField11111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField11111.getText()+"%' order by first_name"));
            
            
          /*  try {
           
                searchRowSet111.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField11111.getText()+"%' order by first_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
           
                jSearchTable111.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet111, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
           
                }));
           */
            jSearchTable111.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(jSearchTable111);
            
            
        }          // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate
    
    private void jButton5211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5211ActionPerformed
        this.jSearchDialog211.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton5211ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        this.jPanel111.setVisible(false);
        this.jPanel11.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void searchButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton11ActionPerformed
        searchButton11Clicked();      // Add your handling code here:
    }//GEN-LAST:event_searchButton11ActionPerformed
    
    private void jButton411ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton411ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton411ActionPerformed
    private void searchButton11Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField911.getLocationOnScreen();
        
        jSearchDialog211.setSize(400,200);
        
        jSearchDialog211.setLocation(point);
        
        jSearchDialog211.show();
    }
    private void jButton311ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton311ActionPerformed
        jTextField111.setText("");
        jTextField211.setText("");
        jTextField311.setText("");
        for (int k = 0; k < jTable111.getRowCount(); k++ ) {
            for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                jTable111.getModel().setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField311.setText("0.00");   // Add your handling code here:
    }//GEN-LAST:event_jButton311ActionPerformed
    
    private void jButton611ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton611ActionPerformed
        
        int rows2Delete = jTable111.getSelectedRowCount();
        
        int[] selectedRows = jTable111.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                
                defTableModel.removeRow(jTable111.getSelectedRow());
            }
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton611ActionPerformed
    
    private void jButton9111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9111ActionPerformed
        jSearchDialog111.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton9111ActionPerformed
    
    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
        jTable111.setValueAt(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(),1),jTable111.getSelectedRow(), 5);
        //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
        //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        jTextField11111.setText("");
        jSearchDialog111.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked
    
    private void jTextField11111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11111ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11111ActionPerformed
    private void cmbox211MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable111.getLocationOnScreen();
        jSearchDialog111.setSize(400,200);
        jSearchDialog111.setLocation(point);
        jSearchDialog111.show();
    }
    private void jButton912ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton912ActionPerformed
        jSearchDialog12.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton912ActionPerformed
    
    private void jSearchTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable12MouseClicked
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),0),jTable111.getSelectedRow(), 0);
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),1),jTable111.getSelectedRow(), 2);
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),2),jTable111.getSelectedRow(), 4);
        jTextField1112.setText("");
        jSearchDialog12.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTable12MouseClicked
    
    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate
        jSearchTable12.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField1112.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type"));
        
     /*   try {
            searchRowSet12.execute("select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField1112.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type");
      
            jSearchTable12.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet12, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Service", false),
                new org.netbeans.lib.sql.models.TableModel.Column("price", "Price", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
            }));
      */
        jSearchScrollPane12.setViewportView(jSearchTable12);
        System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1112CaretUpdate
    private void cmbox111MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable111.getLocationOnScreen();
        jSearchDialog12.setSize(400,200);
        jSearchDialog12.setLocation(point);
        jSearchDialog12.show();
    }
    private void jTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable111MouseClicked
        if (jTable111.getSelectedColumn() == 0) {
            
            this.cmbox111MouseClicked();
        }          // Add your handling code here:
        if (jTable111.getSelectedColumn() == 5) {
            
            this.cmbox211MouseClicked();
        }       // Add your handling code here:
    }//GEN-LAST:event_jTable111MouseClicked
    
    private void jButton111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton111ActionPerformed
        if(jTextField121.getText().equalsIgnoreCase("")){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without the name","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql1= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql1.toString());
            
            java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
            
            System.out.println(datenowSql.toString());
            // try{
            String billNo = null;
            
            String transNo = null;
            String payMode = null;
            String patientAcc = null;
            String cardNo = null;
            String AccDesc = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            String expDate = null;
            String staffNo = null;
            String glAcc = null;
            String user = null;
            String accDesc1 = null;
            String insAcc = null;
            String visitid = "-";
            try {
                connectDB.setAutoCommit(false);
                if(!(jTextField711.getText().equals("Cash")||jTextField711.getText().equals(""))){
                    
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTextField911.getText()+"'");
                    while (rse1.next()){
                        
                        // patientAcc = rse1.getObject(1).toString();
                        payMode = rse1.getObject(1).toString();
                        
                        cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                        scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                        cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                        isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                        // expDate = (dbObject.getDBObject(rset1.getObject(6), "null");
                        staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                    }
                }
                java.sql.Statement stm12 = connectDB.createStatement();
                java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rse12.next())
                    
                    patientAcc = rse12.getObject(1).toString();
                AccDesc = rse12.getObject(2).toString();
                
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                while (rst.next())
                    rst.getObject(1).toString();
                
                transNo = rst.getObject(1).toString();
                
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
                while (rst11.next())
                    rst11.getObject(1).toString();
                
                billNo = rst11.getObject(1).toString();
                user = rst11.getObject(2).toString();
            /*    java.sql.Statement ps11w1 = connectDB.createStatement();
                java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select visit_id from hp_admission where patient_no = '"+jTextField9.getText()+"' and discharge = false");
                while (rst11w1.next()){
             
             
                    visitid = rst11w1.getObject(1).toString();
                }
             */
                for (int i = 0; i < jTable111.getRowCount(); i++){
                    if (jTable111.getValueAt(i,0) != null){
                        java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = stm121.executeQuery("select main_service,current_user from pb_operating_parameters where gl_account ='"+jTable111.getValueAt(i,4).toString()+"'");
                        while (rse121.next())
                            
                            glAcc = rse121.getObject(1).toString();
                        user = rse121.getObject(2).toString();
                        
                        
                        
                        java.sql.Statement stm2 = connectDB.createStatement();
                        java.sql.ResultSet rse2 = stm2.executeQuery("SELECT staff_no from pb_doctors_list where (upper(first_name||' '||middle_name)) = '"+jTable111.getValueAt(i,5).toString()+"'");
                        while (rse2.next())
                            
                            insAcc = rse2.getObject(1).toString();
                        java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        pstmt21.setString(1,insAcc);
                        pstmt21.setString(2,jTable111.getValueAt(i,0).toString());
                        pstmt21.setString(3,jTable111.getValueAt(i,5).toString());
                        pstmt21.setString(4,transNo);
                        pstmt21.setString(5,jTable111.getValueAt(i,4).toString());
                        pstmt21.setString(6,"Doctors Fee");
                        pstmt21.setString(7,"00");
                        pstmt21.setString(8,jTable111.getValueAt(i,3).toString());
                        pstmt21.setString(9,"");
                        pstmt21.setString(10,jTextField911.getText());
                        
                        pstmt21.setString(11,jTable111.getValueAt(i,0).toString());
                        pstmt21.setString(12,"false");
                        pstmt21.setString(14,datePicker2.getDate().toString());
                        pstmt21.setString(13,user);
                        pstmt21.setString(15,"00");
                        pstmt21.setString(19,jTextField711.getText());
                        pstmt21.setString(17,"0.0");
                        pstmt21.setString(16,jTextField121.getText());
                        
                        pstmt21.setString(18,jTable111.getValueAt(i,3).toString());
                        pstmt21.executeUpdate();
                        
                        
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                        
                        pstmt.setString(1,jTextField911.getText());
                        pstmt.setObject(2,jTable111.getValueAt(i,0).toString());
                        pstmt.setString(3,jTextField211.getText());
                        pstmt.setString(4,jTextField711.getText());
                        pstmt.setString(5,transNo);
                        pstmt.setString(7,scheme);
                        pstmt.setString(6,cardNo);
                        pstmt.setString(8,cardName);
                        pstmt.setString(9,jTextField1.getText());
                        pstmt.setString(10,null);
                        pstmt.setString(11,"");
                        pstmt.setObject(12,jTable111.getValueAt(i,3).toString());
                        pstmt.setString(13,"00");
                        pstmt.setString(14,datePicker2.getDate().toString());
                        pstmt.setObject(15,patientAcc);
                        pstmt.setString(16,glAcc);
                        pstmt.setObject(17,jTable111.getValueAt(i,1).toString());
                        pstmt.setObject(18,staffNo);
                        pstmt.setBoolean(19,false);
                        pstmt.setString(20,"Billing");
                        pstmt.setBoolean(21,false);
                        pstmt.setString(22,AccDesc);
                        pstmt.setString(23,visitid);
                        pstmt.setString(24,user);
                        pstmt.setString(25,billNo);
                        pstmt.setString(26,"IP");
                        pstmt.setString(27,"'now'");
                        pstmt.setString(28,visitid);
                        pstmt.executeUpdate();
                    /*
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                    pstmt2.setString(2,glAcc);
                    pstmt2.setString(3,jTextField9.getText());
                    pstmt2.setString(4,jTextField1.getText());
                    pstmt2.setString(5,"");
                    pstmt2.setString(6,cardNo);
                    pstmt2.setString(7,cardName);
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,isurer);
                    pstmt2.setString(10,"");
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                    pstmt2.setString(15,"Revenue");
                    pstmt2.setString(16,"0.00");
                    pstmt2.setObject(17,jTable1.getValueAt(i,3).toString());
                    pstmt2.setString(18,"'now'");
                    pstmt2.setString(19,transNo);
                    pstmt2.setString(20,"false");
                    pstmt2.setString(21,"false");
                    pstmt2.setString(22,"false");
                    pstmt2.setString(23,user);
                    pstmt2.executeUpdate();
                     */
                    }
                }
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                jTextField111.setText("");
                jTextField211.setText("");
                jTextField711.setText("");
                for (int k = 0; k < jTable111.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                        jTable111.setValueAt(null,k,r);
                    }
                }
                
                //  this.jComboBox131.setSelectedItem(null);
                jTextField311.setText("0.00");
                //  jComboBox2.setSelectedItem(null);
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        }
        
     /*   } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
      
      
        }
      */
        // Add your handling code here:
    }//GEN-LAST:event_jButton111ActionPerformed
    
    private void jSearchTable211MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable211MouseClicked
        jTextField121.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 1).toString());
        jTextField911.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 0).toString());
        double limit = 0.00;
        double bal = 0.00;
        double rect = 0.00;
        try {
            
            
            java.sql.Statement stmt11 = connectDB.createStatement();
            java.sql.ResultSet rset11 = stmt11.executeQuery("select iplimit from hp_inpatient_register where patient_no  ='"+jTextField911.getText()+"'");
            while (rset11.next()){
                limit = rset11.getDouble(1);
                
                //  jTextField71.setText(rset1.getObject(2).toString());
            }
            java.sql.Statement stmt111 = connectDB.createStatement();
            java.sql.ResultSet rset111 = stmt111.executeQuery("select sum(debit) from hp_patient_card where patient_no  ='"+jTextField911.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is null)");
            while (rset111.next()){
                bal = rset111.getDouble(1);
                
                //  jTextField71.setText(rset1.getObject(2).toString());
            }
            java.sql.Statement stmt1111 = connectDB.createStatement();
            java.sql.ResultSet rset1111 = stmt1111.executeQuery("select sum(credit) from hp_patient_card where patient_no  ='"+jTextField911.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is null)");
            while (rset1111.next()){
                rect = rset1111.getDouble(1);
                
                //  jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        if(bal>(limit+rect)){
            javax.swing.JOptionPane.showMessageDialog(this, "Limit Exceeded","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            this.jButton111.setEnabled(false);
        }else{
            this.jButton111.setEnabled(true);
            
            try {
                
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_inpatient_register where patient_no  ='"+jTextField911.getText()+"'");
                while (rset1.next()){
                    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField711.setText(rset1.getObject(2).toString());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        }
        jTextField11311.setText("");
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog211.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jSearchTable211MouseClicked
    
    private void jTextField11311CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11311CaretUpdate
        if(this.jCheckBox2.isSelected() && jCheckBox31.isSelected()){
            if(jTextField11311.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                
                jSearchTable211.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where patient_no ILIKE '"+jTextField11311.getText()+"%' order by second_name"));
            /*
                try {
             
                    searchRowSet211.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where patient_no ILIKE '"+jTextField11311.getText()+"%' order by second_name");
             
                    jSearchTable211.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet211, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
             */
                jSearchTable211.setShowHorizontalLines(false);
                jSearchScrollPane211.setViewportView(jSearchTable211);
                
                
            }
        }else{
            if(this.jCheckBox2.isSelected() && jCheckBox41.isSelected()){
                if(jTextField11311.getCaretPosition() < 1){
                    
                    System.out.println("Nothing");
                }else{
                    jSearchTable211.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField11311.getText()+"%' order by second_name"));
                    
                 /*       searchRowSet211.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField11311.getText()+"%' order by second_name");
                  
                        jSearchTable211.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet211, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                            // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                  */
                    jSearchTable211.setShowHorizontalLines(false);
                    jSearchScrollPane211.setViewportView(jSearchTable211);
                    
                    
                }
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11311CaretUpdate
    private void searchButton211Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog211.setSize(400,200);
        
        jSearchDialog211.setLocation(point);
        
        jSearchDialog211.show();
        
        
        
    }
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        this.jPanel11.setVisible(false);
        this.jPanel111.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed
    
    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        jTextField11.setText("");
        jTextField21.setText("");
        jTextField71.setText("");
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField31.setText("0.00");     // Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed
    
    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        
        int rows2Delete = jTable11.getSelectedRowCount();
        
        int[] selectedRows = jTable11.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                
                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }
        
        this.tableModelTableChanged1();
        // Add your handling code here:
    }//GEN-LAST:event_jButton61ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if(jTextField12.getText().equalsIgnoreCase("")){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without the name","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            //   this.tableModelTableChanged1();
            
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql1= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql1.toString());
            
            java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
            
            System.out.println(datenowSql.toString());
            //  try{
            String billNo = null;
            
            String transNo = null;
            String payMode = null;
            String patientAcc = null;
            String cardNo = null;
            String AccDesc = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            String expDate = null;
            String staffNo = null;
            String glAcc = null;
            String user = null;
            String accDesc1 = null;
            String insAcc = null;
            String patientAcc1 = null;
            String AccDesc1 = null;
            try {
                connectDB.setAutoCommit(false);
                
                
                java.sql.Statement stm12 = connectDB.createStatement();
                java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rse12.next()){
                    
                    patientAcc = rse12.getObject(1).toString();
                    AccDesc = rse12.getObject(2).toString();
                }
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                while (rst.next()){
                    rst.getObject(1).toString();
                    
                    transNo = rst.getObject(1).toString();
                }
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
                while (rst11.next()){
                    rst11.getObject(1).toString();
                    
                    billNo = rst11.getObject(1).toString();
                    user = rst11.getObject(2).toString();
                }
                
                for (int i = 0; i < jTable11.getRowCount(); i++){
                    if (jTable11.getValueAt(i,0) != null){
                        java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = stm121.executeQuery("select main_service,current_user from pb_operating_parameters where gl_account ='"+jTable11.getValueAt(i,4).toString()+"'");
                        while (rse121.next()){
                            
                            glAcc = rse121.getObject(1).toString();
                            user = rse121.getObject(2).toString();
                            
                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?)");
                            
                            pstmt2.setString(1,jTextField91.getText());
                            pstmt2.setString(10,"");
                            
                            pstmt2.setString(2,jTextField11.getText());
                            pstmt2.setString(3,jTextField71.getText());
                            pstmt2.setString(4,jTextField21.getText());
                            pstmt2.setString(5,jTable11.getValueAt(i,0).toString());
                            pstmt2.setString(6,jTable11.getValueAt(i,1).toString());
                            pstmt2.setString(7,jTable11.getValueAt(i,3).toString());
                            pstmt2.setObject(8,jTable11.getValueAt(i,4).toString());
                            pstmt2.setString(9,datePicker2.getDate().toString());
                            
                            pstmt2.setString(12,"false");
                            pstmt2.setString(11,user);
                            pstmt2.setString(13,glAcc);
                            pstmt2.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                            
                            pstmt21.setString(1,jTextField91.getText());
                            pstmt21.setString(10,"");
                            
                            pstmt21.setString(2,jTextField12.getText());
                            pstmt21.setString(3,"OP");
                            pstmt21.setString(4,jTextField71.getText());
                            pstmt21.setString(5,"0");
                            pstmt21.setString(8,glAcc);
                            pstmt21.setString(6,jTable11.getValueAt(i,0).toString());
                            pstmt21.setString(7,jTable11.getValueAt(i,1).toString());
                            pstmt21.setString(9,jTable11.getValueAt(i,3).toString());
                            pstmt21.setObject(12,"0");
                            pstmt21.setString(11,datePicker2.getDate().toString());
                            pstmt21.setString(13,jTable11.getValueAt(i,5).toString());
                            pstmt21.setString(14,user);
                            pstmt21.setString(15,"'now'");
                            pstmt21.setString(16,"Billing");
                            pstmt21.executeUpdate();
                        }
                        
                        java.sql.Statement stm2 = connectDB.createStatement();
                        java.sql.ResultSet rse2 = stm2.executeQuery("SELECT staff_no from pb_doctors_list where (upper(first_name||' '||middle_name)) = '"+jTable11.getValueAt(i,5).toString()+"'");
                        while (rse2.next())
                            
                            insAcc = rse2.getObject(1).toString();
                      /*
                        java.sql.PreparedStatement pstmt211 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                        pstmt211.setString(1,insAcc);
                        pstmt211.setString(2,jTable11.getValueAt(i,0).toString());
                        pstmt211.setString(3,jTable11.getValueAt(i,5).toString());
                        pstmt211.setString(4,transNo);
                        pstmt211.setString(5,jTable11.getValueAt(i,4).toString());
                        pstmt211.setString(6,"Doctors Fee");
                        pstmt211.setString(7,"00");
                        pstmt211.setString(8,jTable11.getValueAt(i,3).toString());
                        pstmt211.setString(9,"");
                        pstmt211.setString(10,jTextField91.getText());
                        pstmt211.setString(11,jTable11.getValueAt(i,0).toString());
                        pstmt211.setString(12,"false");
                        pstmt211.setString(14,datePicker2.getDate().toString());
                        pstmt211.setString(13,user);
                        pstmt211.setString(15,"00");
                        pstmt211.setString(19,jTextField71.getText());
                        pstmt211.setString(17,"00");
                        pstmt211.setString(16,jTextField12.getText());
                        pstmt211.setString(18,jTable11.getValueAt(i,3).toString());
                        pstmt211.executeUpdate();
                       */
                        java.sql.PreparedStatement pstmt211T = connectDB.prepareStatement("insert into ac_doctors_ledger_OFF values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                        pstmt211T.setString(1,insAcc);
                        pstmt211T.setString(2,jTable11.getValueAt(i,0).toString());
                        pstmt211T.setString(3,jTable11.getValueAt(i,5).toString());
                        pstmt211T.setString(4,transNo);
                        pstmt211T.setString(5,jTable11.getValueAt(i,4).toString());
                        pstmt211T.setString(6,"Doctors Fee");
                        pstmt211T.setString(7,"00");
                        pstmt211T.setString(8,jTable11.getValueAt(i,3).toString());
                        pstmt211T.setString(9,"");
                        pstmt211T.setString(10,jTextField91.getText());
                        pstmt211T.setString(11,jTable11.getValueAt(i,0).toString());
                        pstmt211T.setString(12,"false");
                        pstmt211T.setString(14,datePicker2.getDate().toString());
                        pstmt211T.setString(13,user);
                        pstmt211T.setString(15,"00");
                        pstmt211T.setString(19,jTextField71.getText());
                        pstmt211T.setString(17,"00");
                        pstmt211T.setString(16,jTextField12.getText());
                        pstmt211T.setString(18,jTable11.getValueAt(i,3).toString());
                        pstmt211T.executeUpdate();
                        
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                        
                        pstmt.setString(1,jTextField91.getText());
                        pstmt.setObject(2,jTable11.getValueAt(i,0).toString());
                        pstmt.setString(3,jTextField21.getText());
                        pstmt.setString(4,jTextField71.getText());
                        pstmt.setString(5,transNo);
                        pstmt.setString(7,scheme);
                        pstmt.setString(6,cardNo);
                        pstmt.setString(8,cardName);
                        pstmt.setString(9,isurer);
                        pstmt.setString(10,null);
                        pstmt.setString(11,"");
                        pstmt.setObject(12,jTable11.getValueAt(i,3).toString());
                        pstmt.setString(13,"00");
                        pstmt.setString(14,datePicker2.getDate().toString());
                        pstmt.setObject(15,patientAcc);
                        pstmt.setString(16,glAcc);
                        pstmt.setObject(17,jTable11.getValueAt(i,1).toString());
                        pstmt.setObject(18,staffNo);
                        pstmt.setBoolean(19,false);
                        pstmt.setString(20,"Billing");
                        pstmt.setBoolean(21,false);
                        pstmt.setString(22,AccDesc);
                        pstmt.setString(23,billNo);
                        pstmt.setString(24,user);
                        pstmt.setString(25,billNo);
                        pstmt.setString(26,"IP");
                        pstmt.setString(27,"'now'");
                        pstmt.setString(28,billNo);
                        pstmt.executeUpdate();
                    }
                }
 /*                       System.out.println("Can you print this "+jTable11.getValueAt(i,3).toString());
                        java.sql.Statement stm1212 = connectDB.createStatement();
                        java.sql.ResultSet rse1212 = stm1212.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                        while (rse1212.next())
  
                            patientAcc1 = rse1212.getObject(1).toString();
                        AccDesc1 = rse1212.getObject(2).toString();
  
                        System.out.println("Yes I Can print this "+patientAcc1);
                        java.sql.PreparedStatement pstmt29 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                        pstmt29.setObject(1,patientAcc1);
                        pstmt29.setObject(2,AccDesc1);
                        pstmt29.setString(3,jTextField91.getText());
                        pstmt29.setObject(4,jTextField12.getText());
                        pstmt29.setObject(5,"");
                        pstmt29.setObject(6,"");
                        pstmt29.setObject(7,"_");
                        pstmt29.setString(8,"");
                        pstmt29.setString(9,jTextField8.getText());
                        pstmt29.setString(10,"");
                        pstmt29.setString(11,"");
                        pstmt29.setString(12,"");
                        pstmt29.setString(13,"");
                        pstmt29.setString(14,jTable11.getValueAt(i,0).toString());
                        pstmt29.setString(15,"Billing");
                        pstmt29.setObject(16,jTable11.getValueAt(i,3));
                        pstmt29.setString(17,"00");
                        pstmt29.setString(18,datePicker2.getDate().toString());
                        pstmt29.setString(19,transNo);
                        pstmt29.setBoolean(20,false);
                        pstmt29.setBoolean(21,false);
                        pstmt29.setBoolean(22,false);
                        pstmt29.setString(23,user);
  
                        pstmt29.executeUpdate();
  
  
                    }
                }
  */
  /*         for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getValueAt(i,0) != null){
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity from pb_activity where code ='"+jTable1.getValueAt(i,4).toString()+"'");
                    while (rse121.next())
   
                        glAcc = rse121.getObject(1).toString();
   
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                    //1 for (int i = 0; i < jTable1.getRowCount(); i++){
   
   
                    pstmt.setString(1,jTextField9.getText());
                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                    pstmt.setString(3,jTextField2.getText());
                    pstmt.setString(4,payMode);
                    pstmt.setString(5,transNo);
                    pstmt.setString(7,scheme);
                    pstmt.setString(6,cardNo);
                    pstmt.setString(8,cardName);
                    pstmt.setString(9,isurer);
                    pstmt.setString(10,expDate);
                    pstmt.setString(11,"");
                    pstmt.setObject(12,jTable1.getValueAt(i,3).toString());
                    pstmt.setString(13,"00");
                    pstmt.setString(14,"'now'");
                    pstmt.setObject(15,patientAcc);
                    pstmt.setString(16,glAcc);
                    pstmt.setObject(17,jTable1.getValueAt(i,1).toString());
                    pstmt.setObject(18,staffNo);
                    pstmt.setBoolean(19,false);
                    pstmt.setString(20,"Billing");
                    pstmt.setBoolean(21,false);
                    pstmt.setString(22,AccDesc);
                    pstmt.setString(23,billNo);
                    pstmt.setString(24,user);
   
                    pstmt.executeUpdate();
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                    pstmt2.setString(2,glAcc);
                    pstmt2.setString(3,jTextField9.getText());
                    pstmt2.setString(4,jTextField1.getText());
                    pstmt2.setString(5,"");
                    pstmt2.setString(6,cardNo);
                    pstmt2.setString(7,cardName);
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,isurer);
                    pstmt2.setString(10,"");
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                    pstmt2.setString(15,"Revenue");
                    pstmt2.setString(16,"0.00");
                    pstmt2.setObject(17,jTable1.getValueAt(i,3).toString());
                    pstmt2.setString(18,"'now'");
                    pstmt2.setString(19,transNo);
                    pstmt2.setString(20,"false");
                    pstmt2.setString(21,"false");
                    pstmt2.setString(22,"false");
                    pstmt2.setString(23,user);
                    pstmt2.executeUpdate();
                }
            }
   */
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                //jLabel71.setForeground(java.awt.Color.blue);
                //  jLabel71.setText("Insert successful");
                jTextField11.setText("");
                jTextField21.setText("");
                jTextField71.setText("");
                for (int k = 0; k < jTable11.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                        jTable11.setValueAt(null,k,r);
                    }
                }
                
                //  this.jComboBox131.setSelectedItem(null);
                jTextField31.setText("0.00");
                //  jComboBox2.setSelectedItem(null);
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
     /*   } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
      
      
        }
      */
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void jButton911ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton911ActionPerformed
        jSearchDialog11.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jButton911ActionPerformed
    private void cmbox2MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable11.getLocationOnScreen();
        jSearchDialog11.setSize(400,200);
        jSearchDialog11.setLocation(point);
        jSearchDialog11.show();
    }
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        String status = null;
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select status from pb_doctors_list where staff_no  ='"+this.jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),0)+"'");
            while (rset1.next()){
                status = rset1.getObject(1).toString();
                //jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        if(status.equalsIgnoreCase("Suspended")||status.equalsIgnoreCase("Closed")){
            javax.swing.JOptionPane.showMessageDialog(this,"Account Closed","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }else{
            jTable11.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),1),jTable11.getSelectedRow(), 5);
            //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
            //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        }
        
        jTextField1111.setText("");
        jSearchDialog11.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1111.getText()+"%' order by first_name"));
            
          /*  try {
           
                searchRowSet11.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1111.getText()+"%' order by first_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
           
                jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
           
                }));
           */
            jSearchTable11.setShowHorizontalLines(false);
            jSearchScrollPane11.setViewportView(jSearchTable11);
            
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jTable11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable11KeyReleased
        
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField31.getText());
        
        if (jTable11.getValueAt(jTable11.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 1).toString());
            
            double floatCol3 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 2).toString());
            
            double resVal = floatCol2 * floatCol3;
            
            
            jTable11.setValueAt(new java.lang.Float(resVal), jTable11.getSelectedRow(), 3);
            
            for (int i = 0; i < jTable11.getRowCount(); i++) {
                
                if (jTable11.getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            this.tableModelTableChanged1();
        }
        
 /*       if (jTable11.getValueAt(jTable11.getSelectedRow(), 1) != null) {
            float floatCol2 = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 1).toString());
  
            float floatCol3 = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 2).toString());
  
            float resVal = floatCol2 * floatCol3;
  
            java.lang.Float resFloat =new java.lang.Float(resVal);
  
            if (jTable11.getSelectedColumn() == 1) {
  
                jTable11.setValueAt(resFloat, jTable11.getSelectedRow(), 3);
  
                double Total = java.lang.Double.parseDouble(jTextField31.getText().toString());
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = Total + tableSum;
                jTextField31.setText(""+totalSum+"");
  
            }
        }
  */
        // Add your handling code here:
    }//GEN-LAST:event_jTable11KeyReleased
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable11.getRowCount(); i++) {
            
            if (jTable11.getValueAt(i, 0) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable11.getRowCount(); i++) {
            
            if (jTable11.getValueAt(i, 0) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog1.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),0),jTable11.getSelectedRow(), 0);
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        jTextField111.setText("");
        jSearchDialog1.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField111.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type"));
       /*
        try {
            searchRowSet1.execute("select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField111.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type");
        
            jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Service", false),
                new org.netbeans.lib.sql.models.TableModel.Column("price", "Price", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
            }));
        */
        jSearchScrollPane1.setViewportView(jSearchTable1);
        System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void jTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MouseClicked
        if (jTable11.getSelectedColumn() == 0) {
            
            this.cmbox1MouseClicked();
        }          // Add your handling code here:
        if (jTable11.getSelectedColumn() == 5) {
            
            this.cmbox2MouseClicked();
        }          // Add your handling code here:
        
        // Add your handling code here:
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable11MouseClicked
    private void cmbox1MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable11.getLocationOnScreen();
        jSearchDialog1.setSize(400,200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.show();
    }
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
    
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        jTextField12.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        
        
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_patient_register where patient_no  ='"+jTextField91.getText()+"'");
            while (rset1.next()){
                jTextField21.setText(rset1.getObject(1).toString());
                jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        jTextField1131.setText("");
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog21.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        if(this.jCheckBox1.isSelected() && this.jCheckBox31.isSelected()){
            
            if(jTextField1131.getCaretPosition() < 3){
                
                System.out.println("Nothing");
            }else{
                jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField1131.getText()+"%' and last_visit > current_date - 15 order by second_name"));
                
                jSearchTable21.setShowHorizontalLines(false);
                jSearchScrollPane21.setViewportView(jSearchTable21);
                
                
                
            }
        }else{
            if(this.jCheckBox1.isSelected() && this.jCheckBox41.isSelected()){
                
                if(jTextField1131.getCaretPosition() < 3){
                    
                    System.out.println("Nothing");
                }else{
                    jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1131.getText()+"%' and last_visit > current_date - 15 order by second_name"));
                    
                    
                    jSearchTable21.setShowHorizontalLines(false);
                    jSearchScrollPane21.setViewportView(jSearchTable21);
                    
                    
                    
                }
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton1Clicked();
        try {
            String code = null;
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select code from pb_activity where activity_category  ILIKE 'CA'");
            while (rset1.next()){
                code = rset1.getObject(1).toString();
                
            }
            
            java.sql.Statement stmt2 = connectDB.createStatement();
            java.sql.ResultSet rset2 = stmt2.executeQuery("select DISTINCT main_service from pb_operating_parameters where gl_account  ILIKE '"+code+"'");
            while (rset2.next()){
                jTextField5.setText(rset2.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
// Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton1Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog21.setSize(400,200);
        
        jSearchDialog21.setLocation(point);
        
        jSearchDialog21.show();
        
        
        
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
/*
        int packCode = 0;
        float billNo = 0;
        try{
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select discount from pb_smartcards WHERE card_name = '"+jTextField13.getText()+"'");
            while (rst11.next()){
                
                billNo = rst11.getFloat(1);
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        
        try{
            java.sql.Statement pstBx2 = connectDB.createStatement();
            
            java.sql.ResultSet rsBx2 = pstBx2.executeQuery("select count(package) from packages where package = '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0)+"' and glcode =  '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2)+"' and package_code ='"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),3)+"' ");
            //java.sql.ResultSet rsBx2 = pstBx2.executeQuery("select count(package) from packages where package = 'Dressing' and glcode =  '100-04-101'");
            
            while (rsBx2.next()){
                packCode = rsBx2.getInt(1);
            }
            if(packCode > 0){
                javax.swing.JOptionPane.showMessageDialog(this,"That item is a package.\nNOTE:You can only save one package at a time!", "Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                jTextField3.setText("0.00");
                
                String pack =null;
                this.invalidate();
                jTable3.grabFocus();
                this.jTable3.setVisible(true);
                this.jLabel54.setVisible(true);
                this.jTextField10.setVisible(true);
                this.jButton5.setVisible(true);
                //jPanel12.setVisible(true);
                this.jScrollPane2.setViewportView(jTable3);
                this.validate();
                // if (jTable1.getValueAt(jTable1.getSelectedRow(), 0) != null) {
                //  pack = jTable1.getValueAt(jTable1.getSelectedRow(), 0) .toString();
                for (int m = 0; m < jTable3.getRowCount(); m++ ) {
                    for (int r = 0; r < jTable3.getColumnCount(); r++ ) {
                        jTable3.getModel().setValueAt(null,m,r);
                    }
                }
                
                int i = 0;
                int j = 0;
                try {
                    java.sql.Statement pstBx2m = connectDB.createStatement();
                    java.sql.ResultSet rsBx2m = pstBx2m.executeQuery("select count(package) from packages where package ilike '"+jTable1.getValueAt(jTable1.getSelectedRow(),0)+"' and glcode =  '"+jTable1.getValueAt(jTable1.getSelectedRow(),4)+"'");
                    
                    while (rsBx2m.next()){
                        j = rsBx2m.getInt(1);
                    }
                    
                    if (j > 0){
                        java.sql.Statement st1 = connectDB.createStatement();
                        java.sql.ResultSet rsetTable1 = st1.executeQuery("select item_service,price,qty,total,glcode FROM packages WHERE package ILIKE '"+jTable1.getValueAt(jTable1.getSelectedRow(),0)+"' AND glcode = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4)+"' and department ilike '"+jComboBox1.getSelectedItem().toString()+"'");
                        while (rsetTable1.next()) {
                            
                            System.out.println("Working at table row "+i);
                            jTable3.setValueAt(rsetTable1.getObject(1), i, 0);
                            jTable3.setValueAt(rsetTable1.getObject(3), i, 1);
                            jTable3.setValueAt(rsetTable1.getObject(2), i, 2);
                            jTable3.setValueAt(rsetTable1.getObject(4), i, 3);
                            jTable3.setValueAt(rsetTable1.getObject(5), i, 4);
                            
                            i++;
                            
                            
                        }
                        
                    }
                    
                    
                    
                } catch(java.sql.SQLException sqlExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(1,jTable1.getSelectedRow(), 1);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable1.getSelectedRow(), 2);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable1.getSelectedRow(), 4);
        
        
        
        jTextField11.setText("");
        
        double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        
        double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        
        if(billNo > 0){
            double resVal = (floatCol2 * floatCol3) - ((floatCol2 * floatCol3)*billNo/100);
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
        }else{
            double resVal = floatCol2 * floatCol3;
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
        }
       */ 
        
/*
 
 // double floatCol2 = java.lang.Double.parseDouble(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
 
       // double floatCol3 = 1;
 
 try {
            javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
 
            connectDB.setAutoCommit(false);
 
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.ResultSet rse122x = stm122x.executeQuery("select '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0)+"' as description,'"+1+"'::numeric as qty,'"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1)+"'::numeric as price,'"+resVal+"'::numeric as total,'"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2)+"' as glcode");
            while (rse122x.next()){
                java.util.Vector rowsToAdd = new java.util.Vector(1,1);
                rowsToAdd.addElement(rse122x.getObject(1));
                rowsToAdd.addElement(rse122x.getObject(2));
                rowsToAdd.addElement(rse122x.getObject(3));
                rowsToAdd.addElement(rse122x.getObject(4));
                rowsToAdd.addElement(rse122x.getObject(5));
 
                defTableModel.addRow(rowsToAdd);
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
        }catch(java.sql.SQLException sq){
 
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
 
        }
 
 */
        
        // }
       /*
        jSearchDialog.dispose();
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
        jTextField3.setText(java.lang.String.valueOf(totalSum));*/
        
        
        //old was up to here
        
                
        float billNo = 0;
        try{
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select discount from pb_smartcards WHERE card_name = '"+jTextField13.getText()+"'");
            while (rst11.next()){
                
                billNo = rst11.getFloat(1);
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(1,jTable1.getSelectedRow(), 1);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable1.getSelectedRow(), 2);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable1.getSelectedRow(), 4);
         jTable1.setValueAt(jTextField22.getText(),jTable1.getSelectedRow(), 5);
        
        jTextField11.setText("");
        
        double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        
        double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        
        if(billNo > 0){
            double resVal = (floatCol2 * floatCol3) - ((floatCol2 * floatCol3)*billNo/100);
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
        }else{
            double resVal = floatCol2 * floatCol3;
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
        }
        
        
/*
 
 // double floatCol2 = java.lang.Double.parseDouble(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
 
       // double floatCol3 = 1;
 
 try {
            javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
 
            connectDB.setAutoCommit(false);
 
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.ResultSet rse122x = stm122x.executeQuery("select '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0)+"' as description,'"+1+"'::numeric as qty,'"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1)+"'::numeric as price,'"+resVal+"'::numeric as total,'"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2)+"' as glcode");
            while (rse122x.next()){
                java.util.Vector rowsToAdd = new java.util.Vector(1,1);
                rowsToAdd.addElement(rse122x.getObject(1));
                rowsToAdd.addElement(rse122x.getObject(2));
                rowsToAdd.addElement(rse122x.getObject(3));
                rowsToAdd.addElement(rse122x.getObject(4));
                rowsToAdd.addElement(rse122x.getObject(5));
 
                defTableModel.addRow(rowsToAdd);
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
        }catch(java.sql.SQLException sq){
 
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
 
        }
 
 */
        jSearchDialog.dispose();
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
        jTextField3.setText(java.lang.String.valueOf(totalSum));
       // double balance = java.lang.Double.valueOf(jTextField20.getText());
        //    double bill = java.lang.Double.valueOf(jTextField3.getText());
       /* if(balance > 0){
            if(totalSum > balance){
                javax.swing.JOptionPane.showMessageDialog(this,"THE BILL IS GREATER THAN THE CARD BALANCE","ALERT MESSAGE!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jButton1.setEnabled(false);
                jButton12.setEnabled(false);
                jButton2.setEnabled(false);
                // jButton7.setEnabled(false);
            }else{
                jButton1.setEnabled(true);
                jButton12.setEnabled(true);
                jButton2.setEnabled(true);
            }
        }
        */
        
        //   jCheckBox7ActionPerformed(evt);
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        
        //   jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,1 as qty,rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND main_service ilike '"+jComboBox1.getSelectedItem()+"%' UNION ALL select product,1 as qty,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox1.getSelectedItem()+"' order by service_type"));
       /* 
        if(this.jCheckBox42.isSelected()){
            
            if(jTextField11.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                if(jRadioButton1.isSelected()){
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"' UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 2"));
                }else{
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,anaesthetist_rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"' UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 2"));
                    
                }
                
                
                jSearchScrollPane.setViewportView(jSearchTable);
                
                
            }
        }else{
            if(jTextField11.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                if(jRadioButton1.isSelected()){
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as glcode,code FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product as service_type,selling_price,gl_code,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"'  UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 1"));
                }else{
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,anaesthetist_rate as price,gl_account as glcode,code FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product as service_type,selling_price,gl_code,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"' UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 1"));
                    
                }
                
                System.out.println("Cannot sort out");
                
            }
        }
        */
        
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("LAB FEE - AAR(SPECIAL)")){
            
         if(this.jCheckBox42.isSelected()){
            
            if(jTextField11.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                if(jRadioButton1.isSelected()){
                    //   jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"' UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 2"));
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct service_type,rate as price,'"+jTextField7.getText()+"' as glcode,'0.00'::numeric as buying_price FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField7.getText().toString()+"%' AND gl_account ILIKE '%"+jTextField7.getText()+"%' UNION ALL select distinct product,selling_price,'"+jTextField7.getText()+"' as gl_code,product_id, transfer_price as buying_price FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND SUB_code ilike  '"+jTextField22.getText()+"'"));
                    
                }else{
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct service_type,anaesthetist_rate as price,'"+jTextField7.getText()+"' as glcode, '0.00'::numeric as buying_price FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField7.getText().toString()+"%' AND gl_account ILIKE '%"+jTextField7.getText()+"%' UNION ALL select distinct product,selling_price,'"+jTextField7.getText()+"' as gl_code,product_id, transfer_price as buying_price FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND sub_code ilike  '"+jTextField22.getText()+"'"));
                    
                    //jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,anaesthetist_rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"' UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 2"));
                    
                }
                
                
                jSearchScrollPane.setViewportView(jSearchTable);
                
                
            }
        }else{
            if(jTextField11.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                if(jRadioButton1.isSelected()){
                    //      jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as glcode FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product as service_type,selling_price,gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"'  UNION ALL select package,package_amt,glcode as service_type FROM pb_packages_setup WHERE package ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 1"));
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct service_type,rate as price,'"+jTextField7.getText()+"' as glcode, '0.00'::numeric as buying_price FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField7.getText().toString()+"%' AND gl_account ILIKE '"+jTextField7.getText()+"' UNION ALL select distinct product as service_type,selling_price,'"+jTextField7.getText()+"' as gl_code, transfer_price as buying_price FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND sub_code ilike  '"+jTextField22.getText()+"'"));
                    
                }else{
                    
                    //jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,anaesthetist_rate as price,gl_account as glcode FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product as service_type,selling_price,gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"' UNION ALL select package,package_amt,glcode as service_type FROM pb_packages_setup WHERE package ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 1"));
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct service_type,anaesthetist_rate as price,'"+jTextField7.getText()+"' as glcode, '0.00'::numeric as buying_price FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField7.getText().toString()+"%' AND gl_account ILIKE '"+jTextField7.getText()+"' UNION ALL select distinct product as service_type,selling_price,'"+jTextField7.getText()+"' as gl_code, transfer_price as buying_price FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND sub_code ilike  '"+jTextField22.getText()+"'"));
                    
                }
                
                System.out.println("Cannot sort out");
                
            }
        }
        
        
        }else{
        
         if(this.jCheckBox42.isSelected()){
            
            if(jTextField11.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                if(jRadioButton1.isSelected()){
                    //   jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"' UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 2"));
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct service_type,rate as price,'"+jTextField7.getText()+"' as glcode,'0.00'::numeric as buying_price FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText().toString()+"%' AND sub_code ILIKE '%"+jTextField22.getText()+"%' and gl_account not ilike '10201-002-AAR' UNION ALL select distinct product,selling_price,'"+jTextField7.getText()+"' as gl_code,product_id, transfer_price as buying_price FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND SUB_code ilike  '"+jTextField22.getText()+"'"));
                    
                }else{
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct service_type,anaesthetist_rate as price,'"+jTextField7.getText()+"' as glcode, '0.00'::numeric as buying_price FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText().toString()+"%' AND sub_code ILIKE '%"+jTextField22.getText()+"%' and gl_account not ilike '10201-002-AAR' UNION ALL select distinct product,selling_price,'"+jTextField7.getText()+"' as gl_code,product_id, transfer_price as buying_price FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND sub_code ilike  '"+jTextField22.getText()+"'"));
                    
                    //jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,anaesthetist_rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"' UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 2"));
                    
                }
                
                
                jSearchScrollPane.setViewportView(jSearchTable);
                
                
            }
        }else{
            if(jTextField11.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                if(jRadioButton1.isSelected()){
                    //      jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as glcode FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product as service_type,selling_price,gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"'  UNION ALL select package,package_amt,glcode as service_type FROM pb_packages_setup WHERE package ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 1"));
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct service_type,rate as price,'"+jTextField7.getText()+"' as glcode, '0.00'::numeric as buying_price FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField11.getText().toString()+"%' AND sub_code ILIKE '%"+jTextField22.getText()+"%' and gl_account not ilike '10201-002-AAR' UNION ALL select distinct product as service_type,selling_price,'"+jTextField7.getText()+"' as gl_code, transfer_price as buying_price FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND sub_code ilike  '"+jTextField22.getText()+"'"));
                    
                }else{
                    
                    //jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,anaesthetist_rate as price,gl_account as glcode FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField11.getText()+"%' AND gl_account ilike '"+jTextField7.getText()+"%' UNION ALL select product as service_type,selling_price,gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND gl_code ilike  '"+jTextField7.getText()+"' UNION ALL select package,package_amt,glcode as service_type FROM pb_packages_setup WHERE package ILIKE '%"+jTextField11.getText()+"%' AND department ILIKE '"+jComboBox1.getSelectedItem()+"%' order by 1"));
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct service_type,anaesthetist_rate as price,'"+jTextField7.getText()+"' as glcode, '0.00'::numeric as buying_price FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField11.getText().toString()+"%' AND sub_code ILIKE '%"+jTextField22.getText()+"%' and gl_account not ilike '10201-002-AAR' UNION ALL select distinct product as service_type,selling_price,'"+jTextField7.getText()+"' as gl_code, transfer_price as buying_price FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND sub_code ilike  '"+jTextField22.getText()+"'"));
                    
                }
                
                System.out.println("Cannot sort out");
                
            }
        }
    }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
    private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane2.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.show();
    }
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        int interval = 0;
        int inward=0;
        double limit = 0.00;
        double bal = 0.00;
        double rect = 0.00;
        double outstanding = 0.00;
        boolean appLimit = false;
        String memberno = null;
        jButton12.setEnabled(true);
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jSearchDialog2.dispose();
        String adm = null;
         String ward = null;
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select discharge, ward from hp_admission where patient_no  ='"+jTextField9.getText()+"' and discharge = false order by date_admitted desc limit 1");
            while (rset1.next()){
                adm = rset1.getString(1);
                ward = rset1.getString(2);
                 jTextField16.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
        if(this.jCheckBox11.isSelected()){
            
            try {
                
                
                java.sql.Statement stmt11 = connectDB.createStatement();
                java.sql.ResultSet rset11 = stmt11.executeQuery("select count(patient_no) from hp_admission where ADMISSION_NO ='"+jTextField9.getText()+"' and discharge = false");
                while (rset11.next()){
                    inward = rset11.getInt(1);
                    
                }
                if(inward > 0)  {
                    javax.swing.JOptionPane.showMessageDialog(this,"Patient already in ward. Please bill as inpatient ", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                    jCheckBox21.setSelected(true);
                    
                    java.sql.Statement stmt1 = connectDB.createStatement();
                    java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode,description,member_no from hp_inpatient_register where patient_no  ='"+jTextField9.getText()+"'");
                    while (rset1.next()){
                        jTextField2.setText(rset1.getObject(1).toString());
                        jComboBox2.setSelectedItem(rset1.getObject(2).toString());
                        jTextField13.setText(dbObject.getDBObject(rset1.getObject(3), "-").toString());
                        memberno = dbObject.getDBObject(rset1.getObject(4), "-").toString();
                        System.out.println(memberno);
                    }
                }else{
                    
                    
                    
                    java.sql.Statement stmt1 = connectDB.createStatement();
                    java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode,description,card_no from hp_patient_register where patient_no  ='"+jTextField9.getText()+"'");
                    while (rset1.next()){
                        jTextField2.setText(rset1.getObject(1).toString());
                        jComboBox2.setSelectedItem(rset1.getObject(2).toString());
                        jTextField13.setText(dbObject.getDBObject(rset1.getObject(3), "-").toString());
                        memberno = dbObject.getDBObject(rset1.getObject(4), "-").toString();
                        System.out.println(memberno);
                    }
               /* if(jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
                    java.sql.Statement stmt1cz = connectDB.createStatement();
                    java.sql.ResultSet rset1cz = stmt1cz.executeQuery("select applylimit from hp_schemestaff where staff_no  ='"+memberno+"' and applylimit = true");
                    while (rset1cz.next()){
                        appLimit = rset1cz.getBoolean(1);
                    }
                    System.out.println(appLimit);
                    if(appLimit){
                        ageingSeries = new com.afrisoftech.timeseries.YearyAgeing(1, datePicker1.getDate());
                
                        java.lang.Object[][] rangeDates = ageingSeries.getAgeingDateSeries();
                
                        // ageingDates = ageingSeries.getAgeingDateSeries();
                
                        // double columnTotals[] = new double[rangeDates.length];
                        for (int x = 0; x < rangeDates.length; x++) {
                            System.out.println(rangeDates[x]);
                            try {
                
                                java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy");
                                com.afrisoftech.lib.DateFormatter dateFormatter = new com.afrisoftech.lib.DateFormatter(dateFormat.parse(rangeDates[x][0].toString().trim()), "yyyy");
                
                                java.lang.String monthString = dateFormatter.getDateString();
                
                                interval = x;
                
                            } catch(java.text.ParseException prs) {
                                prs.printStackTrace();
                            }
                        }
                        java.sql.Statement stmt1c = connectDB.createStatement();
                        java.sql.ResultSet rset1c = stmt1c.executeQuery("select limit_amount from hp_schemestaff where staff_no  ='"+memberno+"' and applylimit = true");
                        while (rset1c.next()){
                            limit = rset1c.getDouble(1);
                        }
                        for (int t = 0; t < rangeDates.length; t++) {
                            java.sql.Statement stmt1cx = connectDB.createStatement();
                            System.out.println("Dates between : "+rangeDates[t][0]+" AND "+rangeDates[t][1]);
                            java.sql.ResultSet rset1cx = stmt1cx.executeQuery("select sum(balance) from ac_debtors where member_no  ='"+memberno+"' AND date between '"+rangeDates[t][0]+"' AND '"+rangeDates[t][1]+"' AND payee ilike '"+jTextField13.getText()+"'");
                            while (rset1cx.next()){
                                bal = rset1cx.getDouble(1);
                                System.out.println(bal);
                            }
                        }
                        outstanding = limit-bal;
                        //  jTextField8.setText(java.lang.String.valueOf(outstanding));
                        if(outstanding >= limit){
                            javax.swing.JOptionPane.showMessageDialog(this, "The patient has exausted the member limit","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }else{
                
                        }
                    }
                }*/
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        }else{
            if(this.jCheckBox21.isSelected()){
               /* try {
                
                
                    java.sql.Statement stmt11 = connectDB.createStatement();
                    java.sql.ResultSet rset11 = stmt11.executeQuery("select iplimit from hp_inpatient_register where patient_no  ='"+jTextField9.getText()+"'");
                    while (rset11.next()){
                        limit = rset11.getDouble(1);
                    }
                    java.sql.Statement stmt111 = connectDB.createStatement();
                    java.sql.ResultSet rset111 = stmt111.executeQuery("select sum(debit) from hp_patient_card where patient_no  ='"+jTextField9.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is null)");
                    while (rset111.next()){
                        bal = rset111.getDouble(1);
                
                        //  jTextField71.setText(rset1.getObject(2).toString());
                    }
                
                    java.sql.Statement stmt1111 = connectDB.createStatement();
                    java.sql.ResultSet rset1111 = stmt1111.executeQuery("select sum(credit) from hp_patient_card where patient_no  ='"+jTextField9.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is null)");
                    while (rset1111.next()){
                        rect = rset1111.getDouble(1);
                
                        //  jTextField71.setText(rset1.getObject(2).toString());
                    }
                
                
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    //  System.out.println("Insert not successful");
                }*/
               /* if(bal>(limit+rect)){
                    javax.swing.JOptionPane.showMessageDialog(this, "Limit Exceeded","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    this.jButton1.setEnabled(false);
                }else{*/
                this.jButton1.setEnabled(true);
                try {
                    
                    
                    java.sql.Statement stmt1 = connectDB.createStatement();
                    java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode,description,member_no from hp_inpatient_register where patient_no  ='"+jTextField9.getText()+"'");
                    while (rset1.next()){
                        jTextField2.setText(rset1.getObject(1).toString());
                        jComboBox2.setSelectedItem(rset1.getObject(2).toString());
                        jTextField13.setText(dbObject.getDBObject(rset1.getObject(3), "-").toString());
                        memberno = dbObject.getDBObject(rset1.getObject(4), "-").toString();
                        System.out.println(memberno);
                    }
                    
                      /*  if(jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
                            java.sql.Statement stmt1cz = connectDB.createStatement();
                            java.sql.ResultSet rset1cz = stmt1cz.executeQuery("select applylimit from hp_schemestaff where staff_no  ='"+memberno+"' and applylimit = true");
                            while (rset1cz.next()){
                                appLimit = rset1cz.getBoolean(1);
                            }
                            System.out.println(appLimit);
                            if(appLimit){
                                ageingSeries = new com.afrisoftech.timeseries.YearyAgeing(1, datePicker1.getDate());
                       
                                java.lang.Object[][] rangeDates = ageingSeries.getAgeingDateSeries();
                       
                                // ageingDates = ageingSeries.getAgeingDateSeries();
                       
                                // double columnTotals[] = new double[rangeDates.length];
                                for (int x = 0; x < rangeDates.length; x++) {
                                    System.out.println(rangeDates[x]);
                                    try {
                       
                                        java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy");
                                        com.afrisoftech.lib.DateFormatter dateFormatter = new com.afrisoftech.lib.DateFormatter(dateFormat.parse(rangeDates[x][0].toString().trim()), "yyyy");
                       
                                        java.lang.String monthString = dateFormatter.getDateString();
                       
                                        interval = x;
                       
                                    } catch(java.text.ParseException prs) {
                                        prs.printStackTrace();
                                    }
                                }
                                java.sql.Statement stmt1c = connectDB.createStatement();
                                java.sql.ResultSet rset1c = stmt1c.executeQuery("select iplimit from hp_schemestaff where staff_no  ='"+memberno+"' and applylimit = true");
                                while (rset1c.next()){
                                    limit = rset1c.getDouble(1);
                                }
                                for (int t = 0; t < rangeDates.length; t++) {
                                    java.sql.Statement stmt1cx = connectDB.createStatement();
                                    System.out.println("Dates between : "+rangeDates[t][0]+" AND "+rangeDates[t][1]);
                                    java.sql.ResultSet rset1cx = stmt1cx.executeQuery("select sum(balance) from ac_debtors where member_no  ='"+memberno+"' AND date between '"+rangeDates[t][0]+"' AND '"+rangeDates[t][1]+"' AND payee ilike '"+jTextField13.getText()+"'");
                                    while (rset1cx.next()){
                                        bal = rset1cx.getDouble(1);
                                        System.out.println(bal);
                                    }
                                }
                                outstanding = limit-bal;
                                // jTextField8.setText(java.lang.String.valueOf(outstanding));
                                if(outstanding >= limit){
                                    javax.swing.JOptionPane.showMessageDialog(this, "The patient has exausted the member limit","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }else{
                       
                                }
                            }
                        }*/
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    //  System.out.println("Insert not successful");
                }
                //}
            }else{
                javax.swing.JOptionPane.showMessageDialog(this,"Patient not in ward","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }
        }
        
        jTextField113.setText("");
        jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(this.jCheckBox11.isSelected() && this.jCheckBox3.isSelected()){
            
            if(jTextField113.getCaretPosition() < 1){
                System.out.println("Nothing");
            }else{
                
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name, year_of_birth, residence from patient_select where patient_no ILIKE '%"+jTextField113.getText()+"%' order by patient_no"));
                
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
                
            }
        }else{
            if(this.jCheckBox11.isSelected() && this.jCheckBox4.isSelected()){
                if(jTextField113.getCaretPosition() < 1){
                    System.out.println("Nothing");
                }else{
                    
                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name, year_of_birth, residence from patient_select where name ILIKE '%"+jTextField113.getText()+"%' order by name"));
                    
                    
                    jSearchTable2.setShowHorizontalLines(false);
                    jSearchScrollPane2.setViewportView(jSearchTable2);
                    
                }
            }
        }
        
        
        
        if(this.jCheckBox21.isSelected() && this.jCheckBox3.isSelected()){
            
            if(jTextField113.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from inpatient_list where patient_no ILIKE '%"+jTextField113.getText()+"%' order by patient_no"));
                
                /*    // searchRowSet2.execute("SELECT patient_no, upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField113.getText()+"%' order by second_name");
                    searchRowSet2.execute("SELECT patient_no, name from inpatient_list where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no");
                 
                    jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                    }));
                 */
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
            }
        }else{
            if(this.jCheckBox21.isSelected() && this.jCheckBox4.isSelected()){
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from inpatient_list where name ILIKE '%"+jTextField113.getText()+"%' order by name"));
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
            }
        }
        
        //searchRowSet2.c
        
        //  GeneralBillingIntfrcurr GeneralBillingIntfrcurr.SearchThread();
        
        //  searchThread.start();
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked2();
        jButton12.setEnabled(true);
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked2() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
        
        
        
    }
    
  /*
   */
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
      try{
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select code,sub_code,dept_shortname from pb_activity WHERE activity ilike '"+jComboBox1.getSelectedItem()+"'");
            while (rst11.next()){
                
                jTextField7.setText(rst11.getString(1));
                jTextField22.setText(rst11.getString(2));
                 jTextField19.setText(rst11.getString(3));
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
        jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 3) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 3) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }    private void cmbox4ActionPerformed(java.awt.event.ActionEvent evt){
   /*     java.lang.Object selectedGuaran = cmbox4.getSelectedItem();
//        int i = jTable2.getSelectedRow();
    
        if (selectedGuaran != null) {
    
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
    
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
    */
        
    }    private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox3.getSelectedItem();
  /*      int i = jTable2.getSelectedRow();
   
        if (selectedGuaran != null) {
   
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
   
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
   
   */
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable1.getSelectedRow();
        
        if (selectedGuaran != null) {
            
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"'");
                
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable1.setValueAt(rs.getObject(1),i,2);
                    jTable1.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
        
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField9.setText("");
        jTextField17.setText("");
        jTextField18.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField3.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select period_from,period_to FROM period_setup WHERE period_status ilike 'Open'");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"The date is within the closed account period! \n Please Contact Accounts Head".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            if(jComboBox3.getSelectedItem().toString().equalsIgnoreCase("-") | jComboBox3.getSelectedItem().toString().equalsIgnoreCase("")){
                javax.swing.JOptionPane.showMessageDialog(this,"You must select Patient Source", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }else{
                      // javax.swing.JOptionPane.showMessageDialog(this,"Confirm if patient is from AAR for special rates.\n    ....... Proceed anyway?", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
       
                dispatchThread = new DispatchThread();
                //  }
                
                dispatchThread.start();
                
                jButton1.setEnabled(false);
                
                jButton12.setEnabled(false);
            }
        }
//        tableModelTableChanged();
        
    /*    } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
     
     
        }
     */
// Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private class SearchThread extends java.lang.Thread {
        
        public void SearchThread(){}
        
        public void run(){
            
            searchNames();
            
        }
        
    }
    private class SearchServicesThread extends java.lang.Thread {
        
        public void SearchServicesThread(){}
        
        public void run(){
            
            searchServices();
            
        }
        
    }
    
    public void searchNames(){
        int j = 0;
        int i = 0;
        
      /* if(jTextField113.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
        try {
            System.out.println("Starting select clause");
          /*  java.sql.Statement stmtTable11 = connectDB.createStatement();
       
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_name)  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false UNION SELECT count(patient_name)  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
       
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {*/
           /*     java.sql.Statement stmtTable1 = connectDB.createStatement();
            
                // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField113.getText()+"%' and last_visit > current_date - 20 order by second_name");// AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
                 java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' order by second_name");
                while (rsetTable1.next()) {
            
                    System.out.println("Working at table row "+i);
                    jSearchTable2.setValueAt(rsetTable1.getObject(1), i, 0);
                    jSearchTable2.setValueAt(rsetTable1.getObject(2), i, 1);
                   // jTable111.setValueAt(rsetTable1.getObject(3), i, 2);
                   // jTable111.setValueAt(rsetTable1.getObject(4), i, 3);
                   // jTable111.setValueAt(rsetTable1.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
            
                    i++;
            
                }
            
            
            //}
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
            }
            */
    }
    
    public void searchServices(){
        
        
    }
    
    private class DispatchThread extends java.lang.Thread {
        
        public void run(){
            
            saveData();
            
        }
    }
    private void saveData(){
        
        if(jTextField1.getText().equalsIgnoreCase("")){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without the name","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
            //from here for
            
            
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql1= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql1.toString());
            
            java.sql.Date datenowSql = new java.sql.Date(dateNow);
            
            System.out.println("This date is not printing "+datenowSql.toString());
            
            String showDate = null;
            
            long receiptDate = datePicker1.getDate().getTime();
            
            java.sql.Date billDate = new java.sql.Date(receiptDate);
            
            //receiptDate = datePicker1.getDate();
            
            System.out.println("This date is todays date "+billDate);
            // if(billDate.before(datenowSql));
            // int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure You would like to save on [ '"+billDate+"' ] which is not todays DATE ?", "Caution before saving data!", javax.swing.JOptionPane.YES_NO_OPTION);
            
            //  if (exitOption == javax.swing.JOptionPane.YES_OPTION || billDate.equals(datenowSql)) {
            //    }
            //   }
            
//            biz.systempartners.claims.Claim claimInstance = new biz.systempartners.claims.Claim();
            
//            claimInstance.createXMLDoc(jTable1);
            //   try{
            String billNo = null;
            String transNo = null;
            String payMode = null;
            String patientAcc = null;
            String cardNo = null;
            String AccDesc = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            java.sql.Date expDate = null;
            String staffNo = null;
            String glAcc = null;
            String user = null;
            String accDesc1 = null;
            String glAcc1 = null;
            String chbox = null;
            String units = null;
            String gacc = null;
            String item = null;
            int itemInt = 0;
            int pack = 0;
            int stockable = 0;
            int stockableG = 0;
            double price = 0.00;
            double Bprice = 0.00;
            String Store = null;
            double qty = 0.00;
            String glCode = null;
            String actCode = null;
            double amount = 0.00;
            double sellPrice = 0.00;
            java.util.Date admDate=null;
            int visitid = 0;
             String storeName = null;
             
            String actNames1 = null;
            String actCode1 = null;
            String invoiceNo = null;
            
            String iTem = null;
            String gcode = null;
            double quant = 0.00;
            double pRice = 0.00;
            double tTotal = 0.00;
            double  revCredit = 0.00;
            double  credit = 0.00;
            double  doctorCredit = 0.00;
            
            if (jCheckBox11.isSelected()){
                chbox = "OP";
            }else{
                if (jCheckBox6.isSelected()){
                    chbox = "WI";
                }else{
                    if (jCheckBox21.isSelected()){
                        chbox = "IP";
                    }
                }
            }
            try {
                connectDB.setAutoCommit(false);
                
                java.sql.Statement stm121 = connectDB.createStatement();
                java.sql.Statement stm1211 = connectDB.createStatement();
                java.sql.Statement stm122 = connectDB.createStatement();
                java.sql.Statement stm122x = connectDB.createStatement();
                java.sql.Statement stm1 = connectDB.createStatement();
                
                java.sql.Statement stm121x = connectDB.createStatement();
                
                java.sql.ResultSet rse121x = stm121x.executeQuery("select direct_rev from pb_patient_names");
                while (rse121x.next()){
                    
                    DirectRev = rse121x.getBoolean(1);
                    
                }
                
                java.sql.Statement stm12 = connectDB.createStatement();
                
                java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rse12.next()){
                    
                    patientAcc = rse12.getObject(1).toString();
                    AccDesc = rse12.getObject(2).toString();
                }
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                
                
                while (rst.next()){
                    rst.getObject(1).toString();
                    
                    transNo = rst.getObject(1).toString();
                }
                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity from pb_activity where activity_category ='DA'");
                while (rsts1.next()){
                    actCode1 = rsts1.getObject(1).toString();
                    actNames1 = rsts1.getObject(2).toString();
                }
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
                while (rst11.next()){
                    rst11.getObject(1).toString();
                    
                    billNo = rst11.getObject(1).toString();
                    user = rst11.getObject(2).toString();
                }
                
                if(this.jCheckBox11.isSelected()){
                    java.sql.Statement stm1q = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1q.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no,member_name from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
                    
                    
                    while (rse1.next()){
                        
                        payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                        cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                        scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                        cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                        isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                        expDate = rse1.getDate(6);
                        staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                        // staffNo = dbObject.getDBObject(rse1.getObject(8), "-");
                    }
                }else{
                   /* if(jCheckBox6.isSelected()){
                        jTextField9.setText("WK"+transNo);
                    }
                   */ 
                    
                }
                if(this.jCheckBox11.isSelected() || jCheckBox6.isSelected()){
                    if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
                        if(jCheckBox6.isSelected()){
                            
                            java.sql.Statement pss1 = connectDB.createStatement();
                            java.sql.ResultSet rss1 = pss1.executeQuery("select 'O'||(nextval('pinvoice_no_seq'))");
                            while (rss1.next()){
                                invoiceNo = rss1.getObject(1).toString();
                            }
                        }
                    }
                    for (int i = 0; i < jTable1.getRowCount(); i++){
                        if (jTable1.getValueAt(i,0) != null){
                            
                          /*  credit = java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString());
                            
                            java.sql.Statement stm121qc = connectDB.createStatement();
                            java.sql.ResultSet rse121c = stm121qc.executeQuery("select round(sum('"+credit+"'*70)/100,-3) ");
                            
                            while (rse121c.next()){
                                
                                doctorCredit=rse121c.getDouble(1);
                                revCredit = credit - doctorCredit;
                                
                                System.out.println("Total Amount = "+credit);
                                System.out.println("Doctor Amount = "+doctorCredit);
                                System.out.println("Revenue Amount = "+revCredit);
                            }
                            */
                            java.sql.Statement stm121q = connectDB.createStatement();
                            java.sql.ResultSet rse121 = stm121q.executeQuery("select activity from pb_activity where code ='"+jTable1.getValueAt(i,4).toString()+"'");
                            
                            while (rse121.next()){
                                
                                glAcc = rse121.getObject(1).toString();
                            }
                            if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
                                if(jCheckBox6.isSelected()){
                                    int slipNo = 0;
                                            
                                          
                                                
                                jTextField9.setText("WK"+transNo);
                        
                                                java.sql.Statement stmp = connectDB.createStatement();
                                                java.sql.ResultSet rsp = stmp.executeQuery("select nextval('creditslip_no_seq'),current_user");
                                                while (rsp.next()){
                                                    slipNo = rsp.getInt(1);
                                                    //  user = rs.getObject(2).toString();
                                                }
                                    
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?))");
                                    
                                    pstmt2.setString(1,jTextField9.getText());
                                    pstmt2.setString(2,jTextField1.getText());
                                    pstmt2.setString(3,jComboBox2.getSelectedItem().toString());
                                    pstmt2.setString(4,jTextField2.getText());
                                    pstmt2.setString(5,jTable1.getValueAt(i,0).toString());
                                    pstmt2.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt2.setDouble(7,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt2.setObject(8,jTable1.getValueAt(i,4).toString());
                                    pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));//java.sql.Date.valueOf(String.format("%1$tY-%1$tm-%1$te",datePicker1.getDate())));
                                    pstmt2.setBoolean(12,false);
                                    pstmt2.setString(10,billNo);
                                    pstmt2.setString(11,user);
                                    pstmt2.setString(13,glAcc);
                                    pstmt2.setInt(14,visitid);
                                    pstmt2.setString(15,jTextField8.getText().toString());
                                    pstmt2.executeUpdate();
                                    
                                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                    pstmt.setString(1,jTextField9.getText());
                                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                    pstmt.setString(3,jComboBox3.getSelectedItem().toString());
                                    pstmt.setString(4,jTextField13.getText());
                                    pstmt.setString(5,transNo);
                                    pstmt.setString(7,scheme);
                                    pstmt.setString(6,cardNo);
                                    pstmt.setString(8,cardName);
                                    pstmt.setString(9,jTextField1.getText());
                                    pstmt.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                    pstmt.setString(11,"");
                                    pstmt.setDouble(12,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt.setDouble(13,0.00);
                                    pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt.setObject(15,patientAcc);
                                    pstmt.setString(16,glAcc);
                                    pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt.setObject(18,staffNo);
                                    pstmt.setBoolean(19,false);
                                    pstmt.setString(20,"Billing");
                                    pstmt.setBoolean(21,false);
                                    pstmt.setString(22,AccDesc);
                                    pstmt.setString(23,invoiceNo);
                                    pstmt.setString(24,user);
                                    pstmt.setString(25,billNo);
                                    pstmt.setString(26,"OP");
                                    pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                    pstmt.setInt(28,visitid);
                                    pstmt.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt24 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                                    pstmt24.setObject(1,jTable1.getValueAt(i,4).toString());
                                    pstmt24.setString(2,glAcc);
                                    pstmt24.setString(3,jTextField9.getText());
                                    pstmt24.setString(4,jTextField1.getText());
                                    pstmt24.setString(5,"");
                                    pstmt24.setString(6,cardNo);
                                    pstmt24.setString(7,cardName);
                                    pstmt24.setString(8,"OP");
                                    pstmt24.setString(9,jTextField8.getText());
                                    pstmt24.setObject(10,jComboBox2.getSelectedItem());
                                    pstmt24.setObject(11,jTable1.getValueAt(i,1).toString());
                                    pstmt24.setString(12,jComboBox3.getSelectedItem().toString());
                                    pstmt24.setString(13,"");
                                    pstmt24.setString(14,jTable1.getValueAt(i,0).toString());
                                    pstmt24.setString(15,"Revenue");
                                    pstmt24.setDouble(16,0.00);
                                    pstmt24.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt24.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt24.setString(19,transNo);
                                    pstmt24.setBoolean(20,false);
                                    pstmt24.setBoolean(21,false);
                                    pstmt24.setBoolean(22,false);
                                    pstmt24.setString(23,user);
                                       pstmt24.setString(24,jTextField19.getText());
                                    pstmt24.setString(25,jTextField92.getText());
                                  
                                    pstmt24.executeUpdate();
                                    
                                     java.sql.PreparedStatement pstmt245 = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                                
                                                pstmt245.setObject(1,"WK"+transNo);
                                                pstmt245.setObject(2,jTextField1.getText());
                                                  pstmt245.setObject(3,"OP");
                                                pstmt245.setObject(4,"Cash");
                                                pstmt245.setObject(5,slipNo);
                                                pstmt245.setString(6,"");
                                                 pstmt245.setInt(7,1);
                                                pstmt245.setString(8,jComboBox3.getSelectedItem().toString());
                                                pstmt245.setDouble(9,0.00);
                                                pstmt245.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                pstmt245.setString(10,"");
                                                pstmt245.setDouble(12,0);
                                                pstmt245.setString(14,user);
                                                pstmt245.setString(13,"");
                                                pstmt245.setTimestamp(15,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                                pstmt245.setString(16,"Registration Walkin");
                                                pstmt245.executeUpdate();
                                    
                                }else{
                                   
                                    
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?))");
                                    
                                    pstmt2.setString(1,jTextField9.getText());
                                    pstmt2.setString(10,billNo);
                                    pstmt2.setString(2,jTextField1.getText());
                                    pstmt2.setString(3,jComboBox2.getSelectedItem().toString());
                                    pstmt2.setString(4,jTextField2.getText());
                                    pstmt2.setString(5,jTable1.getValueAt(i,0).toString());
                                    pstmt2.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt2.setDouble(7,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt2.setObject(8,jTable1.getValueAt(i,4).toString());
                                    pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));//java.sql.Date.valueOf(String.format("%1$tY-%1$tm-%1$te",datePicker1.getDate())));
                                    pstmt2.setBoolean(12,false);
                                    pstmt2.setString(11,user);
                                    pstmt2.setString(13,glAcc);
                                    pstmt2.setInt(14,visitid);
                                    pstmt2.setString(15,jTextField8.getText().toString());
                                    pstmt2.executeUpdate();
                                    
                                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                    pstmt.setString(1,jTextField9.getText());
                                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                    pstmt.setString(3,jComboBox3.getSelectedItem().toString());
                                    pstmt.setString(4,jTextField13.getText());
                                    pstmt.setString(5,transNo);
                                    pstmt.setString(7,scheme);
                                    pstmt.setString(6,cardNo);
                                    pstmt.setString(8,cardName);
                                    pstmt.setString(9,jTextField1.getText());
                                    pstmt.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                    pstmt.setString(11,"");
                                    pstmt.setDouble(12,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt.setDouble(13,0.00);
                                    pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt.setObject(15,patientAcc);
                                    pstmt.setString(16,glAcc);
                                    pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt.setObject(18,staffNo);
                                    pstmt.setBoolean(19,false);
                                    pstmt.setString(20,"Billing");
                                    pstmt.setBoolean(21,false);
                                    pstmt.setString(22,AccDesc);
                                    pstmt.setInt(23,visitid);
                                    pstmt.setString(24,user);
                                    pstmt.setString(25,billNo);
                                    pstmt.setString(26,"OP");
                                    pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                    pstmt.setInt(28,visitid);
                                    pstmt.executeUpdate();
                                    
                                    java.sql.PreparedStatement pstmt24 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt24.setObject(1,jTable1.getValueAt(i,4).toString());
                                    pstmt24.setString(2,glAcc);
                                    pstmt24.setString(3,jTextField9.getText());
                                    pstmt24.setString(4,jTextField1.getText());
                                    pstmt24.setString(5,"");
                                    pstmt24.setString(6,cardNo);
                                    pstmt24.setString(7,cardName);
                                    pstmt24.setString(8,"OP");
                                    pstmt24.setString(9,jTextField8.getText());
                                    pstmt24.setObject(10,jComboBox2.getSelectedItem());
                                    pstmt24.setObject(11,jTable1.getValueAt(i,1).toString());
                                    pstmt24.setString(12,jComboBox3.getSelectedItem().toString());
                                    pstmt24.setString(13,"");
                                    pstmt24.setString(14,jTable1.getValueAt(i,0).toString());
                                    pstmt24.setString(15,"Revenue");
                                    pstmt24.setDouble(16,0.00);
                                    pstmt24.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt24.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt24.setString(19,transNo);
                                    pstmt24.setBoolean(20,false);
                                    pstmt24.setBoolean(21,false);
                                    pstmt24.setBoolean(22,false);
                                    pstmt24.setString(23,user);
                                           pstmt24.setString(24,jTextField19.getText());
                                    pstmt24.setString(25,jTextField92.getText());
                            
                                    pstmt24.executeUpdate();
                                    
                                   
                                    
                                }
                            }else{
                                if(DirectRev){
                                    if(jCheckBox6.isSelected()){
                                        
                                          int slipNo = 0;
                                            
                                          
                                                
                                jTextField9.setText("WK"+transNo);
                        
                                                java.sql.Statement stmp = connectDB.createStatement();
                                                java.sql.ResultSet rsp = stmp.executeQuery("select nextval('creditslip_no_seq'),current_user");
                                                while (rsp.next()){
                                                    slipNo = rsp.getInt(1);
                                                    //  user = rs.getObject(2).toString();
                                                }
                                        
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?))");
                                        pstmt2.setString(1,"WK"+transNo);
                                        pstmt2.setString(10,billNo);
                                        pstmt2.setString(2,jTextField1.getText());
                                        pstmt2.setString(3,jComboBox2.getSelectedItem().toString());
                                        pstmt2.setString(4,jTextField2.getText());
                                        pstmt2.setString(5,jTable1.getValueAt(i,0).toString());
                                        pstmt2.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                        pstmt2.setDouble(7,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                        pstmt2.setObject(8,jTable1.getValueAt(i,4).toString());
                                        pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));//java.sql.Date.valueOf(String.format("%1$tY-%1$tm-%1$te",datePicker1.getDate())));
                                        pstmt2.setBoolean(12,false);
                                        pstmt2.setString(11,user);
                                        pstmt2.setString(13,glAcc);
                                        pstmt2.setInt(14,visitid);
                                        pstmt2.setString(15,jTextField8.getText().toString());
                                        pstmt2.executeUpdate();
                                        
                                         java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                    pstmt.setString(1,"WK"+transNo);
                                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                    pstmt.setString(3,jComboBox3.getSelectedItem().toString());
                                    pstmt.setString(4,jTextField13.getText());
                                    pstmt.setString(5,transNo);
                                    pstmt.setString(7,scheme);
                                    pstmt.setString(6,cardNo);
                                    pstmt.setString(8,cardName);
                                    pstmt.setString(9,jTextField1.getText());
                                    pstmt.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                    pstmt.setString(11,"");
                                    pstmt.setDouble(12,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt.setDouble(13,0.00);
                                    pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt.setObject(15,patientAcc);
                                    pstmt.setString(16,glAcc);
                                    pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt.setObject(18,staffNo);
                                    pstmt.setBoolean(19,false);
                                    pstmt.setString(20,"Billing");
                                    pstmt.setBoolean(21,false);
                                    pstmt.setString(22,AccDesc);
                                    pstmt.setInt(23,visitid);
                                    pstmt.setString(24,user);
                                    pstmt.setString(25,billNo);
                                    pstmt.setString(26,"OP");
                                    pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                    pstmt.setInt(28,visitid);
                                    pstmt.executeUpdate();
                                    //     pstmt.setString(27,"'now'");
                                    
                                    
                                    
                                    java.sql.PreparedStatement pstmt24 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt24.setObject(1,jTable1.getValueAt(i,4).toString());
                                    pstmt24.setString(2,glAcc);
                                    pstmt24.setString(3,"WK"+transNo);
                                    pstmt24.setString(4,jTextField1.getText());
                                    pstmt24.setString(5,"");
                                    pstmt24.setString(6,cardNo);
                                    pstmt24.setString(7,cardName);
                                    pstmt24.setString(8,"OP");
                                    pstmt24.setString(9,jTextField8.getText());
                                    pstmt24.setObject(10,jComboBox2.getSelectedItem());
                                    pstmt24.setObject(11,jTable1.getValueAt(i,1).toString());
                                    pstmt24.setString(12,jComboBox3.getSelectedItem().toString());
                                    pstmt24.setString(13,"");
                                    pstmt24.setString(14,jTable1.getValueAt(i,0).toString());
                                    pstmt24.setString(15,"Revenue");
                                    pstmt24.setDouble(16,0.00);
                                    pstmt24.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt24.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt24.setString(19,transNo);
                                    pstmt24.setBoolean(20,false);
                                    pstmt24.setBoolean(21,false);
                                    pstmt24.setBoolean(22,false);
                                    pstmt24.setString(23,user);
                                           pstmt24.setString(24,jTextField19.getText());
                                    pstmt24.setString(25,jTextField92.getText());
                            
                                    pstmt24.executeUpdate();
                                    
                                      java.sql.PreparedStatement pstmt245 = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                                
                                                pstmt245.setObject(1,"WK"+transNo);
                                                pstmt245.setObject(2,jTextField1.getText());
                                                  pstmt245.setObject(3,"OP");
                                                pstmt245.setObject(4,"Cash");
                                                pstmt245.setObject(5,slipNo);
                                                pstmt245.setString(6,"");
                                                 pstmt245.setInt(7,1);
                                                pstmt245.setString(8,jComboBox1.getSelectedItem().toString());
                                                pstmt245.setDouble(9,0.00);
                                                pstmt245.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                pstmt245.setString(10,"");
                                                pstmt245.setDouble(12,0);
                                                pstmt245.setString(14,user);
                                                pstmt245.setString(13,"");
                                                pstmt245.setTimestamp(15,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                                pstmt245.setString(16,"Registration Walkin");
                                                pstmt245.executeUpdate();
                                    
                                    }else{
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?))");
                                        pstmt2.setString(1,jTextField9.getText());
                                        pstmt2.setString(10,billNo);
                                        pstmt2.setString(2,jTextField1.getText());
                                        pstmt2.setString(3,jComboBox2.getSelectedItem().toString());
                                        pstmt2.setString(4,jTextField2.getText());
                                        pstmt2.setString(5,jTable1.getValueAt(i,0).toString());
                                        pstmt2.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                        pstmt2.setDouble(7,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                        pstmt2.setObject(8,jTable1.getValueAt(i,4).toString());
                                        pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));//java.sql.Date.valueOf(String.format("%1$tY-%1$tm-%1$te",datePicker1.getDate())));
                                        pstmt2.setBoolean(12,true);
                                        pstmt2.setString(11,user);
                                        pstmt2.setString(13,glAcc);
                                        pstmt2.setInt(14,visitid);
                                        pstmt2.setString(15,jTextField8.getText().toString());
                                        pstmt2.executeUpdate();
                                   
                                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                    pstmt.setString(1,jTextField9.getText());
                                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                    pstmt.setString(3,jComboBox3.getSelectedItem().toString());
                                    pstmt.setString(4,jTextField13.getText());
                                    pstmt.setString(5,transNo);
                                    pstmt.setString(7,scheme);
                                    pstmt.setString(6,cardNo);
                                    pstmt.setString(8,cardName);
                                    pstmt.setString(9,jTextField1.getText());
                                    pstmt.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                    pstmt.setString(11,"");
                                    pstmt.setDouble(12,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt.setDouble(13,0.00);
                                    pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt.setObject(15,patientAcc);
                                    pstmt.setString(16,glAcc);
                                    pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt.setObject(18,staffNo);
                                    pstmt.setBoolean(19,false);
                                    pstmt.setString(20,"Billing");
                                    pstmt.setBoolean(21,false);
                                    pstmt.setString(22,AccDesc);
                                    pstmt.setInt(23,visitid);
                                    pstmt.setString(24,user);
                                    pstmt.setString(25,billNo);
                                    pstmt.setString(26,"OP");
                                    pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                    pstmt.setInt(28,visitid);
                                    pstmt.executeUpdate();
                                    //     pstmt.setString(27,"'now'");
                                    
                                    
                                    
                                    java.sql.PreparedStatement pstmt24 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt24.setObject(1,jTable1.getValueAt(i,4).toString());
                                    pstmt24.setString(2,glAcc);
                                    pstmt24.setString(3,jTextField9.getText());
                                    pstmt24.setString(4,jTextField1.getText());
                                    pstmt24.setString(5,"");
                                    pstmt24.setString(6,cardNo);
                                    pstmt24.setString(7,cardName);
                                    pstmt24.setString(8,"OP");
                                    pstmt24.setString(9,jTextField8.getText());
                                    pstmt24.setObject(10,jComboBox2.getSelectedItem());
                                    pstmt24.setObject(11,jTable1.getValueAt(i,1).toString());
                                    pstmt24.setString(12,jComboBox3.getSelectedItem().toString());
                                    pstmt24.setString(13,"");
                                    pstmt24.setString(14,jTable1.getValueAt(i,0).toString());
                                    pstmt24.setString(15,"Revenue");
                                    pstmt24.setDouble(16,0.00);
                                    pstmt24.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt24.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt24.setString(19,transNo);
                                    pstmt24.setBoolean(20,false);
                                    pstmt24.setBoolean(21,false);
                                    pstmt24.setBoolean(22,false);
                                    pstmt24.setString(23,user);
                                           pstmt24.setString(24,jTextField19.getText());
                                    pstmt24.setString(25,jTextField92.getText());
                            
                                    pstmt24.executeUpdate();
                                }
                                }else{
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?))");
                                    pstmt2.setString(1,jTextField9.getText());
                                    pstmt2.setString(10,billNo);
                                    pstmt2.setString(2,jTextField1.getText());
                                    pstmt2.setString(3,jComboBox2.getSelectedItem().toString());
                                    pstmt2.setString(4,jTextField2.getText());
                                    pstmt2.setString(5,jTable1.getValueAt(i,0).toString());
                                    pstmt2.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt2.setDouble(7,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt2.setObject(8,jTable1.getValueAt(i,4).toString());
                                    pstmt2.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));//java.sql.Date.valueOf(String.format("%1$tY-%1$tm-%1$te",datePicker1.getDate())));
                                    pstmt2.setBoolean(12,false);
                                    pstmt2.setString(11,user);
                                    pstmt2.setString(13,glAcc);
                                    pstmt2.setInt(14,visitid);
                                    pstmt2.setString(15,jTextField8.getText().toString());
                                    pstmt2.executeUpdate();
                                }
                            }
                        }
                    }
                    
                    if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
                        if(jCheckBox6.isSelected()){
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt.setObject(1,actCode1);
                            pstmt.setString(4,jTextField9.getText());
                            pstmt.setObject(3,jTextField1.getText());
                            pstmt.setString(2,jTextField18.getText());
                            pstmt.setString(5,jTextField13.getText());
                            pstmt.setString(6,"");
                            if(this.jTextField17.getText().equals(null) ||this.jTextField17.getText().equals("-")){
                                javax.swing.JOptionPane.showMessageDialog(this,"Account NO. MISSING !!!","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                            }else{
                                pstmt.setString(7,jTextField17.getText());
                            }
                            pstmt.setString(8,"");
                            pstmt.setString(9,"");
                            pstmt.setString(10,"");
                            pstmt.setString(11,transNo);
                            pstmt.setString(12,"Raise Invoice");
                            pstmt.setString(13,jTextField3.getText());
                            pstmt.setDouble(14,0.00);
                            pstmt.setObject(15,datePicker1.getDate());
                            pstmt.setObject(16,invoiceNo);
                            pstmt.setString(17,actNames1);
                            pstmt.setBoolean(18,false);
                            pstmt.setBoolean(19,false);
                            pstmt.setString(20,user);
                            pstmt.setString(21,"");
                            pstmt.setString(22,jTextField3.getText());
                            pstmt.setBoolean(23,false);
                            pstmt.setDouble(24,0.00);
                            pstmt.setObject(25,"");
                            pstmt.setObject(26,null);
                            pstmt.setBoolean(27,false);
                            pstmt.setDouble(28,0.00);
                            pstmt.setObject(29,null);
                            pstmt.setString(30,"");
                            pstmt.setBoolean(31,false);
                            pstmt.setDouble(32,0.00);
                            pstmt.setObject(33,null);
                            pstmt.setString(34,"");
                            pstmt.setString(35,"");
                            pstmt.executeUpdate();
                            
                            
                            
                            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                            pstmt1.setString(1,jTextField9.getText());
                            pstmt1.setObject(2,"Invoice");
                            pstmt1.setString(3,jComboBox3.getSelectedItem().toString());
                            pstmt1.setString(4,"Scheme");
                            pstmt1.setString(5,transNo);
                            pstmt1.setString(7,jTextField13.getText());
                            pstmt1.setString(6,"");
                            pstmt1.setString(8,"");
                            pstmt1.setString(9,jTextField1.getText());
                            pstmt1.setString(10,null);
                            pstmt1.setString(11,"");
                            pstmt1.setString(13,jTextField3.getText());
                            pstmt1.setDouble(12,0.00);
                            pstmt1.setObject(14,datePicker1.getDate());
                            pstmt1.setObject(15,patientAcc);
                            pstmt1.setString(16,glAcc);
                            pstmt1.setDouble(17,1);
                            pstmt1.setObject(18,"");
                            pstmt1.setBoolean(19,true);
                            pstmt1.setString(20,"Receipts");
                            pstmt1.setBoolean(21,true);
                            pstmt1.setString(22,AccDesc);
                            pstmt1.setString(23,invoiceNo);
                            pstmt1.setString(24,user);
                            pstmt1.executeUpdate();
                            javax.swing.JOptionPane.showMessageDialog(this,"Insert Invoice No. "+invoiceNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
//                            com.afrisoftech.reports.FinalInvoiceByinvPdf policy = new com.afrisoftech.reports.FinalInvoiceByinvPdf();
//                            policy.FinalInvoiceByinvPdf(connectDB,invoiceNo,invoiceNo);
                        }
                    }
                    
                    
                    
                }else{
                    if(this.jCheckBox21.isSelected()){
                        
                        java.sql.Statement stm12n = connectDB.createStatement();
                        java.sql.ResultSet rse12n = stm12n.executeQuery("select adm_date from hp_inpatient_register where patient_no ='"+jTextField9.getText()+"'");
                        while (rse12n.next()){
                            admDate = rse12n.getDate(1);
                        }
                        System.out.println(admDate);
                        
                        if (this.datePicker1.getDate().before(admDate)){
                            javax.swing.JOptionPane.showMessageDialog(this, "Admission date is : " +admDate +" CHECK billing date","Date Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        }else{
                            
                            if (!(jTextField4.getText().equals("Cash"))){
                                java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTextField9.getText()+"'");
                                while (rse1.next()){
                                    cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                                    scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                                    cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                                    isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                                    expDate = rse1.getDate(6);
                                    staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                                    
                                }
                                
                                for (int i = 0; i < jTable1.getRowCount(); i++){
                                    if (jTable1.getValueAt(i,0) != null){
                                        
                                        java.sql.ResultSet rse121 = stm121.executeQuery("select activity from pb_activity where code ='"+jTable1.getValueAt(i,4).toString()+"'");
                                        while (rse121.next()){
                                            
                                            glAcc = rse121.getObject(1).toString();
                                        }
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                        pstmt.setString(1,jTextField9.getText());
                                        pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                        pstmt.setString(3,jComboBox3.getSelectedItem().toString());
                                        pstmt.setString(4,jComboBox2.getSelectedItem().toString());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,jTextField1.getText());
                                        pstmt.setDate(10,null);//java.sql.Date.valueOf(expDate.toString()));
                                        pstmt.setString(11,"");
                                        pstmt.setDouble(12,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                        pstmt.setDouble(13,0.00);
                                        pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,glAcc);
                                        pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setInt(23,visitid);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,billNo);
                                        pstmt.setString(26,"IP");
                                        pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                        pstmt.setInt(28,visitid);
                                        pstmt.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                                        pstmt2.setString(2,glAcc);
                                        pstmt2.setString(3,jTextField9.getText());
                                        pstmt2.setString(4,jTextField1.getText());
                                        pstmt2.setString(5,"");
                                        pstmt2.setString(6,cardNo);
                                        pstmt2.setString(7,cardName);
                                        pstmt2.setString(8,"IP");
                                        pstmt2.setString(9,jTextField8.getText());
                                        pstmt2.setString(10,jComboBox2.getSelectedItem().toString());
                                        pstmt2.setObject(11,jTable1.getValueAt(i,1).toString());
                                        pstmt2.setString(12,jComboBox3.getSelectedItem().toString());
                                        pstmt2.setString(13,"");
                                        pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                                        pstmt2.setString(15,"Revenue");
                                        pstmt2.setDouble(16,0.00);
                                        pstmt2.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                        pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt2.setString(19,transNo);
                                        pstmt2.setBoolean(20,false);
                                        pstmt2.setBoolean(21,false);
                                        pstmt2.setBoolean(22,false);
                                        pstmt2.setString(23,user);
                                               pstmt2.setString(24,jTextField19.getText());
                                    pstmt2.setString(25,jTextField92.getText());
                            
                                        pstmt2.executeUpdate();
                                        
                                        
                                    }
                                }
                            }
                        }
                    }
                }
                
                
                for (int i = 0; i < jTable1.getRowCount(); i++){
                    if (jTable1.getValueAt(i,0) != null){
                        
                        
                        java.sql.Statement pstBx = connectDB.createStatement();
                        java.sql.ResultSet rsBx = pstBx.executeQuery("select count(product) from st_stock_prices where product ilike '"+jTable1.getValueAt(i,0)+"' and sub_code =  '"+jTable1.getValueAt(i,5)+"'");
                        
                        while (rsBx.next()){
                            itemInt = rsBx.getInt(1);
                        }
                        
                        if (itemInt > 0){
                            java.sql.Statement pstB = connectDB.createStatement();
                            java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units,department from st_stock_prices where product ilike '"+jTable1.getValueAt(i,0)+"' and sub_code =  '"+jTable1.getValueAt(i,5)+"'");
                            
                            while (rsB.next()){
                                price = rsB.getDouble(1);
                                units = rsB.getString(2);
                                //Store = rsB.getString(3);
                            }
                            
                            
                            java.sql.Statement pst211 = connectDB.createStatement();
                            java.sql.ResultSet rs111 = pst211.executeQuery("select cost_of_sale,stock_code,department_name from pb_departments where income_account = '"+jTable1.getValueAt(i,4)+"'");
                            while (rs111.next()){
                                glCode = rs111.getObject(1).toString();
                                actCode = rs111.getObject(2).toString();
                               
                            }
                            
                              java.sql.Statement pst211s = connectDB.createStatement();
                            java.sql.ResultSet rs111s = pst211s.executeQuery("select activity from pb_activity where code = '"+jTable1.getValueAt(i,4)+"'");
                            while (rs111s.next()){
                              
                                storeName = rs111s.getObject(1).toString();
                            }
                            
                            if(storeName.endsWith("A&E")){
                              Store = "A&E" ;
                            }else
                                if(storeName.endsWith("Icu")){
                                Store = "ICU SURGICALS" ; 
                            }else if
                                    (storeName.startsWith("Pharmacy")){
                                Store = "Pharmacy" ; 
                            }else
                                if
                                    (storeName.endsWith("Theatre") || storeName.endsWith("Endoscopy")){
                                Store = "Theatre" ; 
                            }else
                                if
                                    (storeName.endsWith("Cathlab")){
                                Store = "Cath Lab" ; 
                            }else{
                                Store = "ALL WARD SURGICALS" ; 
                            }
                            
                             qty = java.lang.Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                            amount = price*qty;
                            Bprice= java.lang.Double.parseDouble(jTable1.getValueAt(i, 2).toString());        
                            
                            if(Bprice==0){
                                    amount=(Bprice*qty)/1.4;
                                }else{
                                    
                                    amount = price*qty;
                                }
                           
                           /* if (amount > 10000){
                                amount = (qty*sellPrice)*0.67;
                            }else{
                                
                                amount = amount;
                            }
                            */
                            
                            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt1.setString(1,jTextField9.getText());
                            pstmt1.setString(2,jTextField1.getText());
                            pstmt1.setDouble(3,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                            pstmt1.setDouble(4,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                            pstmt1.setObject(5,jTable1.getValueAt(i,0).toString());
                            pstmt1.setDouble(7,java.lang.Double.valueOf(jTable1.getValueAt(i,2).toString()));
                            pstmt1.setObject(8,jTable1.getValueAt(i,4).toString());
                            pstmt1.setBoolean(6,true);
                            pstmt1.setString(9,transNo);
                            pstmt1.setObject(10,jTextField8.getText());
                            pstmt1.setBoolean(11,true);
                            pstmt1.setString(12,units);
                            pstmt1.setDate(13,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt1.setString(14,storeName);
                            pstmt1.setString(15,chbox);
                            pstmt1.setString(16,jComboBox2.getSelectedItem().toString());
                            pstmt1.setObject(17,jComboBox3.getSelectedItem().toString());
                            pstmt1.setDouble(18,0.00);
                            pstmt1.setString(19,user);
                            pstmt1.setObject(20,"");
                            pstmt1.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                            pstmt1a.setString(1,null);
                            pstmt1a.setObject(3,jTable1.getValueAt(i,0));
                            pstmt1a.setString(2,Store);
                            pstmt1a.setDate(4,null);
                            pstmt1a.setDouble(5,amount);
                            pstmt1a.setDouble(6,0.00);
                            pstmt1a.setObject(7,units);
                            pstmt1a.setObject(8,"");
                            pstmt1a.setString(9,null);
                            pstmt1a.setString(10,null);
                            pstmt1a.setDouble(11,0.00);
                            pstmt1a.setDouble(12,0.00);
                            pstmt1a.setDouble(13,0.00);
                            pstmt1a.setString(14,jTextField1.getText());
                            pstmt1a.setString(15,user);
                            pstmt1a.setString(16,"");
                            pstmt1a.setString(17,null);
                            pstmt1a.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt1a.setString(19,storeName);
                            pstmt1a.setString(20,"Issuing");
                            pstmt1a.setDouble(21,0.00);
                            pstmt1a.setString(23,actCode);
                            pstmt1a.setDouble(22,0.00);
                            pstmt1a.setString(24,"");
                            pstmt1a.setString(25,Store);
                            pstmt1a.setString(26,transNo);
                            pstmt1a.setDouble(27,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                            pstmt1a.setString(28,user);
                            pstmt1a.executeUpdate();
                            
                            
                            java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                            pstmt2a.setObject(1,glCode);
                            pstmt2a.setObject(2,jComboBox1.getSelectedItem());
                            pstmt2a.setString(3,jTextField9.getText());
                            pstmt2a.setString(4,jTextField1.getText());
                            pstmt2a.setString(5,"");
                            pstmt2a.setString(6,"");
                            pstmt2a.setString(7,"");
                            pstmt2a.setString(8,"");
                            pstmt2a.setString(9,"");
                            pstmt2a.setObject(10,jComboBox2.getSelectedItem());
                            pstmt2a.setObject(11,jTable1.getValueAt(i,1).toString());
                            pstmt2a.setString(12,jComboBox3.getSelectedItem().toString());
                            pstmt2a.setString(13,"");
                            pstmt2a.setString(14,jTable1.getValueAt(i,0).toString());
                            pstmt2a.setString(15,"Issuing");
                            pstmt2a.setDouble(16,amount);
                            pstmt2a.setDouble(17,0.00);
                            pstmt2a.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt2a.setString(19,transNo);
                            pstmt2a.setBoolean(20,false);
                            pstmt2a.setBoolean(21,false);
                            pstmt2a.setBoolean(22,false);
                            pstmt2a.setString(23,user);
                                   pstmt2a.setString(24,jTextField19.getText());
                                    pstmt2a.setString(25,jTextField92.getText());
                            
                            pstmt2a.executeUpdate();
                            
                            
                            java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt33.setObject(1,Store);
                            pstmt33.setObject(2,jTable1.getValueAt(i,0).toString());
                            pstmt33.setDouble(3,0.00);
                            pstmt33.setDouble(7,0.00);
                            pstmt33.setDouble(5,java.lang.Double.valueOf(jTable1.getValueAt(i,2).toString()));
                            pstmt33.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                            pstmt33.setString(8,transNo);
                            pstmt33.setDouble(4,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                            pstmt33.setObject(9,jTextField8.getText());
                            pstmt33.setDate(10,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt33.setString(11,user);
                            pstmt33.setString(12,units);
                            pstmt33.setString(13,Store);
                            pstmt33.setString(14,jTextField9.getText()+ " " +jTextField1.getText());
                            pstmt33.setDouble(15,price);
                            pstmt33.executeUpdate();
                            
                        }
                        //   System.out.println("How many packages test "+pack);
                        
                        java.sql.Statement pstBx2 = connectDB.createStatement();
                        java.sql.ResultSet rsBx2 = pstBx2.executeQuery("select count(package) from packages where package = '"+jTable1.getValueAt(i,0)+"' and glcode =  '"+jTable1.getValueAt(i,4)+"'");
                        //java.sql.ResultSet rsBx2 = pstBx2.executeQuery("select count(package) from packages where package = 'Dressing' and glcode =  '100-04-101'");
                        
                        while (rsBx2.next()){
                            pack = rsBx2.getInt(1);
                        }
                        
                        
                        
                        //     System.out.println("How many packages "+pack);
                        
                        if(pack > 0){
                            //     if(this.jCheckBox10.isSelected()){
                            if(this.jCheckBox10.isSelected()){
                                for (int m = 0; m < jTable3.getRowCount(); m++){
                                    if (jTable3.getValueAt(m,0) != null){
                                        java.sql.Statement pstBx2F = connectDB.createStatement();
                                        // java.sql.ResultSet rsBx2F = pstBx2F.executeQuery("select count(PRODUCT) from ST_STOCK_PRICES where PRODUCT = '"+jTable1.getValueAt(i,0)+"' and gl_code =  '"+jTable1.getValueAt(i,4)+"'");
                                        //java.sql.ResultSet rsBx2 = pstBx2.executeQuery("select count(package) from packages where package = 'Dressing' and glcode =  '100-04-101'");
                                        //select COUNT(item_service) from packages, st_stock_prices  where package =  '"+jTable1.getValueAt(i,0)+"' and st_stock_prices.product=packages.item_service and st_stock_prices.gl_code=packages.glcode and st_stock_prices.gl_code = '"+jTable1.getValueAt(i,4)+"'
                                        java.sql.ResultSet rsBx2F = pstBx2F.executeQuery("select COUNT(item_service) from packages, st_stock_prices  where package =  '"+jTable1.getValueAt(i,0)+"' and st_stock_prices.product=packages.item_service and st_stock_prices.gl_code=packages.glcode and st_stock_prices.gl_code = '"+jTable3.getValueAt(m,4)+"'");
                                        
                                        while (rsBx2F.next()){
                                            stockable = rsBx2F.getInt(1);
                                        }
                                        
                                        
                                        
                                        
                                        if(stockable > 0){
                                            
                                            
                                            // java.sql.Statement pstBw = connectDB.createStatement();
                                            // java.sql.ResultSet rsBw = pstBw.executeQuery("select distinct item_service,qty,price,total,glcode from packages where package = '"+jTable1.getValueAt(i,0)+"'");
                         /*
                            while (rsBw.next()){
                          
                                item = rsBw.getString(1);
                                quant = rsBw.getDouble(2);
                                pRice = rsBw.getDouble(3);
                                tTotal = rsBw.getDouble(4);
                                gcode = rsBw.getString(5);
                            }
                          */
                                            
                                            
                                            item = jTable3.getValueAt(m,0).toString();
                                            quant = java.lang.Double.valueOf(jTable3.getValueAt(m,1).toString());
                                            pRice = java.lang.Double.valueOf(jTable3.getValueAt(m,2).toString());
                                            tTotal = java.lang.Double.valueOf(jTable3.getValueAt(m,3).toString());
                                            gcode = jTable3.getValueAt(m,4).toString();
                                            
                                            
                                            java.sql.Statement pstBv = connectDB.createStatement();
                                            //java.sql.ResultSet rsBv = pstBv.executeQuery("select transfer_price,units,department from st_stock_prices where product = '"+item+"' and gl_code =  '"+gcode+"'");
                                            java.sql.ResultSet rsBv = pstBv.executeQuery("select transfer_price,units,department from st_stock_prices where product = '"+item+"' and gl_code =  '"+gcode+"'");
                                            
                                            while (rsBv.next()){
                                                price = rsBv.getDouble(1);
                                                units = rsBv.getString(2);
                                                Store = rsBv.getString(3);
                                            }
                                            
                                            
                                            java.sql.Statement pst211v = connectDB.createStatement();
                                            java.sql.ResultSet rs111v = pst211v.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '"+gcode+"'");
                                            while (rs111v.next()){
                                                glCode = rs111v.getObject(1).toString();
                                                actCode = rs111v.getObject(2).toString();
                                            }
                                            
                                            qty = quant;
                                            amount = price*qty;
                                          /*  if (amount > 10000){
                                                amount = (qty*pRice)*0.67;
                                            }else{
                                                
                                                amount = amount;
                                            }
                                            */
                                            
                                            java.sql.PreparedStatement pstmt1v = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                            pstmt1v.setString(1,jTextField9.getText());
                                            pstmt1v.setString(2,jTextField1.getText());
                                            pstmt1v.setDouble(3,quant);
                                            pstmt1v.setDouble(4,tTotal);
                                            pstmt1v.setObject(5,item);
                                            pstmt1v.setDouble(7,pRice);
                                            pstmt1v.setObject(8,jTable3.getValueAt(m,4).toString());
                                            pstmt1v.setBoolean(6,true);
                                            pstmt1v.setString(9,transNo);
                                            pstmt1v.setObject(10,jTextField8.getText());
                                            pstmt1v.setBoolean(11,true);
                                            pstmt1v.setString(12,units);
                                            pstmt1v.setDate(13,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                            pstmt1v.setObject(14,Store);
                                            pstmt1v.setString(15,chbox);
                                            pstmt1v.setString(16,jComboBox2.getSelectedItem().toString());
                                            pstmt1v.setObject(17,jComboBox3.getSelectedItem().toString());
                                            pstmt1v.setDouble(18,0.00);
                                            pstmt1v.setString(19,user);
                                            pstmt1v.setObject(20,"");
                                            pstmt1v.executeUpdate();
                                            
                                            java.sql.PreparedStatement pstmt1av = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                            pstmt1av.setString(1,null);
                                            pstmt1av.setObject(3,item);
                                            pstmt1av.setString(2,Store);
                                            pstmt1av.setDate(4,null);
                                            pstmt1av.setDouble(5,amount);
                                            pstmt1av.setDouble(6,0.00);
                                            pstmt1av.setObject(7,units);
                                            pstmt1av.setObject(8,"");
                                            pstmt1av.setString(9,null);
                                            pstmt1av.setString(10,null);
                                            pstmt1av.setDouble(11,0.00);
                                            pstmt1av.setDouble(12,0.00);
                                            pstmt1av.setDouble(13,0.00);
                                            pstmt1av.setString(14,jTextField1.getText());
                                            pstmt1av.setString(15,user);
                                            pstmt1av.setString(16,"");
                                            pstmt1av.setString(17,null);
                                            pstmt1av.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                            pstmt1av.setString(19,Store);
                                            pstmt1av.setString(20,"Issuing");
                                            pstmt1av.setDouble(21,0.00);
                                            pstmt1av.setString(23,actCode);
                                            pstmt1av.setDouble(22,0.00);
                                            pstmt1av.setString(24,"");
                                            pstmt1av.setString(25,Store);
                                            pstmt1av.setString(26,transNo);
                                            pstmt1av.setDouble(27,quant);
                                            pstmt1av.setString(28,user);
                                            pstmt1av.executeUpdate();
                                            
                                            
                                            java.sql.PreparedStatement pstmt2av = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                            pstmt2av.setObject(1,glCode);
                                            pstmt2av.setObject(2,"Cost Of Sale "+jComboBox1.getSelectedItem());
                                            pstmt2av.setString(3,jTextField9.getText());
                                            pstmt2av.setString(4,jTextField1.getText());
                                            pstmt2av.setString(5,"");
                                            pstmt2av.setString(6,"");
                                            pstmt2av.setString(7,"");
                                            pstmt2av.setString(8,"");
                                            pstmt2av.setString(9,"");
                                            pstmt2av.setObject(10,jComboBox2.getSelectedItem());
                                            pstmt2av.setObject(11,jTable1.getValueAt(i,1).toString());
                                            pstmt2av.setString(12,jComboBox3.getSelectedItem().toString());
                                            pstmt2av.setString(13,"");
                                            pstmt2av.setString(14,item);
                                            pstmt2av.setString(15,"Issuing");
                                            pstmt2av.setDouble(16,amount);
                                            pstmt2av.setDouble(17,0.00);
                                            pstmt2av.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                            pstmt2av.setString(19,transNo);
                                            pstmt2av.setBoolean(20,false);
                                            pstmt2av.setBoolean(21,false);
                                            pstmt2av.setBoolean(22,false);
                                            pstmt2av.setString(23,user);
                                                   pstmt2av.setString(24,jTextField19.getText());
                                    pstmt2av.setString(25,jTextField92.getText());
                            
                                            pstmt2av.executeUpdate();
                                            
                                            
                                            java.sql.PreparedStatement pstmt33v = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                            
                                            pstmt33v.setObject(1,Store);
                                            pstmt33v.setObject(2,item);
                                            pstmt33v.setDouble(3,0.00);
                                            pstmt33v.setDouble(7,0.00);
                                            pstmt33v.setDouble(5,pRice);
                                            pstmt33v.setDouble(6,tTotal);
                                            pstmt33v.setString(8,transNo);
                                            pstmt33v.setDouble(4,quant);
                                            pstmt33v.setObject(9,jTextField8.getText());
                                            pstmt33v.setDate(10,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                            pstmt33v.setString(11,user);
                                            pstmt33v.setString(12,units);
                                            pstmt33v.setString(13,Store);
                                            pstmt33v.setString(14,jTextField9.getText()+ " " +jTextField1.getText());
                                            pstmt33v.setDouble(15,price);
                                            pstmt33v.executeUpdate();
                                            
                                            //table m clses down here
                                        }
                                    }
                                }
                            }else{
                                
                        /*
                            java.sql.Statement pstBw = connectDB.createStatement();
                            java.sql.ResultSet rsBw = pstBw.executeQuery("select distinct item_service,qty,price,total,glcode from packages where package = '"+jTable1.getValueAt(i,0)+"'");
                         */
                                java.sql.Statement pstBx2FG = connectDB.createStatement();
                                java.sql.ResultSet rsBx2FG = pstBx2FG.executeQuery("select COUNT(item_service) from packages, st_stock_prices  where package =  '"+jTable1.getValueAt(i,0)+"' and st_stock_prices.product=packages.item_service and st_stock_prices.gl_code=packages.glcode and st_stock_prices.gl_code = '"+jTable1.getValueAt(i,4)+"' ");
                                //java.sql.ResultSet rsBx2 = pstBx2.executeQuery("select count(package) from packages where package = 'Dressing' and glcode =  '100-04-101'");
                                
                                while (rsBx2FG.next()){
                                    stockableG = rsBx2FG.getInt(1);
                                }
                                
                                if(stockableG > 0){
                                    java.sql.Statement pstBw = connectDB.createStatement();
                                    java.sql.ResultSet rsBw = pstBw.executeQuery("select distinct item_service,qty,price,total,glcode from packages where package = '"+jTable1.getValueAt(i,0)+"'");
                                    
                                    
                                    while (rsBw.next()){
                                        
                                        
                                        
                                        
                                        item = rsBw.getString(1);
                                        quant = rsBw.getDouble(2);
                                        pRice = rsBw.getDouble(3);
                                        tTotal = rsBw.getDouble(4);
                                        gcode = rsBw.getString(5);
                                    }
                                    
                                    
                                    
                                    //  item = jTable3.getValueAt(i,0).toString();
                                    // quant = java.lang.Double.valueOf(jTable3.getValueAt(m,1).toString());
                                    // pRice = java.lang.Double.valueOf(jTable3.getValueAt(m,2).toString());
                                    // tTotal = java.lang.Double.valueOf(jTable3.getValueAt(m,3).toString());
                                    // gcode = jTable3.getValueAt(m,4).toString();
                                    
                                    
                                    java.sql.Statement pstBv = connectDB.createStatement();
                                    java.sql.ResultSet rsBv = pstBv.executeQuery("select transfer_price,units,department from st_stock_prices where product = '"+item+"' and gl_code =  '"+gcode+"'");
                                    
                                    while (rsBv.next()){
                                        price = rsBv.getDouble(1);
                                        units = rsBv.getString(2);
                                       // Store = rsBv.getString(3);
                                    }
                                    
                                    
                                    java.sql.Statement pst211v = connectDB.createStatement();
                                    java.sql.ResultSet rs111v = pst211v.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '"+gcode+"'");
                                    while (rs111v.next()){
                                        glCode = rs111v.getObject(1).toString();
                                        actCode = rs111v.getObject(2).toString();
                                    }
                                    
                                    qty = quant;
                                    amount = price*qty;
                                    
                                  /*  if (amount > 10000){
                                        amount = (qty*pRice)*0.67;
                                    }else{
                                        
                                        amount = amount;
                                    }
                                    */
                                    
                                    java.sql.PreparedStatement pstmt1v = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                    pstmt1v.setString(1,jTextField9.getText());
                                    pstmt1v.setString(2,jTextField1.getText());
                                    pstmt1v.setDouble(3,quant);
                                    pstmt1v.setDouble(4,tTotal);
                                    pstmt1v.setObject(5,item);
                                    pstmt1v.setDouble(7,pRice);
                                    pstmt1v.setObject(8,jTable1.getValueAt(i,4).toString());
                                    pstmt1v.setBoolean(6,true);
                                    pstmt1v.setString(9,transNo);
                                    pstmt1v.setObject(10,jTextField8.getText());
                                    pstmt1v.setBoolean(11,true);
                                    pstmt1v.setString(12,units);
                                    pstmt1v.setDate(13,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt1v.setObject(14,Store);
                                    pstmt1v.setString(15,chbox);
                                    pstmt1v.setString(16,jComboBox2.getSelectedItem().toString());
                                    pstmt1v.setObject(17,jComboBox3.getSelectedItem().toString());
                                    pstmt1v.setDouble(18,0.00);
                                    pstmt1v.setString(19,user);
                                    pstmt1v.setObject(20,"");
                                    pstmt1v.executeUpdate();
                                    
                                    java.sql.PreparedStatement pstmt1av = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                    pstmt1av.setString(1,null);
                                    pstmt1av.setObject(3,item);
                                    pstmt1av.setString(2,Store);
                                    pstmt1av.setDate(4,null);
                                    pstmt1av.setDouble(5,amount);
                                    pstmt1av.setDouble(6,0.00);
                                    pstmt1av.setObject(7,units);
                                    pstmt1av.setObject(8,"");
                                    pstmt1av.setString(9,null);
                                    pstmt1av.setString(10,null);
                                    pstmt1av.setDouble(11,0.00);
                                    pstmt1av.setDouble(12,0.00);
                                    pstmt1av.setDouble(13,0.00);
                                    pstmt1av.setString(14,jTextField1.getText());
                                    pstmt1av.setString(15,user);
                                    pstmt1av.setString(16,"");
                                    pstmt1av.setString(17,null);
                                    pstmt1av.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt1av.setString(19,Store);
                                    pstmt1av.setString(20,"Issuing");
                                    pstmt1av.setDouble(21,0.00);
                                    pstmt1av.setString(23,actCode);
                                    pstmt1av.setDouble(22,0.00);
                                    pstmt1av.setString(24,"");
                                    pstmt1av.setString(25,Store);
                                    pstmt1av.setString(26,transNo);
                                    pstmt1av.setDouble(27,quant);
                                    pstmt1av.setString(28,user);
                                    pstmt1av.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt2av = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt2av.setObject(1,glCode);
                                    pstmt2av.setObject(2,"Cost Of Sale "+jComboBox1.getSelectedItem());
                                    pstmt2av.setString(3,jTextField9.getText());
                                    pstmt2av.setString(4,jTextField1.getText());
                                    pstmt2av.setString(5,"");
                                    pstmt2av.setString(6,"");
                                    pstmt2av.setString(7,"");
                                    pstmt2av.setString(8,"");
                                    pstmt2av.setString(9,"");
                                    pstmt2av.setObject(10,jComboBox2.getSelectedItem());
                                    pstmt2av.setObject(11,jTable1.getValueAt(i,1).toString());
                                    pstmt2av.setString(12,jComboBox3.getSelectedItem().toString());
                                    pstmt2av.setString(13,"");
                                    pstmt2av.setString(14,item);
                                    pstmt2av.setString(15,"Issuing");
                                    pstmt2av.setDouble(16,amount);
                                    pstmt2av.setDouble(17,0.00);
                                    pstmt2av.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt2av.setString(19,transNo);
                                    pstmt2av.setBoolean(20,false);
                                    pstmt2av.setBoolean(21,false);
                                    pstmt2av.setBoolean(22,false);
                                    pstmt2av.setString(23,user);
                                           pstmt2av.setString(24,jTextField19.getText());
                                    pstmt2av.setString(25,jTextField92.getText());
                            
                                    pstmt2av.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt33v = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                    
                                    pstmt33v.setObject(1,Store);
                                    pstmt33v.setObject(2,item);
                                    pstmt33v.setDouble(3,0.00);
                                    pstmt33v.setDouble(7,0.00);
                                    pstmt33v.setDouble(5,pRice);
                                    pstmt33v.setDouble(6,tTotal);
                                    pstmt33v.setString(8,transNo);
                                    pstmt33v.setDouble(4,quant);
                                    pstmt33v.setObject(9,jTextField8.getText());
                                    pstmt33v.setDate(10,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt33v.setString(11,user);
                                    pstmt33v.setString(12,units);
                                    pstmt33v.setString(13,Store);
                                    pstmt33v.setString(14,jTextField9.getText()+ " " +jTextField1.getText());
                                    pstmt33v.setDouble(15,price);
                                    pstmt33v.executeUpdate();
                                    
                                    //ELSE FOR PACKAGE ENDS DOWN HERE
                                }
                            }
                            //javax.swing.JOptionPane.showMessageDialog(this,"You must select APPLY to save the confirmed Package","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                            //}
                            //  }
                            //pack end is closed here below
                        }
                        // }
                    }
                }
                
                //  javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful.Bill No. "+transNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                        jTable1.setValueAt(null,k,r);
                    }
                }
                
                //  this.jComboBox131.setSelectedItem(null);
                jTextField3.setText("0.00");
             /*    int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you are not duplicating that entry?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
              
            if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
              
              
              
            }else{
                javax.swing.JOptionPane.showMessageDialog(this, "Thank You for taking caution","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
              
            }
              */
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                
                
                // jLabel7.setForeground(java.awt.Color.blue);
                // jLabel7.setText("Insert successful");
                javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful.Bill No. "+transNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField1.setText("");
                this.jComboBox3.setSelectedItem("-");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField9.setText("");
                jTextField17.setText("");
                jTextField18.setText("");
                for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                        jTable1.setValueAt(null,k,r);
                    }
                }
                jTextField3.setText("0.00");
                jButton12.setEnabled(false);
                jButton1.setEnabled(false);
                jButton2.setEnabled(true);
                jComboBox2.setSelectedItem("Cash");
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
           /* }else{
                javax.swing.JOptionPane.showMessageDialog(this,"Please change the date to suit your preffered date or save and say YES","Information Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            }*/
        }
        
        ///upto here for package
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton dispose11;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton111;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton311;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton411;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton421;
    private javax.swing.JButton jButton4211;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton5211;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton611;
    public static javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JButton jButton911;
    private javax.swing.JButton jButton9111;
    private javax.swing.JButton jButton912;
    private javax.swing.JButton jButton92;
    private javax.swing.JButton jButton921;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox41;
    private javax.swing.JCheckBox jCheckBox42;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox51;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox61;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox jComboBox1;
    public static javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel211;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel311;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel411;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel5311;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel711;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel911;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel111;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel411;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel641;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane211;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog111;
    private javax.swing.JDialog jSearchDialog12;
    private javax.swing.JDialog jSearchDialog13;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JDialog jSearchDialog211;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JDialog jSearchDialog31;
    private javax.swing.JDialog jSearchDialog4;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel12;
    private javax.swing.JPanel jSearchPanel13;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JPanel jSearchPanel211;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JPanel jSearchPanel31;
    private javax.swing.JPanel jSearchPanel4;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JScrollPane jSearchScrollPane12;
    private javax.swing.JScrollPane jSearchScrollPane13;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JScrollPane jSearchScrollPane211;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JScrollPane jSearchScrollPane31;
    private javax.swing.JScrollPane jSearchScrollPane4;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTable jSearchTable12;
    private javax.swing.JTable jSearchTable13;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTable jSearchTable211;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JTable jSearchTable31;
    private javax.swing.JTable jSearchTable4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator111;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable111;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    public static javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField jTextField1113;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTextField jTextField1121;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTextField jTextField11311;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField121;
    public static javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    public static javax.swing.JTextField jTextField17;
    public static javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    public static javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField211;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField311;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField411;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField71;
    private javax.swing.JTextField jTextField711;
    private javax.swing.JTextField jTextField8;
    public static javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JTextField jTextField911;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton11;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton3;
    // End of variables declaration//GEN-END:variables
    
}
