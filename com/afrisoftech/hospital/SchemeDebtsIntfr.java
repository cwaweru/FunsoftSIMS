/*
 * stockprices.java
 *
 * Created on November 5, 2002, 11:47 AM
 */

package com.afrisoftech.hospital;

/**
 *
 * @author  root
 */
public class SchemeDebtsIntfr extends javax.swing.JInternalFrame {
    javax.swing.JComboBox cmbox2 =null;
    java.sql.Connection connectDB = null;
    
    com.afrisoftech.lib.DBObject dbObject;
    
    boolean printState = true;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    String cashPoint = null;
    private java.lang.String shift_no = null;
    private java.lang.String cash_no = null;
    
    public SchemeDebtsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        System.out.println("Cashpoint : "+System.getProperty("cashpoint"));
        
        jTextField14.setText(getCashPoint());
        jTextField81.setText(getShiftNumber());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new com.afrisoftech.dbadmin.JTable();
        jButton421 = new javax.swing.JButton();
        jButton521 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        dispose11 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel641 = new javax.swing.JPanel();
        searchButton2 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel15 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel131 = new javax.swing.JLabel();
        jTextField81 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton12 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable();
        jPanel21 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        jTextField51 = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        jTextField61 = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jTextField71 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        datePicker11 = new com.afrisoftech.lib.DatePicker();
        datePicker12 = new com.afrisoftech.lib.DatePicker();
        jLabel14 = new javax.swing.JLabel();
        jLabel2122 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jTextField31 = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton11 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();

        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });

        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton421.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton421, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable11MouseClicked(evt);
                }
            });

            jSearchScrollPane11.setViewportView(jSearchTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

            dispose11.setMnemonic('l');
            dispose11.setText("Close");
            dispose11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dispose11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel11.add(dispose11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

            getContentPane().setLayout(new java.awt.GridBagLayout());

            setClosable(true);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Scheme Invoice");
            setPreferredSize(new java.awt.Dimension(650, 700));
            setVisible(true);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            getContentPane().add(jLabel5, gridBagConstraints);

            jPanel1.setLayout(new java.awt.GridBagLayout());

            jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null}
                },
                new String [] {
                    "Date", "Description", "Quantity", "Amount", "GL Code"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            jTable1.setShowHorizontalLines(false);
            /*       cmbox2 = new javax.swing.JComboBox();

            try {

                crset1.setConnectionSource(pConnDB);
                crset1.execute("select description from st_stock_item");

                cmbox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "description", null, null,null));

                javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Product");

                seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));

                cmbox2.addActionListener(new java.awt.event.ActionListener() {

                    public void actionPerformed(java.awt.event.ActionEvent evt) {

                        cmbox2ActionPerformed(evt);
                    }
                });
            } catch(java.sql.SQLException sqlExec) {

                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

            }
            */

            javax.swing.table.TableColumn column = null;
            for (int i = 0; i < 4; i++) {
                column = jTable1.getColumnModel().getColumn(i);
                if (i == 0) {

                    column.setPreferredWidth(200); //sport column is bigger
                } else {
                    if (i == 1) {
                        column.setPreferredWidth(200);
                    } else {
                        if (i == 2) {
                            column.setPreferredWidth(100);
                        }  else
                        column.setPreferredWidth(100);

                    }
                }
            }
            jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable1KeyReleased(evt);
                }
            });

            jScrollPane1.setViewportView(jTable1);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 15.0;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            jPanel1.add(jScrollPane1, gridBagConstraints);

            jPanel2.setLayout(new java.awt.GridBagLayout());

            jLabel1.setText("Scheme Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel1, gridBagConstraints);

            jLabel2.setText("Scheme Member No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField1, gridBagConstraints);

            jLabel3.setText("Patient No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel3, gridBagConstraints);

            jLabel4.setText("Patient Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel4, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField2, gridBagConstraints);

            jLabel7.setText("Scheme Payer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel7, gridBagConstraints);

            jTextField4.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField4, gridBagConstraints);

            jLabel8.setText("Department");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel8, gridBagConstraints);

            jTextField5.setEditable(false);
            jTextField5.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField5.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField5, gridBagConstraints);

            jTextField6.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField6, gridBagConstraints);

            jPanel4.setLayout(new java.awt.GridBagLayout());

            jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField9.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jTextField9, gridBagConstraints);

            searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton.setToolTipText("Search");
            searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButtonActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel4.add(searchButton, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jPanel4, gridBagConstraints);

            buttonGroup1.add(jCheckBox1);
            jCheckBox1.setText("Search By No.");
            jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jCheckBox1, gridBagConstraints);

            buttonGroup1.add(jCheckBox2);
            jCheckBox2.setText("Search By Name");
            jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox2ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jCheckBox2, gridBagConstraints);

            jPanel641.setLayout(new java.awt.GridBagLayout());

            jPanel641.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel641.setMinimumSize(new java.awt.Dimension(82, 37));
            searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton2.setToolTipText("Search");
            searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton2ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            jPanel641.add(searchButton2, gridBagConstraints);

            jTextField7.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel641.add(jTextField7, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jPanel641, gridBagConstraints);

            jLabel10.setText("Account No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel10, gridBagConstraints);

            jTextField8.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField8, gridBagConstraints);

            jLabel22.setText("Invoice Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel22, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField22, gridBagConstraints);

            jLabel9.setText("Principal Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel9, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField12, gridBagConstraints);

            jLabel12.setText("Billing Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel12, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(datePicker1, gridBagConstraints);

            jLabel15.setText("Invoice No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel15, gridBagConstraints);

            jTextField13.setText("-");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField13, gridBagConstraints);

            jLabel16.setText("Cash Point");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel16, gridBagConstraints);

            jTextField14.setEditable(false);
            jTextField14.addComponentListener(new java.awt.event.ComponentAdapter() {
                public void componentShown(java.awt.event.ComponentEvent evt) {
                    jTextField14ComponentShown(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.5;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField14, gridBagConstraints);

            jLabel131.setText("Shift No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel131, gridBagConstraints);

            jTextField81.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField81, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            jPanel1.add(jPanel2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel1.add(jSeparator1, gridBagConstraints);

            jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 10);
            jPanel1.add(jTextField3, gridBagConstraints);

            jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14));
            jLabel6.setText("Total");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            jPanel1.add(jLabel6, gridBagConstraints);

            jButton5.setMnemonic('h');
            jButton5.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jButton5, gridBagConstraints);

            jButton4.setMnemonic('C');
            jButton4.setText("Close");
            jButton4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton4ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jButton4, gridBagConstraints);

            jButton3.setMnemonic('R');
            jButton3.setText("Refresh");
            jButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jButton3, gridBagConstraints);

            jButton1.setMnemonic('O');
            jButton1.setText("Finalise & Print");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jButton1, gridBagConstraints);

            jButton6.setMnemonic('r');
            jButton6.setText("Remove Row");
            jButton6.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton6ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            jPanel1.add(jButton6, gridBagConstraints);

            jButton12.setMnemonic('O');
            jButton12.setText("Finalise");
            jButton12.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton12ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jButton12, gridBagConstraints);

            jTabbedPane1.addTab("Out Patients", jPanel1);

            jPanel11.setLayout(new java.awt.GridBagLayout());

            jPanel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
            jTable11.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Date", "Description", "Quantity", "Amount"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
                };
                boolean[] canEdit = new boolean [] {
                    false, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable11.setShowHorizontalLines(false);
            /*       cmbox2 = new javax.swing.JComboBox();

            try {

                crset1.setConnectionSource(pConnDB);
                crset1.execute("select description from st_stock_item");

                cmbox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "description", null, null,null));

                javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Product");

                seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));

                cmbox2.addActionListener(new java.awt.event.ActionListener() {

                    public void actionPerformed(java.awt.event.ActionEvent evt) {

                        cmbox2ActionPerformed(evt);
                    }
                });
            } catch(java.sql.SQLException sqlExec) {

                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

            }
            */

            javax.swing.table.TableColumn column1 = null;
            for (int i = 0; i < 4; i++) {
                column1 = jTable1.getColumnModel().getColumn(i);
                if (i == 0) {

                    column1.setPreferredWidth(200); //sport column is bigger
                } else {
                    if (i == 1) {
                        column1.setPreferredWidth(200);
                    } else {
                        if (i == 2) {
                            column1.setPreferredWidth(100);
                        }  else
                        column1.setPreferredWidth(100);

                    }
                }
            }
            jScrollPane11.setViewportView(jTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 15.0;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            jPanel11.add(jScrollPane11, gridBagConstraints);

            jPanel21.setLayout(new java.awt.GridBagLayout());

            jLabel11.setText("Scheme Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel21.add(jLabel11, gridBagConstraints);

            jLabel21.setText("Scheme Member No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel21, gridBagConstraints);

            jTextField11.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField11, gridBagConstraints);

            jLabel31.setText("Patient No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel31, gridBagConstraints);

            jLabel41.setText("Patient Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel41, gridBagConstraints);

            jTextField21.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField21, gridBagConstraints);

            jLabel71.setText("Scheme Payer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            jPanel21.add(jLabel71, gridBagConstraints);

            jTextField41.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField41, gridBagConstraints);

            jLabel81.setText("Department");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            jPanel21.add(jLabel81, gridBagConstraints);

            jTextField51.setEditable(false);
            jTextField51.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField51.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            jPanel21.add(jTextField51, gridBagConstraints);

            jLabel91.setText("Acc No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            jPanel21.add(jLabel91, gridBagConstraints);

            jTextField61.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField61, gridBagConstraints);

            jPanel41.setLayout(new java.awt.GridBagLayout());

            jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField91.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel41.add(jTextField91, gridBagConstraints);

            searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton1.setToolTipText("Search");
            searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel41.add(searchButton1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel21.add(jPanel41, gridBagConstraints);

            jTextField71.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField71, gridBagConstraints);

            jTextField10.setEditable(false);
            jTextField10.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField10ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel21.add(jTextField10, gridBagConstraints);

            jLabel13.setText("Admission Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel13, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel21.add(datePicker11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel21.add(datePicker12, gridBagConstraints);

            jLabel14.setText("Discharge date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            jPanel21.add(jLabel14, gridBagConstraints);

            jLabel2122.setText("Visit No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel21.add(jLabel2122, gridBagConstraints);

            jTextField16.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel21.add(jTextField16, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            jPanel11.add(jPanel21, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel11.add(jSeparator11, gridBagConstraints);

            jTextField31.setEditable(false);
            jTextField31.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel11.add(jTextField31, gridBagConstraints);

            jLabel61.setFont(new java.awt.Font("SansSerif", 1, 14));
            jLabel61.setText("Total");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.weightx = 1.0;
            jPanel11.add(jLabel61, gridBagConstraints);

            jPanel3.setLayout(new java.awt.GridBagLayout());

            jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jButton11.setMnemonic('O');
            jButton11.setText("Finalise Invoice");
            jButton11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jButton11, gridBagConstraints);

            jButton31.setMnemonic('R');
            jButton31.setText("Refresh");
            jButton31.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton31ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jButton31, gridBagConstraints);

            jButton41.setMnemonic('C');
            jButton41.setText("Close");
            jButton41.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton41ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jButton41, gridBagConstraints);

            jButton51.setMnemonic('h');
            jButton51.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jButton51, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jPanel3, gridBagConstraints);

            jTabbedPane1.addTab("Inpatients", jPanel11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            setBounds(0, 0, 700, 482);
        }// </editor-fold>//GEN-END:initComponents
    
    private void jTextField14ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTextField14ComponentShown
// Add your handling code here:
    }//GEN-LAST:event_jTextField14ComponentShown
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        try{
            String receiptNo = null;
            String actCode = null;
            String glCode = null;
            String bankAcc = null;
            String glCode1 = null;
            String bankAcc1 = null;
            String transNo = null;
            String payMode = null;
            String patCat = null;
            String patientAcc = null;
            String cardNo = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            String expDate = null;
            String staffNo = null;
            String actNames = null;
            String user = null;
            String actNames1 = null;
            String actCode1 = null;
            String invoiceNo = null;
            
            //  int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to Finalise Invoice?", "Caution before Finalising Invoice!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
            
            //  if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            
            
            
            try {
                connectDB.setAutoCommit(false);
                
                java.sql.Statement stm1 = connectDB.createStatement();
                if(jTextField13.getText().equalsIgnoreCase("-")){
                    java.sql.Statement pss1 = connectDB.createStatement();
                    java.sql.ResultSet rss1 = pss1.executeQuery("select 'O'||(nextval('pinvoice_no_seq'))");
                    while (rss1.next()){
                        invoiceNo = rss1.getObject(1).toString();
                    }
                }else{
                    invoiceNo = jTextField13.getText();
                }
                java.sql.Statement pss = connectDB.createStatement();
                java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                
                while (rss.next()){
                    transNo = rss.getObject(1).toString();
                }
                java.sql.Statement pss12 = connectDB.createStatement();
                java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rsts11.next()){
                    actCode = rsts11.getObject(1).toString();
                    actNames = rsts11.getObject(2).toString();
                }
                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
                while (rsts1.next()){
                    actCode1 = rsts1.getObject(1).toString();
                    actNames1 = rsts1.getObject(2).toString();
                    user = rsts1.getObject(3).toString();
                }
                for (int i = 0; i < jTable1.getRowCount(); i++){
                    if (jTable1.getModel().getValueAt(i,0) != null){
                        
                        java.sql.Statement pssq = connectDB.createStatement();
                        java.sql.ResultSet rse121 = pssq.executeQuery("select main_service from patient_bill where description = '"+jTable1.getModel().getValueAt(i,1).toString()+"'");
                        
                        while (rse121.next()){
                            glCode = dbObject.getDBObject(rse121.getObject(1), "-");
                        }
                        /*
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                         
                        pstmt.setString(1,jTextField9.getText());
                        pstmt.setObject(2,jTable1.getValueAt(i,1).toString());
                        pstmt.setString(3,"");
                        pstmt.setString(4,"Scheme");
                        pstmt.setString(5,transNo);
                        pstmt.setString(7,jTextField7.getText());
                        pstmt.setString(6,"");
                        pstmt.setString(8,"");
                        pstmt.setString(9,jTextField4.getText());
                        pstmt.setDate(10,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                        pstmt.setString(11,"");
                        pstmt.setDouble(12,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                        pstmt.setDouble(13,0.00);
                        pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTextField22.getText())));
                        pstmt.setObject(15,actCode);
                        pstmt.setString(16,glCode);
                        pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,2).toString()));
                        pstmt.setObject(18,jTextField2.getText());
                        pstmt.setBoolean(19,true);
                        pstmt.setString(20,"Receipts");
                        pstmt.setBoolean(21,true);
                        pstmt.setString(22,actNames);
                        pstmt.setString(23,invoiceNo);
                        pstmt.setString(24,user);
                        pstmt.setString(25,jTextField14.getText());
                        pstmt.setString(26,jTextField81.getText());
                        pstmt.executeUpdate();
                         
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                        pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                        pstmt2.setObject(2,glCode);
                        pstmt2.setString(3,jTextField9.getText());
                        pstmt2.setString(4,jTextField1.getText());
                        pstmt2.setString(5,"");
                        pstmt2.setString(6,cardNo);
                        pstmt2.setString(7,cardName);
                        pstmt2.setString(8,"OP");
                        pstmt2.setString(9,isurer);
                        pstmt2.setString(10,"Scheme");
                        pstmt2.setString(11,"");
                        pstmt2.setString(12,"");
                        pstmt2.setString(13,"");
                        pstmt2.setString(14,jTable1.getValueAt(i,1).toString());
                        pstmt2.setString(15,"Revenue");
                        pstmt2.setDouble(16,0.00);
                        pstmt2.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                        pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTextField22.getText())));
                        pstmt2.setString(19,transNo);
                        pstmt2.setBoolean(20,false);
                        pstmt2.setBoolean(21,false);
                        pstmt2.setBoolean(22,false);
                        pstmt2.setString(23,user);
                        pstmt2.setString(24,jTextField14.getText());
                        pstmt2.setString(25,jTextField81.getText());
                         
                        pstmt2.executeUpdate();
                         */
                        System.out.println(actNames);
                        System.out.println("Before Invoice");
                        
                        java.sql.PreparedStatement pstmt22a = connectDB.prepareStatement("UPDATE hp_patient_card set paid = true,invoice_no = '"+invoiceNo+"' WHERE patient_no = '"+jTextField9.getText()+"' and date::date = '"+jTable1.getValueAt(i,0).toString()+"' and paid = false");
                        pstmt22a.executeUpdate();
                        
                        
                        java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE hp_patient_billing set paid = true WHERE patient_no = '"+jTextField9.getText()+"' and service = '"+jTable1.getValueAt(i,1).toString()+"' and trans_date = '"+jTable1.getValueAt(i,0).toString()+"'");
                        pstmt22.executeUpdate();
                        java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("UPDATE hp_pharmacy set paid = true WHERE patient_no = '"+jTextField9.getText()+"' and description = '"+jTable1.getValueAt(i,1).toString()+"' and date_prescribed = '"+jTable1.getValueAt(i,0).toString()+"'");
                        pstmt21.executeUpdate();
                        
                        java.sql.PreparedStatement pstmt21x = connectDB.prepareStatement("UPDATE ac_doctors_ledger set pat_inv = '"+invoiceNo+"' WHERE patient_no = '"+jTextField9.getText()+"' and input_date::date = '"+jTable1.getValueAt(i,0).toString()+"'  AND pat_inv not ilike 'O%'");
                        pstmt21x.executeUpdate();
                        
                        System.out.println("Before Detailed");
                        
                    }
                }
                
                System.out.println("Before Invoice Execution");
                
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                pstmt.setObject(1,actCode1);
                pstmt.setString(4,jTextField9.getText());
                pstmt.setObject(3,jTextField1.getText());
                pstmt.setString(2,jTextField4.getText());
                pstmt.setString(5,jTextField7.getText());
                pstmt.setString(6,"");
                if(this.jTextField8.getText().equals(null) ||this.jTextField8.getText().equals("-")){
                    javax.swing.JOptionPane.showMessageDialog(this,"Account NO. MISSING !!!","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }else{
                    pstmt.setString(7,jTextField8.getText());
                }
                pstmt.setString(8,"");
                pstmt.setString(9,"");
                pstmt.setString(10,jTextField2.getText());
                pstmt.setString(11,transNo);
                pstmt.setString(12,"Raise Invoice");
                pstmt.setDouble(13,java.lang.Double.valueOf(jTextField3.getText()));
                pstmt.setDouble(14,0.00);
                pstmt.setDate(15,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTextField22.getText())));
                pstmt.setObject(16,invoiceNo);
                pstmt.setString(17,actNames1);
                pstmt.setBoolean(18,true);
                pstmt.setBoolean(19,true);
                pstmt.setString(20,user);
                pstmt.setString(21,jTextField14.getText());
                pstmt.setDouble(22,java.lang.Double.valueOf(jTextField3.getText()));
                pstmt.setBoolean(23,false);
                pstmt.setDouble(24,0.00);
                pstmt.setObject(25,"");
                pstmt.setObject(26,null);
                pstmt.setBoolean(27,false);
                pstmt.setDouble(28,0.00);
                pstmt.setObject(29,null);
                pstmt.setString(30,"");
                pstmt.setBoolean(31,false);
                pstmt.setDouble(32,0.00);
                pstmt.setObject(33,null);
                pstmt.setString(34,"");
                pstmt.setString(35,jTextField2.getText());
                pstmt.executeUpdate();
                
                
                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                pstmt1.setString(1,jTextField9.getText());
                pstmt1.setObject(2,"Invoice");
                pstmt1.setString(3,"");
                pstmt1.setString(4,"Scheme");
                pstmt1.setString(5,transNo);
                pstmt1.setString(7,jTextField7.getText());
                pstmt1.setString(6,"");
                pstmt1.setString(8,"");
                pstmt1.setString(9,jTextField4.getText());
                pstmt1.setDate(10,null);
                pstmt1.setString(11,"");
                pstmt1.setDouble(13,java.lang.Double.valueOf(jTextField3.getText()));
                pstmt1.setDouble(12,0.0);
                pstmt1.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTextField22.getText())));
                pstmt1.setObject(15,actCode);
                pstmt1.setString(16,"Receipts");
                pstmt1.setDouble(17,1);
                pstmt1.setObject(18,jTextField2.getText());
                pstmt1.setBoolean(19,true);
                pstmt1.setString(20,"Receipts");
                pstmt1.setBoolean(21,true);
                pstmt1.setString(22,actNames);
                pstmt1.setString(23,invoiceNo);
                pstmt1.setString(24,user);
                pstmt1.setString(25,jTextField14.getText());
                pstmt1.setString(26,jTextField81.getText());
                pstmt1.executeUpdate();
                
                
                java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE hp_patient_register set member_name = '"+jTextField12.getText()+"',account_no = '"+jTextField2.getText()+"' WHERE patient_no = '"+jTextField9.getText()+"'");
                pstmt22.executeUpdate();
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                
                System.out.println("Before Invoice");
                
//                com.afrisoftech.reports.FinalInvoiceByinvPdf policy = new com.afrisoftech.reports.FinalInvoiceByinvPdf();
//                policy.FinalInvoiceByinvPdf(connectDB,invoiceNo,invoiceNo);
                //         com.afrisoftech.txtreports.OutPatientInvTxtReport policy = new com.afrisoftech.txtreports.OutPatientInvTxtReport(connectDB, invoiceNo, invoiceNo, printState);
                
                System.out.println("Where am I");
                javax.swing.JOptionPane.showMessageDialog(this,"Data Inserted Successfully \n Inv No. is: "+invoiceNo+"","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                        jTable1.getModel().setValueAt(null,k,r);
                    }
                }
                jTextField3.setText("");
                
                jButton1.setEnabled(false);
                
                //  jTextField13.setText("-");
                
                //            jComboBox1.setSelectedItem(null);
                //  jComboBox2.setSelectedItem(null);
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        jTextField13.setText("-");        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        jTextField13.setText("-");        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1) != null) {
            if (jTable1.getSelectedColumn() == jTable1.getSelectedColumn()) {
                float qty = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
                float price = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
                float total = qty*price;
                jTable1.setValueAt(total, jTable1.getSelectedRow(), 3);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
                jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
            }
            
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 0) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 0) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed
    
    private void dispose11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose11ActionPerformed
        jSearchDialog11.dispose(); // Add your handling code here:
    }//GEN-LAST:event_dispose11ActionPerformed
    
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        jTextField7.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 1).toString());
        jTextField4.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 2).toString());
        jTextField8.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
        
        jSearchDialog11.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton11aClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%' order by scheme_name"));
            
            
            jSearchTable11.setShowHorizontalLines(false);
            jSearchScrollPane11.setViewportView(jSearchTable11);
            
        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    private void searchButton11aClicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog11.dispose();
        java.awt.Point point = this.jTextField7.getLocationOnScreen();
        
        jSearchDialog11.setSize(400,200);
        
        jSearchDialog11.setLocation(point);
        jSearchDialog11.show();
    }
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
        jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        
// Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        //        this.getContentPane().removeAll();
        //        this.initComponents();        // Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed
    
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //      try{
        String receiptNo = null;
        String actCode = null;
        String glCode = null;
        java.sql.Date DischDate = null;
        String glCode1 = null;
        String bankAcc1 = null;
        String transNo = null;
        String payMode = null;
        String patCat = null;
        String patientAcc = null;
        String cardNo = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String actNames = null;
        String user = null;
        String actNames1 = null;
        String actCode1 = null;
        String invoiceNo = null;
        String visitid = null;
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you want to Finalise Invoice?", "Caution before Finalising Invoice!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            
            
            try {
                connectDB.setAutoCommit(false);
                
                java.sql.Statement stm1 = connectDB.createStatement();
                
                java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,payer,account_no,description,category from hp_inpatient_register where patient_no ='"+jTextField91.getText()+"'");// UNION ALL select pay_mode,payer,account_no,description,category from hp_patient_register where patient_no ='"+jTextField91.getText()+"'");
                while (rse1.next()){
                    
                    payMode = rse1.getObject(1).toString();
                    cardNo = rse1.getObject(3).toString();
                    scheme = rse1.getObject(4).toString();
                    isurer = rse1.getObject(2).toString();
                    patCat = rse1.getObject(5).toString();
                }
                java.sql.Statement stm11 = connectDB.createStatement();
                
                java.sql.ResultSet rse11 = stm11.executeQuery("select discharge_date from hp_inpatient_register where patient_no ='"+jTextField91.getText()+"'");// UNION ALL select pay_mode,payer,account_no,description,category from hp_patient_register where patient_no ='"+jTextField91.getText()+"'");
                while (rse11.next()){
                    DischDate = rse11.getDate(1);
                }
                java.sql.Statement pss1 = connectDB.createStatement();
                java.sql.ResultSet rss1 = pss1.executeQuery("select 'I'||(nextval('ipinvoice_no_seq'))");
                while (rss1.next()){
                    invoiceNo = rss1.getObject(1).toString();
                }
                java.sql.Statement pss12 = connectDB.createStatement();
                java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rsts11.next()){
                    actCode = rsts11.getObject(1).toString();
                    actNames = rsts11.getObject(2).toString();
                }
                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity from pb_activity where activity_category ='DA'");
                while (rsts1.next()){
                    actCode1 = rsts1.getObject(1).toString();
                    actNames1 = rsts1.getObject(2).toString();
                    
                }
                
                java.sql.Statement pss11x = connectDB.createStatement();
                java.sql.ResultSet rsts1x = pss11x.executeQuery("select current_user");
                while (rsts1x.next()){
                    user = rsts1x.getObject(1).toString();
                }
                java.sql.Statement pss = connectDB.createStatement();
                java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                while (rss.next()){
                    transNo = rss.getObject(1).toString();
                }
                
                java.sql.Statement pssq = connectDB.createStatement();
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                pstmt.setString(1,jTextField91.getText());
                pstmt.setObject(2,"Invoice");
                pstmt.setString(3,"");
                pstmt.setString(4,"Scheme");
                pstmt.setString(5,transNo);
                pstmt.setString(7,jTextField71.getText());
                pstmt.setString(6,"");
                pstmt.setString(8,"");
                pstmt.setString(9,jTextField41.getText());
                pstmt.setDate(10,null);
                pstmt.setString(11,"");
                pstmt.setDouble(13,java.lang.Double.valueOf(jTextField31.getText()));
                pstmt.setDouble(12,0.00);
                pstmt.setTimestamp(14,new java.sql.Timestamp(DischDate.getTime()));
                pstmt.setObject(15,actCode);
                pstmt.setString(16,"");
                pstmt.setDouble(17,1.00);
                pstmt.setObject(18,jTextField21.getText());
                pstmt.setBoolean(19,true);
                pstmt.setString(20,"Receipts");
                pstmt.setBoolean(21,true);
                pstmt.setString(22,actNames);
                pstmt.setString(23,invoiceNo);
                pstmt.setString(24,user);
                pstmt.setString(25,transNo);
                pstmt.setString(26,"IP");
                pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                pstmt.setString(28,jTextField16.getText());
                pstmt.executeUpdate();
                
                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_debtors values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?, ?,?,?,?,?,?, ?,?,?,?,?,?)");
                pstmt2.setObject(1,actCode1);
                pstmt2.setString(4,jTextField91.getText());
                pstmt2.setObject(3,jTextField11.getText());
                pstmt2.setString(2,jTextField41.getText());
                pstmt2.setString(5,jTextField71.getText());
                pstmt2.setString(6,"");
                pstmt2.setString(7,jTextField10.getText());
                pstmt2.setString(8,"");
                pstmt2.setString(9,"");
                pstmt2.setString(10,jTextField21.getText());
                pstmt2.setString(11,transNo);
                pstmt2.setString(12,"Raise Invoice");
                pstmt2.setDouble(13,java.lang.Double.valueOf(jTextField31.getText()));
                pstmt2.setDouble(14,0.00);
                pstmt2.setDate(15,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                pstmt2.setObject(16,invoiceNo);
                pstmt2.setString(17,actNames1);
                pstmt2.setBoolean(18,true);
                pstmt2.setBoolean(19,true);
                pstmt2.setString(20,user);
                pstmt2.setString(21,"");
                pstmt2.setDouble(22,java.lang.Double.valueOf(jTextField31.getText()));
                pstmt2.setBoolean(23,false);
                pstmt2.setDouble(24,0.00);
                pstmt2.setObject(25,"");
                pstmt2.setObject(26,null);
                pstmt2.setBoolean(27,false);
                pstmt2.setDouble(28,0.00);
                pstmt2.setObject(29,null);
                pstmt2.setString(30,"");
                pstmt2.setBoolean(31,false);
                pstmt2.setDouble(32,0.00);
                pstmt2.setObject(33,null);
                pstmt2.setString(34,"");
                pstmt2.setString(35,jTextField21.getText());
                pstmt2.executeUpdate();
                
                java.sql.PreparedStatement pstmt12 = connectDB.prepareStatement("UPDATE hp_admission SET invoice_no = '"+invoiceNo+"',balance = '"+this.jTextField31.getText()+"' where patient_no = '"+this.jTextField91.getText()+"' AND visit_id = '"+jTextField16.getText()+"'");
                pstmt12.executeUpdate();
                for (int i = 0; i < jTable11.getRowCount(); i++){
                    if (jTable11.getModel().getValueAt(i,0) != null){
                        java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("UPDATE hp_patient_card set paid = true,invoice_no = '"+invoiceNo+"' WHERE patient_no = '"+jTextField91.getText()+"' AND visit_id = '"+jTextField16.getText()+"' AND invoice_no NOT ILIKE 'I%'");
                        pstmt21.executeUpdate();
                        
                        java.sql.PreparedStatement pstmt21x = connectDB.prepareStatement("UPDATE ac_doctors_ledger set pat_inv = '"+invoiceNo+"' WHERE patient_no = '"+jTextField91.getText()+"'");
                        pstmt21x.executeUpdate();
                    }
                }
                
                
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this,"Data Inserted Successfully \n  Inv. No. is "+invoiceNo+" ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                com.afrisoftech.reports.FinalInPatientlnvPdf policy = new com.afrisoftech.reports.FinalInPatientlnvPdf();
                policy.FinalInPatientInvPdf(connectDB,invoiceNo);
                
                
                jTextField11.setText("");
                jTextField21.setText("");
                jTextField31.setText("");
                for (int k = 0; k < jTable11.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                        jTable11.getModel().setValueAt(null,k,r);
                    }
                }
                jTextField31.setText("");
                //            jComboBox1.setSelectedItem(null);
                //  jComboBox2.setSelectedItem(null);
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        }
        
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton21Clicked(); // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
    private void populateTable2(java.lang.String patient_no) {
        
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(patient_no) FROM hp_patient_card WHERE patient_no = '"+patient_no+"' AND paid = false");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                java.sql.Statement stmtTable11 = connectDB.createStatement();
                
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date::date as date,service,dosage as quantity,debit-credit as amount FROM hp_patient_card WHERE patient_no ='"+jTextField91.getText()+"' and paid = false AND (invoice_no NOT ILIKE 'O%' OR invoice_no NOT ILIKE 'I%')  AND visit_id = '"+jTextField16.getText()+"'");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable1.getObject(4), i, 3);
                    //   jTable11.setValueAt(rsetTable1.getObject(5), i, 4);
                    
                    i++;
                    
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
                // java.sql.Statement stmtTable11 = connectDB.createStatement();
                
                java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select date::date as date,service,dosage as quantity,debit-credit as amount FROM hp_patient_card WHERE patient_no ='"+jTextField91.getText()+"' and paid = false AND (invoice_no NOT ILIKE 'O%' OR invoice_no NOT ILIKE 'I%') AND visit_id = '"+jTextField16.getText()+"'");
                
                while (rsetTable11.next()) {
                    
                    jTextField22.setText(rsetTable11.getString(1));
                }
            }
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        
    }
    
    
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        String payer = null;
        String scm = null;
        String accno = null;
        String date = null;
        String cat = null;
        String code = null;
        jTextField11.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        jTextField16.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 2).toString());
        
        java.text.DateFormat df = java.text.DateFormat.getDateInstance();
        
        java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
        
        sdf.applyPattern("yyyy-MM-dd");
        
        try {
            datePicker12.setDate(sdf.parse(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 3).toString()));
            datePicker11.setDate(sdf.parse(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 4).toString()));
        } catch (java.text.ParseException pe) {
            javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
        }
        //jTextField21.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 2).toString());
        //jTextField71.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 3).toString());
        
        try {
            //
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select account_no, description,payer from hp_inpatient_register where patient_no ILIKE '"+jTextField91.getText()+"%'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                payer = dbObject.getDBObject(rset.getObject(3), "-");
                scm = dbObject.getDBObject(rset.getObject(2), "-");
                accno =dbObject.getDBObject(rset.getObject(1), "-");
                jTextField21.setText(accno);
                jTextField71.setText(scm);
                jTextField41.setText(payer);
                
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        
        try{
            
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rset11 = pss1.executeQuery("select account_no from ac_schemes where scheme_name = '"+jTextField71.getText()+"' and payer_name = '"+jTextField41.getText()+"'");
            while (rset11.next()){
                code = dbObject.getDBObject(rset11.getObject(1), "-");
                
                
                jTextField10.setText(code);
                // jTextField51.setText(date);
                // jTextField61.setText(cat);
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        
        try{
            
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = pss1.executeQuery("select account_no,expiry_date,category from hp_inpatient_register where patient_no = '"+jTextField91.getText()+"'");
            while (rset1.next()){
                cat = dbObject.getDBObject(rset1.getObject(3), "-");
                date = dbObject.getDBObject(rset1.getObject(2), null);
                accno =dbObject.getDBObject(rset1.getObject(1), "-");
                
                
                jTextField21.setText(accno);
                jTextField51.setText(date);
                jTextField61.setText(cat);
            }
            
            java.sql.Statement pss11 = connectDB.createStatement();
            java.sql.ResultSet rss11 = pss11.executeQuery("select round(sum(debit-credit),2) from hp_patient_card where patient_no = '"+jTextField91.getText()+"' AND visit_id = '"+jTextField16.getText()+"' AND (invoice_no NOT LIKE 'I%' OR invoice_no NOT LIKE 'O%')");
            while (rss11.next()){
                // jTextField2.setText(rss1.getObject(1).toString());
                jTextField31.setText(rss11.getObject(1).toString());
            }
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            System.out.println(sqlex.getMessage());
        }
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        this.populateTable2(jTextField91.getText());
        
        
        jSearchDialog21.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    private void searchButton21Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField11.getLocationOnScreen();
        
        jSearchDialog21.setSize(400,200);
        
        jSearchDialog21.setLocation(point);
        
        jSearchDialog21.show();
    }
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        
        jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select patient_no as pat_no,patient_name as name,visit_id,date_admitted::date as date_admitted,discharge_date::date AS date_discharged from hp_admission where patient_no ILIKE '"+jTextField1131.getText()+"%' AND mode_of_payment = 'Scheme' order by patient_no,date_admitted"));
        
        jSearchScrollPane21.setViewportView(jSearchTable21);
        System.out.println("Cannot sort out");
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();
        jButton1.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
    }
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(this.jCheckBox2.isSelected()){
            if(this.jTextField113.getCaretPosition() < 4){
                System.out.print("Nothing");
            }else{
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select patient_no as pat_no,(second_name||' '||first_name||' '||last_name) as name,account_no AS staff_no,description AS description from hp_patient_register  where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pay_mode = 'Scheme' order by second_name"));
                
                
                jSearchScrollPane2.setViewportView(jSearchTable2);
                System.out.println("Cannot sort out");
                
            }
        }else{
            
            if(this.jCheckBox1.isSelected()){
                if(this.jTextField113.getCaretPosition() < 3){
                    System.out.print("Nothing");
                }else{
                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select patient_no as pat_no,(second_name||' '||first_name||' '||last_name) as name,account_no AS staff_no,description AS description from hp_patient_register  where patient_no ILIKE '"+jTextField113.getText()+"%' AND pay_mode = 'Scheme' order by second_name"));
                    
                    jSearchScrollPane2.setViewportView(jSearchTable2);
                    System.out.println("Cannot sort out");
                    
                }
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        jTextField13.setText("-");
        this.jTextField3.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        jTextField8.setText("");
        
        String code = null;
        
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField2.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        jSearchDialog2.dispose();
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payer,member_name from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField4.setText(rset.getObject(1).toString());
                jTextField12.setText(rset.getObject(2).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        
        try{
            
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rset11 = pss1.executeQuery("select account_no from ac_schemes where scheme_name = '"+jTextField7.getText()+"' and payer_name = '"+jTextField4.getText()+"'");
            while (rset11.next()){
                code = dbObject.getDBObject(rset11.getObject(1), "-");
                
                
                jTextField8.setText(code);
                // jTextField51.setText(date);
                // jTextField61.setText(cat);
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        
        try{
            
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rss1 = pss1.executeQuery("select account_no,expiry_date,category from hp_patient_register where patient_no = '"+jTextField9.getText()+"'");
            while (rss1.next()){
                jTextField2.setText(rss1.getObject(1).toString());
                jTextField5.setText(rss1.getObject(2).toString());
                jTextField6.setText(rss1.getObject(3).toString());
            }
            
            java.sql.Statement pss11 = connectDB.createStatement();
            java.sql.ResultSet rss11 = pss11.executeQuery("select sum(amount) from patient_bill where patient_no = '"+jTextField9.getText()+"' AND date_prescribed = '"+datePicker1.getDate().toString()+"'");
            while (rss11.next()){
                // jTextField2.setText(rss1.getObject(1).toString());
                jTextField3.setText(rss11.getObject(1).toString());
            }
            
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select date_prescribed FROM patient_bill WHERE patient_no ='"+jTextField9.getText()+"' AND date_prescribed = '"+datePicker1.getDate().toString()+"'");
            
            while (rsetTable11.next()) {
                
                jTextField22.setText(rsetTable11.getString(1));
            }
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            System.out.println(sqlex.getMessage());
        }
        
        
        this.populateTable1(jTextField9.getText());
        
        
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    private void populateTable1(java.lang.String patient_no) {
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(patient_name) FROM patient_bill WHERE patient_no = '"+patient_no+"'");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date_prescribed::date as date,description,quantity,amount,gl_code FROM patient_bill WHERE patient_no ='"+jTextField9.getText()+"'  AND date_prescribed = '"+datePicker1.getDate().toString()+"'");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                    //  jTable1.setValueAt(rsetTable1.getObject(6), i, 5);
                    
                    i++;
                    
                    
                }
                
                
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        
    }
    
    
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //       this.getContentPane().removeAll();
        //       this.initComponents();
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    //    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
       /* java.lang.Object selectedGuaran = cmbox2.getSelectedItem();
        int i = jTable1.getSelectedRow();
        
        if (selectedGuaran != null) {
        
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select item_code,units from st_stock_item where description = '"+selectedGuaran+"'");
                while (rs.next())
                    jTable1.setValueAt(rs.getObject(1),i,1);
                jTable1.setValueAt(rs.getObject(2),i,2);
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
        
            }
        */
    //}
    //   }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setVisible(false); // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String receiptNo = null;
        String actCode = null;
        String glCode = null;
        String bankAcc = null;
        String glCode1 = null;
        String bankAcc1 = null;
        String transNo = null;
        String payMode = null;
        String patCat = null;
        String patientAcc = null;
        String cardNo = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String actNames = null;
        String user = null;
        String actNames1 = null;
        String actCode1 = null;
        String invoiceNo = null;
        
        //  int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to Finalise Invoice?", "Caution before Finalising Invoice!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        //  if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
        
        
        
        
        try {
            connectDB.setAutoCommit(false);
            jButton12ActionPerformed(evt);
            java.sql.Statement stm1 = connectDB.createStatement();
            if(jTextField13.getText().equalsIgnoreCase("-")){
                java.sql.Statement pss1 = connectDB.createStatement();
                java.sql.ResultSet rss1 = pss1.executeQuery("select 'O'||(currval('pinvoice_no_seq'))");
                while (rss1.next()){
                    invoiceNo = rss1.getObject(1).toString();
                }
            }else{
                invoiceNo = jTextField13.getText();
            }
            
            com.afrisoftech.txtreports.OutPatientInvTxtReport policy = new com.afrisoftech.txtreports.OutPatientInvTxtReport(connectDB, invoiceNo, invoiceNo, printState);
            
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        
        
        // }// Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public java.lang.String getShiftNumber() {
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
            while (rsetf.next()){
                cashPoint = rsetf.getObject(1).toString();
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            // java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+cashPoint+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                shift_no = rset.getString(1);
                
            }
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return shift_no;
        
    }
    
    
    public java.lang.String getCashPoint() {
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
            while (rsetf.next()){
                cashPoint = rsetf.getObject(1).toString();
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            // java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset = stmt.executeQuery("SELECT cash_point FROM ac_shifts WHERE cash_point = '"+cashPoint+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                cash_no = rset.getString(1);
                
            }
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return cash_no;
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker11;
    private com.afrisoftech.lib.DatePicker datePicker12;
    private javax.swing.JButton dispose11;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton31;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton421;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel2122;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel641;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField61;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField71;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField81;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    // End of variables declaration//GEN-END:variables
    
}
