/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.hospital;

/**
 *
 * @author  root
 */
public class BillingAdjGen2Intfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    com.afrisoftech.lib.DBObject dbObject;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    private boolean DirectRev;
    
    
    public BillingAdjGen2Intfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new com.afrisoftech.dbadmin.JTable();
        jButton421 = new javax.swing.JButton();
        jButton521 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton911 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog211 = new javax.swing.JDialog();
        jSearchPanel211 = new javax.swing.JPanel();
        jTextField11311 = new javax.swing.JTextField();
        jSearchScrollPane211 = new javax.swing.JScrollPane();
        jSearchTable211 = new com.afrisoftech.dbadmin.JTable();
        jButton4211 = new javax.swing.JButton();
        jButton5211 = new javax.swing.JButton();
        jSearchDialog12 = new javax.swing.JDialog();
        jSearchPanel12 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane12 = new javax.swing.JScrollPane();
        jSearchTable12 = new com.afrisoftech.dbadmin.JTable();
        jButton912 = new javax.swing.JButton();
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        jButton9111 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jSearchDialog31 = new javax.swing.JDialog();
        jSearchPanel31 = new javax.swing.JPanel();
        jTextField1121 = new javax.swing.JTextField();
        jSearchScrollPane31 = new javax.swing.JScrollPane();
        jSearchTable31 = new com.afrisoftech.dbadmin.JTable();
        jButton921 = new javax.swing.JButton();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jLabel7 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField10 = new javax.swing.JTextField();
        jCheckBox6 = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel31 = new javax.swing.JPanel();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jPanel6 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable();
        jPanel21 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jTextField41 = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();

        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select distinct main_service from pb_operating_parameters  where category = 'CA'");
            while (rset.next()){
                jTextField5.setText(rset.getObject(1).toString());

            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        jTextField71 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton11 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jLabel531 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel71 = new javax.swing.JLabel();
        jPanel111 = new javax.swing.JPanel();
        jPanel111.setVisible(false);
        jScrollPane211 = new javax.swing.JScrollPane();
        jTable111 = new com.afrisoftech.dbadmin.JTable();
        jPanel211 = new javax.swing.JPanel();
        jLabel911 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jTextField121 = new javax.swing.JTextField();
        jLabel211 = new javax.swing.JLabel();
        jLabel311 = new javax.swing.JLabel();
        jTextField211 = new javax.swing.JTextField();
        jTextField411 = new javax.swing.JTextField();
        jPanel411 = new javax.swing.JPanel();
        jTextField911 = new javax.swing.JTextField();
        searchButton11 = new javax.swing.JButton();
        jTextField51 = new javax.swing.JTextField();

        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select distinct main_service from pb_operating_parameters  where category = 'CA'");
            while (rset.next()){
                jTextField51.setText(rset.getObject(1).toString());

            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        jTextField711 = new javax.swing.JTextField();
        jLabel411 = new javax.swing.JLabel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton111 = new javax.swing.JButton();
        jButton611 = new javax.swing.JButton();
        jButton311 = new javax.swing.JButton();
        jButton411 = new javax.swing.JButton();
        jButton511 = new javax.swing.JButton();
        jLabel5311 = new javax.swing.JLabel();
        jTextField311 = new javax.swing.JTextField();
        jSeparator111 = new javax.swing.JSeparator();
        jLabel711 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jTextField6 = new javax.swing.JTextField();

        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog21.setUndecorated(true);
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });

        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton421.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton421, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Close");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });

        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton911.setText("Close");
        jButton911.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton911ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton911, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        jSearchDialog211.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog211.setUndecorated(true);
        jSearchPanel211.setLayout(new java.awt.GridBagLayout());

        jSearchPanel211.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11311.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11311CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel211.add(jTextField11311, gridBagConstraints);

        jSearchTable211.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable211.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable211.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable211MouseClicked(evt);
            }
        });

        jSearchScrollPane211.setViewportView(jSearchTable211);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel211.add(jSearchScrollPane211, gridBagConstraints);

        jButton4211.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel211.add(jButton4211, gridBagConstraints);

        jButton5211.setText("Close");
        jButton5211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5211ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel211.add(jButton5211, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog211.getContentPane().add(jSearchPanel211, gridBagConstraints);

        jSearchDialog12.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog12.setUndecorated(true);
        jSearchPanel12.setLayout(new java.awt.GridBagLayout());

        jSearchPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1112CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel12.add(jTextField1112, gridBagConstraints);

        jSearchTable12.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable12MouseClicked(evt);
            }
        });

        jSearchScrollPane12.setViewportView(jSearchTable12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel12.add(jSearchScrollPane12, gridBagConstraints);

        jButton912.setText("Close");
        jButton912.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton912ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel12.add(jButton912, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog12.getContentPane().add(jSearchPanel12, gridBagConstraints);

        jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog111.setUndecorated(true);
        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

        jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11111ActionPerformed(evt);
            }
        });
        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel111.add(jTextField11111, gridBagConstraints);

        jSearchTable111.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable111MouseClicked(evt);
            }
        });

        jSearchScrollPane111.setViewportView(jSearchTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

        jButton9111.setText("Close");
        jButton9111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel111.add(jButton9111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

        jSearchDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog31.setModal(true);
        jSearchDialog31.setUndecorated(true);
        jSearchPanel31.setLayout(new java.awt.GridBagLayout());

        jSearchPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1121.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1121CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel31.add(jTextField1121, gridBagConstraints);

        jSearchTable31.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable31MouseClicked(evt);
            }
        });

        jSearchScrollPane31.setViewportView(jSearchTable31);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel31.add(jSearchScrollPane31, gridBagConstraints);

        jButton921.setText("Close");
        jButton921.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton921ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel31.add(jButton921, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog31.getContentPane().add(jSearchPanel31, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Bill Adjustment");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Service", "Quantity", "Price", "Total", "Gl Account", "SubCode"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(153, 153, 255));
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 5; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {

                //if (i == 2) {
                    column.setPreferredWidth(150);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jScrollPane2.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Patient Here"));
        jLabel9.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel9, gridBagConstraints);

        jLabel1.setText("Entered to:   (Pat.No):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField1, gridBagConstraints);

        jLabel2.setText("Revenue Dep.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField2, gridBagConstraints);

        jTextField4.setEditable(false);
        jTextField4.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField4.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField4, gridBagConstraints);

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION ALL SELECT distinct UPPER(activity) FROM pb_activity WHERE category_class ilike 'plid' and (activity not ilike '%discount%' and activity not ilike '%PREVI%' and  activity not ilike '%cme%' and  activity not ilike '%adminis%' and activity not ilike '%rental%' and activity not ilike '%asset%' and activity not ilike '%karatina%' and activity not ilike '%interest%')"));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jComboBox1, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jTextField9, gridBagConstraints);

        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        jLabel4.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jTextField7.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jTextField7, gridBagConstraints);

        jLabel10.setText("Doctor No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel10, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField92.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField92, gridBagConstraints);

        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jPanel42, gridBagConstraints);

        jLabel8.setText("Doctor's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel8, gridBagConstraints);

        jTextField8.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField8, gridBagConstraints);

        buttonGroup4.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Normal Rate");
        jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jRadioButton1, gridBagConstraints);

        buttonGroup4.add(jRadioButton2);
        jRadioButton2.setText("Special Rate");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton2.setEnabled(false);
        jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jRadioButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField10, gridBagConstraints);

        jCheckBox6.setBackground(new java.awt.Color(255, 204, 204));
        jCheckBox6.setText("View Insert No.");
        jCheckBox6.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jCheckBox6, gridBagConstraints);

        jLabel12.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel12, gridBagConstraints);

        jTextField13.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField13, gridBagConstraints);

        jLabel13.setText("(Dept)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel13, gridBagConstraints);

        jTextField14.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField14, gridBagConstraints);

        jLabel14.setText("Insert Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel14, gridBagConstraints);

        jTextField15.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField15, gridBagConstraints);

        jLabel16.setText("A/C Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel16, gridBagConstraints);

        jTextField16.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel2.add(jTextField16, gridBagConstraints);

        jTextField22.setEditable(false);
        jTextField22.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField22.setMinimumSize(new java.awt.Dimension(2, 7));
        jTextField22.setPreferredSize(new java.awt.Dimension(2, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jPanel2, gridBagConstraints);

        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton1, gridBagConstraints);

        jButton6.setMnemonic('r');
        jButton6.setText("Remove Row");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton6, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton5, gridBagConstraints);

        jLabel53.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel53, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 40);
        jPanel1.add(jTextField3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jSeparator1, gridBagConstraints);

        jPanel31.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
        buttonGroup1.add(jCheckBox11);
        jCheckBox11.setForeground(new java.awt.Color(51, 51, 255));
        jCheckBox11.setMnemonic('o');
        jCheckBox11.setText("Out Patients");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jCheckBox11, gridBagConstraints);

        buttonGroup1.add(jCheckBox21);
        jCheckBox21.setForeground(new java.awt.Color(255, 0, 51));
        jCheckBox21.setMnemonic('i');
        jCheckBox21.setText("InPatients");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jCheckBox21, gridBagConstraints);

        buttonGroup3.add(jCheckBox22);
        jCheckBox22.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jCheckBox22, gridBagConstraints);

        buttonGroup3.add(jCheckBox3);
        jCheckBox3.setText("Patient Name");
        jCheckBox3.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jCheckBox3, gridBagConstraints);

        jCheckBox12.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup1.add(jCheckBox12);
        jCheckBox12.setForeground(new java.awt.Color(255, 0, 153));
        jCheckBox12.setMnemonic('o');
        jCheckBox12.setText("Others");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jCheckBox12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel1.add(jPanel31, gridBagConstraints);

        jLabel5.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker1, gridBagConstraints);

        jTabbedPane1.addTab("General", jPanel1);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient here"));
        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Service", "Quantity", "Price", "Total", "Gl Account", "Doctor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.setShowHorizontalLines(false);
        javax.swing.table.TableColumn column1 = null;
        for (int i = 0; i < 5; i++) {
            column1 = jTable11.getColumnModel().getColumn(i);
            if (i == 0) {

                column1.setPreferredWidth(300); //sport column is bigger
            } else {

                //if (i == 2) {
                    column1.setPreferredWidth(150);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        jTable11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable11KeyReleased(evt);
            }
        });
        jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable11MouseClicked(evt);
            }
        });

        jScrollPane21.setViewportView(jTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel11.add(jScrollPane21, gridBagConstraints);

        jPanel21.setLayout(new java.awt.GridBagLayout());

        jLabel91.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jLabel91, gridBagConstraints);

        jLabel11.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jLabel11, gridBagConstraints);

        jTextField12.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel21.add(jTextField12, gridBagConstraints);

        jLabel21.setText("Revenue Dep.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel21.add(jLabel21, gridBagConstraints);

        jLabel31.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        jPanel21.add(jLabel31, gridBagConstraints);

        jTextField21.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel21.add(jTextField21, gridBagConstraints);

        jTextField41.setEditable(false);
        jTextField41.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField41.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jTextField41, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField91.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jTextField91, gridBagConstraints);

        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jPanel41, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jTextField5, gridBagConstraints);

        jTextField71.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel21.add(jTextField71, gridBagConstraints);

        jLabel41.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel21.add(jLabel41, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jPanel21, gridBagConstraints);

        jButton11.setMnemonic('O');
        jButton11.setText("Ok");
        jButton11.setToolTipText("Click here enter data");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton11, gridBagConstraints);

        jButton61.setMnemonic('r');
        jButton61.setText("Remove Row");
        jButton61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton61ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        jPanel11.add(jButton61, gridBagConstraints);

        jButton31.setMnemonic('l');
        jButton31.setText("Clear");
        jButton31.setToolTipText("Click here to clear textfields");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton31, gridBagConstraints);

        jButton41.setMnemonic('C');
        jButton41.setText("Close");
        jButton41.setToolTipText("Click here to close window");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton41, gridBagConstraints);

        jButton51.setMnemonic('h');
        jButton51.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton51, gridBagConstraints);

        jLabel531.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jLabel531, gridBagConstraints);

        jTextField31.setEditable(false);
        jTextField31.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField31.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 40);
        jPanel11.add(jTextField31, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jSeparator11, gridBagConstraints);

        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jLabel71, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel11, gridBagConstraints);

        jPanel111.setLayout(new java.awt.GridBagLayout());

        jPanel111.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient here"));
        jTable111.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Service", "Quatity", "Price", "Total", "Gl Account", "Doctor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable111.setShowHorizontalLines(false);
        javax.swing.table.TableColumn column111 = null;
        for (int i = 0; i < 5; i++) {
            column111 = jTable111.getColumnModel().getColumn(i);
            if (i == 0) {

                column111.setPreferredWidth(300); //sport column is bigger
            } else {

                //if (i == 2) {
                    column111.setPreferredWidth(150);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        jTable111.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable111KeyReleased(evt);
            }
        });
        jTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable111MouseClicked(evt);
            }
        });

        jScrollPane211.setViewportView(jTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel111.add(jScrollPane211, gridBagConstraints);

        jPanel211.setLayout(new java.awt.GridBagLayout());

        jLabel911.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jLabel911, gridBagConstraints);

        jLabel111.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jLabel111, gridBagConstraints);

        jTextField121.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel211.add(jTextField121, gridBagConstraints);

        jLabel211.setText("Revenue Dep.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel211.add(jLabel211, gridBagConstraints);

        jLabel311.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        jPanel211.add(jLabel311, gridBagConstraints);

        jTextField211.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel211.add(jTextField211, gridBagConstraints);

        jTextField411.setEditable(false);
        jTextField411.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField411.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jTextField411, gridBagConstraints);

        jPanel411.setLayout(new java.awt.GridBagLayout());

        jPanel411.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField911.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel411.add(jTextField911, gridBagConstraints);

        searchButton11.setToolTipText("Search");
        searchButton11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton11.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton11.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel411.add(searchButton11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jPanel411, gridBagConstraints);

        jTextField51.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jTextField51, gridBagConstraints);

        jTextField711.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel211.add(jTextField711, gridBagConstraints);

        jLabel411.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel211.add(jLabel411, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jPanel211, gridBagConstraints);

        jButton111.setMnemonic('O');
        jButton111.setText("Ok");
        jButton111.setToolTipText("Click here enter data");
        jButton111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jButton111, gridBagConstraints);

        jButton611.setMnemonic('r');
        jButton611.setText("Remove Row");
        jButton611.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton611ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        jPanel111.add(jButton611, gridBagConstraints);

        jButton311.setMnemonic('l');
        jButton311.setText("Clear");
        jButton311.setToolTipText("Click here to clear textfields");
        jButton311.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton311ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jButton311, gridBagConstraints);

        jButton411.setMnemonic('C');
        jButton411.setText("Close");
        jButton411.setToolTipText("Click here to close window");
        jButton411.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton411ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jButton411, gridBagConstraints);

        jButton511.setMnemonic('h');
        jButton511.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jButton511, gridBagConstraints);

        jLabel5311.setText("Amount KShs.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jLabel5311, gridBagConstraints);

        jTextField311.setEditable(false);
        jTextField311.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField311.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 40);
        jPanel111.add(jTextField311, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel111.add(jSeparator111, gridBagConstraints);

        jLabel711.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel111.add(jLabel711, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel111, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setForeground(new java.awt.Color(51, 51, 255));
        jCheckBox1.setMnemonic('o');
        jCheckBox1.setText("Out Patients");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckBox1, gridBagConstraints);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setForeground(new java.awt.Color(255, 0, 51));
        jCheckBox2.setMnemonic('i');
        jCheckBox2.setText("InPatients");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckBox2, gridBagConstraints);

        jLabel6.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel6, gridBagConstraints);

        buttonGroup2.add(jCheckBox4);
        jCheckBox4.setText("Patient No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckBox4, gridBagConstraints);

        buttonGroup2.add(jCheckBox5);
        jCheckBox5.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckBox5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(datePicker2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel6.add(jPanel3, gridBagConstraints);

        jTabbedPane1.addTab("Consultancy Ledger", jPanel6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        setBounds(0, 0, 697, 547);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        
        
        for (int m = 0; m < jTable1.getRowCount(); m++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,m,r);
            }
        }
        
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(service) FROM hp_patient_card WHERE reference = '"+jTextField10.getText()+"'");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement st1 = connectDB.createStatement();
                java.sql.ResultSet rsetTable1 = st1.executeQuery("select DISTINCT hp_patient_card.patient_no,hp_patient_card.service, hp_patient_card.dosage as quantity,round(hp_patient_card.debit/hp_patient_card.dosage::numeric,2)as price, hp_patient_card.debit,pb_activity.code as gl_code,hp_patient_card.main_service,hp_patient_card.date::date,pb_activity.sub_code from hp_patient_card, pb_activity WHERE hp_patient_card.main_service ilike pb_activity.activity and hp_patient_card.reference = '"+jTextField10.getText()+"' AND hp_patient_card.transaction_type ilike 'billing' and hp_patient_card.credit = '0' and hp_patient_card.DOSAGE > 0 ");
                while (rsetTable1.next()) {
                    jTextField13.setText(rsetTable1.getObject(1).toString());
                    jTextField15.setText(rsetTable1.getObject(8).toString());
                    jTextField14.setText(rsetTable1.getObject(7).toString());
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 2);
                    jTable1.setValueAt(rsetTable1.getObject(5), i, 3);
                    // jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                    jTable1.setValueAt(rsetTable1.getObject(6), i, 4);
                        jTable1.setValueAt(rsetTable1.getObject(7), i, 5);
                       //TextField14.setText(rsetTable1.getObject(7).toString());
                    
                    i++;
                    
                    
                }
                java.sql.Statement st2 = connectDB.createStatement();
                java.sql.ResultSet rsetTotals = st2.executeQuery("SELECT SUM(debit-credit) from hp_patient_card WHERE reference = '"+jTextField10.getText()+"'");
                while (rsetTotals.next()) {
                    jTextField3.setText(rsetTotals.getString(1));
                }
            }
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
         tableModelTableChanged();
        /**
         * try {
         *
         * }
         * for (int i = 0; i < jTable1.getRowCount(); i++ ) {
         * java.sql.Statement st1 = connectDB.createStatement();
         * java.sql.ResultSet rsetTable1 = st1.executeQuery("select DISTINCT service, dosage as quantity,round(debit/dosage::numeric,2) as price, debit,card_no as amount from hp_patient_card WHERE reference = '"+jTextField10.getText()+"'AND transaction_type ilike 'billing' and credit = '0' and DOSAGE > 0 ");
         * while (rsetTable1.next()) {
         * if (jTable1.getModel().getValueAt(i,0) != null){
         * System.out.println("Working at table row "+i);
         * jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
         * jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
         * jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
         * jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
         * // jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
         * jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
         * }
         * i++;
         * }
         *
         * //i++;
         * }
         *
         * // i++;
         * //    jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT service, dosage as quantity,debit/dosage as price, debit as amount from trans_audit_view WHERE insert_no = '"+jTextField10.getText()+"'"));
         *
         *
         * java.sql.Statement st2 = connectDB.createStatement();
         * java.sql.ResultSet rsetTotals = st2.executeQuery("SELECT SUM(debit-credit) from hp_patient_card WHERE reference = '"+jTextField10.getText()+"'");
         * while (rsetTotals.next()) {
         * jTextField3.setText(rsetTotals.getString(1));
         * }
         * } catch(java.sql.SQLException sqlExec) {
         *
         * javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
         *
         * }
         */
        // }
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButtonClickedw();        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void searchButtonClickedw() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField92.getLocationOnScreen();
        
        jSearchDialog31.setSize(400,200);
        
        jSearchDialog31.setLocation(point);
        
        jSearchDialog31.show();
        
        
        
    }
    private void jSearchTable31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable31MouseClicked
        jTextField92.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 0).toString());
        jTextField8.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 1).toString());
        this.jSearchDialog31.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable31MouseClicked
    
    private void jTextField1121CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1121CaretUpdate
        if(jTextField1121.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable31.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField1121.getText()+"%' order by first_name"));
            
           /* try {
            
                searchRowSet31.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField1121.getText()+"%' order by first_name");
                jSearchTable31.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet31, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
            
                }));
            */
            jSearchTable31.setShowHorizontalLines(false);
            jSearchScrollPane31.setViewportView(jSearchTable31);
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1121CaretUpdate
    
    private void jButton921ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton921ActionPerformed
        this.jSearchDialog31.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton921ActionPerformed
    
    private void jTable111KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable111KeyReleased
     /*   if (jTable111.getValueAt(jTable111.getSelectedRow(), 1) != null) {
            float floatCol2 = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 1).toString());
      
            float floatCol3 = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 2).toString());
      
            float resVal = floatCol2 * floatCol3;
      
            java.lang.Float resFloat =new java.lang.Float(resVal);
      
            if (jTable111.getSelectedColumn() == 1) {
      
                jTable111.setValueAt(resFloat, jTable111.getSelectedRow(), 3);
      
                double Total = java.lang.Double.parseDouble(jTextField311.getText().toString());
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = Total + tableSum;
                jTextField311.setText(""+totalSum+"");
      
            }
        }
      
      */
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField311.getText());
        
        if (jTable111.getValueAt(jTable111.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable111.getValueAt(jTable111.getSelectedRow(), 1).toString());
            
            double floatCol3 = java.lang.Double.parseDouble(jTable111.getValueAt(jTable111.getSelectedRow(), 2).toString());
            
            double resVal = floatCol2 * floatCol3;
            
            
            jTable111.setValueAt(new java.lang.Float(resVal), jTable111.getSelectedRow(), 3);
            
            for (int i = 0; i < jTable111.getRowCount(); i++) {
                
                if (jTable111.getModel().getValueAt(i, 1) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i, 3).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            this.tableModelTableChanged111();
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable111KeyReleased
    public void tableModelTableChanged111() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable111.getRowCount(); i++) {
            
            if (jTable111.getModel().getValueAt(i, 1) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i, 3).toString());
                
                jTextField311.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i, 3).toString());
                
                jTextField311.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged111(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable111.getRowCount(); i++) {
            
            if (jTable111.getModel().getValueAt(i, 1) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField311.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField311.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if(jTextField11111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField11111.getText()+"%' order by first_name"));
            
            
           /* try {
            
                searchRowSet111.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField11111.getText()+"%' order by first_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
            
                jSearchTable111.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet111, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
            
                }));
            */
            jSearchTable111.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(jSearchTable111);
            
            
        }          // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate
    
    private void jButton5211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5211ActionPerformed
        this.jSearchDialog211.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton5211ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        this.jPanel111.setVisible(false);
        this.jPanel11.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void searchButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton11ActionPerformed
        searchButton11Clicked();      // Add your handling code here:
    }//GEN-LAST:event_searchButton11ActionPerformed
    
    private void jButton411ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton411ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton411ActionPerformed
    private void searchButton11Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField911.getLocationOnScreen();
        
        jSearchDialog211.setSize(400,200);
        
        jSearchDialog211.setLocation(point);
        
        jSearchDialog211.show();
    }
    private void jButton311ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton311ActionPerformed
        jTextField111.setText("");
        jTextField211.setText("");
        jTextField311.setText("");
        for (int k = 0; k < jTable111.getRowCount(); k++ ) {
            for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                jTable111.getModel().setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField311.setText("0.00");   // Add your handling code here:
    }//GEN-LAST:event_jButton311ActionPerformed
    
    private void jButton611ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton611ActionPerformed
        
        int rows2Delete = jTable111.getSelectedRowCount();
        
        int[] selectedRows = jTable111.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                
                defTableModel.removeRow(jTable111.getSelectedRow());
            }
        }
        
        tableModelTableChanged111();
        // Add your handling code here:
    }//GEN-LAST:event_jButton611ActionPerformed
    
    private void jButton9111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9111ActionPerformed
        jSearchDialog111.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton9111ActionPerformed
    
    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
        jTable111.setValueAt(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(),1),jTable111.getSelectedRow(), 5);
        //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
        //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        
        jSearchDialog111.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked
    
    private void jTextField11111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11111ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11111ActionPerformed
    private void cmbox211MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable111.getLocationOnScreen();
        jSearchDialog111.setSize(400,200);
        jSearchDialog111.setLocation(point);
        jSearchDialog111.show();
    }
    private void jButton912ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton912ActionPerformed
        jSearchDialog12.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton912ActionPerformed
    
    private void jSearchTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable12MouseClicked
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),0),jTable111.getSelectedRow(), 0);
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),1),jTable111.getSelectedRow(), 2);
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),2),jTable111.getSelectedRow(), 4);
        
        jSearchDialog12.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTable12MouseClicked
    
    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate
        jSearchTable12.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField1112.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type"));
            /*  try {
            searchRowSet12.execute("select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField1112.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type");
             
            jSearchTable12.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet12, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Service", false),
                new org.netbeans.lib.sql.models.TableModel.Column("price", "Price", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
            }));
             */
        jSearchScrollPane12.setViewportView(jSearchTable12);
        System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1112CaretUpdate
    private void cmbox111MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable111.getLocationOnScreen();
        jSearchDialog12.setSize(400,200);
        jSearchDialog12.setLocation(point);
        jSearchDialog12.show();
    }
    private void jTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable111MouseClicked
        if (jTable111.getSelectedColumn() == 0) {
            
            this.cmbox111MouseClicked();
        }          // Add your handling code here:
        if (jTable111.getSelectedColumn() == 5) {
            
            this.cmbox211MouseClicked();
        }       // Add your handling code here:
    }//GEN-LAST:event_jTable111MouseClicked
    
    private void jButton111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton111ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        // try{
        String billNo = null;
        
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String insAcc = null;
        String visitid = "-";
        try {
            connectDB.setAutoCommit(false);
            
             /*   java.sql.Statement stmtz = connectDB.createStatement();
                java.sql.ResultSet rset = stmtz.executeQuery("select visit_id  from hp_admission where patient_no ILIKE '%"+jTextField911.getText().toString()+"%' and discharge = false AND visit_id IS NOT NULL order by visit_id desc LIMIT 1");
                while (rset.next()){
              
                    visitid = rset.getObject(1).toString();
                }
              */
            if(!(jTextField711.getText().equals("Cash")||jTextField711.getText().equals(""))){
                
                java.sql.Statement stm1 = connectDB.createStatement();
                java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTextField911.getText()+"'");
                while (rse1.next())
                    
                    // patientAcc = rse1.getObject(1).toString();
                    payMode = rse1.getObject(1).toString();
                
                cardNo = rse1.getObject(2).toString();
                scheme = rse1.getObject(3).toString();
                cardName = rse1.getObject(4).toString();
                isurer = rse1.getObject(5).toString();
                expDate = rse1.getObject(6).toString();
                staffNo = rse1.getObject(7).toString();
            }
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            while (rse12.next())
                
                patientAcc = rse12.getObject(1).toString();
            AccDesc = rse12.getObject(2).toString();
            
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next())
                rst.getObject(1).toString();
            
            transNo = rst.getObject(1).toString();
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
            while (rst11.next())
                rst11.getObject(1).toString();
            
            billNo = rst11.getObject(1).toString();
            user = rst11.getObject(2).toString();
            
            
            
            // }else{
            
            //   if (jTable1.getModel().getValueAt(0,3) != null){
            
            for (int i = 0; i < jTable111.getRowCount(); i++){
                if (jTable111.getValueAt(i,0) != null){
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select main_service,current_user from pb_operating_parameters where gl_account ='"+jTable111.getValueAt(i,4).toString()+"'");
                    while (rse121.next())
                        
                        glAcc = rse121.getObject(1).toString();
                    user = rse121.getObject(2).toString();
                    
                    
                    
                    java.sql.Statement stm2 = connectDB.createStatement();
                    java.sql.ResultSet rse2 = stm2.executeQuery("SELECT staff_no from pb_doctors_list where (upper(first_name||' '||middle_name)) = '"+jTable111.getValueAt(i,5).toString()+"'");
                    while (rse2.next())
                        
                        insAcc = rse2.getObject(1).toString();
                    //insName = rse2.getObject(2).toString();
                    //     if(jCheckBox1.isSelected()||jCheckBox2.isSelected()){
                    
                    
                    
                    java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                    pstmt21.setString(1,insAcc);
                    pstmt21.setString(2,jTable111.getValueAt(i,0).toString());
                    pstmt21.setString(3,jTable111.getValueAt(i,5).toString());
                    pstmt21.setString(4,transNo);
                    pstmt21.setString(5,jTable111.getValueAt(i,4).toString());
                    pstmt21.setString(6,"Doctors Fee");
                    pstmt21.setString(8,"00");
                    pstmt21.setString(7,jTable111.getValueAt(i,3).toString());
                    pstmt21.setString(9,"");
                    pstmt21.setString(10,jTextField911.getText());
                    
                    pstmt21.setString(11,jTable111.getValueAt(i,0).toString());
                    pstmt21.setString(12,"false");
                    pstmt21.setString(14,datePicker2.getDate().toString());
                    pstmt21.setString(13,user);
                    
                    pstmt21.setString(15,"");
                    pstmt21.setString(19,jTextField71.getText());
                    pstmt21.setString(18,"00");
                    pstmt21.setString(16,jTextField12.getText());
                    
                    pstmt21.setString(17,jTable111.getValueAt(i,3).toString());
                    
                    pstmt21.executeUpdate();
                    
                    
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                    
                    pstmt.setString(1,jTextField911.getText());
                    pstmt.setObject(2,jTable111.getValueAt(i,0).toString());
                    pstmt.setString(3,jTextField211.getText());
                    pstmt.setString(4,jTextField711.getText());
                    pstmt.setString(5,transNo);
                    pstmt.setString(7,scheme);
                    pstmt.setString(6,cardNo);
                    pstmt.setString(8,cardName);
                    pstmt.setString(9,isurer);
                    pstmt.setString(10,expDate);
                    pstmt.setString(11,"");
                    pstmt.setObject(13,jTable111.getValueAt(i,3).toString());
                    pstmt.setString(12,"00");
                    pstmt.setString(14,datePicker2.getDate().toString());
                    pstmt.setObject(15,patientAcc);
                    pstmt.setString(16,glAcc);
                    pstmt.setObject(17,jTable111.getValueAt(i,1).toString());
                    pstmt.setObject(18,staffNo);
                    pstmt.setBoolean(19,false);
                    pstmt.setString(20,"Billing");
                    pstmt.setBoolean(21,false);
                    pstmt.setString(22,AccDesc);
                    pstmt.setString(23,visitid);
                    pstmt.setString(24,user);
                    pstmt.setString(25,billNo);
                    pstmt.setString(26,"IP");
                    pstmt.setString(27,"'now'");
                    pstmt.setString(28,visitid);
                    pstmt.executeUpdate();
                    /*
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                    pstmt2.setString(2,glAcc);
                    pstmt2.setString(3,jTextField9.getText());
                    pstmt2.setString(4,jTextField1.getText());
                    pstmt2.setString(5,"");
                    pstmt2.setString(6,cardNo);
                    pstmt2.setString(7,cardName);
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,isurer);
                    pstmt2.setString(10,"");
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                    pstmt2.setString(15,"Revenue");
                    pstmt2.setString(16,"0.00");
                    pstmt2.setObject(17,jTable1.getValueAt(i,3).toString());
                    pstmt2.setString(18,"'now'");
                    pstmt2.setString(19,transNo);
                    pstmt2.setString(20,"false");
                    pstmt2.setString(21,"false");
                    pstmt2.setString(22,"false");
                    pstmt2.setString(23,user);
                    pstmt2.executeUpdate();
                     */
                }
            }
            
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            jLabel711.setForeground(java.awt.Color.blue);
            jLabel711.setText("Insert successful");
            jTextField111.setText("");
            jTextField211.setText("");
            jTextField711.setText("");
            for (int k = 0; k < jTable111.getRowCount(); k++ ) {
                for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                    jTable11.getModel().setValueAt(null,k,r);
                }
            }
            
            //  this.jComboBox131.setSelectedItem(null);
            jTextField311.setText("0.00");
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
      /*  } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
       
       
        }
       */
        // Add your handling code here:
    }//GEN-LAST:event_jButton111ActionPerformed
    
    private void jSearchTable211MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable211MouseClicked
        jTextField121.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 1).toString());
        jTextField911.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 0).toString());
        
        
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_inpatient_register where patient_no  ='"+jTextField911.getText()+"'");
            while (rset1.next()){
                jTextField211.setText(rset1.getObject(1).toString());
                jTextField711.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog211.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jSearchTable211MouseClicked
    
    private void jTextField11311CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11311CaretUpdate
        if(jTextField11311.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            if(this.jCheckBox5.isSelected()){
                
                jSearchTable211.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField11311.getText()+"%' order by second_name"));
                
             /*   try {
              
                    searchRowSet211.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField11311.getText()+"%' order by second_name");
              
                    jSearchTable211.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet211, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
              */
                jSearchTable211.setShowHorizontalLines(false);
                jSearchScrollPane211.setViewportView(jSearchTable211);
                
                
            }else{
                jSearchTable211.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField11311.getText()+"%' order by second_name"));
                
              /*  try {
               
                    searchRowSet211.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField11311.getText()+"%' order by second_name");
               
                    jSearchTable211.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet211, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
               */
                jSearchTable211.setShowHorizontalLines(false);
                jSearchScrollPane211.setViewportView(jSearchTable211);
                
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11311CaretUpdate
    private void searchButton211Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog211.setSize(400,200);
        
        jSearchDialog211.setLocation(point);
        
        jSearchDialog211.show();
        
        
        
    }
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        this.jPanel11.setVisible(false);
        this.jPanel111.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed
    
    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        jTextField11.setText("");
        jTextField21.setText("");
        jTextField71.setText("");
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField31.setText("0.00");     // Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed
    
    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        
        int rows2Delete = jTable11.getSelectedRowCount();
        
        int[] selectedRows = jTable11.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                
                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }
        
        tableModelTableChanged1();
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton61ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if(jTextField12.getText().equalsIgnoreCase("")){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without the name","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
            jTable11.setEditingRow(-1);
            //tableModelTableChanged1();
            
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql1= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql1.toString());
            
            java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
            
            System.out.println(datenowSql.toString());
            
            try{
                String billNo = null;
                
                String transNo = null;
                String payMode = null;
                String patientAcc = null;
                String cardNo = null;
                String AccDesc = null;
                String scheme = null;
                String cardName = null;
                String isurer = null;
                String expDate = null;
                String staffNo = null;
                String glAcc = null;
                String user = null;
                String accDesc1 = null;
                String insAcc = null;
                String glAcc1 = null;
                String patientAcc1 = null;
                String AccDesc1 = null;
                
                try {
                    connectDB.setAutoCommit(false);
                    
                    
                    java.sql.Statement stm12 = connectDB.createStatement();
                    java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                    while (rse12.next()){
                        
                        patientAcc = rse12.getObject(1).toString();
                        AccDesc = rse12.getObject(2).toString();
                    }
                    java.sql.Statement ps = connectDB.createStatement();
                    java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                    while (rst.next()){
                        rst.getObject(1).toString();
                        
                        transNo = rst.getObject(1).toString();
                    }
                    java.sql.Statement ps11 = connectDB.createStatement();
                    java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
                    while (rst11.next()){
                        rst11.getObject(1).toString();
                        
                        billNo = rst11.getObject(1).toString();
                        user = rst11.getObject(2).toString();
                    }
                    
                    // java.sql.PreparedStatement pstmRemove = connectDB.prepareStatement("DELETE FROM hp_patient_billing WHERE patient_no = '"+jTextField91.getText()+"' AND paid = false AND trans_date = date('now')");
                    
                    // pstmRemove.executeUpdate();
                    // }else{
                    
                    //   if (jTable1.getValueAt(0,3) != null){
                    
                    for (int i = 0; i < jTable11.getRowCount(); i++){
                        if (jTable11.getValueAt(i,0) != null){
                            java.sql.Statement stm121 = connectDB.createStatement();
                            java.sql.ResultSet rse121 = stm121.executeQuery("select main_service,current_user from pb_operating_parameters where gl_account ='"+jTable11.getValueAt(i,4).toString()+"'");
                            while (rse121.next())
                                
                                glAcc = rse121.getObject(1).toString();
                            user = rse121.getObject(2).toString();
                            
                            java.sql.Statement stm1211 = connectDB.createStatement();
                            java.sql.ResultSet rse1211 = stm1211.executeQuery("select code from pb_activity where activity_category ilike 'PR%'");
                            while (rse1211.next()){
                                
                                glAcc1 = rse1211.getObject(1).toString();
                            }
                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?,numeric_uminus(?), ?, ?, ?, ?, ?, ?)");
                            
                            pstmt2.setString(1,jTextField91.getText());
                            
                            
                            pstmt2.setString(2,jTextField11.getText());
                            pstmt2.setString(3,jTextField41.getText());
                            pstmt2.setString(4,jTextField21.getText());
                            pstmt2.setString(5,jTable11.getValueAt(i,0).toString());
                            pstmt2.setString(6,jTable11.getValueAt(i,1).toString());
                            pstmt2.setString(7,jTable11.getValueAt(i,3).toString());
                            pstmt2.setObject(8,jTable11.getValueAt(i,4).toString());
                            pstmt2.setString(9,datePicker2.getDate().toString());
                            pstmt2.setString(10,"");
                            pstmt2.setString(11,user);
                            pstmt2.setString(12,"false");
                            pstmt2.setString(13,glAcc);
                            pstmt2.executeUpdate();
                            java.sql.PreparedStatement pstmt44 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable11.getValueAt(i,3).toString()+"' where code = '"+glAcc1+"'");
                            pstmt44.executeUpdate();
                            
                            
                            java.sql.Statement stm2 = connectDB.createStatement();
                            java.sql.ResultSet rse2 = stm2.executeQuery("SELECT staff_no from pb_doctors_list where (upper(first_name||' '||middle_name)) = '"+jTable11.getValueAt(i,5).toString()+"'");
                            while (rse2.next()){
                                
                                insAcc = rse2.getObject(1).toString();
                            }
                            java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                            pstmt21.setString(1,insAcc);
                            pstmt21.setString(2,jTable11.getValueAt(i,0).toString());
                            pstmt21.setString(3,jTable11.getValueAt(i,5).toString());
                            pstmt21.setString(4,transNo);
                            pstmt21.setString(5,jTable11.getValueAt(i,4).toString());
                            pstmt21.setString(6,"Doctors Fee");
                            pstmt21.setString(8,"00");
                            pstmt21.setString(7,jTable11.getValueAt(i,3).toString());
                            pstmt21.setString(9,"");
                            pstmt21.setString(10,jTextField91.getText());
                            pstmt21.setString(11,jTable11.getValueAt(i,0).toString());
                            pstmt21.setString(12,"false");
                            pstmt21.setString(13,user);
                            pstmt21.setString(14,datePicker2.getDate().toString());
                            pstmt21.setString(15,transNo);
                            pstmt21.setString(19,jTextField71.getText());
                            pstmt21.setString(18,"00");
                            pstmt21.setString(16,jTextField12.getText());
                            pstmt21.setString(17,jTable11.getValueAt(i,3).toString());
                            
                            pstmt21.executeUpdate();
                            
                            
                            java.sql.Statement stm1212 = connectDB.createStatement();
                            java.sql.ResultSet rse1212 = stm1212.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                            while (rse1212.next()){
                                
                                patientAcc1 = rse1212.getObject(1).toString();
                                AccDesc1 = rse1212.getObject(2).toString();
                            }
                            System.out.println("Yes I Can print this "+patientAcc1);
                            java.sql.PreparedStatement pstmt29 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                            pstmt29.setObject(1,patientAcc1);
                            pstmt29.setObject(2,AccDesc1);
                            pstmt29.setString(3,jTextField91.getText());
                            pstmt29.setObject(4,jTextField12.getText());
                            pstmt29.setObject(5,"");
                            pstmt29.setObject(6,"");
                            pstmt29.setObject(7,"-");
                            pstmt29.setString(8,"");
                            pstmt29.setString(9,"");
                            pstmt29.setString(10,"");
                            pstmt29.setString(11,"");
                            pstmt29.setString(12,"");
                            pstmt29.setString(13,"");
                            pstmt29.setString(14,jTable11.getValueAt(i,0).toString());
                            pstmt29.setString(15,"Billing");
                            pstmt29.setObject(17,jTable11.getValueAt(i,3));
                            pstmt29.setString(16,"00");
                            pstmt29.setString(18,datePicker2.getDate().toString());
                            pstmt29.setString(19,transNo);
                            pstmt29.setBoolean(20,false);
                            pstmt29.setBoolean(21,false);
                            pstmt29.setBoolean(22,false);
                            pstmt29.setString(23,user);
                            
                            pstmt29.executeUpdate();
                            
                            
                        }
                    }
                    
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    jLabel71.setForeground(java.awt.Color.blue);
                    jLabel71.setText("Insert successful");
                    jTextField11.setText("");
                    jTextField21.setText("");
                    jTextField71.setText("");
                    for (int k = 0; k < jTable11.getRowCount(); k++ ) {
                        for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                            jTable11.setValueAt(null,k,r);
                        }
                    }
                    
                    //  this.jComboBox131.setSelectedItem(null);
                    jTextField31.setText("0.00");
                    //  jComboBox2.setSelectedItem(null);
                }catch(java.sql.SQLException sq){
                    
                    try {
                        connectDB.rollback();
                    }catch (java.sql.SQLException sql){
                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    System.out.println(sq.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                    
                }
            } catch(java.lang.Exception ex) {
                System.out.println(ex.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void jButton911ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton911ActionPerformed
        jSearchDialog11.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jButton911ActionPerformed
    private void cmbox2MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable11.getLocationOnScreen();
        jSearchDialog11.setSize(400,200);
        jSearchDialog11.setLocation(point);
        jSearchDialog11.show();
    }
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        jTable11.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),1),jTable11.getSelectedRow(), 5);
        //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
        //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        
        jSearchDialog11.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1111.getText()+"%' order by first_name"));
           /*
            try {
            
                searchRowSet11.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField1111.getText()+"%' order by first_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
            
                jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
            
                }));
            */
            jSearchTable11.setShowHorizontalLines(false);
            jSearchScrollPane11.setViewportView(jSearchTable11);
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jTable11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable11KeyReleased
        
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField31.getText());
        
        if (jTable11.getValueAt(jTable11.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 1).toString());
            
            double floatCol3 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 2).toString());
            
            double resVal = floatCol2 * floatCol3;
            
            
            jTable11.setValueAt(new java.lang.Float(resVal), jTable11.getSelectedRow(), 3);
            
            for (int i = 0; i < jTable11.getRowCount(); i++) {
                
                if (jTable11.getModel().getValueAt(i, 1) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            this.tableModelTableChanged1();
        }
        
 /*       if (jTable11.getValueAt(jTable11.getSelectedRow(), 1) != null) {
            float floatCol2 = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 1).toString());
  
            float floatCol3 = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 2).toString());
  
            float resVal = floatCol2 * floatCol3;
  
            java.lang.Float resFloat =new java.lang.Float(resVal);
  
            if (jTable11.getSelectedColumn() == 1) {
  
                jTable11.setValueAt(resFloat, jTable11.getSelectedRow(), 3);
  
                double Total = java.lang.Double.parseDouble(jTextField31.getText().toString());
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = Total + tableSum;
                jTextField31.setText(""+totalSum+"");
  
            }
        }
  */
        // Add your handling code here:
    }//GEN-LAST:event_jTable11KeyReleased
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable11.getRowCount(); i++) {
            
            if (jTable11.getModel().getValueAt(i, 1) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable11.getRowCount(); i++) {
            
            if (jTable11.getModel().getValueAt(i, 1) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog1.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),0),jTable11.getSelectedRow(), 0);
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        
        jSearchDialog1.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField111.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type"));
        
    /*    try {
            searchRowSet1.execute("select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField111.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type");
     
            jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Service", false),
                new org.netbeans.lib.sql.models.TableModel.Column("price", "Price", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
            }));
     */
        jSearchScrollPane1.setViewportView(jSearchTable1);
        System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void jTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MouseClicked
        if (jTable11.getSelectedColumn() == 0) {
            
            this.cmbox1MouseClicked();
        }          // Add your handling code here:
        if (jTable11.getSelectedColumn() == 5) {
            
            this.cmbox2MouseClicked();
        }          // Add your handling code here:
        
        // Add your handling code here:
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable11MouseClicked
    private void cmbox1MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable11.getLocationOnScreen();
        jSearchDialog1.setSize(400,200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.show();
    }
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
    
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        jTextField12.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        
        
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_patient_register where patient_no  ='"+jTextField91.getText()+"'");
            while (rset1.next()){
                jTextField21.setText(rset1.getObject(1).toString());
                jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog21.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        if(jTextField1131.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            if(this.jCheckBox5.isSelected()){
                jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1131.getText()+"%' and last_visit > current_date - 15 order by second_name"));
                
               /* try {
                
                    searchRowSet21.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1131.getText()+"%' and last_visit > current_date - 15 order by second_name");
                
                    jSearchTable21.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet21, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                */
                jSearchTable21.setShowHorizontalLines(false);
                jSearchScrollPane21.setViewportView(jSearchTable21);
                
                
            }else{
                jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_patient_register where patient_no ILIKE '"+jTextField1131.getText()+"%' and last_visit > current_date - 15 order by second_name"));
                
                /*    searchRowSet21.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_patient_register where patient_no ILIKE '"+jTextField1131.getText()+"%' and last_visit > current_date - 15 order by second_name");
                 
                    jSearchTable21.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet21, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                 */
                jSearchTable21.setShowHorizontalLines(false);
                jSearchScrollPane21.setViewportView(jSearchTable21);
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton1Clicked();
        try {
            String code = null;
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select code from pb_activity where activity_category  ILIKE 'CA'");
            while (rset1.next()){
                code = rset1.getObject(1).toString();
                
            }
            
            java.sql.Statement stmt2 = connectDB.createStatement();
            java.sql.ResultSet rset2 = stmt2.executeQuery("select DISTINCT main_service from pb_operating_parameters where gl_account  ILIKE '"+code+"'");
            while (rset2.next()){
                jTextField5.setText(rset2.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
// Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton1Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog21.setSize(400,200);
        
        jSearchDialog21.setLocation(point);
        
        jSearchDialog21.show();
        
        
        
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable1.getSelectedRow(), 2);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable1.getSelectedRow(), 4);
         jTable1.setValueAt(jTextField22.getText(),jTable1.getSelectedRow(), 5);
        
        jSearchDialog.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        if(jCheckBox21.isSelected()){
            if(jRadioButton1.isSelected()){
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT po.service_type,po.rate as price,'"+jTextField16.getText()+"' as gl_code,'"+jTextField22.getText()+"' as sub_code   FROM pb_operating_parameters po,hp_patient_card pc WHERE po.service_type ILIKE '"+jTextField11.getText()+"%' AND po.sub_code = '"+jTextField22.getText()+"' and pc.patient_no = '"+jTextField9.getText()+"' AND pc.MAIN_service ilike '"+jComboBox1.getSelectedItem()+"' AND pc.service  ilike po.service_type and pc.date::date = '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate())+"' UNION ALL select po.product,po.selling_price,'"+jTextField16.getText()+"' as gl_code , '"+jTextField22.getText()+"' as sub_code  FROM st_stock_prices po, hp_patient_card pc WHERE po.product ILIKE '"+jTextField11.getText()+"%'  AND pc.patient_no = '"+jTextField9.getText()+"' AND pc.service ilike po.product AND po.sub_code = '"+jTextField22.getText()+"'"));
            }
            /*else{
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT po.service_type,po.anaesthetist_rate as price,'"+jTextField16.getText()+"' as gl_code FROM pb_operating_parameters po,hp_patient_card pc WHERE po.service_type ILIKE '"+jTextField11.getText()+"%' AND po.main_service ilike '"+jComboBox1.getSelectedItem()+"%' AND po.sub_code ilike '"+jTextField22.getText()+"%'  AND pc.patient_no = '"+jTextField9.getText()+"' AND pc.service ilike po.service_type AND pc.main_service ilike '"+jComboBox1.getSelectedItem()+"%'  UNION ALL select po.product,po.selling_price,po.gl_code as service_type ,'"+jTextField16.getText()+"' FROM st_stock_prices po, hp_patient_card pc WHERE po.product ILIKE '"+jTextField11.getText()+"%' AND po.department ilike  '"+jComboBox1.getSelectedItem()+"'  AND pc.patient_no = '"+jTextField9.getText()+"' AND pc.service ilike po.product AND pc.main_service ilike '"+jComboBox1.getSelectedItem()+"%'"));
                
            }*/
            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");
        }else{
            
            if(jRadioButton1.isSelected()){
                //jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT po.service_type,po.rate as price,'"+jTextField16.getText()+"' as gl_code,'"+jTextField22.getText()+"' as sub_code FROM pb_operating_parameters po,patient_bill pc WHERE pc.MAIN_service ilike '"+jComboBox1.getSelectedItem()+"' AND po.service_type ILIKE '"+jTextField11.getText()+"%' AND po.sub_code = '"+jTextField22.getText()+"' and pc.patient_no = '"+jTextField9.getText()+"' AND pc.description ilike po.service_type and pc.date_prescribed::date = '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate())+"' UNION ALL select po.product,po.selling_price,'"+jTextField16.getText()+"' as gl_code ,'"+jTextField22.getText()+"' as sub_code FROM st_stock_prices po, patient_bill pc WHERE po.product ILIKE '"+jTextField11.getText()+"%' AND po.sub_code =  '"+jTextField22.getText()+"'   AND pc.patient_no = '"+jTextField9.getText()+"' AND pc.description ilike po.product"));
                   jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT po.service_type,po.rate as price,'"+jTextField16.getText()+"' as gl_code,'"+jTextField22.getText()+"' as sub_code   FROM pb_operating_parameters po,ac_ledger pc WHERE po.service_type ILIKE '"+jTextField11.getText()+"%' AND po.sub_code = '"+jTextField22.getText()+"' and pc.patient_no = '"+jTextField9.getText()+"' AND pc.activity_code = '"+jTextField16.getText()+"' AND pc.service_type  ilike po.service_type and pc.date::date = '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate())+"' UNION ALL select po.product,po.selling_price,'"+jTextField16.getText()+"' as gl_code , '"+jTextField22.getText()+"' as sub_code  FROM st_stock_prices po, hp_patient_card pc WHERE po.product ILIKE '"+jTextField11.getText()+"%'  AND pc.patient_no = '"+jTextField9.getText()+"' AND pc.service ilike po.product AND po.sub_code = '"+jTextField22.getText()+"'"));
      
            }
            /*else{
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT po.service_type,po.anaesthetist_rate as price,'"+jTextField16.getText()+"' as gl_code FROM pb_operating_parameters po,patient_bill pc WHERE po.service_type ILIKE '"+jTextField11.getText()+"%' AND po.main_service ilike '"+jComboBox1.getSelectedItem()+"%'  AND pc.patient_no = '"+jTextField9.getText()+"' AND pc.description ilike po.service_type AND pc.main_service ilike '"+jComboBox1.getSelectedItem()+"%'  UNION ALL select po.product,po.selling_price,po.gl_code as service_type FROM st_stock_prices po, patient_bill pc WHERE po.product ILIKE '"+jTextField11.getText()+"%' AND po.department ilike  '"+jComboBox1.getSelectedItem()+"'  AND pc.patient_no = '"+jTextField9.getText()+"' AND pc.description ilike po.product AND pc.main_service ilike '"+jComboBox1.getSelectedItem()+"%'"));
                
            }*/
            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        if (jTable1.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked();
        }          // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTable1.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.show();
    }
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        //        this.jComboBox131.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        
        if(this.jCheckBox11.isSelected()){
            try {
                
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_patient_register where patient_no  ='"+jTextField9.getText()+"'");
                while (rset1.next()){
                    jTextField2.setText(rset1.getObject(1).toString());
                    jTextField7.setText(rset1.getObject(2).toString());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        }else{
            if(this.jCheckBox21.isSelected()){
                
                try {
                    
                    
                    java.sql.Statement stmt1 = connectDB.createStatement();
                    java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_inpatient_register where patient_no  ='"+jTextField9.getText()+"'");
                    while (rset1.next()){
                        jTextField2.setText(rset1.getObject(1).toString());
                        jTextField7.setText(rset1.getObject(2).toString());
                    }
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    //  System.out.println("Insert not successful");
                }
            }else{
                if(this.jCheckBox12.isSelected()){
                    try {
                        
                        
                        java.sql.Statement stmt1 = connectDB.createStatement();
                        java.sql.ResultSet rset1 = stmt1.executeQuery("select patient_category,payment_mode from hp_patient_card where patient_no  ='"+jTextField9.getText()+"'");
                        while (rset1.next()){
                            jTextField2.setText(rset1.getObject(1).toString());
                            jTextField7.setText(rset1.getObject(2).toString());
                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        //  System.out.println("Insert not successful");
                    }
                }
            }
        }
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        for (int m = 0; m < jTable1.getRowCount(); m++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,m,r);
            }
        }
        
        if(jTextField113.getCaretPosition() < 3){
            
            
            System.out.println("Nothing");
        }else{
            if(this.jCheckBox11.isSelected() && this.jCheckBox3.isSelected()){
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name, year_of_birth, residence from patient_select2 where name ILIKE '"+jTextField113.getText()+"%' order by name"));
                
              /*  try {
               
                    // searchRowSet2.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' and last_visit > current_date - 15 order by second_name");
               
                    searchRowSet2.execute("SELECT patient_no, name, year_of_birth, residence from patient_select where name ILIKE '"+jTextField113.getText()+"%' order by name");
               
               
                    jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
               */
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
            }else{
                if(this.jCheckBox12.isSelected() && this.jCheckBox3.isSelected()){
                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct patient_no, dealer as name, gl_code as payer, date from ac_ledger where dealer ILIKE '"+jTextField113.getText()+"%' order by dealer"));
                }else{
                    if(this.jCheckBox12.isSelected() && this.jCheckBox22.isSelected()){
                        jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct patient_no, dealer as name, gl_code as payer, date from ac_ledger where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no"));
                        
                        
                    }else{
                        if(this.jCheckBox11.isSelected() && this.jCheckBox22.isSelected()){
                            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name, year_of_birth, residence from patient_select2 where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no"));
                            
                 /*   try {
                  
                        searchRowSet2.execute("SELECT patient_no, name, year_of_birth, residence from patient_select where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no");
                  
                  
                        jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                            //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                  */
                            jSearchTable2.setShowHorizontalLines(false);
                            jSearchScrollPane2.setViewportView(jSearchTable2);
                            
                        }else{
                            if(this.jCheckBox21.isSelected() && this.jCheckBox3.isSelected()){
                                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from inpatient_list2 where name ILIKE '"+jTextField113.getText()+"%' order by name"));
                                
               /* try {
                
                    searchRowSet2.execute("SELECT patient_no, name from inpatient_list where name ILIKE '"+jTextField113.getText()+"%' order by name");
                
                    jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        //   new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                */
                                jSearchTable2.setShowHorizontalLines(false);
                                jSearchScrollPane2.setViewportView(jSearchTable2);
                                
                                
                            }else{
                                if(this.jCheckBox21.isSelected() && this.jCheckBox22.isSelected()){
                                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from inpatient_list2 where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no"));
                                    
                 /*   try {
                  
                        //  searchRowSet2.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField113.getText()+"%' order by second_name");
                        searchRowSet2.execute("SELECT patient_no, name from inpatient_list where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no");
                  
                        jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                            //   new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                  */
                                    jSearchTable2.setShowHorizontalLines(false);
                                    jSearchScrollPane2.setViewportView(jSearchTable2);
                                    
                                    
                                }
                            }
                        }
                    }
                }
            }
        }
            // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
        
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
        
        
        
    }
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try{
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select code,sub_code from pb_activity WHERE activity ilike '"+jComboBox1.getSelectedItem()+"'");
            while (rst11.next()){
                
                jTextField16.setText(rst11.getString(1));
                jTextField22.setText(rst11.getString(2));
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        /*        cmbox = new javax.swing.JComboBox();
        crset2.setCommand("select service_type FROM pb_operating_parameters WHERE main_service = '"+jComboBox1.getSelectedItem().toString()+"' order by service_type");
        crset2.setConnectionSource(pConnDB);
 
        cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset2, "service_type", null, null, null));
        javax.swing.table.TableColumn s = this.jTable1.getColumn("Service");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
 
 });
 */
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        tableModelTableChanged();
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 1) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getModel().getValueAt(i, 1) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
        
        if (jTable1.getValueAt(jTable1.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
            
            double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
            
            double resVal = floatCol2 * floatCol3;
            
            
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
            
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                
                if (jTable1.getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
            this.tableModelTableChanged();
        }
        
/*        if (jTable1.getValueAt(jTable1.getSelectedRow(), 1) != null) {
            float floatCol2 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
 
            float floatCol3 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
 
            float resVal = floatCol2 * floatCol3;
 
            java.lang.Float resFloat =new java.lang.Float(resVal);
 
            if (jTable1.getSelectedColumn() == 1) {
 
                jTable1.setValueAt(resFloat, jTable1.getSelectedRow(), 3);
 
                double Total = java.lang.Double.parseDouble(jTextField3.getText().toString());
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = Total + tableSum;
                jTextField3.setText(""+totalSum+"");
 
            }
        }
 */
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    private void cmbox4ActionPerformed(java.awt.event.ActionEvent evt){
   /*     java.lang.Object selectedGuaran = cmbox4.getSelectedItem();
//        int i = jTable2.getSelectedRow();
    
        if (selectedGuaran != null) {
    
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
    
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
    */
        
    }    private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox3.getSelectedItem();
  /*      int i = jTable2.getSelectedRow();
   
        if (selectedGuaran != null) {
   
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
   
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
   
   */
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable1.getSelectedRow();
        
        if (selectedGuaran != null) {
            
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"'");
                
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable1.setValueAt(rs.getObject(1),i,2);
                    jTable1.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
        
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField3.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select period_from,period_to FROM period_setup WHERE period_status ilike 'Open'");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"The date is within the closed account period! \n Please Contact Accounts Head".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
        if(jTextField1.getText().equalsIgnoreCase("")){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without the name","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            jTable1.setEditingRow(-1);
            //     tableModelTableChanged();
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql1= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql1.toString());
            
            java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
            
            System.out.println(datenowSql.toString());
            try{
                String billNo = null;
                String transNo = null;
                String payMode = null;
                String patientAcc = null;
                String cardNo = null;
                String AccDesc = null;
                String scheme = null;
                String cardName = null;
                String isurer = null;
                String expDate = null;
                String staffNo = null;
                String glAcc = null;
                String user = null;
                String accDesc1 = null;
                String glAcc1 = null;
                String visitid = "-";
                String units = null;
                String gacc = null;
                String item = null;
                int itemInt = 0;
                double price = 0.00;
                String Store = null;
                double qty = 0.00;
                String glCode = null;
                String actCode = null;
                double amount = 0.00;
                double sellPrice = 0.00;
                try {
                    connectDB.setAutoCommit(false);
                    java.sql.Statement stm122 = connectDB.createStatement();
                    java.sql.Statement stm122x = connectDB.createStatement();
                    
                    java.sql.Statement stm121x = connectDB.createStatement();
                    
                    java.sql.ResultSet rse121x = stm121x.executeQuery("select direct_rev from pb_patient_names");
                    while (rse121x.next()){
                        
                        DirectRev = rse121x.getBoolean(1);
                        
                    }
                    
                    
                    java.sql.Statement stm12 = connectDB.createStatement();
                    java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                    while (rse12.next()){
                        
                        patientAcc = rse12.getObject(1).toString();
                        AccDesc = rse12.getObject(2).toString();
                    }
                    java.sql.Statement ps = connectDB.createStatement();
                    java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                    while (rst.next()){
                        rst.getObject(1).toString();
                        
                        transNo = rst.getObject(1).toString();
                    }
                    java.sql.Statement ps11 = connectDB.createStatement();
                    java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
                    while (rst11.next()){
                        rst11.getObject(1).toString();
                        
                        billNo = rst11.getObject(1).toString();
                        user = rst11.getObject(2).toString();
                    }
                    if(this.jCheckBox11.isSelected()){
                        // java.sql.PreparedStatement pstmRemove = connectDB.prepareStatement("DELETE FROM hp_patient_billing WHERE patient_no = '"+jTextField9.getText()+"' AND revenuepaid = false AND trans_date = date('now')");
                        
                        // pstmRemove.executeUpdate();
                        java.sql.Statement stm1 = connectDB.createStatement();
                        java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
                        while (rse1.next()){
                            
                            payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                            cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                            scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                            cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                            isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                            expDate = dbObject.getDBObject(rse1.getObject(6), "NULL");
                            staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                        }
                        for (int i = 0; i < jTable1.getRowCount(); i++){
                            if (jTable1.getValueAt(i,0) != null){
                                java.sql.Statement stm121 = connectDB.createStatement();
                                java.sql.ResultSet rse121 = stm121.executeQuery("select activity,current_user from pb_activity where code ='"+jTable1.getValueAt(i,4).toString()+"'");
                                while (rse121.next()){
                                    
                                    glAcc = rse121.getObject(1).toString();
                                    user = rse121.getObject(2).toString();
                                }
                                
                                if(this.jTextField7.getText().equalsIgnoreCase("Scheme")){
                                    
                                    java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, numeric_uminus(?), ?, ?, ?, ?, ?, ?,?,?)");
                                    pstmt22.setString(1,jTextField9.getText());
                                    pstmt22.setString(10,"");
                                    pstmt22.setString(2,jTextField1.getText());
                                    pstmt22.setString(3,jTextField7.getText());
                                    pstmt22.setString(4,jTextField2.getText());
                                    pstmt22.setString(5,jTable1.getValueAt(i,0).toString());
                                    pstmt22.setString(6,jTable1.getValueAt(i,1).toString());
                                    pstmt22.setString(7,jTable1.getValueAt(i,3).toString());
                                    pstmt22.setObject(8,jTable1.getValueAt(i,4).toString());
                                    pstmt22.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt22.setBoolean(12,false);
                                    pstmt22.setString(11,user);
                                    pstmt22.setString(13,glAcc);
                                    pstmt22.setString(14,visitid);
                                    pstmt22.setString(15,billNo);
                                    pstmt22.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                    pstmt.setString(1,jTextField9.getText());
                                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                    pstmt.setString(3,jTextField2.getText());
                                    pstmt.setString(4,jTextField7.getText());
                                    pstmt.setString(5,transNo);
                                    pstmt.setString(7,scheme);
                                    pstmt.setString(6,cardNo);
                                    pstmt.setString(8,cardName);
                                    pstmt.setString(9,isurer);
                                    pstmt.setDate(10,null);
                                    pstmt.setString(11,"");
                                    pstmt.setDouble(13,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt.setDouble(12,0.00);
                                    pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt.setObject(15,patientAcc);
                                    pstmt.setString(16,glAcc);
                                    pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt.setObject(18,staffNo);
                                    pstmt.setBoolean(19,false);
                                    pstmt.setString(20,"Billing");
                                    pstmt.setBoolean(21,false);
                                    pstmt.setString(22,AccDesc);
                                    pstmt.setString(23,visitid);
                                    pstmt.setString(24,user);
                                    pstmt.setString(25,billNo);
                                    pstmt.setString(26,"OP");
                                    pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                    pstmt.setString(28,visitid);
                                    
                                    
                                    pstmt.executeUpdate();
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                                    pstmt2.setString(2,glAcc);
                                    pstmt2.setString(3,jTextField9.getText());
                                    pstmt2.setString(4,jTextField1.getText());
                                    pstmt2.setString(5,"");
                                    pstmt2.setString(6,cardNo);
                                    pstmt2.setString(7,cardName);
                                    //if (jCheckBox11.isSelected()){
                                    pstmt2.setString(8,"OP");
                                    
                                    pstmt2.setString(9,jTextField8.getText());
                                    pstmt2.setString(10,jTextField7.getText());
                                    pstmt2.setString(11,"");
                                    pstmt2.setString(12,"");
                                    pstmt2.setString(13,"");
                                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                                    pstmt2.setString(15,"Revenue");
                                    pstmt2.setDouble(17,0.00);
                                    pstmt2.setDouble(16,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt2.setString(19,transNo);
                                    pstmt2.setBoolean(20,false);
                                    pstmt2.setBoolean(21,false);
                                    pstmt2.setBoolean(22,false);
                                    pstmt2.setString(23,user);
                                    pstmt2.executeUpdate();
                                }else{
                                    
                                    if(DirectRev){
                                        
                                        java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, numeric_uminus(?), ?, ?, ?, ?, ?, ?,?,?)");
                                        pstmt22.setString(1,jTextField9.getText());
                                        pstmt22.setString(10,"");
                                        pstmt22.setString(2,jTextField1.getText());
                                        pstmt22.setString(3,jTextField7.getText());
                                        pstmt22.setString(4,jTextField2.getText());
                                        pstmt22.setString(5,jTable1.getValueAt(i,0).toString());
                                        pstmt22.setString(6,jTable1.getValueAt(i,1).toString());
                                        pstmt22.setString(7,jTable1.getValueAt(i,3).toString());
                                        pstmt22.setObject(8,jTable1.getValueAt(i,4).toString());
                                        pstmt22.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt22.setBoolean(12,true);
                                        pstmt22.setString(11,user);
                                        pstmt22.setString(13,glAcc);
                                        pstmt22.setString(14,visitid);
                                        pstmt22.setString(15,billNo);
                                        pstmt22.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                        pstmt.setString(1,jTextField9.getText());
                                        pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                        pstmt.setString(3,jTextField2.getText());
                                        pstmt.setString(4,jTextField7.getText());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,isurer);
                                        pstmt.setDate(10,null);
                                        pstmt.setString(11,"");
                                        pstmt.setDouble(13,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                        pstmt.setDouble(12,0.00);
                                        pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,glAcc);
                                        pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setString(23,visitid);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,billNo);
                                        pstmt.setString(26,"OP");
                                        pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                        pstmt.setString(28,visitid);
                                        
                                        
                                        pstmt.executeUpdate();
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                                        pstmt2.setString(2,glAcc);
                                        pstmt2.setString(3,jTextField9.getText());
                                        pstmt2.setString(4,jTextField1.getText());
                                        pstmt2.setString(5,"");
                                        pstmt2.setString(6,cardNo);
                                        pstmt2.setString(7,cardName);
                                        //if (jCheckBox11.isSelected()){
                                        pstmt2.setString(8,"OP");
                                        
                                        pstmt2.setString(9,jTextField8.getText());
                                        pstmt2.setString(10,jTextField7.getText());
                                        pstmt2.setString(11,"");
                                        pstmt2.setString(12,"");
                                        pstmt2.setString(13,"");
                                        pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                                        pstmt2.setString(15,"Revenue");
                                        pstmt2.setDouble(17,0.00);
                                        pstmt2.setDouble(16,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                        pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt2.setString(19,transNo);
                                        pstmt2.setBoolean(20,false);
                                        pstmt2.setBoolean(21,false);
                                        pstmt2.setBoolean(22,false);
                                        pstmt2.setString(23,user);
                                        pstmt2.executeUpdate();
                                    }else{
                                        java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, numeric_uminus(?), ?, ?, ?, ?, ?, ?,?,?)");
                                        pstmt22.setString(1,jTextField9.getText());
                                        pstmt22.setString(10,"");
                                        pstmt22.setString(2,jTextField1.getText());
                                        pstmt22.setString(3,jTextField7.getText());
                                        pstmt22.setString(4,jTextField2.getText());
                                        pstmt22.setString(5,jTable1.getValueAt(i,0).toString());
                                        pstmt22.setString(6,jTable1.getValueAt(i,1).toString());
                                        pstmt22.setString(7,jTable1.getValueAt(i,3).toString());
                                        pstmt22.setObject(8,jTable1.getValueAt(i,4).toString());
                                        pstmt22.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt22.setBoolean(12,false);
                                        pstmt22.setString(11,user);
                                        pstmt22.setString(13,glAcc);
                                        pstmt22.setString(14,visitid);
                                        pstmt22.setString(15,billNo);
                                        pstmt22.executeUpdate();
                                        
                                    }
                                }
                            }
                        }
                        for (int i = 0; i < jTable1.getRowCount(); i++){
                            if (jTable1.getValueAt(i,0) != null){
                                
                                java.sql.Statement pstBx = connectDB.createStatement();
                                java.sql.ResultSet rsBx = pstBx.executeQuery("select count(product) from st_stock_prices where product ilike '"+jTable1.getValueAt(i,0)+"' and sub_code =  '"+jTable1.getValueAt(i,5)+"'");
                                
                                while (rsBx.next()){
                                    itemInt = rsBx.getInt(1);
                                }
                                
                                if (itemInt > 0){
                                    java.sql.Statement pstB = connectDB.createStatement();
                                    java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units,department from st_stock_prices where product ilike '"+jTable1.getValueAt(i,0)+"' and sub_code =  '"+jTable1.getValueAt(i,5)+"'");
                                    
                                    while (rsB.next()){
                                        price = rsB.getDouble(1);
                                        units = rsB.getString(2);
                                        Store = rsB.getString(3);
                                    }
                                    
                                    
                                    java.sql.Statement pst211 = connectDB.createStatement();
                                    java.sql.ResultSet rs111 = pst211.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '"+jTable1.getValueAt(i,4)+"'");
                                    while (rs111.next()){
                                        glCode = rs111.getObject(1).toString();
                                        actCode = rs111.getObject(2).toString();
                                    }
                                    
                                    qty = java.lang.Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                                    amount = price*qty;
                                    if (amount > 10000){
                                        amount = (qty*sellPrice)*0.67;
                                    }else{
                                        
                                        amount = amount;
                                    }
                                    
                                    java.sql.Statement stm1211q = connectDB.createStatement();
                                    java.sql.ResultSet rse1211q = stm1211q.executeQuery("select units from st_stock_prices where product ilike '"+jTable1.getModel().getValueAt(i,0).toString()+"'");
                                    while (rse1211q.next()){
                                        
                                        units = rse1211q.getObject(1).toString();
                                    }
                                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,numeric_uminus(?),numeric_uminus(?),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                    pstmt1.setString(1,jTextField9.getText());
                                    pstmt1.setString(2,jTextField1.getText());
                                    pstmt1.setDouble(3,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt1.setDouble(4,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt1.setObject(5,jTable1.getValueAt(i,0).toString());
                                    pstmt1.setDouble(7,java.lang.Double.valueOf(jTable1.getValueAt(i,2).toString()));
                                    pstmt1.setObject(8,jTable1.getValueAt(i,4).toString());
                                    pstmt1.setBoolean(6,true);
                                    pstmt1.setString(9,transNo);
                                    pstmt1.setObject(10,jTextField8.getText());
                                    pstmt1.setBoolean(11,true);
                                    pstmt1.setString(12,units);
                                    pstmt1.setDate(13,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt1.setObject(14,Store);
                                    pstmt1.setString(15,"Op");
                                    pstmt1.setString(16,jTextField7.getText());
                                    pstmt1.setObject(17,"");
                                    pstmt1.setDouble(18,0.00);
                                    pstmt1.setString(19,user);
                                    pstmt1.setObject(20,"");
                                    pstmt1.executeUpdate();
                                    
                                    java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                    pstmt1a.setString(1,null);
                                    pstmt1a.setObject(3,jTable1.getValueAt(i,0));
                                    pstmt1a.setString(2,Store);
                                    pstmt1a.setDate(4,null);
                                    pstmt1a.setDouble(21,amount);
                                    pstmt1a.setDouble(6,0.00);
                                    pstmt1a.setObject(7,units);
                                    pstmt1a.setObject(8,"");
                                    pstmt1a.setString(9,null);
                                    pstmt1a.setString(10,null);
                                    pstmt1a.setDouble(11,0.00);
                                    pstmt1a.setDouble(12,0.00);
                                    pstmt1a.setDouble(13,0.00);
                                    pstmt1a.setString(14,jTextField1.getText());
                                    pstmt1a.setString(15,user);
                                    pstmt1a.setString(16,"");
                                    pstmt1a.setString(17,null);
                                    pstmt1a.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt1a.setString(19,Store);
                                    pstmt1a.setString(20,"Issuing");
                                    pstmt1a.setDouble(5,0.00);
                                    pstmt1a.setString(23,actCode);
                                    pstmt1a.setDouble(22,0.00);
                                    pstmt1a.setString(24,"");
                                    pstmt1a.setString(25,Store);
                                    pstmt1a.setString(26,transNo);
                                    pstmt1a.setDouble(27,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt1a.setString(28,user);
                                    pstmt1a.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt2a.setObject(1,glCode);
                                    pstmt2a.setObject(2,jComboBox1.getSelectedItem());
                                    pstmt2a.setString(3,jTextField9.getText());
                                    pstmt2a.setString(4,jTextField1.getText());
                                    pstmt2a.setString(5,"");
                                    pstmt2a.setString(6,"");
                                    pstmt2a.setString(7,"");
                                    pstmt2a.setString(8,"");
                                    pstmt2a.setString(9,"");
                                    pstmt2a.setString(10,"");
                                    pstmt2a.setString(11,"");
                                    pstmt2a.setString(12,"");
                                    pstmt2a.setString(13,"");
                                    pstmt2a.setString(14,jTable1.getValueAt(i,0).toString());
                                    pstmt2a.setString(15,"Issuing");
                                    pstmt2a.setDouble(17,amount);
                                    pstmt2a.setDouble(16,0.00);
                                    pstmt2a.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt2a.setString(19,transNo);
                                    pstmt2a.setBoolean(20,false);
                                    pstmt2a.setBoolean(21,false);
                                    pstmt2a.setBoolean(22,false);
                                    pstmt2a.setString(23,user);
                                    pstmt2a.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                    
                                    pstmt33.setObject(1,Store);
                                    pstmt33.setObject(2,jTable1.getValueAt(i,0).toString());
                                    pstmt33.setDouble(4,0.00);
                                    pstmt33.setDouble(7,0.00);
                                    pstmt33.setDouble(5,java.lang.Double.valueOf(jTable1.getValueAt(i,2).toString()));
                                    pstmt33.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                     pstmt33.setString(8,transNo+" - Bill Reversal");
                                    pstmt33.setDouble(3,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt33.setObject(9,jTextField8.getText());
                                    pstmt33.setDate(10,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt33.setString(11,user);
                                    pstmt33.setString(12,units);
                                    pstmt33.setString(13,Store);
                                    pstmt33.setString(14,jTextField9.getText()+ " " +jTextField1.getText());
                                    pstmt33.setDouble(15,price);
                                    pstmt33.executeUpdate();
                                }
                                
                            }
                        }
                        
                    }else{
                        if(this.jCheckBox21.isSelected()){
                            
                            if (!(jTextField4.getText().equals("Cash"))){
                                java.sql.Statement stm1 = connectDB.createStatement();
                                java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTextField9.getText()+"'");
                                while (rse1.next()){
                                    cardNo = rse1.getString(2);
                                    scheme = rse1.getString(3);
                                    cardName = rse1.getString(4);
                                    isurer = rse1.getString(5);
                                    expDate = rse1.getString(6);
                                    staffNo = rse1.getString(7);
                                }
                            }
                            
                            for (int i = 0; i < jTable1.getRowCount(); i++){
                                if (jTable1.getValueAt(i,0) != null){
                                    java.sql.Statement stm121 = connectDB.createStatement();
                                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity,current_user from pb_activity where code ='"+jTable1.getValueAt(i,4).toString()+"'");
                                    while (rse121.next()){
                                        
                                        glAcc = rse121.getObject(1).toString();
                                        user = rse121.getObject(2).toString();
                                    }
                                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                    pstmt.setString(1,jTextField9.getText());
                                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                    pstmt.setString(3,jTextField2.getText());
                                    pstmt.setString(4,jTextField7.getText());
                                    pstmt.setString(5,transNo);
                                    pstmt.setString(7,scheme);
                                    pstmt.setString(6,cardNo);
                                    pstmt.setString(8,cardName);
                                    pstmt.setString(9,isurer);
                                    pstmt.setDate(10,null);
                                    pstmt.setString(11,"");
                                    pstmt.setDouble(13,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt.setDouble(12,0.00);
                                    pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt.setObject(15,patientAcc);
                                    pstmt.setString(16,glAcc);
                                    pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt.setObject(18,staffNo);
                                    pstmt.setBoolean(19,false);
                                    pstmt.setString(20,"Billing");
                                    pstmt.setBoolean(21,false);
                                    pstmt.setString(22,AccDesc);
                                    pstmt.setString(23,visitid);
                                    pstmt.setString(24,user);
                                    pstmt.setString(25,billNo);
                                    pstmt.setString(26,"IP");
                                    pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                    pstmt.setString(28,visitid);
                                    
                                    
                                    pstmt.executeUpdate();
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                                    pstmt2.setString(2,glAcc);
                                    pstmt2.setString(3,jTextField9.getText());
                                    pstmt2.setString(4,jTextField1.getText());
                                    pstmt2.setString(5,"");
                                    pstmt2.setString(6,cardNo);
                                    pstmt2.setString(7,cardName);
                                    
                                    pstmt2.setString(8,"IP");
                                    
                                    pstmt2.setString(9,jTextField8.getText());
                                    pstmt2.setString(10,jTextField7.getText());
                                    pstmt2.setString(11,"");
                                    pstmt2.setString(12,"");
                                    pstmt2.setString(13,"");
                                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                                    pstmt2.setString(15,"Revenue");
                                    pstmt2.setDouble(17,0.00);
                                    pstmt2.setDouble(16,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt2.setString(19,transNo);
                                    pstmt2.setBoolean(20,false);
                                    pstmt2.setBoolean(21,false);
                                    pstmt2.setBoolean(22,false);
                                    pstmt2.setString(23,user);
                                    pstmt2.executeUpdate();
                                    
                                    
                                    // }
                                }
                            }
                            
                            for (int i = 0; i < jTable1.getRowCount(); i++){
                                if (jTable1.getValueAt(i,0) != null){
                                    
                                    java.sql.Statement pstBx = connectDB.createStatement();
                                    java.sql.ResultSet rsBx = pstBx.executeQuery("select count(product) from st_stock_prices where product ilike '"+jTable1.getValueAt(i,0)+"' and sub_code =  '"+jTable1.getValueAt(i,5)+"'");
                                    
                                    while (rsBx.next()){
                                        itemInt = rsBx.getInt(1);
                                    }
                                    
                                    if (itemInt > 0){
                                        java.sql.Statement pstB = connectDB.createStatement();
                                        java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units,department from st_stock_prices where product ilike '"+jTable1.getValueAt(i,0)+"' and sub_code =  '"+jTable1.getValueAt(i,5)+"'");
                                        
                                        while (rsB.next()){
                                            price = rsB.getDouble(1);
                                            units = rsB.getString(2);
                                            Store = rsB.getString(3);
                                        }
                                        
                                        
                                        java.sql.Statement pst211 = connectDB.createStatement();
                                        java.sql.ResultSet rs111 = pst211.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '"+jTable1.getValueAt(i,4)+"'");
                                        while (rs111.next()){
                                            glCode = rs111.getObject(1).toString();
                                            actCode = rs111.getObject(2).toString();
                                        }
                                        
                                        qty = java.lang.Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                                        amount = price*qty;
                                        if (amount > 10000){
                                            amount = (qty*sellPrice)*0.67;
                                        }else{
                                            
                                            amount = amount;
                                        }
                                        
                                        java.sql.Statement stm1211q = connectDB.createStatement();
                                        java.sql.ResultSet rse1211q = stm1211q.executeQuery("select units from st_stock_prices where product ilike '"+jTable1.getModel().getValueAt(i,0).toString()+"'");
                                        while (rse1211q.next()){
                                            
                                            units = rse1211q.getObject(1).toString();
                                        }
                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,numeric_uminus(?),numeric_uminus(?),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                        pstmt1.setString(1,jTextField9.getText());
                                        pstmt1.setString(2,jTextField1.getText());
                                        pstmt1.setDouble(3,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                        pstmt1.setDouble(4,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                        // pstmt1.setDouble(4,TotalPrice);
                                        //   pstmt1.setDouble(4,presc);
                                        pstmt1.setObject(5,jTable1.getValueAt(i,0).toString());
                                        pstmt1.setDouble(7,java.lang.Double.valueOf(jTable1.getValueAt(i,2).toString()));
                                        pstmt1.setObject(8,jTable1.getValueAt(i,4).toString());
                                        pstmt1.setBoolean(6,true);
                                        pstmt1.setString(9,transNo);
                                        pstmt1.setObject(10,jTextField8.getText());
                                        pstmt1.setBoolean(11,true);
                                        pstmt1.setString(12,units);
                                        pstmt1.setDate(13,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt1.setObject(14,Store);
                                        pstmt1.setString(15,"Ip");
                                        pstmt1.setString(16,jTextField7.getText());
                                        pstmt1.setObject(17,"");
                                        pstmt1.setDouble(18,0.00);
                                        pstmt1.setString(19,user);
                                        pstmt1.setObject(20,"");
                                        pstmt1.executeUpdate();
                                        
                                        java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                        pstmt1a.setString(1,null);
                                        pstmt1a.setObject(3,jTable1.getValueAt(i,0));
                                        pstmt1a.setString(2,Store);
                                        pstmt1a.setDate(4,null);
                                        pstmt1a.setDouble(21,amount);
                                        pstmt1a.setDouble(6,0.00);
                                        pstmt1a.setObject(7,units);
                                        pstmt1a.setObject(8,"");
                                        pstmt1a.setString(9,null);
                                        pstmt1a.setString(10,null);
                                        pstmt1a.setDouble(11,0.00);
                                        pstmt1a.setDouble(12,0.00);
                                        pstmt1a.setDouble(13,0.00);
                                        pstmt1a.setString(14,jTextField1.getText());
                                        pstmt1a.setString(15,user);
                                        pstmt1a.setString(16,"");
                                        pstmt1a.setString(17,null);
                                        pstmt1a.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt1a.setString(19,Store);
                                        pstmt1a.setString(20,"Issuing");
                                        pstmt1a.setDouble(5,0.00);
                                        pstmt1a.setString(23,actCode);
                                        pstmt1a.setDouble(22,0.00);
                                        pstmt1a.setString(24,"");
                                        pstmt1a.setString(25,Store);
                                        pstmt1a.setString(26,transNo);
                                        pstmt1a.setDouble(27,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                        pstmt1a.setString(28,user);
                                        pstmt1a.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt2a.setObject(1,glCode);
                                        pstmt2a.setObject(2,jComboBox1.getSelectedItem());
                                        pstmt2a.setString(3,jTextField9.getText());
                                        pstmt2a.setString(4,jTextField1.getText());
                                        pstmt2a.setString(5,"");
                                        pstmt2a.setString(6,"");
                                        pstmt2a.setString(7,"");
                                        pstmt2a.setString(8,"");
                                        pstmt2a.setString(9,"");
                                        pstmt2a.setString(10,"");
                                        pstmt2a.setString(11,"");
                                        pstmt2a.setString(12,"");
                                        pstmt2a.setString(13,"");
                                        pstmt2a.setString(14,jTable1.getValueAt(i,0).toString());
                                        pstmt2a.setString(15,"Issuing");
                                        pstmt2a.setDouble(17,amount);
                                        pstmt2a.setDouble(16,0.00);
                                        pstmt2a.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt2a.setString(19,transNo);
                                        pstmt2a.setBoolean(20,false);
                                        pstmt2a.setBoolean(21,false);
                                        pstmt2a.setBoolean(22,false);
                                        pstmt2a.setString(23,user);
                                        pstmt2a.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                        
                                        pstmt33.setObject(1,Store);
                                        pstmt33.setObject(2,jTable1.getValueAt(i,0).toString());
                                        pstmt33.setDouble(4,0.00);
                                        pstmt33.setDouble(7,0.00);
                                        pstmt33.setDouble(5,java.lang.Double.valueOf(jTable1.getValueAt(i,2).toString()));
                                        pstmt33.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                          pstmt33.setString(8,transNo+"- Bill Reversal");
                                        pstmt33.setDouble(3,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                        pstmt33.setObject(9,jTextField8.getText());
                                        pstmt33.setDate(10,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt33.setString(11,user);
                                        pstmt33.setString(12,units);
                                        pstmt33.setString(13,Store);
                                        pstmt33.setString(14,jTextField9.getText()+ " " +jTextField1.getText());
                                        pstmt33.setDouble(15,price);
                                        pstmt33.executeUpdate();
                                    }
                                    
                                }
                            }
                        }else{
                           if(this.jCheckBox12.isSelected()){
                        
                        // java.sql.PreparedStatement pstmRemove = connectDB.prepareStatement("DELETE FROM hp_patient_billing WHERE patient_no = '"+jTextField9.getText()+"' AND revenuepaid = false AND trans_date = date('now')");
                        
                        // pstmRemove.executeUpdate();
                        java.sql.Statement stm1 = connectDB.createStatement();
                        java.sql.ResultSet rse1 = stm1.executeQuery("select payment_mode,card_no,scheme,isurer,scheme,'2020-12-12',card_no from hp_patient_card where patient_no ='"+jTextField9.getText()+"'");
                        while (rse1.next()){
                            
                            payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                            cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                            scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                            cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                            isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                            expDate = dbObject.getDBObject(rse1.getObject(6), "NULL");
                            staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                        }
                        for (int i = 0; i < jTable1.getRowCount(); i++){
                            if (jTable1.getValueAt(i,0) != null){
                                java.sql.Statement stm121 = connectDB.createStatement();
                                java.sql.ResultSet rse121 = stm121.executeQuery("select activity,current_user from pb_activity where code ='"+jTable1.getValueAt(i,4).toString()+"'");
                                while (rse121.next()){
                                    
                                    glAcc = rse121.getObject(1).toString();
                                    user = rse121.getObject(2).toString();
                                }
                                
                                if(this.jTextField7.getText().equalsIgnoreCase("Scheme")){
                                    
                                    java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, numeric_uminus(?), ?, ?, ?, ?, ?, ?,?,?)");
                                    pstmt22.setString(1,jTextField9.getText());
                                    pstmt22.setString(10,"");
                                    pstmt22.setString(2,jTextField1.getText());
                                    pstmt22.setString(3,jTextField7.getText());
                                    pstmt22.setString(4,jTextField2.getText());
                                    pstmt22.setString(5,jTable1.getValueAt(i,0).toString());
                                    pstmt22.setString(6,jTable1.getValueAt(i,1).toString());
                                    pstmt22.setString(7,jTable1.getValueAt(i,3).toString());
                                    pstmt22.setObject(8,jTable1.getValueAt(i,4).toString());
                                    pstmt22.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt22.setBoolean(12,false);
                                    pstmt22.setString(11,user);
                                    pstmt22.setString(13,glAcc);
                                    pstmt22.setString(14,visitid);
                                    pstmt22.setString(15,billNo);
                                    pstmt22.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                    pstmt.setString(1,jTextField9.getText());
                                    pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                    pstmt.setString(3,jTextField2.getText());
                                    pstmt.setString(4,jTextField7.getText());
                                    pstmt.setString(5,transNo);
                                    pstmt.setString(7,scheme);
                                    pstmt.setString(6,cardNo);
                                    pstmt.setString(8,cardName);
                                    pstmt.setString(9,isurer);
                                    pstmt.setDate(10,null);
                                    pstmt.setString(11,"");
                                    pstmt.setDouble(13,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt.setDouble(12,0.00);
                                    pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt.setObject(15,patientAcc);
                                    pstmt.setString(16,glAcc);
                                    pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt.setObject(18,staffNo);
                                    pstmt.setBoolean(19,false);
                                    pstmt.setString(20,"Billing");
                                    pstmt.setBoolean(21,false);
                                    pstmt.setString(22,AccDesc);
                                    pstmt.setString(23,visitid);
                                    pstmt.setString(24,user);
                                    pstmt.setString(25,billNo);
                                    pstmt.setString(26,"OP");
                                    pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                    pstmt.setString(28,visitid);
                                    
                                    
                                    pstmt.executeUpdate();
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                                    pstmt2.setString(2,glAcc);
                                    pstmt2.setString(3,jTextField9.getText());
                                    pstmt2.setString(4,jTextField1.getText());
                                    pstmt2.setString(5,"");
                                    pstmt2.setString(6,cardNo);
                                    pstmt2.setString(7,cardName);
                                    //if (jCheckBox11.isSelected()){
                                    pstmt2.setString(8,"OP");
                                    
                                    pstmt2.setString(9,jTextField8.getText());
                                    pstmt2.setString(10,jTextField7.getText());
                                    pstmt2.setString(11,"");
                                    pstmt2.setString(12,"");
                                    pstmt2.setString(13,"");
                                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                                    pstmt2.setString(15,"Revenue");
                                    pstmt2.setDouble(17,0.00);
                                    pstmt2.setDouble(16,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt2.setString(19,transNo);
                                    pstmt2.setBoolean(20,false);
                                    pstmt2.setBoolean(21,false);
                                    pstmt2.setBoolean(22,false);
                                    pstmt2.setString(23,user);
                                    pstmt2.executeUpdate();
                                }else{
                                    
                                    if(DirectRev){
                                   /*     
                                        java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, numeric_uminus(?), ?, ?, ?, ?, ?, ?,?,?)");
                                        pstmt22.setString(1,jTextField9.getText());
                                        pstmt22.setString(10,"");
                                        pstmt22.setString(2,jTextField1.getText());
                                        pstmt22.setString(3,jTextField7.getText());
                                        pstmt22.setString(4,jTextField2.getText());
                                        pstmt22.setString(5,jTable1.getValueAt(i,0).toString());
                                        pstmt22.setString(6,jTable1.getValueAt(i,1).toString());
                                        pstmt22.setString(7,jTable1.getValueAt(i,3).toString());
                                        pstmt22.setObject(8,jTable1.getValueAt(i,4).toString());
                                        pstmt22.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt22.setBoolean(12,true);
                                        pstmt22.setString(11,user);
                                        pstmt22.setString(13,glAcc);
                                        pstmt22.setString(14,visitid);
                                        pstmt22.setString(15,billNo);
                                        pstmt22.executeUpdate();
                                     */   
                                        
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                        pstmt.setString(1,jTextField9.getText());
                                        pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                        pstmt.setString(3,jTextField2.getText());
                                        pstmt.setString(4,jTextField7.getText());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,isurer);
                                        pstmt.setDate(10,null);
                                        pstmt.setString(11,"");
                                        pstmt.setDouble(13,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                        pstmt.setDouble(12,0.00);
                                        pstmt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,glAcc);
                                        pstmt.setDouble(17,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setString(23,visitid);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,billNo);
                                        pstmt.setString(26,"OP");
                                        pstmt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                        pstmt.setString(28,visitid);
                                        
                                        
                                        pstmt.executeUpdate();
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                                        pstmt2.setString(2,glAcc);
                                        pstmt2.setString(3,jTextField9.getText());
                                        pstmt2.setString(4,jTextField1.getText());
                                        pstmt2.setString(5,"");
                                        pstmt2.setString(6,cardNo);
                                        pstmt2.setString(7,cardName);
                                        //if (jCheckBox11.isSelected()){
                                        pstmt2.setString(8,"OP");
                                        
                                        pstmt2.setString(9,jTextField8.getText());
                                        pstmt2.setString(10,jTextField7.getText());
                                        pstmt2.setString(11,"");
                                        pstmt2.setString(12,"");
                                        pstmt2.setString(13,"");
                                        pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                                        pstmt2.setString(15,"Revenue");
                                        pstmt2.setDouble(17,0.00);
                                        pstmt2.setDouble(16,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                        pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt2.setString(19,transNo);
                                        pstmt2.setBoolean(20,false);
                                        pstmt2.setBoolean(21,false);
                                        pstmt2.setBoolean(22,false);
                                        pstmt2.setString(23,user);
                                        pstmt2.executeUpdate();
                                    }else{
                                        java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, numeric_uminus(?), ?, ?, ?, ?, ?, ?,?,?)");
                                        pstmt22.setString(1,jTextField9.getText());
                                        pstmt22.setString(10,"");
                                        pstmt22.setString(2,jTextField1.getText());
                                        pstmt22.setString(3,jTextField7.getText());
                                        pstmt22.setString(4,jTextField2.getText());
                                        pstmt22.setString(5,jTable1.getValueAt(i,0).toString());
                                        pstmt22.setString(6,jTable1.getValueAt(i,1).toString());
                                        pstmt22.setString(7,jTable1.getValueAt(i,3).toString());
                                        pstmt22.setObject(8,jTable1.getValueAt(i,4).toString());
                                        pstmt22.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt22.setBoolean(12,false);
                                        pstmt22.setString(11,user);
                                        pstmt22.setString(13,glAcc);
                                        pstmt22.setString(14,visitid);
                                        pstmt22.setString(15,billNo);
                                        pstmt22.executeUpdate();
                                        
                                    }
                                }
                            }
                        }
                        for (int i = 0; i < jTable1.getRowCount(); i++){
                            if (jTable1.getValueAt(i,0) != null){
                                
                                java.sql.Statement pstBx = connectDB.createStatement();
                                java.sql.ResultSet rsBx = pstBx.executeQuery("select count(product) from st_stock_prices where product ilike '"+jTable1.getValueAt(i,0)+"' and sub_code =  '"+jTable1.getValueAt(i,5)+"'");
                                
                                while (rsBx.next()){
                                    itemInt = rsBx.getInt(1);
                                }
                                
                                if (itemInt > 0){
                                    java.sql.Statement pstB = connectDB.createStatement();
                                    java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units,department from st_stock_prices where product ilike '"+jTable1.getValueAt(i,0)+"' and sub_code =  '"+jTable1.getValueAt(i,5)+"'");
                                    
                                    while (rsB.next()){
                                        price = rsB.getDouble(1);
                                        units = rsB.getString(2);
                                        Store = rsB.getString(3);
                                    }
                                    
                                    
                                    java.sql.Statement pst211 = connectDB.createStatement();
                                    java.sql.ResultSet rs111 = pst211.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '"+jTable1.getValueAt(i,4)+"'");
                                    while (rs111.next()){
                                        glCode = rs111.getObject(1).toString();
                                        actCode = rs111.getObject(2).toString();
                                    }
                                    
                                    qty = java.lang.Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                                    amount = price*qty;
                                    if (amount > 10000){
                                        amount = (qty*sellPrice)*0.67;
                                    }else{
                                        
                                        amount = amount;
                                    }
                                    
                                    java.sql.Statement stm1211q = connectDB.createStatement();
                                    java.sql.ResultSet rse1211q = stm1211q.executeQuery("select units from st_stock_prices where product ilike'"+jTable1.getModel().getValueAt(i,0).toString()+"'");
                                    while (rse1211q.next()){
                                        
                                        units = rse1211q.getObject(1).toString();
                                    }
                                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,numeric_uminus(?),numeric_uminus(?),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                    pstmt1.setString(1,jTextField9.getText());
                                    pstmt1.setString(2,jTextField1.getText());
                                    pstmt1.setDouble(3,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt1.setDouble(4,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt1.setObject(5,jTable1.getValueAt(i,0).toString());
                                    pstmt1.setDouble(7,java.lang.Double.valueOf(jTable1.getValueAt(i,2).toString()));
                                    pstmt1.setObject(8,jTable1.getValueAt(i,4).toString());
                                    pstmt1.setBoolean(6,true);
                                    pstmt1.setString(9,transNo);
                                    pstmt1.setObject(10,jTextField8.getText());
                                    pstmt1.setBoolean(11,true);
                                    pstmt1.setString(12,units);
                                    pstmt1.setDate(13,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt1.setObject(14,Store);
                                    pstmt1.setString(15,"Op");
                                    pstmt1.setString(16,jTextField7.getText());
                                    pstmt1.setObject(17,"");
                                    pstmt1.setDouble(18,0.00);
                                    pstmt1.setString(19,user);
                                    pstmt1.setObject(20,"");
                                    pstmt1.executeUpdate();
                                    
                                    java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                    pstmt1a.setString(1,null);
                                    pstmt1a.setObject(3,jTable1.getValueAt(i,0));
                                    pstmt1a.setString(2,Store);
                                    pstmt1a.setDate(4,null);
                                    pstmt1a.setDouble(21,amount);
                                    pstmt1a.setDouble(6,0.00);
                                    pstmt1a.setObject(7,units);
                                    pstmt1a.setObject(8,"");
                                    pstmt1a.setString(9,null);
                                    pstmt1a.setString(10,null);
                                    pstmt1a.setDouble(11,0.00);
                                    pstmt1a.setDouble(12,0.00);
                                    pstmt1a.setDouble(13,0.00);
                                    pstmt1a.setString(14,jTextField1.getText());
                                    pstmt1a.setString(15,user);
                                    pstmt1a.setString(16,"");
                                    pstmt1a.setString(17,null);
                                    pstmt1a.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt1a.setString(19,Store);
                                    pstmt1a.setString(20,"Issuing");
                                    pstmt1a.setDouble(5,0.00);
                                    pstmt1a.setString(23,actCode);
                                    pstmt1a.setDouble(22,0.00);
                                    pstmt1a.setString(24,"");
                                    pstmt1a.setString(25,Store);
                                    pstmt1a.setString(26,transNo);
                                    pstmt1a.setDouble(27,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt1a.setString(28,user);
                                    pstmt1a.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt2a.setObject(1,glCode);
                                    pstmt2a.setObject(2,jComboBox1.getSelectedItem());
                                    pstmt2a.setString(3,jTextField9.getText());
                                    pstmt2a.setString(4,jTextField1.getText());
                                    pstmt2a.setString(5,"");
                                    pstmt2a.setString(6,"");
                                    pstmt2a.setString(7,"");
                                    pstmt2a.setString(8,"");
                                    pstmt2a.setString(9,"");
                                    pstmt2a.setString(10,"");
                                    pstmt2a.setString(11,"");
                                    pstmt2a.setString(12,"");
                                    pstmt2a.setString(13,"");
                                    pstmt2a.setString(14,jTable1.getValueAt(i,0).toString());
                                    pstmt2a.setString(15,"Issuing");
                                    pstmt2a.setDouble(17,amount);
                                    pstmt2a.setDouble(16,0.00);
                                    pstmt2a.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt2a.setString(19,transNo);
                                    pstmt2a.setBoolean(20,false);
                                    pstmt2a.setBoolean(21,false);
                                    pstmt2a.setBoolean(22,false);
                                    pstmt2a.setString(23,user);
                                    pstmt2a.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                    
                                    pstmt33.setObject(1,Store);
                                    pstmt33.setObject(2,jTable1.getValueAt(i,0).toString());
                                    pstmt33.setDouble(4,0.00);
                                    pstmt33.setDouble(7,0.00);
                                    pstmt33.setDouble(5,java.lang.Double.valueOf(jTable1.getValueAt(i,2).toString()));
                                    pstmt33.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt33.setString(8,transNo+" - Bill Reversal");
                                    pstmt33.setDouble(3,java.lang.Double.valueOf(jTable1.getValueAt(i,1).toString()));
                                    pstmt33.setObject(9,jTextField8.getText());
                                    pstmt33.setDate(10,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt33.setString(11,user);
                                    pstmt33.setString(12,units);
                                    pstmt33.setString(13,Store);
                                    pstmt33.setString(14,jTextField9.getText()+ " " +jTextField1.getText());
                                    pstmt33.setDouble(15,price);
                                    pstmt33.executeUpdate();
                                }
                                
                            }
                        }
                        }
                        }
                    }
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    jLabel7.setForeground(java.awt.Color.blue);
                    //   jLabel7.setText("Insert successful");
                    javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful.Bill No. "+billNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                        for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                            jTable1.setValueAt(null,k,r);
                        }
                    }
                    jTextField1.setText("");
                    jTextField2.setText("");
                    //     jTextField3.setText("");
                    
                }catch(java.sql.SQLException sq){
                    
                    try {
                        connectDB.rollback();
                    }catch (java.sql.SQLException sql){
                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    System.out.println(sq.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                    
                }
                
            } catch(java.lang.Exception ex) {
                System.out.println(ex.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
                
            }
        }}
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton111;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton311;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton411;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton421;
    private javax.swing.JButton jButton4211;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton5211;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton611;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JButton jButton911;
    private javax.swing.JButton jButton9111;
    private javax.swing.JButton jButton912;
    private javax.swing.JButton jButton921;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel211;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel311;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel411;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel5311;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel711;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel911;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel111;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel411;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane211;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog111;
    private javax.swing.JDialog jSearchDialog12;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JDialog jSearchDialog211;
    private javax.swing.JDialog jSearchDialog31;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel12;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JPanel jSearchPanel211;
    private javax.swing.JPanel jSearchPanel31;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JScrollPane jSearchScrollPane12;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JScrollPane jSearchScrollPane211;
    private javax.swing.JScrollPane jSearchScrollPane31;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTable jSearchTable12;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTable jSearchTable211;
    private javax.swing.JTable jSearchTable31;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator111;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable111;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField jTextField1121;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTextField jTextField11311;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField121;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField211;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField311;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField411;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField71;
    private javax.swing.JTextField jTextField711;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JTextField jTextField911;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton11;
    private javax.swing.JButton searchButton2;
    // End of variables declaration//GEN-END:variables
    
    }
