/*
 * stockprices.java
 *
 * Created on November 5, 2002, 11:47 AM
 */

package com.afrisoftech.hospital;

/**
 *
 * @author  root
 */
public class InvAmmendIntfr extends javax.swing.JInternalFrame {
    javax.swing.JComboBox cmbox2 =null;
    java.sql.Connection connectDB = null;
    
    com.afrisoftech.lib.DBObject dbObject;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public InvAmmendIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new com.afrisoftech.dbadmin.JTable();
        jButton521 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        dispose11 = new javax.swing.JButton();
        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new com.afrisoftech.dbadmin.JTable();
        jButton522 = new javax.swing.JButton();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog23 = new javax.swing.JDialog();
        jSearchPanel23 = new javax.swing.JPanel();
        jTextField1133 = new javax.swing.JTextField();
        jSearchScrollPane23 = new javax.swing.JScrollPane();
        jSearchTable23 = new com.afrisoftech.dbadmin.JTable();
        jButton523 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel61 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel6411 = new javax.swing.JPanel();
        searchButton21 = new javax.swing.JButton();
        jTextField71 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        jTextField101 = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        jTextField61 = new javax.swing.JTextField();
        jLabel101 = new javax.swing.JLabel();
        jTextField81 = new javax.swing.JTextField();
        jLabel411 = new javax.swing.JLabel();
        jTextField111 = new javax.swing.JTextField();
        jLabel111 = new javax.swing.JLabel();
        jTextField121 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel131 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel17 = new javax.swing.JLabel();
        jPanel51 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jPanel11 = new javax.swing.JPanel();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton11 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jTextField51 = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextField114 = new javax.swing.JTextField();
        jLabel92 = new javax.swing.JLabel();
        jLabel531 = new javax.swing.JLabel();
        jTextField311 = new javax.swing.JTextField();
        jComboBox11 = new javax.swing.JComboBox();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel62 = new javax.swing.JLabel();
        jList1 = new javax.swing.JList();
        jLabel43 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jComboBox12 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel641 = new javax.swing.JPanel();
        searchButton2 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setMnemonic('l');
        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });

        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable11MouseClicked(evt);
                }
            });

            jSearchScrollPane11.setViewportView(jSearchTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

            dispose11.setMnemonic('l');
            dispose11.setText("Close");
            dispose11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dispose11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel11.add(dispose11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

            jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchDialog22.setModal(true);
            jSearchDialog22.setUndecorated(true);
            jSearchPanel22.setLayout(new java.awt.GridBagLayout());

            jSearchPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField1132CaretUpdate(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 300.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jSearchPanel22.add(jTextField1132, gridBagConstraints);

            jSearchTable22.setToolTipText("Click on the target row to select the patient from the search.");
            jSearchTable22.setShowHorizontalLines(false);
            /*javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable2.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }
            */
            jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable22MouseClicked(evt);
                }
            });

            jSearchScrollPane22.setViewportView(jSearchTable22);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

            jButton522.setMnemonic('l');
            jButton522.setText("Close");
            jButton522.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton522ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel22.add(jButton522, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

            jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchDialog.setModal(true);
            jSearchDialog.setUndecorated(true);
            jSearchPanel.setLayout(new java.awt.GridBagLayout());

            jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField112CaretUpdate(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 10.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
            jSearchPanel.add(jTextField112, gridBagConstraints);

            jSearchTable.setShowHorizontalLines(false);
            /*    try {
                searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
                searchRowSet.setConnectionSource(pConnDB);

                searchRowSet.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

                }));
                // jSearchScrollPane.setViewportView(jSearchTable);

            } catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());
            }
            */
            jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTableMouseClicked(evt);
                }
            });

            jSearchScrollPane.setViewportView(jSearchTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

            jButton9.setText("Dispose");
            jButton9.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton9ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel.add(jButton9, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

            jSearchDialog23.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchDialog23.setModal(true);
            jSearchDialog23.setUndecorated(true);
            jSearchPanel23.setLayout(new java.awt.GridBagLayout());

            jSearchPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField1133.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField1133CaretUpdate(evt);
                }
            });
            jTextField1133.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField1133ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 300.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jSearchPanel23.add(jTextField1133, gridBagConstraints);

            jSearchTable23.setToolTipText("Click on the target row to select the patient from the search.");
            jSearchTable23.setShowHorizontalLines(false);
            /*javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable2.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }
            */
            jSearchTable23.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable23MouseClicked(evt);
                }
            });

            jSearchScrollPane23.setViewportView(jSearchTable23);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel23.add(jSearchScrollPane23, gridBagConstraints);

            jButton523.setText("Close");
            jButton523.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton523ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel23.add(jButton523, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog23.getContentPane().add(jSearchPanel23, gridBagConstraints);

            getContentPane().setLayout(new java.awt.GridBagLayout());

            setClosable(true);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Amending Invoice with Doctors Bill");
            setPreferredSize(new java.awt.Dimension(650, 700));
            setVisible(true);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.gridheight = 4;
            getContentPane().add(jLabel5, gridBagConstraints);

            jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTabbedPane1MouseClicked(evt);
                }
            });

            jPanel61.setLayout(new java.awt.GridBagLayout());

            jPanel61.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jPanel61MouseClicked(evt);
                }
            });

            jPanel31.setLayout(new java.awt.GridBagLayout());

            jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient Details"));
            jLabel31.setText("Invoice No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel31, gridBagConstraints);

            jPanel41.setLayout(new java.awt.GridBagLayout());

            jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField91.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel41.add(jTextField91, gridBagConstraints);

            searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton1.setToolTipText("Search");
            searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel41.add(searchButton1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jPanel41, gridBagConstraints);

            jLabel12.setText("Scheme Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel12, gridBagConstraints);

            jPanel6411.setLayout(new java.awt.GridBagLayout());

            jPanel6411.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel6411.setMinimumSize(new java.awt.Dimension(82, 37));
            searchButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton21.setToolTipText("Search");
            searchButton21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton21.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton21.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            jPanel6411.add(searchButton21, gridBagConstraints);

            jTextField71.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6411.add(jTextField71, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            jPanel31.add(jPanel6411, gridBagConstraints);

            jLabel42.setText("Patient Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel42, gridBagConstraints);

            jTextField13.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jTextField13, gridBagConstraints);

            jLabel71.setText("Scheme Payer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel71, gridBagConstraints);

            jTextField41.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel31.add(jTextField41, gridBagConstraints);

            jLabel91.setText("Patient No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel91, gridBagConstraints);

            jTextField101.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel31.add(jTextField101, gridBagConstraints);

            jLabel81.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel81, gridBagConstraints);

            jTextField61.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel31.add(jTextField61, gridBagConstraints);

            jLabel101.setText("Account No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel101, gridBagConstraints);

            jTextField81.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jTextField81, gridBagConstraints);

            jLabel411.setText("Member Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel411, gridBagConstraints);

            jTextField111.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jTextField111, gridBagConstraints);

            jLabel111.setText("Member No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel111, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel31.add(jTextField121, gridBagConstraints);

            jPanel7.setLayout(new java.awt.GridBagLayout());

            jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jPanel8.setLayout(new java.awt.GridBagLayout());

            jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            buttonGroup1.add(jRadioButton2);
            jRadioButton2.setText("Credit Invoice");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jRadioButton2, gridBagConstraints);

            jLabel13.setText("Or");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            jPanel8.add(jLabel13, gridBagConstraints);

            buttonGroup1.add(jRadioButton1);
            jRadioButton1.setText("Debit Invoice");
            jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButton1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jRadioButton1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            jPanel7.add(jPanel8, gridBagConstraints);

            jPanel9.setLayout(new java.awt.GridBagLayout());

            jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            buttonGroup2.add(jCheckBox1);
            jCheckBox1.setText("Services Offered");
            jCheckBox1.setEnabled(false);
            jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            jPanel9.add(jCheckBox1, gridBagConstraints);

            jLabel131.setText("Or");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            jPanel9.add(jLabel131, gridBagConstraints);

            buttonGroup2.add(jCheckBox2);
            jCheckBox2.setText("Consultants");
            jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox2ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            jPanel9.add(jCheckBox2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            jPanel7.add(jPanel9, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridheight = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
            gridBagConstraints.weightx = 1.0;
            jPanel31.add(jPanel7, gridBagConstraints);

            jLabel14.setText("Payment Mode");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel14, gridBagConstraints);

            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Scheme" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel31.add(jComboBox1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            jPanel31.add(datePicker2, gridBagConstraints);

            jLabel17.setText("Invoice date ");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            jPanel31.add(jLabel17, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            jPanel61.add(jPanel31, gridBagConstraints);

            jPanel51.setLayout(new java.awt.GridBagLayout());

            jPanel51.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jTable11.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null}
                },
                new String [] {
                    "Date", "Description", "Reference", "Qty", "Amt.", "Gl Code"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    true, false, true, true, true, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable11.setGridColor(new java.awt.Color(204, 204, 255));
            jTable11.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable11KeyReleased(evt);
                }
            });
            jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable11MouseClicked(evt);
                }
            });

            jScrollPane11.setViewportView(jTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 50.0;
            gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
            jPanel51.add(jScrollPane11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 100.0;
            jPanel61.add(jPanel51, gridBagConstraints);

            jPanel11.setLayout(new java.awt.GridBagLayout());

            jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jButton11.setMnemonic('O');
            jButton11.setText("Amend Invoice");
            jButton11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jButton11, gridBagConstraints);

            jButton31.setMnemonic('R');
            jButton31.setText("Refresh");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jButton31, gridBagConstraints);

            jButton61.setMnemonic('r');
            jButton61.setText("Remove Row");
            jButton61.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton61ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jButton61, gridBagConstraints);

            jButton41.setMnemonic('C');
            jButton41.setText("Close");
            jButton41.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton41ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jButton41, gridBagConstraints);

            jButton51.setMnemonic('h');
            jButton51.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jButton51, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel61.add(jPanel11, gridBagConstraints);

            jPanel21.setLayout(new java.awt.GridBagLayout());

            jLabel21.setText("Debit");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel21.add(jLabel21, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField21, gridBagConstraints);

            jTextField51.setEditable(false);
            jTextField51.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField51.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel21.add(jTextField51, gridBagConstraints);

            jLabel61.setFont(new java.awt.Font("SansSerif", 1, 14));
            jLabel61.setText("Balance");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            jPanel21.add(jLabel61, gridBagConstraints);

            jTextField31.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 10);
            jPanel21.add(jTextField31, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel61.add(jPanel21, gridBagConstraints);

            jPanel10.setLayout(new java.awt.GridBagLayout());

            jPanel12.setLayout(new java.awt.GridBagLayout());

            jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Doctor details"));
            jLabel15.setText("A/C Description");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel15, gridBagConstraints);

            jLabel22.setText("GL Account");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel22, gridBagConstraints);

            jTextField114.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel12.add(jTextField114, gridBagConstraints);

            jLabel92.setText("Doctor Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel92, gridBagConstraints);

            jLabel531.setText("Reason");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel531, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel12.add(jTextField311, gridBagConstraints);

            jComboBox11.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct activity from pb_activity WHERE activity_category ilike 'CA' ORDER BY activity"));
            jComboBox11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox11ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel12.add(jComboBox11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel12.add(datePicker1, gridBagConstraints);

            jLabel62.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel62, gridBagConstraints);

            jPanel12.add(jList1, new java.awt.GridBagConstraints());

            jLabel43.setText("Doctors Invoice No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel43, gridBagConstraints);

            jPanel42.setLayout(new java.awt.GridBagLayout());

            jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField92.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel42.add(jTextField92, gridBagConstraints);

            searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton3.setToolTipText("Search");
            searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton3ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel42.add(searchButton3, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel12.add(jPanel42, gridBagConstraints);

            jTextField14.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField14.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            jPanel12.add(jTextField14, gridBagConstraints);

            jTextField15.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel12.add(jTextField15, gridBagConstraints);

            jLabel44.setText("A/C No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel44, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel12.add(jTextField16, gridBagConstraints);

            jComboBox12.setEditable(true);
            jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OBSTETRICIAN/GYNAECOLOGIST/SURGEON", "OBSTETRICIAN/GYNAECOLOGIST/SURGEON FEE", "OBSTETRICIAN FEE", "SURGEON FEE", "GYNAECOLOGIST FEE", "ANAESTHESIOLOGIST FEE", "PAEDIATRICIAN FEE", "CONSULTATION FEE", "PROFFESIONAL FEE", "DOCTORS FEE" }));
            jComboBox12.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox12ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel12.add(jComboBox12, gridBagConstraints);

            jLabel16.setText("Service");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel12.add(jLabel16, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.gridheight = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 2.0;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            jPanel10.add(jPanel12, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 100.0;
            jPanel61.add(jPanel10, gridBagConstraints);

            jTabbedPane1.addTab("Patients Invoices", jPanel61);

            jPanel6.setLayout(new java.awt.GridBagLayout());

            jPanel3.setLayout(new java.awt.GridBagLayout());

            jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient Details"));
            jLabel3.setText("Invoice No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel3, gridBagConstraints);

            jPanel4.setLayout(new java.awt.GridBagLayout());

            jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jTextField9.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jTextField9, gridBagConstraints);

            searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton.setToolTipText("Search");
            searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButtonActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel4.add(searchButton, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jPanel4, gridBagConstraints);

            jLabel1.setText("Scheme Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel1, gridBagConstraints);

            jPanel641.setLayout(new java.awt.GridBagLayout());

            jPanel641.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel641.setMinimumSize(new java.awt.Dimension(82, 37));
            searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
            searchButton2.setToolTipText("Search");
            searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton2ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            jPanel641.add(searchButton2, gridBagConstraints);

            jTextField7.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel641.add(jTextField7, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            jPanel3.add(jPanel641, gridBagConstraints);

            jLabel4.setText("Patient Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel4, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jTextField1, gridBagConstraints);

            jLabel7.setText("Scheme Payer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel7, gridBagConstraints);

            jTextField4.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel3.add(jTextField4, gridBagConstraints);

            jLabel9.setText("Patient No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel9, gridBagConstraints);

            jTextField10.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel3.add(jTextField10, gridBagConstraints);

            jLabel8.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel8, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(jTextField6, gridBagConstraints);

            jLabel10.setText("Account No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel10, gridBagConstraints);

            jTextField8.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jTextField8, gridBagConstraints);

            jLabel41.setText("Member Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel41, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel3.add(jTextField11, gridBagConstraints);

            jLabel11.setText("Member No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(jTextField12, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            jPanel6.add(jPanel3, gridBagConstraints);

            jPanel5.setLayout(new java.awt.GridBagLayout());

            jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null}
                },
                new String [] {
                    "Date", "Description", "Reference", "Qty", "Price", "Amt.", "Gl Code"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            jTable1.setGridColor(new java.awt.Color(204, 204, 255));
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable1KeyReleased(evt);
                }
            });

            jScrollPane1.setViewportView(jTable1);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipadx = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jScrollPane1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 50.0;
            jPanel6.add(jPanel5, gridBagConstraints);

            jPanel2.setLayout(new java.awt.GridBagLayout());

            jLabel2.setText("Original Invoice Amt");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jLabel2, gridBagConstraints);

            jTextField2.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(jTextField2, gridBagConstraints);

            jTextField5.setEditable(false);
            jTextField5.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField5.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel2.add(jTextField5, gridBagConstraints);

            jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14));
            jLabel6.setText("Balance");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            jPanel2.add(jLabel6, gridBagConstraints);

            jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 10);
            jPanel2.add(jTextField3, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jPanel2, gridBagConstraints);

            jPanel1.setLayout(new java.awt.GridBagLayout());

            jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jButton1.setMnemonic('O');
            jButton1.setText("Amend Invoice");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jButton1, gridBagConstraints);

            jButton3.setMnemonic('R');
            jButton3.setText("Refresh");
            jButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jButton3, gridBagConstraints);

            jButton6.setMnemonic('r');
            jButton6.setText("Remove Row");
            jButton6.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton6ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jButton6, gridBagConstraints);

            jButton4.setMnemonic('C');
            jButton4.setText("Close");
            jButton4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton4ActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jButton4, gridBagConstraints);

            jButton5.setMnemonic('h');
            jButton5.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jButton5, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel6.add(jPanel1, gridBagConstraints);

            jTabbedPane1.addTab("Other Debtors", jPanel6);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            setBounds(0, 0, 667, 495);
        }// </editor-fold>//GEN-END:initComponents
    
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    
    private void jComboBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox12ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox12ActionPerformed
    
    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        int rows2Delete = jTable11.getSelectedRowCount();
        
        int[] selectedRows = jTable11.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                
                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }
        
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable11, 4);
        jTextField31.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        
        // this.tableModelTableChanged1();
        // Add your handling code here:
    }//GEN-LAST:event_jButton61ActionPerformed
    
    private void jTable11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable11KeyReleased
        if (jTable11.getModel().getValueAt(jTable11.getSelectedRow(), 1) != null) {
            if (jTable11.getSelectedColumn() == jTable11.getSelectedColumn()) {
                float qty = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 3).toString());
                float price = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 4).toString());
                float total = qty*price;
                jTable11.setValueAt(total, jTable11.getSelectedRow(), 4);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable11, 4);
                jTextField31.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
            }
            
        }
        
    /*    double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField31.getText());
     
        if (jTable11.getValueAt(jTable11.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 3).toString());
     
            double floatCol3 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 4).toString());
     
            double resVal = floatCol2 * floatCol3;
     
     
            jTable1.setValueAt(new java.lang.Float(resVal), jTable11.getSelectedRow(), 4);
     
            for (int i = 0; i < jTable11.getRowCount(); i++) {
     
                if (jTable11.getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
     
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 4).toString());
     
     
                    // totalSum = floatTotal + resFloat;
     
                }
            }
            this.tableModelTableChanged1();
        }
     */
        // Add your handling code here:
    }//GEN-LAST:event_jTable11KeyReleased
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable11.getRowCount(); i++) {
            
            if (jTable11.getValueAt(i, 4) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 4).toString());
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 4).toString());
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable11.getRowCount(); i++) {
            
            if (jTable11.getValueAt(i, 4) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 4).toString());
                
                //   }
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 4).toString());
                
                //   }
                
                jTextField31.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1) != null) {
            if (jTable1.getSelectedColumn() == jTable1.getSelectedColumn()) {
                float qty = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                float price = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
                float total = qty*price;
                jTable1.setValueAt(total, jTable1.getSelectedRow(), 5);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5);
                jTextField3.setText(java.lang.String.valueOf(totalSum));
                
            }
            
        }
          /*
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
           
        if (jTable1.getValueAt(jTable1.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
           
            double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
           
            double resVal = floatCol2 * floatCol3;
           
           
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 5);
           
            for (int i = 0; i < jTable1.getRowCount(); i++) {
           
                if (jTable1.getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
           
                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 4).toString());
           
           
                    // totalSum = floatTotal + resFloat;
           
                }
            }
            this.tableModelTableChanged();
        }
           */
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 5) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 5).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 5).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 5) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 5).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 5).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        jPanel10.setVisible(false);      // Add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked
    
    private void jPanel61MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel61MouseClicked
        jPanel10.setVisible(false); // Add your handling code here:
    }//GEN-LAST:event_jPanel61MouseClicked
    
    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select code from pb_activity where activity ='"+jComboBox11.getSelectedItem()+"'");
            while (rset.next()){
                jTextField114.setText(rset.getObject(1).toString());
                
                
            }
            
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }        // Add your handling code here:
    }//GEN-LAST:event_jComboBox11ActionPerformed
    
    private void jSearchTable23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable23MouseClicked
        jTextField92.setText(jSearchTable23.getValueAt(jSearchTable23.getSelectedRow(), 0).toString());
        jTextField15.setText(jSearchTable23.getValueAt(jSearchTable23.getSelectedRow(), 1).toString());
        this.jSearchDialog23.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable23MouseClicked
    
    private void jButton523ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton523ActionPerformed
        this.jSearchDialog23.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jButton523ActionPerformed
    
    private void jTextField1133CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1133CaretUpdate
        if(this.jTextField1133.getCaretPosition() < 3){
            System.out.print("Nothing");
        }else{
            if(this.jTextField1133.getCaretPosition() < 3){
                System.out.print("Nothing");
            }else{
                jSearchTable23.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct (upper(first_name||' '||middle_name)) as name,staff_no from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1133.getText()+"%'"));
          /* searchRowSet23.execute("select distinct first_name as name,staff_no from pb_doctors_list where first_name ILIKE '"+jTextField1133.getText()+"%' order by first_name");
                    //   searchRowSet2.execute("select code,supplier_name as name from st_suppliers where supplier_name ILIKE '"+jTextField113.getText()+"%' order by supplier_name");
           
                    jSearchTable23.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet23, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        // new org.netbeans.lib.sql.models.TableModel.Column("code", "Acc.No", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Member No.", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("description", "Scheme", false)
                    }));
           */
                jSearchScrollPane23.setViewportView(jSearchTable23);
                System.out.println("Cannot sort out");
                
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1133CaretUpdate
    
    private void jTextField1133ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1133ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1133ActionPerformed
    
    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        try {
            String code = null;
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select code from pb_activity where activity_category  ILIKE 'CA'");
            while (rset1.next()){
                code = rset1.getObject(1).toString();
                jTextField114.setText(rset1.getObject(1).toString());
            }
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        searchButton23Clicked();     // Add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed
    private void searchButton23Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField92.getLocationOnScreen();
        
        jSearchDialog23.setSize(400,200);
        
        jSearchDialog23.setLocation(point);
        
        jSearchDialog23.show();
    }
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        jPanel10.setVisible(true);
        jPanel51.setVisible(false);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        
        if(jCheckBox1.isSelected()){
            try{
                String user =null;
                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
                while (rsts1.next()){
                    // actCode1 = rsts1.getObject(1).toString();
                    // actNames1 = rsts1.getObject(2).toString();
                    user = rsts1.getObject(3).toString();
                    
                }
                javax.swing.JOptionPane.showMessageDialog(this, "Sorry "+user+".Please use the Debit/Credit Note module for that transaction.", "Caution!",javax.swing.JOptionPane.ERROR_MESSAGE);
                jPanel51.setVisible(true);
                
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Insert not successful");
            }
        }else{
            
            jPanel10.setVisible(false);
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MouseClicked
        if (jTable11.getSelectedColumn() == 1) {
            
            this.cmboxMouseClicked();
        } // Add your handling code here:
    }//GEN-LAST:event_jTable11MouseClicked
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        
        if (jTable1.getSelectedColumn() == 1) {
            jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable1.getSelectedRow(), 1);
            jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable1.getSelectedRow(), 4);
            jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable1.getSelectedRow(), 6);
            //  jTable1.setValueAt(new java.lang.Double(jSearchTable.getSelectedRow(),1), jTable1.getSelectedRow(), 4);
            jSearchDialog.dispose();
        }else{
            if (jTable11.getSelectedColumn() == 1) {
                jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable11.getSelectedRow(), 1);
                jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable11.getSelectedRow(), 4);
                jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable11.getSelectedRow(), 5);
                //  jTable1.setValueAt(new java.lang.Double(jSearchTable.getSelectedRow(),1), jTable1.getSelectedRow(), 4);
                jSearchDialog.dispose();
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        if(jTextField112.getCaretPosition() > 2){
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type as product,rate as selling_price,gl_code,main_service as department FROM pricelist WHERE service_type ILIKE '"+jTextField112.getText()+"%' order by service_type"));
          /*   searchRowSet.execute("select service_type as product,rate as selling_price,gl_code,main_service as department FROM pricelist WHERE service_type ILIKE '"+jTextField112.getText()+"%' order by service_type");// UNION ALL select service_type,rate,gl_account FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField11.getText()+"%' order by product");
           
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("product", "Product", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Selling price", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("department", "Department", false),
                }));
           */
            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");
            
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField112CaretUpdate
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        if (jTable1.getSelectedColumn() == 1) {
            
            this.cmboxMouseClicked();
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void cmboxMouseClicked() {
        if (jTable1.getSelectedColumn() == 1) {
            
            System.out.println("Showing dialog");
            java.awt.Point point = jTable1.getLocationOnScreen();
            jSearchDialog.setSize(400,200);
            jSearchDialog.setLocation(point);
            jSearchDialog.show();
            
            
        }else{
            if (jTable11.getSelectedColumn() == 1) {
                
                System.out.println("Showing dialog");
                java.awt.Point point = jScrollPane11.getLocationOnScreen();
                jSearchDialog.setSize(400,200);
                jSearchDialog.setLocation(point);
                jSearchDialog.show();
                
            }
        }
    }
    
    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        int i = 0;
        int invno = 0;
        this.jTextField31.setText("");
        jTextField71.setText("");
        jTextField81.setText("");
        jTextField41.setText("");
        jTextField21.setText("");
        jTextField31.setText("");
        jTextField13.setText("");
        jTextField81.setText("");
        
        String code = null;
        jTextField13.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 2).toString());
        jTextField101.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
        jTextField61.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 3).toString());
        //jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        jSearchDialog22.dispose();
        java.text.DateFormat df = java.text.DateFormat.getDateInstance();
        
        java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
        
        sdf.applyPattern("yyyy-MM-dd");
        
        try {
            datePicker2.setDate(sdf.parse(jTextField61.getText().toString()));
            //datePicker11.setDate(sdf.parse(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 4).toString()));
        } catch (java.text.ParseException pe) {
            javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
        }
        try {
       /*
            java.sql.Statement stmts1 = connectDB.createStatement();
            java.sql.ResultSet rsets1 = stmts1.executeQuery("select date::date from hp_patient_card where invoice_no ='"+jTextField91.getText()+"' order by date DESC LIMIT 1");
            while (rsets1.next()){
                jTextField61.setText(rsets1.getObject(1).toString());
        
                java.text.DateFormat df = java.text.DateFormat.getDateInstance();
        
                java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
        
                sdf.applyPattern("yyyy-MM-dd");
        
                try {
                    datePicker2.setDate(sdf.parse(rsets1.getObject(1).toString()));
                    //datePicker11.setDate(sdf.parse(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 4).toString()));
                } catch (java.text.ParseException pe) {
                    javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                }
        
        
        
            }*/
         /*   java.sql.Statement stmts = connectDB.createStatement();
            java.sql.ResultSet rsets = stmts.executeQuery("select count(invoice_no) from ac_debtors where invoice_no ='"+jTextField91.getText()+"'");
            while (rsets.next()){
                invno = rsets.getInt(1);
            }
          
            if(invno>0){*/
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select scheme,account_no,payer,amount,amount,patient_name from final_invoices where invoice_no ='"+jTextField91.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField71.setText(rset.getObject(1).toString());
                jTextField81.setText(rset.getObject(2).toString());
                jTextField41.setText(rset.getObject(3).toString());
                jTextField21.setText(rset.getObject(4).toString());
                jTextField31.setText(rset.getObject(5).toString());
                jTextField13.setText(rset.getObject(6).toString());
                
            }
            /*}else{
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select patient_name from hp_admission where patient_no ='"+jTextField101.getText()+"'");
                while (rset.next()){
             
                    jTextField71.setText("");
                    jTextField81.setText("");
                    jTextField41.setText("");
                    jTextField21.setText("");
                    jTextField31.setText("");
                    jTextField13.setText(rset.getObject(1).toString());
             
                }
            }*/
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        // this.populateTable11(this.jTextField91.getText());
        
        
        jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTable22MouseClicked
    private void populateTable11(java.lang.String patient_no1) {
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        //       this.jComboBox1.setSelectedItem(null);
        //       this.jTextField3.setText("");
        int i = 0;
        int j = 0;
        /*try {
           java.sql.Statement stmt = connectDB.createStatement();
         
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(invoice_no) FROM hp_patient_card WHERE invoice_no = '"+patient_no1+"'");
         
            while (rset.next()) {
                j = rset.getInt(1);
            }
         /*   if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                java.sql.Statement stmtTable11 = connectDB.createStatement();
         
                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable11 = stmtTable1.executeQuery(" select date::date,initcap(service) as service,reference,dosage,debit from hp_patient_card where invoice_no = '"+patient_no1+"' AND debit >0 order by date::date");
         
                while (rsetTable11.next()) {
         
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable11.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable11.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable11.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable11.getObject(4), i, 3);
                    jTable11.setValueAt(rsetTable11.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
         
                    i++;
         
                }
         
                java.sql.ResultSet rsetTable111 = stmtTable11.executeQuery(" select gl_code from pricelist where service_type = '"+jTable1.getModel().getValueAt(i,2).toString()+"'");
         
                while (rsetTable111.next()) {
         
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable111.getObject(1), i, 5);
         
                }
            }else{
                javax.swing.JOptionPane.showMessageDialog(this,"Cannot Retrive Data ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
         
            }
         
         
        } catch(java.sql.SQLException sqlExec) {
         
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
         
        }*/
        
    }
    
    
    
    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        jSearchDialog22.dispose();// Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed
    
    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if(this.jTextField1132.getCaretPosition() < 2){
            System.out.print("Nothing");
        }else{
            jSearchTable22.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT invoice_no,patient_no,patient_name,date from final_invoices where invoice_no ILIKE '"+jTextField1132.getText()+"%' order by invoice_no"));
         /*
                // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
                searchRowSet22.execute("select DISTINCT invoice_no,patient_no as pat_no from hp_patient_card  where invoice_no ILIKE '"+jTextField1132.getText()+"%'  group by invoice_no,patient_no order by invoice_no");
          
                jSearchTable22.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet22, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("invoice_no", "Invoice No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("pat_no", "Patient No", false)
                    // new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false)
                }));
          */
            jSearchScrollPane22.setViewportView(jSearchTable22);
            System.out.println("Cannot sort out");
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1132CaretUpdate
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton22Clicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton22Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog22.setSize(400,200);
        
        jSearchDialog22.setLocation(point);
        
        jSearchDialog22.show();
    }
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select period_from,period_to FROM period_setup WHERE period_status ilike 'Open'");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(datePicker2.getDate().before(periodFrom) || datePicker2.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"The date is within the closed account period! \n Please Contact Accounts Head".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            if(jCheckBox1.isSelected()){
                javax.swing.JOptionPane.showMessageDialog(this, "Sorry.Please use the Debit/Credit Note module for that transaction.", "Caution!",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }else{
                
                
                java.util.Calendar calendar = java.util.Calendar.getInstance();
                
                long dateNow = calendar.getTimeInMillis();
                
                java.sql.Date datenowSql1= new java.sql.Date(dateNow);
                
                System.out.println(datenowSql1.toString());
                
                java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
                
                System.out.println(datenowSql.toString());
                
                
                try{
                    String receiptNo = null;
                    String actCode = null;
                    String glCode = null;
                    String bankAcc = null;
                    String glCode1 = null;
                    String bankAcc1 = null;
                    String transNo = null;
                    String payMode = null;
                    String patCat = null;
                    String patientAcc = null;
                    String cardNo = null;
                    String scheme = null;
                    String cardName = null;
                    String isurer = null;
                    String expDate = null;
                    String staffNo = null;
                    String actNames = null;
                    String user = null;
                    String actNames1 = null;
                    String actCode1 = null;
                    String invoiceNo = null;
                    String docacc = null;
                    String docnames = null;
                    double balance = 0.00;
                    String InvDate = null;
                    
                    invoiceNo = this.jTextField91.getText();
                    
                    
                    
                    try {
                        connectDB.setAutoCommit(false);
                        java.sql.Statement stm1 = connectDB.createStatement();
                        
                        java.sql.Statement ps221 = connectDB.createStatement();
                        java.sql.ResultSet rs221 = ps221.executeQuery("select nextval('transaction_no_seq')");
                        while (rs221.next()){
                            transNo = rs221.getObject(1).toString();
                        }
                        java.sql.Statement pss12 = connectDB.createStatement();
                        java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                        while (rsts11.next()){
                            actCode = rsts11.getObject(1).toString();
                            actNames = rsts11.getObject(2).toString();
                        }
                        
                        java.sql.Statement pss12q = connectDB.createStatement();
                        java.sql.ResultSet rsts11q = pss12q.executeQuery("select date from ac_debtors where invoice_no  = '"+invoiceNo+"'");
                        while (rsts11q.next()){
                            InvDate = rsts11q.getObject(1).toString();
                            
                        }
                        
                        java.sql.Statement pss12x = connectDB.createStatement();
                        java.sql.ResultSet rsts11x = pss12x.executeQuery("select code,activity from pb_activity where activity_category ='CA'");
                        while (rsts11x.next()){
                            docacc = rsts11x.getObject(1).toString();
                            docnames = rsts11x.getObject(2).toString();
                        }
                        java.sql.Statement pss11 = connectDB.createStatement();
                        java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
                        while (rsts1.next()){
                            actCode1 = rsts1.getObject(1).toString();
                            actNames1 = rsts1.getObject(2).toString();
                            user = rsts1.getObject(3).toString();
                        }
                        
                        balance = Double.parseDouble(jTextField31.getText().toString());
                        
                        if (jRadioButton1.isSelected() && jCheckBox2.isSelected()){
                            java.sql.PreparedStatement pstmtN = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                            pstmtN.setString(1,jTextField101.getText());
                            pstmtN.setObject(2,jComboBox12.getSelectedItem().toString()+"-"+jTextField15.getText());
                            if (jTextField16.getText().equals("") | jTextField16.getText().equalsIgnoreCase("-") | jTextField16.getText().equalsIgnoreCase("na") | jTextField16.getText().equalsIgnoreCase("n/a")) {
                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter genuine Doctors Inv. No", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                            }else{
                                pstmtN.setString(3,jTextField16.getText());
                            }
                            pstmtN.setString(4,jTextField4.getText());
                            pstmtN.setString(5,transNo);
                            pstmtN.setString(7,jTextField71.getText());
                            pstmtN.setString(6,"");
                            pstmtN.setString(8,"");
                            pstmtN.setString(9,jTextField41.getText());
                            pstmtN.setString(10,null);
                            pstmtN.setString(11,"");
                            pstmtN.setObject(12,jTextField31.getText());
                            pstmtN.setString(13,"0.00");
                            pstmtN.setObject(14,datePicker1.getDate().toString());
                            pstmtN.setObject(15,actCode);
                            pstmtN.setObject(16,jComboBox11.getSelectedItem().toString());
                            pstmtN.setObject(17,"1");
                            pstmtN.setObject(18,jTextField121.getText());
                            pstmtN.setString(19,"true");
                            pstmtN.setString(20,"Billing");
                            pstmtN.setString(21,"true");
                            pstmtN.setString(22,actNames);
                            pstmtN.setString(23,jTextField91.getText());
                            pstmtN.setString(24,user);
                            pstmtN.setString(25,"");
                            pstmtN.setString(26,"IP");
                            pstmtN.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                            pstmt2.setObject(1,jTextField15.getText());
                            pstmt2.setObject(2,jComboBox12.getSelectedItem().toString());
                            pstmt2.setString(3,jTextField92.getText());
                            pstmt2.setString(4,transNo);
                            pstmt2.setString(5,docacc);
                            pstmt2.setString(6,"Billing");
                            pstmt2.setString(8,jTextField31.getText());
                            pstmt2.setString(7,"0.00");
                            pstmt2.setString(9,jTextField91.getText());
                            pstmt2.setString(10,jTextField101.getText());
                            pstmt2.setObject(11,jComboBox11.getSelectedItem().toString());
                            pstmt2.setString(12,"false");
                            pstmt2.setString(13,user);
                            pstmt2.setString(14,datePicker1.getDate().toString());
                            pstmt2.setString(15,docnames);
                            pstmt2.setString(16,jTextField13.getText());
                            pstmt2.setObject(18,jTextField31.getText());
                            pstmt2.setObject(17,"0.00");
                            pstmt2.setString(19,jComboBox1.getSelectedItem().toString());
                            if (jTextField16.getText().equals("") | jTextField16.getText().equalsIgnoreCase("-") | jTextField16.getText().equalsIgnoreCase("na") | jTextField16.getText().equalsIgnoreCase("n/a")) {
                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter genuine Doctors Inv. No", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                            }else{
                                
                                pstmt2.setString(20,jTextField16.getText());
                            }
                            pstmt2.setDouble(21,0.00);
                            pstmt2.setString(22,"");
                            pstmt2.setString(23,"");
                            pstmt2.setDouble(24,0.00);
                            pstmt2.setDate(25,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt2.setDouble(26,0.00);
                            pstmt2.setString(28,jTextField31.getText());
                            pstmt2.setDouble(27,0.00);
                            
                            pstmt2.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt2P = connectDB.prepareStatement("insert into ac_doctors_ledger_OFF values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                            pstmt2P.setObject(1,jTextField15.getText());
                            pstmt2P.setObject(2,jTextField311.getText());
                            pstmt2P.setString(3,jTextField92.getText());
                            pstmt2P.setString(4,transNo);
                            pstmt2P.setString(5,docacc);
                            pstmt2P.setString(6,"Billing");
                            pstmt2P.setString(8,jTextField31.getText());
                            pstmt2P.setString(7,"0.00");
                            if (jTextField16.getText().equals("") | jTextField16.getText().equalsIgnoreCase("-") | jTextField16.getText().equalsIgnoreCase("na") | jTextField16.getText().equalsIgnoreCase("n/a")) {
                                javax.swing.JOptionPane.showMessageDialog(this,"You must enter genuine Doctors Inv. No", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                            }else{
                                
                                pstmt2P.setString(9,jTextField16.getText());
                            }
                            pstmt2P.setString(10,jTextField101.getText());
                            pstmt2P.setString(11,jTextField311.getText());
                            pstmt2P.setString(12,"false");
                            pstmt2P.setString(13,user);
                            pstmt2P.setString(14,datePicker1.getDate().toString());
                            pstmt2P.setString(15,docnames);
                            pstmt2P.setString(16,jTextField13.getText());
                            pstmt2P.setObject(18,jTextField31.getText());
                            pstmt2P.setObject(17,"0.00");
                            // pstmt2P.setString(19,jComboBox1.getSelectedItem().toString());
                            pstmt2P.setString(19,jTextField71.getText());
                            pstmt2P.setString(20,jTextField41.getText());
                            pstmt2P.setString(21,jTextField14.getText());
                            pstmt2P.setString(22,jTextField91.getText());
                            pstmt2P.executeUpdate();
                            
                            
                            // java.sql.PreparedStatement pstmt22H = connectDB.prepareStatement("UPDATE ac_debtors set balance = balance + '"+jTextField31.getText()+"',debit = debit + '"+jTextField31.getText()+"'  WHERE invoice_no = '"+jTextField91.getText()+"'");
                            // pstmt22H.executeUpdate();
                            
                        }else{
                            
                            if(jRadioButton2.isSelected() && jCheckBox2.isSelected()){
                                java.sql.PreparedStatement pstmtF = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                pstmtF.setString(1,jTextField101.getText());
                                pstmtF.setObject(2,jComboBox12.getSelectedItem().toString()+"-"+jTextField15.getText());
                                if (jTextField16.getText().equals("") | jTextField16.getText().equalsIgnoreCase("-") | jTextField16.getText().equalsIgnoreCase("na") | jTextField16.getText().equalsIgnoreCase("n/a")) {
                                    javax.swing.JOptionPane.showMessageDialog(this,"You must enter genuine Doctors Inv. No", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }else{
                                    
                                    pstmtF.setString(3,jTextField16.getText());
                                }
                                pstmtF.setString(4,jTextField4.getText());
                                pstmtF.setString(5,transNo);
                                pstmtF.setString(7,jTextField71.getText());
                                pstmtF.setString(6,"");
                                pstmtF.setString(8,jTextField311.getText());
                                pstmtF.setString(9,jTextField41.getText());
                                pstmtF.setString(10,null);
                                pstmtF.setString(11,"");
                                pstmtF.setObject(13,jTextField31.getText());
                                pstmtF.setString(12,"0.00");
                                pstmtF.setObject(14,datePicker1.getDate().toString());
                                pstmtF.setObject(15,actCode);
                                pstmtF.setString(16,jComboBox11.getSelectedItem().toString());
                                pstmtF.setObject(17,"1");
                                pstmtF.setObject(18,jTextField121.getText());
                                pstmtF.setString(19,"true");
                                pstmtF.setString(20,"Billing");
                                pstmtF.setString(21,"true");
                                pstmtF.setString(22,actNames);
                                pstmtF.setString(23,jTextField91.getText());
                                pstmtF.setString(24,user);
                                pstmtF.setString(25,"");
                                pstmtF.setString(26,"IP");
                                pstmtF.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                pstmt2.setObject(1,jTextField15.getText());
                                pstmt2.setObject(2,"Reversal of wrong entry"+jTextField311.getText());
                                pstmt2.setString(3,jTextField92.getText());
                                pstmt2.setString(4,transNo);
                                pstmt2.setString(5,docacc);
                                pstmt2.setString(6,"Billing Reversal");
                                pstmt2.setString(7,jTextField31.getText());
                                pstmt2.setString(8,"0.00");
                                pstmt2.setString(9,jTextField92.getText());
                                pstmt2.setString(10,jTextField101.getText());
                                pstmt2.setString(11,jTextField311.getText());
                                pstmt2.setString(12,"true");
                                pstmt2.setString(13,user);
                                pstmt2.setString(14,datePicker1.getDate().toString());
                                pstmt2.setString(15,docnames);
                                pstmt2.setString(16,jTextField13.getText());
                                pstmt2.setObject(17,jTextField31.getText());
                                pstmt2.setObject(18,"0.00");
                                pstmt2.setString(19,jComboBox1.getSelectedItem().toString());
                                if (jTextField16.getText().equals("") | jTextField16.getText().equalsIgnoreCase("-") | jTextField16.getText().equalsIgnoreCase("na") | jTextField16.getText().equalsIgnoreCase("n/a")) {
                                    javax.swing.JOptionPane.showMessageDialog(this,"You must enter genuine Doctors Inv. No", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }else{
                                    
                                    pstmt2.setString(20,jTextField16.getText());
                                }
                                  pstmt2.setDouble(21,0.00);
                            pstmt2.setString(22,"");
                            pstmt2.setString(23,"");
                            pstmt2.setDouble(24,0.00);
                            pstmt2.setDate(25,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt2.setDouble(26,0.00);
                            pstmt2.setString(27,jTextField31.getText());
                            pstmt2.setDouble(28,0.00);
               
                                pstmt2.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt2T = connectDB.prepareStatement("insert into ac_doctors_ledger_OFF values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                pstmt2T.setObject(1,jTextField15.getText());
                                pstmt2T.setObject(2,jTextField311.getText());
                                pstmt2T.setString(3,jTextField92.getText());
                                pstmt2T.setString(4,transNo);
                                pstmt2T.setString(5,docacc);
                                pstmt2T.setString(6,"Billing");
                                pstmt2T.setString(7,jTextField31.getText());
                                pstmt2T.setString(8,"0.00");
                                if (jTextField16.getText().equals("") | jTextField16.getText().equalsIgnoreCase("-") | jTextField16.getText().equalsIgnoreCase("na") | jTextField16.getText().equalsIgnoreCase("n/a")) {
                                    javax.swing.JOptionPane.showMessageDialog(this,"You must enter genuine Doctors Inv. No", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }else{
                                    
                                    pstmt2T.setString(9,jTextField16.getText());
                                }
                                pstmt2T.setString(10,jTextField101.getText());
                                pstmt2T.setObject(11,jComboBox11.getSelectedItem().toString());
                                pstmt2T.setString(12,"false");
                                pstmt2T.setString(13,user);
                                pstmt2T.setString(14,datePicker1.getDate().toString());
                                pstmt2T.setString(15,docnames);
                                pstmt2T.setString(16,jTextField13.getText());
                                pstmt2T.setObject(17,jTextField31.getText());
                                pstmt2T.setObject(18,"0.00");
                                pstmt2T.setString(19,jTextField71.getText());
                                pstmt2T.setString(20,jTextField41.getText());
                                pstmt2T.setString(21,jTextField14.getText());
                                pstmt2T.setString(22,jTextField91.getText());
                                pstmt2T.executeUpdate();
                                
                                
                                java.sql.PreparedStatement pstmt2P = connectDB.prepareStatement("insert into ac_doctors_ledger_OFF values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                pstmt2P.setObject(1,jTextField15.getText());
                                pstmt2P.setObject(2,"Reversal of wrong entry");
                                pstmt2P.setString(3,jTextField92.getText());
                                pstmt2P.setString(4,transNo);
                                pstmt2P.setString(5,docacc);
                                pstmt2P.setString(6,"Billing Reversal");
                                pstmt2P.setString(7,jTextField31.getText());
                                pstmt2P.setString(8,"0.00");
                                if (jTextField16.getText().equals("") | jTextField16.getText().equalsIgnoreCase("-") | jTextField16.getText().equalsIgnoreCase("na") | jTextField16.getText().equalsIgnoreCase("n/a")) {
                                    javax.swing.JOptionPane.showMessageDialog(this,"You must enter genuine Doctors Inv. No", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }else{
                                    
                                    pstmt2P.setString(9,jTextField16.getText());
                                }
                                pstmt2P.setString(10,jTextField101.getText());
                                pstmt2P.setString(11,jTextField311.getText());
                                pstmt2P.setString(12,"false");
                                pstmt2P.setString(13,user);
                                pstmt2P.setString(14,datePicker1.getDate().toString());
                                pstmt2P.setString(15,docnames);
                                pstmt2P.setString(16,jTextField13.getText());
                                pstmt2P.setObject(17,jTextField31.getText());
                                pstmt2P.setObject(18,"0.00");
                                // pstmt2P.setString(19,jComboBox1.getSelectedItem().toString());
                                pstmt2P.setString(19,jTextField71.getText());
                                pstmt2P.setString(20,jTextField41.getText());
                                pstmt2P.setString(21,jTextField14.getText());
                                pstmt2P.setString(22,jTextField91.getText());
                                pstmt2P.executeUpdate();
                                // java.sql.PreparedStatement pstmt22F = connectDB.prepareStatement("UPDATE ac_debtors set balance = balance - '"+jTextField31.getText()+"',debit = debit - '"+jTextField31.getText()+"'  WHERE invoice_no = '"+jTextField91.getText()+"'");
                                // pstmt22F.executeUpdate();
                                
                            }
                            
                        }
                        
                        
                        if(jRadioButton2.isSelected() && jCheckBox2.isSelected()){
                            java.sql.PreparedStatement pstmt224 = connectDB.prepareStatement("begin work; UPDATE ac_debtors set balance = balance - '"+balance+"',debit = debit - '"+balance+"'  WHERE invoice_no = '"+jTextField91.getText()+"'; commit work");
                            
                            pstmt224.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt2245 = connectDB.prepareStatement("begin work;UPDATE ac_doctors_ledger set paid=true  WHERE pat_inv = '"+jTextField91.getText()+"' and paid=false; commit work");
                            
                            pstmt2245.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt22456 = connectDB.prepareStatement("begin work;UPDATE ac_doctors_ledger_off set paid=true  WHERE doc_invoice = '"+jTextField91.getText()+"' and paid=false; commit work");
                            
                            pstmt22456.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt2234 = connectDB.prepareStatement("begin work;UPDATE HP_PATIENT_CARD set credit = credit - '"+balance+"'  WHERE invoice_no = '"+jTextField91.getText()+"' and service = 'Invoice'; commit work");
                            pstmt2234.executeUpdate();
                        }else
                            if(jRadioButton1.isSelected() && jCheckBox2.isSelected()){
                            java.sql.PreparedStatement pstmt224 = connectDB.prepareStatement("begin work;UPDATE ac_debtors set balance = balance + '"+balance+"',debit = debit + '"+balance+"'  WHERE invoice_no = '"+jTextField91.getText()+"'; commit work");
                            
                            pstmt224.executeUpdate();
                            java.sql.PreparedStatement pstmt22345 = connectDB.prepareStatement("begin work;UPDATE HP_PATIENT_CARD set credit = credit + '"+balance+"'  WHERE invoice_no = '"+jTextField91.getText()+"' and service = 'Invoice';commit work");
                            pstmt22345.executeUpdate();
                            }
                        
                        
                        connectDB.commit();
                        connectDB.setAutoCommit(true);
                        invoiceNo = jTextField91.getText();
                        
                        
                        javax.swing.JOptionPane.showMessageDialog(this,"Data Inserted Successfully ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        
                        jTextField11.setText("");
                        jTextField21.setText("");
                        jTextField31.setText("");
                        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
                            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                                jTable11.getModel().setValueAt(null,k,r);
                            }
                        }
                        jTextField31.setText("");
                    }catch(java.sql.SQLException sq){
                        
                        try {
                            connectDB.rollback();
                        }catch (java.sql.SQLException sql){
                            javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        
                    }
                    
                } catch(java.lang.Exception ex) {
                    System.out.println(ex.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                    
                    
                }
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void dispose11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose11ActionPerformed
        jSearchDialog11.dispose(); // Add your handling code here:
    }//GEN-LAST:event_dispose11ActionPerformed
    
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        jTextField7.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 1).toString());
        jTextField4.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 2).toString());
        jTextField8.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
        
        jSearchDialog11.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton11aClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%' order by scheme_name"));
/*
 
                searchRowSet11.execute("SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%' order by scheme_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
 
                jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Account no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("scheme_name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
 
                }));
 */
            jSearchTable11.setShowHorizontalLines(false);
            jSearchScrollPane11.setViewportView(jSearchTable11);
            
            
        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    private void searchButton11aClicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog11.dispose();
        java.awt.Point point = this.jTextField7.getLocationOnScreen();
        
        jSearchDialog11.setSize(400,200);
        
        jSearchDialog11.setLocation(point);
        jSearchDialog11.show();
    }
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5);
        //  jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        jTextField3.setText(java.lang.String.valueOf(totalSum));
        ///this.tableModelTableChanged();
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
  /*  private void populateTable2(java.lang.String patient_no) {
   
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
   
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(patient_no) FROM hp_patient_card WHERE patient_no = '"+patient_no+"' AND paid = false");
   
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
   
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date::date as date,service,dosage as quantity,debit-credit as amount FROM hp_patient_card WHERE patient_no ='"+jTextField91.getText()+"' and paid = false AND payment_mode = 'Scheme'");
   
                while (rsetTable1.next()) {
   
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable1.getObject(4), i, 3);
                    //   jTable11.setValueAt(rsetTable1.getObject(5), i, 4);
   
                    i++;
   
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
   
        } catch(java.sql.SQLException sqlExec) {
   
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
   
        }
   
   
    }
   
   */
    
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        String payer = null;
        String scm = null;
        String accno = null;
        String date = null;
        String cat = null;
        String code = null;
    /*    jTextField11.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        //jTextField21.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 2).toString());
        //jTextField71.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 3).toString());
     
        try {
            //
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select account_no, description,payer from hp_inpatient_register where patient_no ILIKE '"+jTextField91.getText()+"%'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
               payer = dbObject.getDBObject(rset.getObject(3), "-");
               scm = dbObject.getDBObject(rset.getObject(2), "-");
               accno =dbObject.getDBObject(rset.getObject(1), "-");
                jTextField21.setText(accno);
                jTextField71.setText(scm);
                jTextField41.setText(payer);
     
     
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
     
         try{
     
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rset11 = pss1.executeQuery("select account_no from ac_schemes where scheme_name = '"+jTextField71.getText()+"' and payer_name = '"+jTextField41.getText()+"'");
            while (rset11.next()){
                 code = dbObject.getDBObject(rset11.getObject(1), "-");
     
     
                jTextField10.setText(code);
               // jTextField51.setText(date);
               // jTextField61.setText(cat);
            }
            } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
     
        try{
     
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = pss1.executeQuery("select account_no,expiry_date,category from hp_inpatient_register where patient_no = '"+jTextField91.getText()+"'");
            while (rset1.next()){
                 cat = dbObject.getDBObject(rset1.getObject(3), "-");
               date = dbObject.getDBObject(rset1.getObject(2), null);
               accno =dbObject.getDBObject(rset1.getObject(1), "-");
     
     
                jTextField21.setText(accno);
                jTextField51.setText(date);
                jTextField61.setText(cat);
            }
     
            java.sql.Statement pss11 = connectDB.createStatement();
            java.sql.ResultSet rss11 = pss11.executeQuery("select round(sum(debit-credit),2) from hp_patient_card where patient_no = '"+jTextField91.getText()+"' AND paid = false");
            while (rss11.next()){
                // jTextField2.setText(rss1.getObject(1).toString());
                jTextField31.setText(rss11.getObject(1).toString());
            }
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
     
            System.out.println(sqlex.getMessage());
        }
         for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        //this.populateTable2(jTextField91.getText());
/*        try {
            crset21.setCommand("select date::date as date,service,dosage as quantity,debit as amount FROM hp_patient_card WHERE patient_no ='"+jTextField91.getText()+"' and paid = false AND payment_mode = 'Scheme'");// union select date_prescribed as date,description as service,quantity,amount,gl_code from hp_pharmacy WHERE patient_no ='"+jTextField9.getText()+"' and paid = false");
     
            crset21.setConnectionSource(pConnDB);
     
            crset21.execute();
     
            // crset2.setExecuteOnLoad(true);
            jTable11.setModel(new org.netbeans.lib.sql.models.TableModel(crset21, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false),
                new org.netbeans.lib.sql.models.TableModel.Column("service", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Quantity", false),
                new org.netbeans.lib.sql.models.TableModel.Column("amount", "Amount KShs.", false)
                //  new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl Code", false)
     
            }));
     
            //  tableModel = jTable1.getModel();
     
            jScrollPane11.setViewportView(jTable11);
     
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
     
            System.out.println(sqlex.getMessage());
        }
     
     */
        
        //  jSearchDialog21.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    private void searchButton21Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        //     java.awt.Point point = this.jTextField11.getLocationOnScreen();
        
        jSearchDialog21.setSize(400,200);
        
        //  jSearchDialog21.setLocation(point);
        
        jSearchDialog21.show();
    }
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        
        
        jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select patient_no as pat_no,second_name||' '|| first_name as name from hp_inpatient_register where patient_no ILIKE '"+jTextField1131.getText()+"%' AND pay_mode = 'Scheme' order by second_name"));
        
       /* try {
            // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
            // searchRowSet21.execute("select trim(pr.patient_no) as pat_no,pr.first_name||' '||pr.second_name||' '||pr.last_name as name,pr.account_no AS staff_no,pr.description AS description from hp_inpatient_register pr,hp_admission ad  where pr.first_name||' '||pr.second_name||' '||pr.last_name ILIKE '"+jTextField1131.getText()+"%' AND pr.pay_mode = 'Scheme' and pr.patient_no = ad.patient_no and ad.discharge = true order by pr.first_name");
            searchRowSet21.execute("select patient_no as pat_no,second_name||' '|| first_name as name from hp_inpatient_register where patient_no ILIKE '"+jTextField1131.getText()+"%' AND pay_mode = 'Scheme' order by second_name");
        
            jSearchTable21.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet21, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("pat_no", "Patient No", false),
                new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                //   new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Member No.", false),
                //  new org.netbeans.lib.sql.models.TableModel.Column("description", "Scheme", false)
            }));
        */
        jSearchScrollPane21.setViewportView(jSearchTable21);
        System.out.println("Cannot sort out");
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
//        searchButton2Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
   /* private void searchButton2Clicked() {
    
        System.out.println("Showing dialog");
    
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
    
        jSearchDialog2.setSize(400,200);
    
        jSearchDialog2.setLocation(point);
    
        jSearchDialog2.show();
    }
    */
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        // if(this.jCheckBox2.isSelected()){
        //  if(this.jTextField113.getCaretPosition() < 2){
        //     System.out.print("Nothing");
        // }else{
        
        //  jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select invoice_no,admission_no as pat_no,item as name,date from ac_debtors  where invoice_no ILIKE '"+jTextField113.getText()+"%' order by invoice_no"));
        
            /*try {
                // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
                searchRowSet2.execute("select invoice_no,admission_no as pat_no,item as name,date from ac_debtors  where invoice_no ILIKE '"+jTextField113.getText()+"%' order by invoice_no");
             
                jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("invoice_no", "Invoice No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("pat_no", "Patient No", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false)
                }));
             */
        //  jSearchScrollPane2.setViewportView(jSearchTable2);
        //   System.out.println("Cannot sort out");
        
        // }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
    /*    int i = 0;
     
        this.jTextField3.setText("");
     
        jTextField8.setText("");
     
        String code = null;
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField10.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField6.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        //jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
     
        jSearchDialog2.dispose();
        try {
     
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payee,account_no,dealer,debit,balance from ac_debtors where invoice_no ='"+jTextField9.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField7.setText(rset.getObject(1).toString());
                jTextField8.setText(rset.getObject(2).toString());
                jTextField4.setText(rset.getObject(3).toString());
                jTextField2.setText(rset.getObject(4).toString());
                jTextField3.setText(rset.getObject(5).toString());
     
            }
     
            java.sql.Statement stmt2 = connectDB.createStatement();
            java.sql.ResultSet rset2 = stmt2.executeQuery("select account_no,member_name from hp_patient_register where patient_no ='"+jTextField10.getText()+"'");
            while (rset2.next()){
                jTextField12.setText(rset2.getObject(1).toString());
                jTextField11.setText(rset2.getObject(2).toString());
     
            }
     
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
     */
        //  this.populateTable1(this.jTextField9.getText());
     /*   try{
      
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rset11 = pss1.executeQuery("select account_no from ac_schemes where scheme_name = '"+jTextField7.getText()+"' and payer_name = '"+jTextField4.getText()+"'");
            while (rset11.next()){
                 code = dbObject.getDBObject(rset11.getObject(1), "-");
      
      
                jTextField8.setText(code);
               // jTextField51.setText(date);
               // jTextField61.setText(cat);
            }
            } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
      
        try{
            // java.sql.Statement pss = connectDB.createStatement();
            //  java.sql.ResultSet rss = pss.executeQuery("select first_name||' '||second_name||' '||last_name from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
            // while (rss.next()){
            //     jTextField1.setText(rss.getObject(1).toString());
            //}
      
            java.sql.Statement pss1 = connectDB.createStatement();
            java.sql.ResultSet rss1 = pss1.executeQuery("select account_no,expiry_date,category from hp_patient_register where patient_no = '"+jTextField9.getText()+"'");
            while (rss1.next()){
                    jTextField2.setText(rss1.getObject(1).toString());
                jTextField5.setText(rss1.getObject(2).toString());
                jTextField6.setText(rss1.getObject(3).toString());
            }
      
            java.sql.Statement pss11 = connectDB.createStatement();
            java.sql.ResultSet rss11 = pss11.executeQuery("select sum(amount) from patient_bill where patient_no = '"+jTextField9.getText()+"'");
            while (rss11.next()){
                // jTextField2.setText(rss1.getObject(1).toString());
                jTextField3.setText(rss11.getObject(1).toString());
            }
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
      
            System.out.println(sqlex.getMessage());
        }
        /*
        try {
            crset2.setCommand("select date::date,service,dosage,debit FROM hp_patient_card WHERE patient_no ='"+jComboBox2.getSelectedItem()+"' and paid = false AND payment_mode = 'Scheme' AND scheme ='"+jComboBox1.getSelectedItem()+"' and debit >0");
      
            crset2.setConnectionSource(pConnDB);
      
            crset2.execute();
      
            // crset2.setExecuteOnLoad(true);
            jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false),
                new org.netbeans.lib.sql.models.TableModel.Column("service", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("dosage", "Quantity", false),
                new org.netbeans.lib.sql.models.TableModel.Column("debit", "Amount KShs.", false)
      
            }));
      
            //  tableModel = jTable1.getModel();
      
            jScrollPane1.setViewportView(jTable1);
      
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
      
            System.out.println(sqlex.getMessage());
        }
      */
        
        //   this.populateTable1(jTextField9.getText());
/*        try {
            crset2.setCommand("select trans_date::date as date,service,quantity,amount,gl_code FROM hp_patient_billing WHERE patient_no ='"+jTextField9.getText()+"' and paid = false AND payment_mode = 'Scheme' union select date_prescribed as date,description as service,quantity,amount,gl_code from hp_pharmacy WHERE patient_no ='"+jTextField9.getText()+"' and paid = false");
 
            crset2.setConnectionSource(pConnDB);
 
            crset2.execute();
 
            // crset2.setExecuteOnLoad(true);
            jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false),
                new org.netbeans.lib.sql.models.TableModel.Column("service", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Quantity", false),
                new org.netbeans.lib.sql.models.TableModel.Column("amount", "Amount KShs.", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl Code", false)
 
            }));
 
            //  tableModel = jTable1.getModel();
 
            jScrollPane1.setViewportView(jTable1);
 
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
 
            System.out.println(sqlex.getMessage());
        }
 */
        
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    private void populateTable1(java.lang.String patient_no) {
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        //       this.jComboBox1.setSelectedItem(null);
        //       this.jTextField3.setText("");
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(invoice_no) FROM hp_patient_card WHERE invoice_no = '"+patient_no+"'");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                java.sql.Statement stmtTable111 = connectDB.createStatement();
                
                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery(" select date::date,initcap(service) as service,reference,dosage,CASE WHEN (debit > 0 ) THEN debit/dosage ELSE (credit/dosage)*-1 END AS price,debit-credit from hp_patient_card where invoice_no = '"+patient_no+"' AND service not ilike 'Invoice%' order by date::date");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                    jTable1.setValueAt(rsetTable1.getObject(6), i, 5);
                    java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery(" select gl_code from pricelist where service_type ILIKE '"+jTable1.getModel().getValueAt(i,1).toString()+"%' UNION all select gl_account from pb_operating_parameters where service_type ILIKE '"+jTable1.getModel().getValueAt(i,1).toString()+"%'");
                    
                    while (rsetTable111.next()) {
                        
                        System.out.println("Working at table row "+i);
                        jTable1.setValueAt(rsetTable111.getObject(1), i, 6);
                        
                    }
                    
                    i++;
                    
                }
                
                
                
            }else{
                javax.swing.JOptionPane.showMessageDialog(this,"Cannot Retrive Data ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
    }
    
    
    
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //       this.getContentPane().removeAll();
        //       this.initComponents();
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    //    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
       /* java.lang.Object selectedGuaran = cmbox2.getSelectedItem();
        int i = jTable1.getSelectedRow();
        
        if (selectedGuaran != null) {
        
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select item_code,units from st_stock_item where description = '"+selectedGuaran+"'");
                while (rs.next())
                    jTable1.setValueAt(rs.getObject(1),i,1);
                jTable1.setValueAt(rs.getObject(2),i,2);
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
        
            }
        */
    //}
    //   }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setVisible(false); // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        try{
            String receiptNo = null;
            String actCode = null;
            String glCode = null;
            String bankAcc = null;
            String glCode1 = null;
            String bankAcc1 = null;
            String transNo = null;
            String payMode = null;
            String patCat = null;
            String patientAcc = null;
            String cardNo = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            String expDate = null;
            String staffNo = null;
            String actNames = null;
            String user = null;
            String actNames1 = null;
            String actCode1 = null;
            String invoiceNo = null;
            
            double totalSum = 0.00;
            
            
            invoiceNo = this.jTextField9.getText();
            
            //  try {
            //      connectDB.setAutoCommit(false);
            
            //      java.sql.Statement stm1 = connectDB.createStatement();
            
            
            
            try {
                connectDB.setAutoCommit(false);
                
                
                //  java.sql.PreparedStatement pstmt311z = connectDB.prepareStatement("delete from ac_debtors WHERE staff_no = '"+jTable1.getModel().getValueAt(i,2).toString()+"'");
                //  pstmt311z.executeUpdate();
                
                
                
                java.sql.PreparedStatement pstmt3w = connectDB.prepareStatement("delete from hp_patient_card  WHERE invoice_no = '"+jTextField9.getText()+"'");
                pstmt3w.executeUpdate();
                java.sql.Statement stm1 = connectDB.createStatement();
                for (int p = 0; p < jTable1.getRowCount(); p++){
                    if (jTable1.getModel().getValueAt(p,0) != null){
                        java.sql.PreparedStatement pstmt31w = connectDB.prepareStatement("delete from ac_ledger WHERE transaction_no = '"+jTable1.getModel().getValueAt(p,2).toString()+"' AND transaction_type != 'Issuing'");
                        pstmt31w.executeUpdate();
                    }
                }
                
                java.sql.Statement pss12 = connectDB.createStatement();
                java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rsts11.next()){
                    actCode = rsts11.getObject(1).toString();
                    actNames = rsts11.getObject(2).toString();
                }
                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
                while (rsts1.next())
                    actCode1 = rsts1.getObject(1).toString();
                actNames1 = rsts1.getObject(2).toString();
                user = rsts1.getObject(3).toString();
                
                for (int i = 0; i < jTable1.getRowCount(); i++){
                    
                    
                    if (jTable1.getModel().getValueAt(i,0) != null){
                        
                        java.sql.Statement pssq = connectDB.createStatement();
                        // java.sql.ResultSet rse121 = pssq.executeQuery("select main_service,gl_account from pb_operating_parameters where service_type ILIKE '"+jTable1.getModel().getValueAt(i,1).toString()+"%' union select department,gl_code from st_stock_prices where product ILIKE '"+jTable1.getModel().getValueAt(i,1).toString()+"%'");
                        java.sql.ResultSet rse121 = pssq.executeQuery("select activity from pb_activity where code ILIKE '"+jTable1.getModel().getValueAt(i,6).toString()+"%'");
                        
                        while (rse121.next())
                            //  glCode = dbObject.getDBObject(rse121.getObject(1), "-");//rse121.getObject(1).toString();
                            glCode1 = dbObject.getDBObject(rse121.getObject(1), "-");
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                        pstmt.setString(1,jTextField10.getText());
                        pstmt.setObject(2,jTable1.getModel().getValueAt(i,1).toString());
                        pstmt.setString(3,"");
                        pstmt.setString(4,"Scheme");
                        pstmt.setString(5,jTable1.getModel().getValueAt(i,2).toString());
                        pstmt.setString(7,jTextField7.getText());
                        pstmt.setString(6,"");
                        pstmt.setString(8,"");
                        pstmt.setString(9,jTextField4.getText());
                        pstmt.setString(10,null);
                        pstmt.setString(11,"");
                        if(java.lang.Double.valueOf(jTable1.getValueAt(i,5).toString()) > 0){
                            
                            pstmt.setObject(12,jTable1.getModel().getValueAt(i,5).toString());
                            pstmt.setString(13,"00");
                            pstmt.setString(20,"Billing");
                        }else{
                            pstmt.setDouble(13,java.lang.Double.valueOf(jTable1.getModel().getValueAt(i,5).toString())*-1);
                            pstmt.setString(12,"00");
                            pstmt.setObject(20,jTable1.getValueAt(i,0).toString());
                        }
                        pstmt.setObject(14,jTable1.getValueAt(i,0).toString());
                        pstmt.setObject(15,actCode);
                        pstmt.setString(16,glCode1);
                        pstmt.setObject(17,jTable1.getValueAt(i,3).toString());
                        pstmt.setObject(18,jTextField12.getText());
                        pstmt.setString(19,"true");
                        
                        pstmt.setString(21,"true");
                        pstmt.setString(22,actNames);
                        pstmt.setString(23,jTextField9.getText());
                        pstmt.setString(24,user);
                        pstmt.setString(25,"");
                        pstmt.setString(26,"OP");
                        pstmt.executeUpdate();
                        
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt2.setObject(1,jTable1.getValueAt(i,6).toString());
                        pstmt2.setObject(2,glCode1);
                        pstmt2.setString(3,jTextField10.getText());
                        pstmt2.setString(4,jTextField1.getText());
                        pstmt2.setString(5,"");
                        pstmt2.setString(6,cardNo);
                        pstmt2.setString(7,cardName);
                        pstmt2.setString(8,"OP");
                        pstmt2.setString(9,isurer);
                        pstmt2.setString(10,"Scheme");
                        pstmt2.setString(11,"");
                        pstmt2.setString(12,"");
                        pstmt2.setString(13,"");
                        pstmt2.setString(14,jTable1.getValueAt(i,1).toString());
                        if(java.lang.Double.valueOf(jTable1.getValueAt(i,5).toString()) > 0){
                            
                            pstmt2.setString(15,"Revenue");
                            pstmt2.setString(16,"0.00");
                            pstmt2.setObject(17,jTable1.getValueAt(i,5).toString());
                        }else{
                            
                            pstmt2.setObject(15,jTable1.getValueAt(i,0).toString());
                            pstmt2.setString(17,"0.00");
                            pstmt2.setDouble(16,java.lang.Double.valueOf(jTable1.getValueAt(i,5).toString())*-1);
                        }
                        pstmt2.setObject(18,jTable1.getValueAt(i,0).toString());
                        pstmt2.setString(19,jTable1.getValueAt(i,2).toString());
                        pstmt2.setString(20,"false");
                        pstmt2.setString(21,"false");
                        pstmt2.setString(22,"false");
                        pstmt2.setString(23,user);
                        pstmt2.executeUpdate();
                        
                        
                        totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5);
                        
                    }
                }
                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                pstmt1.setString(1,jTextField10.getText());
                pstmt1.setObject(2,"Invoice");
                pstmt1.setString(3,"");
                pstmt1.setString(4,"Scheme");
                pstmt1.setString(5,jTable1.getValueAt(0,2).toString());
                pstmt1.setString(7,jTextField7.getText());
                pstmt1.setString(6,"");
                pstmt1.setString(8,"");
                pstmt1.setString(9,jTextField4.getText());
                pstmt1.setString(10,null);
                pstmt1.setString(11,"");
                pstmt1.setObject(13,jTextField3.getText());
                pstmt1.setString(12,"00");
                pstmt1.setObject(14,jTable1.getValueAt(0,0).toString());
                pstmt1.setObject(15,actCode);
                pstmt1.setString(16,glCode1);
                pstmt1.setObject(17,"1");
                pstmt1.setObject(18,jTextField12.getText());
                pstmt1.setString(19,"true");
                pstmt1.setString(20,"Receipts");
                pstmt1.setString(21,"true");
                pstmt1.setString(22,actNames);
                pstmt1.setString(23,jTextField9.getText());
                pstmt1.setString(24,user);
                pstmt1.executeUpdate();
                
                java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE ac_debtors set payee = '"+jTextField7.getText()+"',dealer = '"+jTextField4.getText()+"',account_no = '"+jTextField8.getText()+"',balance = '"+totalSum+"',debit = '"+totalSum+"',date = '"+jTextField6.getText()+"',item = '"+jTextField1.getText()+"'  WHERE invoice_no = '"+jTextField9.getText()+"'");
                pstmt22.executeUpdate();
                
                java.sql.PreparedStatement pstmt221 = connectDB.prepareStatement("UPDATE hp_patient_register set account_no ='"+jTextField12.getText()+"',member_name = '"+jTextField11.getText()+"' WHERE patient_no = '"+jTextField10.getText()+"'");
                pstmt221.executeUpdate();
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                invoiceNo = jTextField9.getText();
                
//                com.afrisoftech.reports.FinalInvoiceByinvPdf policy = new com.afrisoftech.reports.FinalInvoiceByinvPdf();
//                policy.FinalInvoiceByinvPdf(connectDB,invoiceNo,invoiceNo);
                
                javax.swing.JOptionPane.showMessageDialog(this,"Data Inserted Successfully ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                        jTable1.getModel().setValueAt(null,k,r);
                    }
                }
                jTextField3.setText("");
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }
        // }// Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton dispose11;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton522;
    private javax.swing.JButton jButton523;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel411;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel641;
    private javax.swing.JPanel jPanel6411;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JDialog jSearchDialog23;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JPanel jSearchPanel23;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JScrollPane jSearchScrollPane23;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JTable jSearchTable23;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField101;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JTextField jTextField1133;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField121;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField311;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField61;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField71;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField81;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton21;
    private javax.swing.JButton searchButton3;
    // End of variables declaration//GEN-END:variables
    
}
