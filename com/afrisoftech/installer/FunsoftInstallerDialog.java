/*
 * FunsoftInstallerDialog.java
 *
 * Created on December 9, 2005, 3:59 PM
 */

package com.afrisoftech.installer;

/**
 *
 * @author  root
 */
public class FunsoftInstallerDialog extends javax.swing.JDialog implements java.lang.Runnable {
    
    javax.swing.ImageIcon imageIcon;
    
    com.afrisoftech.installer.PostgresInstallerThread postgresInstallThread = null;
    
    java.lang.Process postgresInstallProcess = null;
    
    java.lang.String postgresInstallerPath = null;
    
    
    
    boolean postgresThread = true;
   
    /** Creates new form FunsoftInstallerDialog */
    public FunsoftInstallerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
//        postgresInstallThread = new java.lang.Thread(this, "PostgreSQL Installation Process");
       
        
        imageIcon = new javax.swing.ImageIcon(getClass().getResource("/funsoft_logo.gif"));
        
        /*
         postgresInstallerPath = System.getProperty("user.dir")
        
        + System.getProperty("file.separator")
        
        + "postgresql-8.1-beta2-int.msi";
        
        
        */
        
        initComponents();
        this.backButton.setVisible(false);
        this.selectpanel.setVisible(false);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        eulaButtonGroup = new javax.swing.ButtonGroup();
        labelPanel = new javax.swing.JPanel();
        installerLabel = new javax.swing.JLabel();
        processListPanel = new javax.swing.JPanel();
        dbInstallLabel = new javax.swing.JLabel();
        dbRestoreLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        funsoftLabelPanel = new javax.swing.JPanel() {

            public void paintComponent(java.awt.Graphics g) {

                java.awt.Dimension d = getSize();

                g.drawImage(imageIcon.getImage(), 0, 0, d.width, d.height,null);
                System.out.println("still drawing");
                setOpaque(false);

                super.paintComponent(g);

            }

        };

        buttonPanel = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        spacerPanel = new javax.swing.JPanel();
        taskPanel = new javax.swing.JPanel();
        installIntroPanel = new javax.swing.JPanel();
        welcomeTextArea = new javax.swing.JTextArea();
        installLicensePanel = new javax.swing.JPanel();
        agreejRadioButton = new javax.swing.JRadioButton();
        disagreejRadioButton = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        licenceTextArea = new javax.swing.JTextArea();
        selectpanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        labelPanel.setLayout(new java.awt.GridBagLayout());

        labelPanel.setBorder(new javax.swing.border.EtchedBorder());
        installerLabel.setForeground(new java.awt.Color(0, 0, 153));
        installerLabel.setText("Funsoft Enterprise Information System Installer");
        labelPanel.add(installerLabel, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(labelPanel, gridBagConstraints);

        processListPanel.setLayout(new java.awt.GridBagLayout());

        processListPanel.setBackground(new java.awt.Color(255, 255, 255));
        processListPanel.setBorder(new javax.swing.border.EtchedBorder());
        dbInstallLabel.setText("Installing Database...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        processListPanel.add(dbInstallLabel, gridBagConstraints);

        dbRestoreLabel.setText("Database Restoration...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        processListPanel.add(dbRestoreLabel, gridBagConstraints);

        jLabel3.setText("Deploying Funsoft System..");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        processListPanel.add(jLabel3, gridBagConstraints);

        jLabel4.setText("System Settings...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        processListPanel.add(jLabel4, gridBagConstraints);

        funsoftLabelPanel.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        processListPanel.add(funsoftLabelPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(processListPanel, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        buttonPanel.setBackground(new java.awt.Color(204, 204, 255));
        buttonPanel.setBorder(new javax.swing.border.EtchedBorder());
        backButton.setMnemonic('B');
        backButton.setText("Back");
        backButton.setBorderPainted(false);
        backButton.setPreferredSize(new java.awt.Dimension(62, 25));
        backButton.setOpaque(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(backButton, gridBagConstraints);

        nextButton.setMnemonic('N');
        nextButton.setText("Next");
        nextButton.setBorderPainted(false);
        nextButton.setOpaque(false);
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(nextButton, gridBagConstraints);

        cancelButton.setMnemonic('C');
        cancelButton.setText("Cancel");
        cancelButton.setBorderPainted(false);
        cancelButton.setOpaque(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(cancelButton, gridBagConstraints);

        spacerPanel.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(spacerPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(buttonPanel, gridBagConstraints);

        taskPanel.setLayout(new java.awt.GridBagLayout());

        taskPanel.setBackground(new java.awt.Color(218, 248, 254));
        taskPanel.setBorder(new javax.swing.border.EtchedBorder());
        installIntroPanel.setLayout(new java.awt.GridBagLayout());

        welcomeTextArea.setBackground(new java.awt.Color(224, 247, 247));
        welcomeTextArea.setEditable(false);
        welcomeTextArea.setText("Welcome to the Funsoft version 4.0.4b Installation process.\n\nThis wizard shall guide you through the installation process for all components \nof the Funsoft Enterprise application server and the front-end services.\n\nPlease do not hesitate to consult the nearest Funsoft support center incase \nof any difficulties that may arise from the installation exercise.\n\nRegards,\n\nFunsoft ERP support team! ");
        welcomeTextArea.setWrapStyleWord(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        installIntroPanel.add(welcomeTextArea, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        taskPanel.add(installIntroPanel, gridBagConstraints);

        installLicensePanel.setLayout(new java.awt.GridBagLayout());

        installLicensePanel.setBorder(new javax.swing.border.TitledBorder("End User License Agreement"));
        agreejRadioButton.setText("Agree");
        eulaButtonGroup.add(agreejRadioButton);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        installLicensePanel.add(agreejRadioButton, gridBagConstraints);

        disagreejRadioButton.setSelected(true);
        disagreejRadioButton.setText("Disagree");
        eulaButtonGroup.add(disagreejRadioButton);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        installLicensePanel.add(disagreejRadioButton, gridBagConstraints);

        licenceTextArea.setBackground(new java.awt.Color(224, 247, 247));
        licenceTextArea.setEditable(false);
        licenceTextArea.setText("System Partners Ltd  - Funsoft - Hospital Management System (Funsoft 4.0.4b) \n\nEND-USER LICENSE AGREEMENT \n\nIMPORTANT-READ CAREFULLY: This End-User\nLicense Agreement (\"EULA\") is a legal agreement between you\n(either an individual or a single entity) and System Partners Ltd\nCorporation for the System Partners Ltdsoftware product identified above,\nwhich includes computer software and may include associated\nmedia, printed materials, \"online\" or electronic documentation,\nand Internet-based services (\"Product\").    An amendment or\naddendum to this EULA may accompany the Product.  YOU AGREE TO BE\nBOUND BY THE TERMS OF THIS EULA BY\nINSTALLING, COPYING, OR OTHERWISE USING THE\nPRODUCT. IF YOU DO NOT AGREE, DO NOT INSTALL\nOR USE THE PRODUCT; YOU MAY RETURN IT TO YOUR\nPLACE OF PURCHASE FOR A FULL REFUND.\n\n 1. GRANT OF LICENSE. System Partners Ltd grants you the following rights\n    provided that you comply with all terms and conditions of\n    this EULA:\n\n    * Installation and use.  You may install, use, access,\n      display and run one copy of the Product on a single\n      computer, such as a workstation, terminal or other device\n      (\"Workstation Computer\").  The Product may not be used\n      by more than two (2) processors at  any one time on any\n      single Workstation Computer. You may permit a maximum\n      of ten (10) computers or other electronic devices (each\n      a \"Device\") to connect to the Workstation Computer to\n      utilize the services of the Product solely for File and\n      Print services, Internet Information Services, and remote\n      access (including connection sharing and telephony\n      services).  The ten connection maximum includes any\n      indirect connections made through \"multiplexing\" or other\n      software or hardware which pools or aggregates\n      connections.  Except as otherwise permitted by the\n      NetMeeting, Remote Assistance, and Remote Desktop\n      features described below, you may not use the Product\n      to permit any Device to use, access, display or run other\n      executable software residing on the Workstation Computer,\n      nor may you permit any Device to use, access, display,\n      or run the Product or Product's user interface, unless\n      the Device has a separate license for the Product.   \n\n    * Mandatory Activation. The license rights granted under this\n      EULA are limited to the first thirty (30) days after\n      you first install  the Product unless you supply\n      information required to activate your licensed copy in\n      the manner described during the setup sequence of the\n      Product.  You can activate the Product through the use\n      of the Internet or telephone; toll charges may apply. \n      You may also need to reactivate the Product if you modify\n      your computer hardware or alter the Product.  There are\n      technological measures in this Product that are designed\n      to prevent unlicensed or illegal use of the Product.  \n      You agree that we may use those measures.\n\n    * Storage/Network Use. You may also store or install a copy\n      of the Product on a storage device, such as a network\n      server, used only to install or run the Product on your\n      other Workstation Computers over an internal network;\n      however, you must acquire and dedicate an additional\n      license for each separate Workstation Computer on or\n      from which the Product is installed, used, accessed,\n      displayed or run. A license for the Product may not be\n      shared or used concurrently on different Workstation\n      Computers.\n\n    * Reservation of Rights. System Partners Ltdreserves all rights not\n      expressly granted to you in this EULA.\n\n 2. UPGRADES. To use a Product identified as an upgrade, you must\n    first be licensed for the product identified by System Partners Ltd Ltd\n    as eligible for the upgrade. After upgrading, you may no\n    longer use the product that formed the basis for your\n    upgrade eligibility.\n\n 3. ADDITIONAL SOFTWARE/SERVICES.  This EULA\n    applies to updates, supplements, add-on components,\n    or Internet-based services components, of the Product that\n    System Partners Ltdmay provide to you or make available to you after\n    the date you obtain your initial copy of the Product,\n    unless we provide other terms along with the update,\n    supplement, add-on component, or Internet-based services\n    component.  System Partners Ltdreserves the right to discontinue any\n    Internet-based services provided to you or made available\n    to you through the use of the Product.  This EULA does not\n    grant you any rights to use the Windows Media Format\n    Software Development Kit (\"WMFSDK\") components contained\n    in the Product to develop a software application that uses\n    Windows Media technology.  If you wish to use the WMFSDK\n    to develop such an application, visit \n    http://msdn.System Partners Ltd Ltd.com/workshop/imedia/windowsmedia/sdk/wmsdk.asp,\n    accept a separate license for the WMFSDK, download the \n    appropriate WMFSDK, and install it on your system.  \n\n 4. TRANSFER-Internal.  You may move the Product to a different\n    Workstation Computer.  After the transfer, you must\n    completely remove the Product from the former Workstation\n    Computer.  Transfer to Third Party. The initial user of the\n    Product may make a one-time transfer of the Product to\n    another end user.  The transfer has to include all\n    component parts, media, printed materials, this EULA, and\n    if applicable, the Certificate of Authenticity.  The\n    transfer may not be an indirect transfer, such as a\n    consignment.  Prior to the transfer, the end user receiving\n    the transferred Product must agree to all the EULA terms. \n    No Rental.  You may not rent, lease, lend or provide\n    commercial hosting services to third parties with the\n    Product. \n\n 5. LIMITATION ON REVERSE ENGINEERING,\n    DECOMPILATION, AND DISASSEMBLY. You may\n    not reverse engineer, decompile, or disassemble the\n    Product, except and only to the extent that it is expressly\n    permitted by applicable law notwithstanding this\n    limitation.  \n\n 6. TERMINATION. Without prejudice to any other rights, System Partners Ltd Ltd\n    may cancel this EULA if you do not abide by the terms and\n    conditions of this EULA, in which case you must destroy all\n    copies of the Product and all of its component parts.\n\n 7. DESCRIPTION OF OTHER RIGHTS AND\n    LIMITATIONS.  \n\n    * NetMeeting/Remote Assistance/Remote Desktop Features.  The\n      Product contains NetMeeting, Remote Assistance, and\n      Remote Desktop technologies that enable the Product or\n      other applications installed on the Workstation Computer\n      to be used remotely between two or more computers, even\n      if the Product or application is installed on only one\n      Workstation Computer.  You may use NetMeeting, Remote\n      Assistance, and Remote Desktop with all System Partners Ltd products; \n      provided however, use of these technologies with\n      certain System Partners Ltdproducts may require an additional\n      license.  For System Partners Ltdand non-System Partners Ltd products, you\n      should consult the license agreement accompanying the\n      applicable product or contact the applicable licensor\n      to determine whether use of NetMeeting, Remote\n      Assistance, or Remote Desktop is permitted without an\n      additional license.\n\n    * Consent to Use of Data.  You agree that System Partners Ltd and its\n      affiliates may collect and use technical information\n      gathered in any manner as part of the product support\n      services provided to you, if any, related to the Product.\n      System Partners Ltdmay use this information solely to improve\n      our products or to provide customized services or\n      technologies to you.  System Partners Ltdmay disclose this\n      information to others, but not in a form that personally\n      identifies you.   \n\n    * Internet Gaming/Update Features.  If you choose to utilize\n      the Internet gaming or update features within the\n      Product, it is necessary to use certain computer system,\n      hardware, and software information to implement the\n      features.   By using these features, you explicitly\n      authorize System Partners Ltdor its designated agent to access\n      and utilize the necessary information for Internet gaming\n      and/or updating purposes.   System Partners Ltdmay use this\n      information solely to improve our products or to provide\n      customized services or technologies to you.  System Partners Ltd Ltd\n      may disclose this information to others, but not in a\n      form that personally identifies you.     \n\n    * Internet-Based Services Components.  The Product contains\n      components that enable and facilitate the use of certain\n      Internet-based services.  You acknowledge and agree that\n      System Partners Ltdmay automatically check the version of the\n      Product and/or its components that you are utilizing\n      and may provide upgrades or fixes to the Product that\n      will be automatically downloaded to your Workstation\n      Computer.  \n\n    * Security Updates.  Content providers are using the digital\n      rights management technology (\"System Partners LtdDRM\") contained\n      in this Product to protect the integrity of their content\n      (\"Secure Content\") so that their intellectual property,\n      including copyright, in such content is not misappropriated.  Owners of\n      such Secure Content (\"Secure Content Owners\") may, from\n      time to time, request System Partners Ltdto provide security\n      related updates to the System Partners LtdDRM components of the\n      Product (\"Security Updates\") that may affect your ability\n      to copy, display and/or play Secure Content through\n      System Partners Ltdsoftware or third party applications that\n      utilize System Partners LtdDRM.  You therefore agree that, if\n      you elect to download a license from the Internet which\n      enables your use of Secure Content, System Partners Ltdmay, in\n      conjunction with such license, also download onto your\n      computer such Security Updates that a Secure Content\n      Owner has requested that System Partners Ltddistribute.  System Partners Ltd Ltd\n      will not retrieve any personally identifiable\n      information, or any other information, from your computer\n      by downloading such Security Updates.\n\n 8. NOT FOR RESALE SOFTWARE. Product\n    identified as \"Not for Resale\" or \"NFR,\" may not be resold,\n    transferred or used for any purpose other than\n    demonstration, test or evaluation.\n\n 9. ACADEMIC EDITION SOFTWARE.  To use\n    Product identified as \"Academic Edition\" or \"AE,\" you must\n    be a \"Qualified Educational User.\"   For qualification-\n    related questions, please contact the System Partners LtdSales\n    Information Center/One System Partners LtdWay/Redmond, WA 98052-6399\n    or the System Partners Ltdsubsidiary serving your country.\n\n10. EXPORT RESTRICTIONS. \n    You acknowledge that the Product is of U.S. origin and\n    subject to U.S. export jurisdiction.  You agree to comply\n    with all applicable international and national laws that\n    apply to the Product, including the U.S. Export\n    Administration Regulations, as well as end-user, end-use,\n    and destination restrictions issued by U.S. and other\n    governments. For additional information see \n    <http://www.System Partners Ltd Ltd.com/exporting/>.\n\n11. LIMITED WARRANTY FOR PRODUCT ACQUIRED IN\n    THE US AND CANADA.  \n\n    System Partners Ltdwarrants that the Product will perform\n    substantially in accordance with the accompanying \n    materials for a period of ninety days from the date of\n    receipt. \n\n    If an implied warranty or condition is created by\n    your state/jurisdiction and federal or state/provincial law\n    prohibits disclaimer of it, you also have an implied\n    warranty or condition, BUT ONLY AS\n    TO DEFECTS DISCOVERED DURING THE PERIOD\n    OF THIS LIMITED WARRANTY (NINETY DAYS).\n    AS TO ANY DEFECTS DISCOVERED AFTER THE\n    NINETY (90) DAY PERIOD, THERE IS NO\n    WARRANTY OR CONDITION OF ANY KIND. \n    Some states/jurisdictions do not allow limitations on how\n    long an implied warranty or condition lasts, so the above\n    limitation may not apply to you.\n\n    Any supplements or updates to the Product, including without\n    limitation, any (if any) service packs or hot fixes\n    provided to you after the expiration of the ninety day\n    Limited Warranty period are not covered by any warranty or\n    condition, express, implied or statutory.\n\n    LIMITATION ON REMEDIES; NO CONSEQUENTIAL\n    OR OTHER DAMAGES. Your exclusive remedy for any breach\n    of this Limited Warranty is as set forth below.  Except\n    for any refund elected by System Partners Ltd Ltd, YOU ARE NOT ENTITLED\n    TO ANY DAMAGES, INCLUDING BUT NOT\n    LIMITED TO CONSEQUENTIAL DAMAGES, if\n    the Product does not meet System Partners Ltd Ltd's Limited Warranty,\n    and, to the maximum extent allowed by applicable law, even\n    if any remedy fails of its essential purpose.  The terms\n    of Section 13 below (\"Exclusion of Incidental,\n    Consequential and Certain Other Damages\")  are also\n    incorporated into this Limited Warranty. Some states/\n    jurisdictions do not allow the exclusion or limitation\n    of incidental or consequential damages, so the above\n    limitation or exclusion may not apply to you.  This\n    Limited Warranty gives you specific legal rights.  You\n    may have others which vary from state/jurisdiction to \n    state/jurisdiction. YOUR EXCLUSIVE REMEDY.  System Partners Ltd Ltd's\n    and its suppliers' entire liability and your exclusive\n    remedy shall be, at System Partners Ltd Ltd's option from time to time\n    exercised subject to applicable law, (a) return of the\n    price paid (if any) for the Product, or (b) repair or\n    replacement of the Product, that does not meet this\n    Limited Warranty and that is returned to System Partners Ltdwith\n    a copy of your receipt. You will receive the remedy\n    elected by System Partners Ltdwithout charge, except that you are\n    responsible for any expenses you may incur (e.g. cost of\n    shipping the Product to System Partners Ltd Ltd).  This Limited Warranty\n    is void if failure of the Product has resulted from\n    accident, abuse, misapplication, abnormal use or a virus.\n    Any replacement Product will be warranted for the\n    remainder of the original warranty period or thirty (30)\n    days, whichever is longer. Outside the United States or\n    Canada, neither these remedies nor any product support\n    services offered by System Partners Ltdare available without proof\n    of purchase from an authorized international source.  To\n    exercise your remedy, contact:  System Partners Ltd Ltd, Attn. System Partners Ltd \n    Sales Information Center/One System Partners Ltd Way/Redmond, WA\n    98052-6399, or the System Partners Ltdsubsidiary serving\n    your country.\n\n    LIMITED WARRANTY FOR PRODUCT ACQUIRED\n    OUTSIDE THE US or CANADA. \n    FOR THE LIMITED WARRANTIES AND SPECIAL\n    PROVISIONS PERTAINING TO YOUR PARTICULAR\n    JURISDICTION, PLEASE REFER TO YOUR WARRANTY\n    BOOKLET INCLUDED WITH THIS PACKAGE OR\n    PROVIDED WITH THE SOFTWARE PRODUCT\n    PRINTED MATERIALS.\n\n12. DISCLAIMER OF  WARRANTIES. The Limited\n    Warranty that appears above is the only express warranty\n    made to you and is provided in lieu of any other express\n    warranties (if any) created by any documentation,\n    packaging, or other communications.  Except for the Limited\n    Warranty and to the maximum extent permitted by applicable\n    law, System Partners Ltdand its suppliers provide the Product and\n    support services (if any) AS IS AND WITH ALL FAULTS, and\n    hereby disclaim all other warranties and conditions, either\n    express, implied or statutory, including, but not limited\n    to, any (if any) implied warranties, duties or conditions\n    of merchantability, of fitness for a particular purpose,\n    of reliability or availability, of accuracy or completeness\n    of responses, of results, of workmanlike effort, of lack\n    of viruses, and of lack of negligence, all with regard to\n    the Product, and the provision of or failure to provide\n    support or other services, information, software, and\n    related content through the Product or otherwise arising\n    out of the use of the Product.  ALSO, THERE IS NO WARRANTY\n    OR CONDITION OF TITLE, QUIET ENJOYMENT,\n    QUIET POSSESSION, CORRESPONDENCE TO\n    DESCRIPTION OR NON-INFRINGEMENT WITH\n    REGARD TO THE PRODUCT.\n\n13. EXCLUSION OF INCIDENTAL, CONSEQUENTIAL\n    AND CERTAIN OTHER DAMAGES.  TO THE\n    MAXIMUM EXTENT PERMITTED BY APPLICABLE\n    LAW, IN NO EVENT SHALL System Partners LtdOR ITS\n    SUPPLIERS BE LIABLE FOR ANY SPECIAL,\n    INCIDENTAL, PUNITIVE, INDIRECT, OR\n    CONSEQUENTIAL DAMAGES WHATSOEVER\n    (INCLUDING, BUT NOT LIMITED TO, DAMAGES\n    FOR LOSS OF PROFITS OR CONFIDENTIAL OR\n    OTHER INFORMATION, FOR BUSINESS\n    INTERRUPTION, FOR PERSONAL INJURY, FOR\n    LOSS OF PRIVACY, FOR FAILURE TO MEET\n    ANY DUTY INCLUDING OF GOOD FAITH OR OF\n    REASONABLE CARE, FOR NEGLIGENCE, AND\n    FOR ANY OTHER PECUNIARY OR OTHER LOSS\n    WHATSOEVER) ARISING OUT OF OR IN ANY\n    WAY RELATED TO THE USE OF OR INABILITY\n    TO USE THE PRODUCT, THE PROVISION OF\n    OR FAILURE TO PROVIDE SUPPORT OR OTHER\n    SERVICES, INFORMATON, SOFTWARE, AND\n    RELATED CONTENT THROUGH THE PRODUCT OR\n    OTHERWISE ARISING OUT OF THE USE OF THE\n    PRODUCT, OR OTHERWISE UNDER OR IN\n    CONNECTION WITH ANY PROVISION OF THIS\n    EULA, EVEN IN THE EVENT OF THE FAULT,\n    TORT (INCLUDING NEGLIGENCE), STRICT\n    LIABILITY, BREACH OF CONTRACT OR BREACH\n    OF WARRANTY OF System Partners LtdOR ANY\n    SUPPLIER, AND EVEN IF System Partners LtdOR ANY\n    SUPPLIER HAS BEEN ADVISED OF THE\n    POSSIBILITY OF SUCH DAMAGES. \n\n14. LINKS TO THIRD PARTY SITES.  You may link\n    to third party sites through the use of the Product.  The\n    third party sites are not under the control of System Partners Ltd,\n    and System Partners Ltdis not responsible for the contents of any\n    third party sites, any links contained in third party\n    sites, or any changes or updates to third party sites. \n    System Partners Ltdis not responsible for webcasting or any other\n    form of transmission received from any third party sites. \n    System Partners Ltdis providing these links to third party sites to\n    you only as a convenience, and the inclusion of any link\n    does not imply an endorsement by System Partners Ltdof the third\n    party site.            \n\n15. LIMITATION OF LIABILITY AND REMEDIES.\n    Notwithstanding any damages that you might incur for any\n    reason whatsoever (including, without limitation, all\n    damages referenced above and all direct or general\n    damages), the entire liability of System Partners Ltdand any of its\n    suppliers under any provision of this EULA and your\n    exclusive remedy for all of the foregoing (except for any\n    remedy of repair or replacement elected by System Partners Ltdwith\n    respect to any breach of the Limited Warranty) shall be\n    limited to the greater of the amount actually paid by you\n    for the Product or U.S.$5.00.  The foregoing limitations,\n    exclusions and disclaimers (including Sections 11, 12 and\n    13 above) shall apply to the maximum extent permitted by\n    applicable law, even if any remedy fails its\n    essential purpose.\n\n16. U.S. GOVERNMENT LICENSE RIGHTS. All\n    Product provided to the U.S. Government pursuant to\n    solicitations issued on or after December 1, 1995 is\n    provided with the commercial license rights and\n    restrictions described elsewhere herein.  All Product\n    provided to the U.S. Government pursuant to solicitations\n    issued prior to December 1, 1995 is provided with\n    \"Restricted Rights\" as provided for in FAR, 48 CFR 52.227-14 \n    (JUNE 1987) or DFAR, 48 CFR 252.227-7013 (OCT 1988),\n    as applicable. \n\n17. APPLICABLE LAW.  If you acquired this Product in the United\n    States, this EULA is governed by the laws of the State of\n    Washington.  If you acquired this Product in Canada, unless\n    expressly prohibited by local law, this EULA is governed\n    by the laws in force in the Province of Ontario, Canada;\n    and, in respect of any dispute which may arise hereunder,\n    you consent to the jurisdiction of the federal and\n    provincial courts sitting in Toronto, Ontario. If this\n    Product was acquired outside the United States, then local\n    law may apply. \n\n18. ENTIRE AGREEMENT.  This EULA (including\n    any addendum or amendment to this EULA which is included\n    with the Product) are the entire agreement between you and\n    System Partners Ltdrelating to the Product and the support services\n    (if any) and they supersede all prior or contemporaneous\n    oral or written communications,  proposals and\n    representations with respect to the Product or any other\n    subject matter covered by this EULA.  To the extent the\n    terms of any System Partners Ltd policies or programs for support\n    services conflict with the terms of this EULA, the terms\n    of this EULA shall control.\n\n19. The Product is protected by copyright and other intellectual\n    property laws and treaties. System Partners Ltdor its suppliers own\n    the title, copyright, and other intellectual property\n    rights in the Product.  The Product is licensed, not sold.\n\n\n\nSystem Partners Ltd. Copyright 2001 - 2005. All rights reserved.");
        jScrollPane1.setViewportView(licenceTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        installLicensePanel.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        taskPanel.add(installLicensePanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 20.0;
        getContentPane().add(taskPanel, gridBagConstraints);

        selectpanel.setLayout(new java.awt.GridBagLayout());

        selectpanel.setBorder(new javax.swing.border.EtchedBorder());
        selectpanel.setMinimumSize(new java.awt.Dimension(155, 88));
        selectpanel.setPreferredSize(new java.awt.Dimension(573, 6414));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Please Select Where You Want To Install Funsoft System");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        selectpanel.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("select system folder");
        jLabel2.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel6.add(jLabel2, gridBagConstraints);

        jTextField1.setText("C:\\Funsoft\\System");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jTextField1, gridBagConstraints);

        jButton1.setText("Browse");
        jButton1.setPreferredSize(new java.awt.Dimension(80, 19));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton1, gridBagConstraints);

        jCheckBox1.setText("PostgreSQL RDBMS ");
        jCheckBox1.setBorderPainted(true);
        jCheckBox1.setBorderPaintedFlat(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jCheckBox1, gridBagConstraints);

        jCheckBox2.setText("Funsoft System");
        jCheckBox2.setBorderPainted(true);
        jCheckBox2.setBorderPaintedFlat(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jCheckBox2, gridBagConstraints);

        jCheckBox3.setText("Adobe Acrobat Reader");
        jCheckBox3.setBorderPainted(true);
        jCheckBox3.setBorderPaintedFlat(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jCheckBox3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel4.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        selectpanel.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        selectpanel.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 20.0;
        getContentPane().add(selectpanel, gridBagConstraints);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(714, 407));
        setLocation((screenSize.width-714)/2,(screenSize.height-407)/2);
    }//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        javax.swing.JFileChooser chooserDir = new javax.swing.JFileChooser(new java.io.File(System.getProperty("user.dir")));
        
        chooserDir.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        
        int returnVal = chooserDir.showOpenDialog(this);
        
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            
            System.out.println("You chose to open this file: " +
            
            chooserDir.getSelectedFile().getPath());
            
            jTextField1.setText(chooserDir.getSelectedFile().getPath());
            
            // filePortrait = chooserPortrait.getSelectedFile();
            
            // this.jTextField1.setText(filePortrait.getNam);
            
            //  processBrRequisitionFile(filePortrait);
            
            // appProp.setProperty("docsdir", chooserDir.getSelectedFile().getPath());
            
            // System.setProperty("docsdir", chooserDir.getSelectedFile().getPath());
            
            //jPanel.validate();
            
            // storePreferences();
            
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        
        this.backButton.setVisible(true);
        
        String selectdk = null;
        if (agreejRadioButton.isSelected()){
            
            this.selectpanel.setVisible(true);
            this.taskPanel.setVisible(false);
        
        }else{
            int disOption = javax.swing.JOptionPane.showConfirmDialog(this, "You have decided not to agree thank you?", "Sorry try next version", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
            
            if (disOption == javax.swing.JOptionPane.YES_OPTION) {
                
                this.dispose();
                
                System.exit(0);
            } else {}
        }
        
       if (jCheckBox1.isSelected()) {
           postgresInstallThread = new com.afrisoftech.installer.PostgresInstallerThread(jTextField1.getText());
            postgresInstallThread.startThread();
       } else {}
        
        //Add your handling code here:
    }//GEN-LAST:event_nextButtonActionPerformed
    
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.selectpanel.setVisible(false);
        this.taskPanel.setVisible(true);
        this.backButton.setVisible(false);
        
        // Add your handling code here:
    }//GEN-LAST:event_backButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to abort the installation?", "Caution before aborting the installation!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            this.dispose();
            
            System.exit(0);
        } else {}
        // Add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new FunsoftInstallerDialog(new javax.swing.JFrame(), true).show();
        
    }
    
    public void run() {
        while (postgresThread) {
            
            System.out.println("O.K. see how we execute target program");
            java.lang.Runtime runTimeSystem = java.lang.Runtime.getRuntime();
            
            try {
                postgresInstallProcess = runTimeSystem.exec(postgresInstallerPath);
                
            } catch(java.io.IOException ioexec){
                javax.swing.JOptionPane.showMessageDialog(this, ioexec.getMessage());
            }
            
            
            
            try {
                
                System.out.println("Right, let's wait for task to complete of fail");
                
                java.lang.Thread.currentThread().sleep(100);
                
                System.out.println("It's time for us threads to get back to work after the nap");
                
            } catch(java.lang.InterruptedException IntExec) {
                
                System.out.println(IntExec.getMessage());
                
            }
            
            postgresThread = false;
            
            
            System.out.println("We shall be lucky to get back to start in one piece");
            
        }
        
        if (!postgresThread) {
            
            
            
            Thread.currentThread().stop();
            
        }
        
        if(postgresInstallProcess.exitValue() == 0){
            
            javax.swing.JOptionPane.showMessageDialog(this, "PostgreSQL RDBMS installation completed successfully!");
            
        } else {
            
            javax.swing.JOptionPane.showMessageDialog(this, "PostgreSQL RDBMS installation not successful. \n Please consult System Partners Ltd. - Funsoft support team.");
            
        }
         
         
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextArea licenceTextArea;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel processListPanel;
    private javax.swing.JButton backButton;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel dbRestoreLabel;
    private javax.swing.JTextArea welcomeTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel installLicensePanel;
    private javax.swing.JPanel spacerPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel installIntroPanel;
    private javax.swing.JRadioButton disagreejRadioButton;
    private javax.swing.ButtonGroup eulaButtonGroup;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel taskPanel;
    private javax.swing.JLabel dbInstallLabel;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel labelPanel;
    private javax.swing.JRadioButton agreejRadioButton;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel funsoftLabelPanel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel selectpanel;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel installerLabel;
    // End of variables declaration//GEN-END:variables
    
}
