/*
 * payroll.java
 *
 * Created on October 21, 2002, 11:26 AM
 */

package com.afrisoftech.hospayroll;



import java.beans.PropertyVetoException;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JInternalFrame;
import java.io.IOException;
import javax.help.*;
import javax.help.search.*;
/*
 * @author  root
 */
public class PayrollMain extends javax.swing.JFrame implements java.lang.Runnable{
    
    boolean isRunning = true;
    
    static java.lang.String psWord = null;
    
    boolean domainsReset = false;
    
    javax.swing.ImageIcon imgIcon;
    
    /** Creates new form payroll */
    public static java.sql.Connection connectDB = null;
    
    public java.lang.String dbUserName = null;
    
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    java.lang.String path2Acrobat = null;
    
    javax.help.HelpSet helpHS = null;
    
    javax.help.HelpBroker helpBroker;
    
    javax.help.HelpSet apiHS = null;
    
    javax.help.HelpBroker apiHB = null;
    
    static final java.lang.String helpSetName = "EpackSacco";
    
    static final java.lang.String helpSetLable = "E-Pack Sacco System";
    
    int PaySlip = 0;
    int P9 = 1;
    int Deductions = 2;
    int ChqPayments = 3;
    int PayeList = 4;
    int CashPayments = 5;
    int SchemesContr = 6;
    int NetPay = 7;
    int DeptNetPay = 8;
    int PayMaster = 9;
    int Tax = 10;
    int StaffEarning = 11;
    int SaccoList = 12;
    int EmpList = 13;
    int PaySlips = 14;
    int NSSFLIST = 15;
    int NHIFLIST = 16;
    int UNIONLIST = 17;
    int NNAKLIST = 18;
    int SalaryJoun = 19;
    int PostedList = 20;
    int ProssecingPayroll = 21;
    int Summary = 22;
    int ApprovingPayroll = 23;
    int Helb = 24;
    int PayrollDiff = 25;
    int DedEarning = 26;
    int Payslipsumm = 27;
    int IndPayslipsumm = 28;
    int SlipsAnalysis = 29;
    int ApprovalComp = 30;
    int MontlyComparison = 31;
    int P10A = 2222;
    int EarningChanges =2223;
    int GrossEarnings =2224;
    int NssfComb =2225;
    /** Creates new form medic */
    public PayrollMain(java.sql.Connection connDB, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {//, java.lang.String acrobatPath, java.lang.String psword) {
        
        psWord = System.getProperty("password");
        
        connectDB = connDB;
        
        pConnDB = pconnDB;
        
        path2Acrobat = System.getProperty("acrobatpath");;
        
        
        
        
        try {
            
            java.lang.ClassLoader classLoader = PayrollMain.class.getClassLoader();
            
            java.net.URL urlHelpSet = javax.help.HelpSet.findHelpSet(classLoader, helpSetName);
            
            helpHS = new javax.help.HelpSet(classLoader, urlHelpSet);
            
        } catch(java.lang.Exception exec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, exec.getMessage());
            
        }
        
        helpBroker = helpHS.createHelpBroker();
        initComponents();
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        payrollpn = new javax.swing.JDesktopPane();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        fmgrBttn = new javax.swing.JButton();
        calcBttn = new javax.swing.JButton();
        brwsrBttn = new javax.swing.JButton();
        editButtn = new javax.swing.JButton();
        mailBttn = new javax.swing.JButton();
        mtmediaBttn = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jPanel2 = new javax.swing.JPanel();
        helpButton = new javax.swing.JButton();
        helpButton.addActionListener(new javax.help.CSH.DisplayHelpAfterTracking(helpBroker));
        jMenuBar1 = new javax.swing.JMenuBar();
        setupmn = new javax.swing.JMenu();
        banksmnit = new javax.swing.JMenuItem();
        Sectionsmnit = new javax.swing.JMenuItem();
        groupmnit = new javax.swing.JMenuItem();
        gradesmnit = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        payrollclassmnit = new javax.swing.JMenuItem();
        allowancesdeductionsmnit = new javax.swing.JMenuItem();
        taxsetupmnit = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        taxtablemnit = new javax.swing.JMenuItem();
        intratesmnit = new javax.swing.JMenuItem();
        definedcontrmnit = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JSeparator();
        statutorymnit = new javax.swing.JMenuItem();
        payrollcateg = new javax.swing.JMenuItem();
        Coinagemnit = new javax.swing.JMenuItem();
        jSeparator21 = new javax.swing.JSeparator();
        updatedomainsmnit = new javax.swing.JMenuItem();
        usersmnit = new javax.swing.JMenuItem();
        jSeparator12 = new javax.swing.JSeparator();
        exitmnit = new javax.swing.JMenuItem();
        operationsmn = new javax.swing.JMenu();
        masterflmnit = new javax.swing.JMenuItem();
        membershipnomnit = new javax.swing.JMenuItem();
        benefitsallocationmnit = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        salarlyadjustmentsmn = new javax.swing.JMenu();
        bathadjustmnit = new javax.swing.JMenuItem();
        singleadjmnit = new javax.swing.JMenuItem();
        viewadjustmentmnit = new javax.swing.JMenuItem();
        salarydeducmnit = new javax.swing.JMenuItem();
        salarlyadjustmentsmn1 = new javax.swing.JMenu();
        bathdeductionsmnit = new javax.swing.JMenuItem();
        singledeductionmnit = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JSeparator();
        saccomnit = new javax.swing.JMenuItem();
        postingsmn = new javax.swing.JMenu();
        Postingmn = new javax.swing.JMenu();
        postingmnit = new javax.swing.JMenuItem();
        postingperdescmnit = new javax.swing.JMenuItem();
        processparmnit = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JSeparator();
        approvepayrollmnit = new javax.swing.JMenuItem();
        reportmn = new javax.swing.JMenu();
        staffInfomn = new javax.swing.JMenu();
        StaffListmnit = new javax.swing.JMenuItem();
        Postedlistmnit = new javax.swing.JMenuItem();
        emplistmnit = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JSeparator();
        payslipmn = new javax.swing.JMenu();
        payslipmnit = new javax.swing.JMenuItem();
        payslipindvmnit = new javax.swing.JMenuItem();
        Payslipanalymnit = new javax.swing.JMenuItem();
        payslipvmnit = new javax.swing.JMenuItem();
        AnalysisPayslipsmnit = new javax.swing.JMenuItem();
        jSeparator2111 = new javax.swing.JSeparator();
        statementsmn = new javax.swing.JMenu();
        CompHelbmnit = new javax.swing.JMenuItem();
        EarnDedmnit = new javax.swing.JMenuItem();
        Monthpayslipsmnit = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JSeparator();
        Apptaxesmnit = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JSeparator();
        summaymnit = new javax.swing.JMenuItem();
        SalaryJournalmnit = new javax.swing.JMenuItem();
        paymastermnit = new javax.swing.JMenuItem();
        netsalarlymnit = new javax.swing.JMenuItem();
        deptpayrollsummmnit = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JSeparator();
        payrollchangesmnit = new javax.swing.JMenuItem();
        grossearningsmnit = new javax.swing.JMenuItem();
        staffearningmnit = new javax.swing.JMenuItem();
        jSeparator211 = new javax.swing.JSeparator();
        cashpaymentsmnit = new javax.swing.JMenuItem();
        chqpmntmnit = new javax.swing.JMenuItem();
        gratuitmnit = new javax.swing.JMenuItem();
        jSeparator2112 = new javax.swing.JSeparator();
        StatutoryRepmn = new javax.swing.JMenu();
        saccodeductionmnit = new javax.swing.JMenuItem();
        payemnit = new javax.swing.JMenuItem();
        pesiondeductionsmnit = new javax.swing.JMenuItem();
        nssfmnit = new javax.swing.JMenuItem();
        nssfmnit1 = new javax.swing.JMenuItem();
        unionmnit = new javax.swing.JMenuItem();
        taxesmnit = new javax.swing.JMenuItem();
        Helbmnit = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JSeparator();
        TaxReportsmn = new javax.swing.JMenu();
        p9amnit = new javax.swing.JMenuItem();
        p10mnit = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JSeparator();
        coinageanalysismnit = new javax.swing.JMenuItem();
        lnfmn = new javax.swing.JMenu();
        swinglnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        winlnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        motiflnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        macmnit1 = new javax.swing.JCheckBoxMenuItem();
        skinmn = new javax.swing.JMenu();
        xpmnit1 = new javax.swing.JRadioButtonMenuItem();
        macos1mnit1 = new javax.swing.JRadioButtonMenuItem();
        whiltmnit1 = new javax.swing.JRadioButtonMenuItem();
        modernmnit1 = new javax.swing.JRadioButtonMenuItem();
        aquamnit1 = new javax.swing.JRadioButtonMenuItem();
        beosmnit1 = new javax.swing.JRadioButtonMenuItem();
        bbjmnit11 = new javax.swing.JRadioButtonMenuItem();
        helpmn = new javax.swing.JMenu();
        helpmnit1 = new javax.swing.JMenuItem();
        helpmnit1.addActionListener(new CSH.DisplayHelpFromSource(helpBroker));
        aboutmnit1 = new javax.swing.JMenuItem();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle(getCompanyName());
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(payrollpn, gridBagConstraints);

        jToolBar1.addSeparator(new java.awt.Dimension(3,20));
        jToolBar1.setBorder(new javax.swing.border.EtchedBorder());
        jToolBar1.setFloatable(false);
        jToolBar1.setMinimumSize(new java.awt.Dimension(500, 25));
        jToolBar1.setPreferredSize(new java.awt.Dimension(231, 25));
        jToolBar1.setOpaque(false);
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel1.setPreferredSize(new java.awt.Dimension(219, 35));
        fmgrBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder_open.gif")));
        fmgrBttn.setToolTipText("File Manager");
        fmgrBttn.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        fmgrBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        fmgrBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmgrBttnActionPerformed(evt);
            }
        });

        jPanel1.add(fmgrBttn);

        calcBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calbr1.gif")));
        calcBttn.setToolTipText("Calculator");
        calcBttn.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        calcBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        calcBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcBttnActionPerformed(evt);
            }
        });

        jPanel1.add(calcBttn);

        brwsrBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/world1.gif")));
        brwsrBttn.setToolTipText("Internet browser");
        brwsrBttn.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        brwsrBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        brwsrBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brwsrBttnActionPerformed(evt);
            }
        });

        jPanel1.add(brwsrBttn);

        editButtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image1.gif")));
        editButtn.setToolTipText("Word processor");
        editButtn.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        editButtn.setPreferredSize(new java.awt.Dimension(25, 25));
        editButtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtnActionPerformed(evt);
            }
        });

        jPanel1.add(editButtn);

        mailBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mailbr1.gif")));
        mailBttn.setToolTipText("Email utility");
        mailBttn.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        mailBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        mailBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailBttnActionPerformed(evt);
            }
        });

        jPanel1.add(mailBttn);

        mtmediaBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/anthony-sound.gif")));
        mtmediaBttn.setToolTipText("Multimedia player");
        mtmediaBttn.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        mtmediaBttn.setMaximumSize(new java.awt.Dimension(20, 37));
        mtmediaBttn.setMinimumSize(new java.awt.Dimension(30, 37));
        mtmediaBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        mtmediaBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtmediaBttnActionPerformed(evt);
            }
        });

        jPanel1.add(mtmediaBttn);

        jToolBar1.add(jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar1, gridBagConstraints);

        jToolBar2.setBorder(new javax.swing.border.EtchedBorder());
        jToolBar2.setFloatable(false);
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jPanel2.setPreferredSize(new java.awt.Dimension(39, 35));
        helpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/help.gif")));
        helpButton.setToolTipText("Get system help");
        helpButton.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        helpButton.setPreferredSize(new java.awt.Dimension(25, 25));
        jPanel2.add(helpButton);

        jToolBar2.add(jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar2, gridBagConstraints);

        setupmn.setMnemonic('s');
        setupmn.setText("Setup");
        banksmnit.setText("Banks");
        banksmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                banksmnitActionPerformed(evt);
            }
        });

        setupmn.add(banksmnit);
        Sectionsmnit.setText("Sections");
        Sectionsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SectionsmnitActionPerformed(evt);
            }
        });

        setupmn.add(Sectionsmnit);
        groupmnit.setText("Job Group");
        groupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupmnitActionPerformed(evt);
            }
        });

        setupmn.add(groupmnit);
        gradesmnit.setText("Grades");
        gradesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradesmnitActionPerformed(evt);
            }
        });

        setupmn.add(gradesmnit);
        setupmn.add(jSeparator1);
        payrollclassmnit.setText("Payroll Classes");
        payrollclassmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payrollclassmnitActionPerformed(evt);
            }
        });

        setupmn.add(payrollclassmnit);
        allowancesdeductionsmnit.setText("Allowances/Deductions");
        allowancesdeductionsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allowancesdeductionsmnitActionPerformed(evt);
            }
        });

        setupmn.add(allowancesdeductionsmnit);
        taxsetupmnit.setText("Statutory Deductions");
        taxsetupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxsetupmnitActionPerformed(evt);
            }
        });

        setupmn.add(taxsetupmnit);
        setupmn.add(jSeparator2);
        taxtablemnit.setText("Tax Table For Monthly Income");
        taxtablemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxtablemnitActionPerformed(evt);
            }
        });

        setupmn.add(taxtablemnit);
        intratesmnit.setText("Interest Rates");
        intratesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intratesmnitActionPerformed(evt);
            }
        });

        setupmn.add(intratesmnit);
        definedcontrmnit.setText("Defined Contribution");
        definedcontrmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                definedcontrmnitActionPerformed(evt);
            }
        });

        setupmn.add(definedcontrmnit);
        setupmn.add(jSeparator13);
        statutorymnit.setText("Statutory");
        statutorymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statutorymnitActionPerformed(evt);
            }
        });

        setupmn.add(statutorymnit);
        payrollcateg.setText("Payroll Categories");
        payrollcateg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payrollcategActionPerformed(evt);
            }
        });

        setupmn.add(payrollcateg);
        Coinagemnit.setText("Coinage");
        Coinagemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoinagemnitActionPerformed(evt);
            }
        });

        setupmn.add(Coinagemnit);
        setupmn.add(jSeparator21);
        updatedomainsmnit.setText("Update Domains");
        updatedomainsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatedomainsmnitActionPerformed(evt);
            }
        });

        setupmn.add(updatedomainsmnit);
        usersmnit.setText("User Profiles");
        usersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersmnitActionPerformed(evt);
            }
        });

        setupmn.add(usersmnit);
        setupmn.add(jSeparator12);
        exitmnit.setMnemonic('E');
        exitmnit.setText("Exit");
        exitmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitmnitActionPerformed(evt);
            }
        });

        setupmn.add(exitmnit);
        jMenuBar1.add(setupmn);
        operationsmn.setMnemonic('o');
        operationsmn.setText("Operations");
        masterflmnit.setText("Employee Register");
        masterflmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masterflmnitActionPerformed(evt);
            }
        });

        operationsmn.add(masterflmnit);
        membershipnomnit.setText("Other Staff Contributions");
        membershipnomnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membershipnomnitActionPerformed(evt);
            }
        });

        operationsmn.add(membershipnomnit);
        benefitsallocationmnit.setText("Benefits Allocation");
        benefitsallocationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                benefitsallocationmnitActionPerformed(evt);
            }
        });

        operationsmn.add(benefitsallocationmnit);
        operationsmn.add(jSeparator3);
        salarlyadjustmentsmn.setText("Earnings Increment");
        bathadjustmnit.setText("Batch Adjustments");
        bathadjustmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bathadjustmnitActionPerformed(evt);
            }
        });

        salarlyadjustmentsmn.add(bathadjustmnit);
        singleadjmnit.setText("Single Adjustments");
        singleadjmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleadjmnitActionPerformed(evt);
            }
        });

        salarlyadjustmentsmn.add(singleadjmnit);
        viewadjustmentmnit.setText("View Adjustment");
        viewadjustmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewadjustmentmnitActionPerformed(evt);
            }
        });

        salarlyadjustmentsmn.add(viewadjustmentmnit);
        operationsmn.add(salarlyadjustmentsmn);
        salarydeducmnit.setText("Salary Advances");
        salarydeducmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salarydeducmnitActionPerformed(evt);
            }
        });

        operationsmn.add(salarydeducmnit);
        salarlyadjustmentsmn1.setText("Salarly Deductions");
        bathdeductionsmnit.setText("Batch Deductions");
        bathdeductionsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bathdeductionsmnitActionPerformed(evt);
            }
        });

        salarlyadjustmentsmn1.add(bathdeductionsmnit);
        singledeductionmnit.setText("Single Deductions");
        singledeductionmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singledeductionmnitActionPerformed(evt);
            }
        });

        salarlyadjustmentsmn1.add(singledeductionmnit);
        operationsmn.add(salarlyadjustmentsmn1);
        operationsmn.add(jSeparator4);
        saccomnit.setText("Sacco Deductions");
        saccomnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saccomnitActionPerformed(evt);
            }
        });

        operationsmn.add(saccomnit);
        jMenuBar1.add(operationsmn);
        postingsmn.setMnemonic('t');
        postingsmn.setText("Transactions");
        Postingmn.setText("Posting");
        postingmnit.setText("Posting");
        postingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postingmnitActionPerformed(evt);
            }
        });

        Postingmn.add(postingmnit);
        postingperdescmnit.setText("Posting Per Category");
        postingperdescmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postingperdescmnitActionPerformed(evt);
            }
        });

        Postingmn.add(postingperdescmnit);
        postingsmn.add(Postingmn);
        processparmnit.setText("Process Payroll");
        processparmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processparmnitActionPerformed(evt);
            }
        });

        postingsmn.add(processparmnit);
        postingsmn.add(jSeparator5);
        approvepayrollmnit.setText("Approve Payroll");
        approvepayrollmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvepayrollmnitActionPerformed(evt);
            }
        });

        postingsmn.add(approvepayrollmnit);
        jMenuBar1.add(postingsmn);
        reportmn.setMnemonic('r');
        reportmn.setText("Reports");
        staffInfomn.setText("Staff Information");
        StaffListmnit.setText("Staff List");
        StaffListmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffListmnitActionPerformed(evt);
            }
        });

        staffInfomn.add(StaffListmnit);
        Postedlistmnit.setText("Posted List");
        Postedlistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostedlistmnitActionPerformed(evt);
            }
        });

        staffInfomn.add(Postedlistmnit);
        emplistmnit.setText("Employee Details");
        emplistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emplistmnitActionPerformed(evt);
            }
        });

        staffInfomn.add(emplistmnit);
        reportmn.add(staffInfomn);
        reportmn.add(jSeparator11);
        payslipmn.setText("Payslips");
        payslipmnit.setText("Pay Slips");
        payslipmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payslipmnitActionPerformed(evt);
            }
        });

        payslipmn.add(payslipmnit);
        payslipindvmnit.setText("Pay Slip Per Employee");
        payslipindvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payslipindvmnitActionPerformed(evt);
            }
        });

        payslipmn.add(payslipindvmnit);
        Payslipanalymnit.setText("Pay Slip Analysis");
        Payslipanalymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayslipanalymnitActionPerformed(evt);
            }
        });

        payslipmn.add(Payslipanalymnit);
        payslipvmnit.setText("Pay Slip Analysis Per Employee");
        payslipvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payslipvmnitActionPerformed(evt);
            }
        });

        payslipmn.add(payslipvmnit);
        AnalysisPayslipsmnit.setText("Total Payslip Analysis");
        AnalysisPayslipsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalysisPayslipsmnitActionPerformed(evt);
            }
        });

        payslipmn.add(AnalysisPayslipsmnit);
        reportmn.add(payslipmn);
        reportmn.add(jSeparator2111);
        statementsmn.setText("Statements Lists");
        CompHelbmnit.setText("Payroll Comparison");
        CompHelbmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompHelbmnitActionPerformed(evt);
            }
        });

        statementsmn.add(CompHelbmnit);
        EarnDedmnit.setText("Approval Comparison");
        EarnDedmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EarnDedmnitActionPerformed(evt);
            }
        });

        statementsmn.add(EarnDedmnit);
        Monthpayslipsmnit.setText("Two Months Comparison");
        Monthpayslipsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthpayslipsmnitActionPerformed(evt);
            }
        });

        statementsmn.add(Monthpayslipsmnit);
        statementsmn.add(jSeparator8);
        Apptaxesmnit.setText("Approved Deductions & Savings ");
        Apptaxesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApptaxesmnitActionPerformed(evt);
            }
        });

        statementsmn.add(Apptaxesmnit);
        statementsmn.add(jSeparator9);
        summaymnit.setText("Final Earnings");
        summaymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaymnitActionPerformed(evt);
            }
        });

        statementsmn.add(summaymnit);
        SalaryJournalmnit.setText("Salary Journal");
        SalaryJournalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalaryJournalmnitActionPerformed(evt);
            }
        });

        statementsmn.add(SalaryJournalmnit);
        paymastermnit.setText("Pay Master");
        paymastermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymastermnitActionPerformed(evt);
            }
        });

        statementsmn.add(paymastermnit);
        netsalarlymnit.setText("Net Salarly");
        netsalarlymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netsalarlymnitActionPerformed(evt);
            }
        });

        statementsmn.add(netsalarlymnit);
        deptpayrollsummmnit.setText("Departmental Summary");
        deptpayrollsummmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptpayrollsummmnitActionPerformed(evt);
            }
        });

        statementsmn.add(deptpayrollsummmnit);
        statementsmn.add(jSeparator10);
        payrollchangesmnit.setText("Earning Changes");
        payrollchangesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payrollchangesmnitActionPerformed(evt);
            }
        });

        statementsmn.add(payrollchangesmnit);
        grossearningsmnit.setText("Gross Earnings Annual");
        grossearningsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grossearningsmnitActionPerformed(evt);
            }
        });

        statementsmn.add(grossearningsmnit);
        staffearningmnit.setText("Payroll Summary");
        staffearningmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffearningmnitActionPerformed(evt);
            }
        });

        statementsmn.add(staffearningmnit);
        reportmn.add(statementsmn);
        reportmn.add(jSeparator211);
        cashpaymentsmnit.setText("Cash Payments");
        cashpaymentsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashpaymentsmnitActionPerformed(evt);
            }
        });

        reportmn.add(cashpaymentsmnit);
        chqpmntmnit.setText("Bank Transfer");
        chqpmntmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chqpmntmnitActionPerformed(evt);
            }
        });

        reportmn.add(chqpmntmnit);
        gratuitmnit.setText("Contribution Balances");
        reportmn.add(gratuitmnit);
        reportmn.add(jSeparator2112);
        StatutoryRepmn.setText("Statutory Reports");
        saccodeductionmnit.setText("NNAK Report");
        saccodeductionmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saccodeductionmnitActionPerformed(evt);
            }
        });

        StatutoryRepmn.add(saccodeductionmnit);
        payemnit.setText("PAYE Report");
        payemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payemnitActionPerformed(evt);
            }
        });

        StatutoryRepmn.add(payemnit);
        pesiondeductionsmnit.setText("NHIF Deductions");
        pesiondeductionsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesiondeductionsmnitActionPerformed(evt);
            }
        });

        StatutoryRepmn.add(pesiondeductionsmnit);
        nssfmnit.setText("NSSF Deductions");
        nssfmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nssfmnitActionPerformed(evt);
            }
        });

        StatutoryRepmn.add(nssfmnit);
        nssfmnit1.setText("NSSF Deductions Combined");
        nssfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nssfmnit1ActionPerformed(evt);
            }
        });

        StatutoryRepmn.add(nssfmnit1);
        unionmnit.setText("UNION Deductions");
        unionmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unionmnitActionPerformed(evt);
            }
        });

        StatutoryRepmn.add(unionmnit);
        taxesmnit.setText("Statutory Deductions");
        taxesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxesmnitActionPerformed(evt);
            }
        });

        StatutoryRepmn.add(taxesmnit);
        Helbmnit.setText("HELB");
        Helbmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelbmnitActionPerformed(evt);
            }
        });

        StatutoryRepmn.add(Helbmnit);
        reportmn.add(StatutoryRepmn);
        reportmn.add(jSeparator6);
        TaxReportsmn.setText("Tax Reports");
        p9amnit.setText("P9 Summary");
        p9amnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p9amnitActionPerformed(evt);
            }
        });

        TaxReportsmn.add(p9amnit);
        p10mnit.setText("P10A");
        p10mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p10mnitActionPerformed(evt);
            }
        });

        TaxReportsmn.add(p10mnit);
        reportmn.add(TaxReportsmn);
        reportmn.add(jSeparator7);
        coinageanalysismnit.setText("Coinage Analysis");
        coinageanalysismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coinageanalysismnitActionPerformed(evt);
            }
        });

        reportmn.add(coinageanalysismnit);
        jMenuBar1.add(reportmn);
        lnfmn.setMnemonic('F');
        lnfmn.setText("Feel");
        swinglnfmnit1.setText("Metal");
        buttonGroup2.add(swinglnfmnit1);
        swinglnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swinglnfmnit1ActionPerformed(evt);
            }
        });

        lnfmn.add(swinglnfmnit1);
        winlnfmnit1.setText("Windows");
        buttonGroup2.add(winlnfmnit1);
        winlnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winlnfmnit1ActionPerformed(evt);
            }
        });

        lnfmn.add(winlnfmnit1);
        motiflnfmnit1.setText("Motif");
        buttonGroup2.add(motiflnfmnit1);
        motiflnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motiflnfmnit1ActionPerformed(evt);
            }
        });

        lnfmn.add(motiflnfmnit1);
        macmnit1.setText("Mac OS");
        buttonGroup2.add(macmnit1);
        macmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macmnit1ActionPerformed(evt);
            }
        });

        lnfmn.add(macmnit1);
        skinmn.setText("Themes");
        xpmnit1.setText("XP Luna");
        buttonGroup3.add(xpmnit1);
        xpmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xpmnit1ActionPerformed(evt);
            }
        });

        skinmn.add(xpmnit1);
        macos1mnit1.setText("Macintosh");
        buttonGroup3.add(macos1mnit1);
        macos1mnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macos1mnit1ActionPerformed(evt);
            }
        });

        skinmn.add(macos1mnit1);
        whiltmnit1.setText("Whistler");
        buttonGroup3.add(whiltmnit1);
        whiltmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiltmnit1ActionPerformed(evt);
            }
        });

        skinmn.add(whiltmnit1);
        modernmnit1.setText("Modern");
        buttonGroup3.add(modernmnit1);
        modernmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modernmnit1ActionPerformed(evt);
            }
        });

        skinmn.add(modernmnit1);
        aquamnit1.setText("Aqua");
        buttonGroup3.add(aquamnit1);
        aquamnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aquamnit1ActionPerformed(evt);
            }
        });

        skinmn.add(aquamnit1);
        beosmnit1.setText("BEOS");
        buttonGroup3.add(beosmnit1);
        beosmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beosmnit1ActionPerformed(evt);
            }
        });

        skinmn.add(beosmnit1);
        bbjmnit11.setText("BBJ");
        buttonGroup3.add(bbjmnit11);
        bbjmnit11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbjmnit11ActionPerformed(evt);
            }
        });

        skinmn.add(bbjmnit11);
        lnfmn.add(skinmn);
        jMenuBar1.add(lnfmn);
        helpmn.setMnemonic('h');
        helpmn.setText("Help");
        helpmnit1.setText("Help Utility");
        helpmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpmnit1ActionPerformed(evt);
            }
        });

        helpmn.add(helpmnit1);
        aboutmnit1.setText("About Payroll");
        aboutmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutmnit1ActionPerformed(evt);
            }
        });

        helpmn.add(aboutmnit1);
        jMenuBar1.add(helpmn);
        setJMenuBar(jMenuBar1);

        pack();
    }//GEN-END:initComponents

    private void nssfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nssfmnit1ActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.NssfComb, connectDB);
        
        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_nssfmnit1ActionPerformed
    
    private void grossearningsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grossearningsmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.GrossEarnings, connectDB);
//        
//        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_grossearningsmnitActionPerformed
    
    private void payrollchangesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payrollchangesmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.EarningChanges, connectDB);
//        
//        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_payrollchangesmnitActionPerformed
    
    private void payrollcategActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payrollcategActionPerformed
        PayrollCatSetupintfr comp = new PayrollCatSetupintfr(connectDB,pConnDB);
        payrollpn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}     // Add your handling code here:
    }//GEN-LAST:event_payrollcategActionPerformed
    
    private void p10mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p10mnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.P10A, connectDB);
//        
//        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_p10mnitActionPerformed
    
    private void MonthpayslipsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthpayslipsmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.MontlyComparison, connectDB);
//        
//        dates.setVisible(true);      // Add your handling code here:
    }//GEN-LAST:event_MonthpayslipsmnitActionPerformed
    
    private void EarnDedmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EarnDedmnitActionPerformed
        com.afrisoftech.lib.HosTaxDatePanel dates = new com.afrisoftech.lib.HosTaxDatePanel(this, pConnDB, true, this.ApprovalComp, connectDB);
        
        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_EarnDedmnitActionPerformed
    
    private void AnalysisPayslipsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalysisPayslipsmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.SlipsAnalysis, connectDB);
//        
//        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_AnalysisPayslipsmnitActionPerformed
    
    private void payslipvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payslipvmnitActionPerformed
        com.afrisoftech.lib.HosPayrollStaffDatePanel dates = new com.afrisoftech.lib.HosPayrollStaffDatePanel(this, pConnDB, true, this.IndPayslipsumm, connectDB);
        
        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_payslipvmnitActionPerformed
    
    private void PayslipanalymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayslipanalymnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.Payslipsumm, connectDB);
//        
//        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_PayslipanalymnitActionPerformed
    
    private void ApptaxesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApptaxesmnitActionPerformed
        com.afrisoftech.lib.HosTaxDatePanel dates = new com.afrisoftech.lib.HosTaxDatePanel(this, pConnDB, true, this.DedEarning, connectDB);
        
        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_ApptaxesmnitActionPerformed
    
    private void CompHelbmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompHelbmnitActionPerformed
        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this, true, this.PayrollDiff, connectDB);
        
        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_CompHelbmnitActionPerformed
    
    private void HelbmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelbmnitActionPerformed
        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this, true, this.Helb, connectDB);
        
        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_HelbmnitActionPerformed
    
    private void summaymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaymnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.Summary, connectDB);
//        
//        dates.setVisible(true);       // Add your handling code here:
    }//GEN-LAST:event_summaymnitActionPerformed
    
    private void PostedlistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostedlistmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.PostedList, connectDB);
//        
//        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_PostedlistmnitActionPerformed
    
    private void StaffListmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffListmnitActionPerformed
        ListOfStaffPdf policy = new ListOfStaffPdf();
        policy.ListOfStaffPdf(connectDB);         // Add your handling code here:
    }//GEN-LAST:event_StaffListmnitActionPerformed
    
    private void bathdeductionsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bathdeductionsmnitActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_bathdeductionsmnitActionPerformed
    
    private void SalaryJournalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalaryJournalmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.SalaryJoun, connectDB);
//        
//        dates.setVisible(true);          // Add your handling code here:
    }//GEN-LAST:event_SalaryJournalmnitActionPerformed
    
    private void postingperdescmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postingperdescmnitActionPerformed
        DescriptPostingsIntfr comp = new DescriptPostingsIntfr(connectDB,pConnDB);
        payrollpn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}        // Add your handling code here:
    }//GEN-LAST:event_postingperdescmnitActionPerformed
    
    private void nssfmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nssfmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.NSSFLIST, connectDB);
//        
//        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_nssfmnitActionPerformed
    
    private void unionmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unionmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.UNIONLIST, connectDB);
//        
//        dates.setVisible(true);      // Add your handling code here:
    }//GEN-LAST:event_unionmnitActionPerformed
    
    private void payslipindvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payslipindvmnitActionPerformed
        com.afrisoftech.lib.HosPayrollStaffDatePanel dates = new com.afrisoftech.lib.HosPayrollStaffDatePanel(this, pConnDB, true, this.PaySlips, connectDB);
        
        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_payslipindvmnitActionPerformed
    
    private void membershipnomnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membershipnomnitActionPerformed
        StaffsIntfr comp = new StaffsIntfr(connectDB,pConnDB);
        payrollpn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}       // Add your handling code here:
    }//GEN-LAST:event_membershipnomnitActionPerformed
    
    private void emplistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emplistmnitActionPerformed
        com.afrisoftech.lib.PayrollStaffDatePanel dates = new com.afrisoftech.lib.PayrollStaffDatePanel(this, pConnDB, true, this.EmpList, connectDB);
        
        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_emplistmnitActionPerformed
    
    private void saccodeductionmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saccodeductionmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.NNAKLIST, connectDB);
//        
//        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_saccodeductionmnitActionPerformed
    
    private void statutorymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statutorymnitActionPerformed
        StatutoryCompIntfr comp = new StatutoryCompIntfr(connectDB,pConnDB);
        payrollpn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}  // Add your handling code here:
    }//GEN-LAST:event_statutorymnitActionPerformed
    
    private void singledeductionmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singledeductionmnitActionPerformed
        SigleDeductionintfr comp = new SigleDeductionintfr(connectDB,pConnDB);
        payrollpn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}    // Add your handling code here:
    }//GEN-LAST:event_singledeductionmnitActionPerformed
    
    private void singleadjmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleadjmnitActionPerformed
        SigleEarningsintfr comp = new SigleEarningsintfr(connectDB,pConnDB);
        payrollpn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}   // Add your handling code here:
    }//GEN-LAST:event_singleadjmnitActionPerformed
    
    private void saccomnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saccomnitActionPerformed
        SaccoDeductionsintfr comp = new SaccoDeductionsintfr(connectDB,pConnDB);
        payrollpn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}   // Add your handling code here:
    }//GEN-LAST:event_saccomnitActionPerformed
    
    private void usersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersmnitActionPerformed
        UsersetupPayrollIntfr comp = new UsersetupPayrollIntfr(connectDB,pConnDB);
        payrollpn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}         // Add your handling code here:
    }//GEN-LAST:event_usersmnitActionPerformed
    
    private void updatedomainsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatedomainsmnitActionPerformed
        
        this.domainsReset = true;
        
        this.updateActivityDomains();
        
        this.domainsReset = false;
        
        // Add your handling code here:
    }//GEN-LAST:event_updatedomainsmnitActionPerformed
    
    private void processparmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processparmnitActionPerformed
        com.afrisoftech.lib.HosPayrolCategDatePanel dates = new com.afrisoftech.lib.HosPayrolCategDatePanel(this,pConnDB, true, this.ProssecingPayroll, connectDB);
        
        dates.setVisible(true);
        //    com.afrisoftech.hospayroll.ProcessingPayroll processingPayroll = new com.afrisoftech.hospayroll.ProcessingPayroll(connectDB, pConnDB);
        
        //    processingPayroll.processPayroll();
        
        /*        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you posted everything & you want to Process the payroll?", "Caution before Processing Payroll!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
         
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            java.lang.Object listofStaffNos[] = this.getListofStaffNos();
            java.lang.Object[] listofAct = this.getListofActivities();
            int confOption = javax.swing.JOptionPane.showConfirmDialog(this, "Note that the process is irriversible. So please be sure.", "Caution before Processing Payroll!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
         
            if (confOption == javax.swing.JOptionPane.YES_OPTION) {
         
                String staffNo = null;
                String staffName = null;
                String desc = null;
                // double Amnt = 0.00;
                String type = null;
                String date = null;
                String user = null;
         
                String staffNo1 = null;
                String month = null;
                String cash = null;
                String noncash = null;
                String taxamt = null;
                String rate = null;
                String relief = null;
                String fixed = null;
                String totalref = null;
                double netaxable = 0.00;
                double tax = 0.00;
                String prelief = null;
                double paye = 0.00;
                String user1 = null;
                String date1 = null;
                try {
                    for (int j = 0; j < listofStaffNos.length; j++) {
                        if (listofStaffNos[j] == null) {
                            javax.swing.JOptionPane.showMessageDialog(this, "Please No salaries for processing","Information Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        } else {
         
                            connectDB.setAutoCommit(false);
                            // for (int k = 0; k < listofAct.length; k++) {
         
                            double benefit = 0.00;
                            double lower = 0.00;
                            double upper = 0.00;
                            double rate1 = 0.00;
                            double tax1 = 0.00;
                            double charge = 0.00;
                            double paye1 = 0.00;
                            double basic = 0.00;
                            double benefit1 = 0.00;
                            double lower1 = 0.00;
                            double upper1 = 0.00;
                            double rate11 = 0.00;
                            double tax11 = 0.00;
                            double charge1 = 0.00;
                            double paye11 = 0.00;
                            double basic1 = 0.00;
                            double benefit11 = 0.00;
                            double lower11 = 0.00;
                            double upper11 = 0.00;
                            double rate111 = 0.00;
                            double tax111 = 0.00;
                            double charge11 = 0.00;
                            double paye111 = 0.00;
                            double basic11 = 0.00;
                            double Amnt = 0.00;
                            double Amnt1 = 0.00;
                            double Amnt11 = 0.00;
                            double Amnt111 = 0.00;
                            double paye1111 = 0.00;
                            double Amnt1111 = 0.00;
                            double benefit1111 = 0.00;
                            double Prelief = 0.00;
         
         
         
                            java.sql.Statement pstmtnh21 = connectDB.createStatement();
                            java.sql.ResultSet rstnh1 = pstmtnh21.executeQuery("SELECT bp.amount from posting bp, master_file WHERE bp.processed = false AND bp.description::text ILIKE 'BASIC PAY%'::text AND master_file.nssfexempt = false AND master_file.employee_no::text = bp.staff_no AND bp.staff_no ='"+listofStaffNos[j]+"' ");
                            while (rstnh1.next()){
                                benefit11 = rstnh1.getDouble(1);
                            }
         
                            java.sql.Statement pstmtnh211 = connectDB.createStatement();
                            java.sql.ResultSet rstnh11 = pstmtnh211.executeQuery("SELECT personal_relief from defined_contribution");
                            while (rstnh11.next()){
                                Prelief = rstnh11.getDouble(1);
                            }
         
                            java.sql.Statement pstmt151 = connectDB.createStatement();
                            java.sql.ResultSet rs121 = pstmt151.executeQuery("select charge from tax_bracket where "+benefit11+" between lower_limit AND upper_limit and tax_type ILIKE 'NSSF%'");
                            while (rs121.next()){
                                charge11 = rs121.getDouble(1);
                            }
                            System.out.println(charge);
                            paye111 = charge11;
         
                            java.sql.Statement pstmt131 = connectDB.createStatement();
                            java.sql.ResultSet rst141 = pstmt131.executeQuery("SELECT st.staff_no,st.staff_name,date('now') AS date,true,user,false from posting st where st.staff_no = '"+listofStaffNos[j]+"'");
                            while (rst141.next()){
                                staffNo = rst141.getObject(1).toString();
                                staffName = rst141.getObject(2).toString();
                                desc = "NSSF";
                                Amnt11 = paye111;
                                type = "Less Relief";
                                date = rst141.getObject(3).toString();
                                user = rst141.getObject(4).toString();
                            }
                            if (Amnt11 > 0){
                                //java.sql.ResultSet rs = pstmt.executeQuery("INSERT INTO posting (staff_no,staff_name,description,amount,allowance_deduction,date,approved,approved_by,processed) SELECT st.staff_no,st.name,st.tax_type,st.amount,CASE WHEN (st.tax_type = da.description) THEN da.allowance_deduction ELSE null END AS description,date('now'),true,user,false from statutory_deductions_view st,deductions_allowances da where st.tax_type = da.description AND st.staff_no = '"+listofStaffNos[j]+"'");
                                java.sql.PreparedStatement pstmt141 = connectDB.prepareStatement("insert into posting values(?,?,?,?,?,?,?,?,?)");
                                pstmt141.setString(1,staffNo);
                                pstmt141.setString(2,staffName);
                                pstmt141.setString(3,desc);
                                pstmt141.setDouble(4,Amnt11);
                                pstmt141.setString(5, type);
                                pstmt141.setString(6,date);
                                pstmt141.setBoolean(7,true);
                                pstmt141.setString(8,user);
                                pstmt141.setBoolean(9,false);
                                pstmt141.executeUpdate();
                                System.out.println("Has inserted succesfully");
                            }
         
                            java.sql.Statement pstmt5 = connectDB.createStatement();
                            java.sql.Statement ps = connectDB.createStatement();
                            java.sql.ResultSet rs = ps.executeQuery("SELECT staff_no,amount from total_net_taxable_amount1 where staff_no = '"+listofStaffNos[j]+"'");
                            while (rs.next()){
                                benefit = rs.getDouble(2);
                            }
                            java.sql.Statement pstmt1 = connectDB.createStatement();
         
                            java.sql.ResultSet rs1 = pstmt1.executeQuery("select lower_limit,upper_limit,rate from tax_bracket where lower_limit < "+benefit+" and upper_limit > "+benefit+" and tax_type ilike 'PAYE%'");
         
         
                            while (rs1.next()){
                                lower = rs1.getDouble(1);
                                upper = rs1.getDouble(2);
                                rate1 = rs1.getDouble(3);
         
                                System.out.println(lower+" ,"+upper+" , "+rate1);
                            }
                            tax1 = (benefit-lower)*rate1/100;
                            System.out.println(tax1);
         
                            java.sql.ResultSet rs2 = pstmt5.executeQuery("select sum(charge) from tax_bracket where upper_limit < "+lower+" and tax_type ilike 'PAYE%'");
                            while (rs2.next()){
                                charge = rs2.getDouble(1);
                            }
                            System.out.println(charge);
                            paye1 = (charge+tax1)-Prelief;
         
                            java.sql.Statement pstmt11 = connectDB.createStatement();
                            java.sql.ResultSet rst1 = pstmt11.executeQuery("SELECT distinct st.staff_no,st.staff_name,date('now') AS date,true,user,false from posting st where st.staff_no = '"+listofStaffNos[j]+"'");
                            while (rst1.next()){
                                staffNo = rst1.getObject(1).toString();
                                staffName = rst1.getObject(2).toString();
                                desc = "PAYE";
                                Amnt = paye1;
                                type = "Deduction";
                                date = rst1.getObject(3).toString();
                                user = rst1.getObject(4).toString();
                            }
                            if (Amnt > 0){
                                //java.sql.ResultSet rs = pstmt.executeQuery("INSERT INTO posting (staff_no,staff_name,description,amount,allowance_deduction,date,approved,approved_by,processed) SELECT st.staff_no,st.name,st.tax_type,st.amount,CASE WHEN (st.tax_type = da.description) THEN da.allowance_deduction ELSE null END AS description,date('now'),true,user,false from statutory_deductions_view st,deductions_allowances da where st.tax_type = da.description AND st.staff_no = '"+listofStaffNos[j]+"'");
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into posting values(?,?,?,?,?,?,?,?,?)");
                                pstmt.setString(1,staffNo);
                                pstmt.setString(2,staffName);
                                pstmt.setString(3,desc);
                                pstmt.setDouble(4,Amnt);
                                pstmt.setString(5, type);
                                pstmt.setString(6,date);
                                pstmt.setBoolean(7,true);
                                pstmt.setString(8,user);
                                pstmt.setBoolean(9,false);
         
                                pstmt.executeUpdate();
         
                                java.sql.PreparedStatement pstmtw = connectDB.prepareStatement("insert into posting values(?,?,?,?,?,?,?,?,?)");
                                pstmtw.setString(1,staffNo);
                                pstmtw.setString(2,staffName);
                                pstmtw.setString(3,"Monthly Personal Relief");
                                pstmtw.setDouble(4,Prelief);
                                pstmtw.setString(5,"Monthly Personal Relief");
                                pstmtw.setString(6,date);
                                pstmtw.setBoolean(7,true);
                                pstmtw.setString(8,user);
                                pstmtw.setBoolean(9,false);
         
                                pstmtw.executeUpdate();
                                System.out.println("Has inserted succesfully");
                            }
         
                            java.sql.Statement pstmtnh = connectDB.createStatement();
                            java.sql.ResultSet rstnh = pstmtnh.executeQuery("SELECT bp.amount from posting bp, master_file WHERE bp.processed = false AND bp.description::text ILIKE 'BASIC PAY%'::text AND master_file.nhifexempt = false AND master_file.employee_no::text = bp.staff_no AND bp.staff_no ='"+listofStaffNos[j]+"' ");
                            while (rstnh.next()){
                                benefit1 = rstnh.getDouble(1);
                            }
         
                            java.sql.Statement pstmt15 = connectDB.createStatement();
                            java.sql.ResultSet rs12 = pstmt15.executeQuery("select charge from tax_bracket where "+benefit1+" between lower_limit AND upper_limit and tax_type ilike 'NHIF%'");
                            while (rs12.next()){
                                charge1 = rs12.getDouble(1);
                            }
                            System.out.println(charge);
                            paye11 = charge1;
         
                            java.sql.Statement pstmt13 = connectDB.createStatement();
                            java.sql.ResultSet rst14 = pstmt13.executeQuery("SELECT distinct st.staff_no,st.staff_name,date('now') AS date,true,user,false from posting st where st.staff_no = '"+listofStaffNos[j]+"'");
                            while (rst14.next()){
                                staffNo = rst14.getObject(1).toString();
                                staffName = rst14.getObject(2).toString();
                                desc = "NHIF";
                                Amnt1 = paye11;
                                type = "Deduction";
                                date = rst14.getObject(3).toString();
                                user = rst14.getObject(4).toString();
                            }
                            if (Amnt1 > 0){
                                //java.sql.ResultSet rs = pstmt.executeQuery("INSERT INTO posting (staff_no,staff_name,description,amount,allowance_deduction,date,approved,approved_by,processed) SELECT st.staff_no,st.name,st.tax_type,st.amount,CASE WHEN (st.tax_type = da.description) THEN da.allowance_deduction ELSE null END AS description,date('now'),true,user,false from statutory_deductions_view st,deductions_allowances da where st.tax_type = da.description AND st.staff_no = '"+listofStaffNos[j]+"'");
                                java.sql.PreparedStatement pstmt14 = connectDB.prepareStatement("insert into posting values(?,?,?,?,?,?,?,?,?)");
                                pstmt14.setString(1,staffNo);
                                pstmt14.setString(2,staffName);
                                pstmt14.setString(3,desc);
                                pstmt14.setDouble(4,Amnt1);
                                pstmt14.setString(5, type);
                                pstmt14.setString(6,date);
                                pstmt14.setBoolean(7,true);
                                pstmt14.setString(8,user);
                                pstmt14.setBoolean(9,false);
         
                                pstmt14.executeUpdate();
                                System.out.println("Has inserted succesfully");
                            }
         
         
         
         
                            java.sql.Statement pstmtnh2 = connectDB.createStatement();
                            java.sql.ResultSet rstnh2 = pstmtnh2.executeQuery("SELECT (bp.amount*0.02)+5 from amount_taxable_view1 bp, master_file mf WHERE master_file.unionexempt = false AND master_file.employee_no::text = bp.staff_no AND bp.staff_no ='"+listofStaffNos[j]+"'");
                            while (rstnh2.next()){
                                benefit1111 = rstnh2.getDouble(1);
                            }
         
                            paye1111 = benefit1111;
         
                            java.sql.Statement pstmt132 = connectDB.createStatement();
                            java.sql.ResultSet rst142 = pstmt132.executeQuery("SELECT st.staff_no,st.staff_name,date('now') AS date,true,user,false from posting st where st.staff_no = '"+listofStaffNos[j]+"'");
                            while (rst142.next()){
                                staffNo = rst142.getObject(1).toString();
                                staffName = rst142.getObject(2).toString();
                                desc = "UNION";
                                Amnt111 = paye111;
                                type = "Deduction";
                                date = rst142.getObject(3).toString();
                                user = rst142.getObject(4).toString();
                            }
                            if (Amnt > 0){
                                //java.sql.ResultSet rs = pstmt.executeQuery("INSERT INTO posting (staff_no,staff_name,description,amount,allowance_deduction,date,approved,approved_by,processed) SELECT st.staff_no,st.name,st.tax_type,st.amount,CASE WHEN (st.tax_type = da.description) THEN da.allowance_deduction ELSE null END AS description,date('now'),true,user,false from statutory_deductions_view st,deductions_allowances da where st.tax_type = da.description AND st.staff_no = '"+listofStaffNos[j]+"'");
                                java.sql.PreparedStatement pstmt142 = connectDB.prepareStatement("insert into posting values(?,?,?,?,?,?,?,?,?)");
                                pstmt142.setString(1,staffNo);
                                pstmt142.setString(2,staffName);
                                pstmt142.setString(3,desc);
                                pstmt142.setDouble(4,Amnt);
                                pstmt142.setString(5, type);
                                pstmt142.setString(6,date);
                                pstmt142.setBoolean(7,true);
                                pstmt142.setString(8,user);
                                pstmt142.setBoolean(9,false);
         
                                pstmt142.executeUpdate();
                                System.out.println("Has inserted succesfully");
                            }
         
         
         
                            java.sql.Statement pstmt = connectDB.createStatement();
                            java.sql.ResultSet rst = pstmt.executeQuery("SELECT st.staff_no,EXTRACT (month from date('now')) as month,st.cash_earning,st.non_cash,0.00,st.taxable_amount,st.cash_earning*dc.rate/100,st.total_relief,dc.fixed_amount,0.00,st.total_relief,st.net_taxable_amount,CASE WHEN (st.paye > 0) THEN st.tax ELSE st.personal_relief END AS tax,st.personal_relief,0.00,CASE WHEN (st.paye > 0) THEN st.paye ELSE 0.00 END AS paye,date('now') AS date,user from p9_view st, defined_contribution dc where st.staff_no = '"+listofStaffNos[j]+"'");
                            while (rst.next()){
                                staffNo1 = rst.getObject(1).toString();
                                month = rst.getObject(2).toString();
                                cash = rst.getObject(3).toString();
                                noncash = rst.getObject(4).toString();
                                taxamt = rst.getObject(6).toString();
                                rate = rst.getObject(7).toString();
                                relief = rst.getObject(8).toString();
                                fixed = rst.getObject(9).toString();
                                totalref = rst.getObject(11).toString();
                                // netaxable = rst.getObject(12).toString();
                                netaxable = benefit;
                                //  tax = rst.getObject(13).toString();
                                tax = tax1+charge;
                               // prelief = rst.getObject(14).toString();
                                //   paye = rst.getObject(16).toString();
                                paye = paye1;
                                user1 = rst.getObject(18).toString();
                                date1 = rst.getObject(17).toString();
         
                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into tax_card values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?)");
                                pstmt2.setString(1,staffNo1);
                                pstmt2.setString(2,month);
                                pstmt2.setString(3,cash);
                                pstmt2.setString(4,noncash);
                                pstmt2.setString(5, "00");
                                pstmt2.setString(6,taxamt);
                                pstmt2.setString(7,rate);
                                pstmt2.setString(8,relief);
                                pstmt2.setString(9,fixed);
                                pstmt2.setString(10,"00");
                                pstmt2.setString(11,totalref);
                                pstmt2.setDouble(12, netaxable);
                                pstmt2.setDouble(13,tax);
                                pstmt2.setDouble(14,Prelief);
                                pstmt2.setObject(15,"0");
                                pstmt2.setDouble(16,paye);
                                pstmt2.setString(17,date1);
                                pstmt2.setString(18,user1);
         
                                pstmt2.executeUpdate();
                            }
                            //   java.sql.Statement pstmt = connectDB.createStatement();
                            //   java.sql.ResultSet rs = pstmt.executeQuery("INSERT INTO tax_card (staff_no,month,basic_salary,benefits_non_cash,value_of_quarters,total_gross_pay,scheme_basic,actual_contribution,fixed_contribution,owner_occupied_interest,retirement_contribution,chargeable_pay,tax_charged,personal_relief,insurance_relief,paye_tax,date,approved_by) SELECT st.staff_no,'August',st.cash_earning,st.non_cash,0.00,st.taxable_amount,st.cash_earning*dc.rate/100,st.total_relief,dc.fixed_amount,0.00,st.total_relief,st.net_taxable_amount,st.tax,st.personal_relief,0.00,st.paye,date('now'),user from p9_view st, defined_contribution dc where st.staff_no = '"+listofStaffNos[j]+"'");
                            System.out.println("Has inserted succesfully");
                            java.sql.PreparedStatement pstmt3 = connectDB.prepareStatement("UPDATE posting SET processed ='true' WHERE staff_no = '"+listofStaffNos[j]+"'");
                            pstmt3.executeUpdate();
                            connectDB.commit();
                            connectDB.setAutoCommit(true);
                        }
                    }
                    javax.swing.JOptionPane.showMessageDialog(this, "Proccess Complete","Information Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
         
                } catch(java.sql.SQLException sqlex){
                    System.out.println(sqlex.getMessage());
                    try {
                        connectDB.rollback();
                    }catch (java.sql.SQLException sql){
                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            else
                if (confOption == javax.swing.JOptionPane.NO_OPTION) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Thank you for taking caution...","Information Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
        }
        else
            if (exitOption == javax.swing.JOptionPane.NO_OPTION) {
                javax.swing.JOptionPane.showMessageDialog(this, "Make sure you have posted every thing correctly.","Information Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
         */ // Add your handling code here:
    }//GEN-LAST:event_processparmnitActionPerformed
/*    public java.lang.Object[] getListofStaffNos() {
 
        java.lang.Object[] listofStaffNos = null;
 
        java.util.Vector listStaffNoVector = new java.util.Vector(1,1);
 
 
        try {
 
            //    java.sql.Connection connDB = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/sako","postgres","pilsiner");
 
            java.sql.Statement stmt1 = connectDB.createStatement();
 
            java.sql.ResultSet rSet1 = stmt1.executeQuery("SELECT DISTINCT staff_no FROM total_net_taxable_amount1 ORDER BY staff_no");
            // java.sql.ResultSet rSet1 = stmt1.executeQuery("SELECT DISTINCT staff_no FROM posting where approved ORDER BY staff_no");
 
            while (rSet1.next()) {
 
                listStaffNoVector.addElement(rSet1.getObject(1).toString());
 
            }
 
        }catch (java.sql.SQLException sqlExec) {
 
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
 
        }
 
        listofStaffNos = listStaffNoVector.toArray();
        System.out.println("Done list of Staff Nos ...");
        return listofStaffNos;
    }*/
    private void helpmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpmnit1ActionPerformed
        
        
        // Add your handling code here:
    }//GEN-LAST:event_helpmnit1ActionPerformed
    
    private void aboutmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutmnit1ActionPerformed
        
        com.afrisoftech.hospayroll.AboutBoxintfr aboutBox = new   com.afrisoftech.hospayroll.AboutBoxintfr(connectDB,pConnDB);
        payrollpn.add(aboutBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            aboutBox.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        
        // Add your handling code here:
    }//GEN-LAST:event_aboutmnit1ActionPerformed
    
    private void bbjmnit11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbjmnit11ActionPerformed
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/bbjthemepack.zip"));
        // Add your handling code here:
    }//GEN-LAST:event_bbjmnit11ActionPerformed
    
    private void beosmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beosmnit1ActionPerformed
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/beosthemepack.zip"));
        // Add your handling code here:
    }//GEN-LAST:event_beosmnit1ActionPerformed
    
    private void aquamnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aquamnit1ActionPerformed
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/aquathemepack.zip"));
        // Add your handling code here:
    }//GEN-LAST:event_aquamnit1ActionPerformed
    
    private void modernmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modernmnit1ActionPerformed
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/modernthemepack.zip"));
        // Add your handling code here:
    }//GEN-LAST:event_modernmnit1ActionPerformed
    
    private void whiltmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiltmnit1ActionPerformed
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/whistlerthemepack.zip"));
        // Add your handling code here:
    }//GEN-LAST:event_whiltmnit1ActionPerformed
    
    private void macos1mnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macos1mnit1ActionPerformed
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/macosthemepack.zip"));
        // Add your handling code here:
    }//GEN-LAST:event_macos1mnit1ActionPerformed
    
    private void xpmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xpmnit1ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_xpmnit1ActionPerformed
    
    private void macmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macmnit1ActionPerformed
        this.changeTheme("it.unitn.ing.swing.plaf.macos.MacOSLookAndFeel", null);
        // Add your handling code here:
    }//GEN-LAST:event_macmnit1ActionPerformed
    
    private void motiflnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motiflnfmnit1ActionPerformed
        this.changeTheme("com.sun.java.swing.plaf.motif.MotifLookAndFeel", null);
        // Add your handling code here:
    }//GEN-LAST:event_motiflnfmnit1ActionPerformed
    
    private void winlnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winlnfmnit1ActionPerformed
        this.changeTheme("com.sun.java.swing.plaf.windows.WindowsLookAndFeel", null);
        // Add your handling code here:
    }//GEN-LAST:event_winlnfmnit1ActionPerformed
    
    private void swinglnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swinglnfmnit1ActionPerformed
        this.changeTheme("javax.swing.plaf.metal.MetalLookAndFeel", null);
        // Add your handling code here:
    }//GEN-LAST:event_swinglnfmnit1ActionPerformed
    
    private void fmgrBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmgrBttnActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("konqueror");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else if (System.getProperty("os.name").equalsIgnoreCase("Windows 2000")) {
                
                rt.exec("explorer");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
        }         // Add your handling code here:
    }//GEN-LAST:event_fmgrBttnActionPerformed
    
    private void calcBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcBttnActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("kcalc");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else if (System.getProperty("os.name").equalsIgnoreCase("Windows 2000")) {
                
                rt.exec("calc");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
        }         // Add your handling code here:
    }//GEN-LAST:event_calcBttnActionPerformed
    
    private void brwsrBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brwsrBttnActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("netscape");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else if (System.getProperty("os.name").equalsIgnoreCase("Windows 2000")) {
                
                rt.exec("d:/Program Files/Internet Explorer/iexplore.exe");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
        }         // Add your handling code here:
    }//GEN-LAST:event_brwsrBttnActionPerformed
    
    private void editButtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtnActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("kedit");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else if (System.getProperty("os.name").equalsIgnoreCase("Windows 2000")) {
                
                rt.exec("C:/Program Files/Microsoft Office/Office/winword.exe");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
        }         // Add your handling code here:
    }//GEN-LAST:event_editButtnActionPerformed
    
    private void mailBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailBttnActionPerformed
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("kmail");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else if (System.getProperty("os.name").equalsIgnoreCase("Windows 2000")) {
                
                rt.exec("C:/Program Files/Microsoft Office/Office/outlook");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
        }          // Add your handling code here:
    }//GEN-LAST:event_mailBttnActionPerformed
    
    private void mtmediaBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtmediaBttnActionPerformed
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("kscd");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else if (System.getProperty("os.name").equalsIgnoreCase("Windows 2000")) {
                
                rt.exec("D:/Program Files/Windows Media Player/mplayer2.exe");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
        }           // Add your handling code here:
    }//GEN-LAST:event_mtmediaBttnActionPerformed
    
    private void staffearningmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffearningmnitActionPerformed
        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this, true, this.StaffEarning, connectDB);
        
        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_staffearningmnitActionPerformed
    
    private void viewadjustmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewadjustmentmnitActionPerformed
        AllowanceAdjustintfr currint = new   AllowanceAdjustintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}    // Add your handling code here:
    }//GEN-LAST:event_viewadjustmentmnitActionPerformed
    
    private void taxesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxesmnitActionPerformed
        com.afrisoftech.lib.HosTaxDatePanel dates = new com.afrisoftech.lib.HosTaxDatePanel(this, pConnDB, true, this.Tax, connectDB);
        
        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_taxesmnitActionPerformed
    
    private void paymastermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymastermnitActionPerformed
        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this, true, this.PayMaster, connectDB);
        
        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_paymastermnitActionPerformed
    
    private void exitmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitmnitActionPerformed
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            System.exit(0);
            
        }        // Add your handling code here:
    }//GEN-LAST:event_exitmnitActionPerformed
    
    private void deptpayrollsummmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptpayrollsummmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDepDatePanel dates = new com.afrisoftech.lib.HosPayrollDepDatePanel(this, true, this.DeptNetPay, connectDB);
//        
//        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_deptpayrollsummmnitActionPerformed
    
    private void netsalarlymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netsalarlymnitActionPerformed
        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this, true, this.NetPay, connectDB);
        
        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_netsalarlymnitActionPerformed
    
    private void pesiondeductionsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesiondeductionsmnitActionPerformed
        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this, true, this.NHIFLIST, connectDB);
        
        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_pesiondeductionsmnitActionPerformed
    
    private void cashpaymentsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashpaymentsmnitActionPerformed
        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this, true, this.CashPayments, connectDB);
        
        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_cashpaymentsmnitActionPerformed
    
    private void payemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payemnitActionPerformed
        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this, true, this.PayeList, connectDB);
        
        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_payemnitActionPerformed
    
    private void chqpmntmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chqpmntmnitActionPerformed
        com.afrisoftech.lib.PayrollBanksDatePanel dates = new com.afrisoftech.lib.PayrollBanksDatePanel(this, pConnDB, true, this.ChqPayments, connectDB);
        
        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_chqpmntmnitActionPerformed
    
    private void coinageanalysismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coinageanalysismnitActionPerformed
        CoinagePdf policy = new CoinagePdf();
        policy.CoinagePdf(connectDB);        // Add your handling code here:
    }//GEN-LAST:event_coinageanalysismnitActionPerformed
    
    private void CoinagemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoinagemnitActionPerformed
        javax.swing.JInternalFrame currint = new CoinageIntfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_CoinagemnitActionPerformed
    
    private void definedcontrmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_definedcontrmnitActionPerformed
        javax.swing.JInternalFrame currint = new DefinedContrIntfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}    // Add your handling code here:
    }//GEN-LAST:event_definedcontrmnitActionPerformed
    
    private void p9amnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p9amnitActionPerformed
        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this, true, this.P9, connectDB);
        
        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_p9amnitActionPerformed
    
    private void approvepayrollmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvepayrollmnitActionPerformed
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(new java.awt.Frame(), "Are you sure you want to APPROVE the Payroll?", "Caution before Approving Payroll!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
//            com.afrisoftech.lib.HosApprPayrollDatePanel dates = new com.afrisoftech.lib.HosApprPayrollDatePanel(this,pConnDB, true, this.ApprovingPayroll, connectDB);
//            
//            dates.setVisible(true);
        }else{
            if (exitOption == javax.swing.JOptionPane.NO_OPTION) {
                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Thanks for taking caution.","Information Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
        /*        javax.swing.JInternalFrame currint = new ApprovePayrollIntfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
         */// Add your handling code here:
    }//GEN-LAST:event_approvepayrollmnitActionPerformed
    
    private void payrollclassmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payrollclassmnitActionPerformed
        javax.swing.JInternalFrame currint = new PayrollClassesIntfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}   // Add your handling code here:
    }//GEN-LAST:event_payrollclassmnitActionPerformed
    
    private void payslipmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payslipmnitActionPerformed
//        com.afrisoftech.lib.HosPayrollDatePanel dates = new com.afrisoftech.lib.HosPayrollDatePanel(this,pConnDB, true, this.PaySlip, connectDB);
//        
//        dates.setVisible(true);          // Add your handling code here:
    }//GEN-LAST:event_payslipmnitActionPerformed
    
    private void postingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postingmnitActionPerformed
        javax.swing.JInternalFrame currint = new Postingsintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}// Add your handling code here:
    }//GEN-LAST:event_postingmnitActionPerformed
    
    private void benefitsallocationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_benefitsallocationmnitActionPerformed
        javax.swing.JInternalFrame currint = new AllocateAllowanceintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}    // Add your handling code here:
    }//GEN-LAST:event_benefitsallocationmnitActionPerformed
    
    private void masterflmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masterflmnitActionPerformed
        javax.swing.JInternalFrame currint = new MasterFileintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}        // Add your handling code here:
    }//GEN-LAST:event_masterflmnitActionPerformed
    
    private void allowancesdeductionsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allowancesdeductionsmnitActionPerformed
        javax.swing.JInternalFrame currint = new AllowancesDeductionsintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}   // Add your handling code here:
    }//GEN-LAST:event_allowancesdeductionsmnitActionPerformed
    
    private void taxsetupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxsetupmnitActionPerformed
        javax.swing.JInternalFrame currint = new NssfPayeeSetupintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}      // Add your handling code here:
    }//GEN-LAST:event_taxsetupmnitActionPerformed
    
    private void salarydeducmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salarydeducmnitActionPerformed
        javax.swing.JInternalFrame currint = new Deductionsintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}         // Add your handling code here:
    }//GEN-LAST:event_salarydeducmnitActionPerformed
    
    private void intratesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intratesmnitActionPerformed
        javax.swing.JInternalFrame currint = new MarketIntrRatesintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}        // Add your handling code here:
    }//GEN-LAST:event_intratesmnitActionPerformed
    
    private void gradesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradesmnitActionPerformed
        javax.swing.JInternalFrame currint = new GradesPositionintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}         // Add your handling code here:
    }//GEN-LAST:event_gradesmnitActionPerformed
    
    private void taxtablemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxtablemnitActionPerformed
        javax.swing.JInternalFrame currint = new TaxableIncomeintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}         // Add your handling code here:
    }//GEN-LAST:event_taxtablemnitActionPerformed
    
    private void groupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupmnitActionPerformed
        javax.swing.JInternalFrame currint = new EmpGroupintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_groupmnitActionPerformed
    
    private void SectionsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SectionsmnitActionPerformed
        javax.swing.JInternalFrame currint = new Sectionsintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_SectionsmnitActionPerformed
    
    private void banksmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_banksmnitActionPerformed
        javax.swing.JInternalFrame currint = new BanksIntfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_banksmnitActionPerformed
    
    private void bathadjustmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bathadjustmnitActionPerformed
        javax.swing.JInternalFrame currint = new BatcheEarningintfr(connectDB,pConnDB);
        payrollpn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currint.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}  // Add your handling code here:
    }//GEN-LAST:event_bathadjustmnitActionPerformed
    
    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        //this.PayrollMain.setSize(this.getContentPane().getSize());   // Add your handling code here:
    }//GEN-LAST:event_formComponentResized
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            System.exit(0);
            
        }
        
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    //  public static void main(String args[]) {
    //      new PayrollMain().show();
    // }
    
    
    
    public void changeThemeByUrl(java.lang.String lnf, java.net.URL themepack) {
        
        java.lang.String themepackPath = null;
        
        
        com.l2fprod.gui.plaf.skin.Skin skin = null;
        
        try {
            
            skin = com.l2fprod.gui.plaf.skin.SkinLookAndFeel.loadThemePack(themepack);
            
        } catch(java.lang.Exception exec) {
            
            
        }
        
        com.l2fprod.gui.plaf.skin.SkinLookAndFeel.setSkin(skin);
        
        java.awt.Component[] component_array = null;
        
        
        component_array = this.getComponents();
        
        try {
            
            try {
                
                try {
                    
                    try {
                        
                        
                        javax.swing.UIManager.setLookAndFeel(lnf);
                        
                        jToolBar1.updateUI();
                        
                        //   this.jPopupMenu1.updateUI();
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this);
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this.getRootPane());
                        
                        //    javax.swing.SwingUtilities.updateComponentTreeUI(this.jPopupMenu1);
                        
                        this.jMenuBar1.setBorder(new javax.swing.border.TitledBorder(null, "Sacco System Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 8), new java.awt.Color(0, 0, 153)));
                        
                        
                    } catch(java.lang.ClassNotFoundException cnfExec) {
                        
                        javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());
                        
                    }
                    
                    
                } catch(java.lang.InstantiationException instExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, instExec.getMessage());
                    
                }
                
            } catch(java.lang.IllegalAccessException illegExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, illegExec.getMessage());
                
            }
            
        } catch(javax.swing.UnsupportedLookAndFeelException unsuppExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, unsuppExec.getMessage());
            
        }
        
    }
    
    
    public java.lang.String getCompanyName() {
        
        java.lang.String title = null;
        
        
        
        try {
            
            
            java.sql.Statement stmt1 = this.connectDB.createStatement();
            
            java.sql.ResultSet rs1 = stmt1.executeQuery("select hospital_name from pb_hospitalprofile");
            
            while (rs1.next()) {
                
                title = (rs1.getString(1));
            }
            
        }catch (java.sql.SQLException sqlEx){
            
            
        }
        return title;
    }
    private void changeTheme(java.lang.String lnf, java.lang.String themepack) {
        
        java.lang.String themepackPath = null;
        
        
        com.l2fprod.gui.plaf.skin.Skin skin = null;
        
        
        try {
            
            skin = com.l2fprod.gui.plaf.skin.SkinLookAndFeel.loadThemePack(themepack);
            
        } catch(java.lang.Exception exec) {
            
            
        }
        
        com.l2fprod.gui.plaf.skin.SkinLookAndFeel.setSkin(skin);
        
        java.awt.Component[] component_array = null;
        
        
        component_array = this.getComponents();
        
        try {
            
            try {
                
                try {
                    
                    try {
                        
                        
                        javax.swing.UIManager.setLookAndFeel(lnf);
                        
                        jToolBar1.updateUI();
                        
                        //   this.jPopupMenu1.updateUI();
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this);
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this.getRootPane());
                        
                        //    javax.swing.SwingUtilities.updateComponentTreeUI(this.jPopupMenu1);
                        
                        this.jMenuBar1.setBorder(new javax.swing.border.TitledBorder(null, "Sacco System Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 8), new java.awt.Color(0, 0, 153)));
                        
                        
                    } catch(java.lang.ClassNotFoundException cnfExec) {
                        
                        javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());
                        
                    }
                    
                    
                } catch(java.lang.InstantiationException instExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, instExec.getMessage());
                    
                }
                
            } catch(java.lang.IllegalAccessException illegExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, illegExec.getMessage());
                
            }
            
        } catch(javax.swing.UnsupportedLookAndFeelException unsuppExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, unsuppExec.getMessage());
            
        }
        
    }
    
    public static void main(String args[]) {
        
        PayrollMain stockInstance = new PayrollMain(connect2DB(), getPooledConnectionSource());//, getPath2Acrobat(), psWord);
        
        stockInstance.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        
        stockInstance.setVisible(true);
        
    }
    
    public static java.sql.Connection connect2DB() {
        
        java.sql.Connection connDBStock = null;
        
        try {
            
            java.lang.Class.forName("org.postgresql.Driver");
            
        } catch(java.lang.ClassNotFoundException cnf) {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), cnf.getMessage());
            
        }
        
        try {
            
            connDBStock = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/medic","postgres","pilsiner");
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
            
        }
        
        return connDBStock;
        
    }
    
    public static org.netbeans.lib.sql.pool.PooledConnectionSource getPooledConnectionSource() {
        
        org.netbeans.lib.sql.pool.PooledConnectionSource pooledConnectionSource1 = new org.netbeans.lib.sql.pool.PooledConnectionSource();
        
        pooledConnectionSource1.setDatabase("jdbc:postgresql://localhost:5432/medic");
        
        pooledConnectionSource1.setDriver("org.postgresql.Driver");
        
        pooledConnectionSource1.setPassword("02ac219a6b011019ea966757de3451d2399ce04dd82596d3ba4266a8845ab7f80861", true);
        
        pooledConnectionSource1.setUsername("postgres");
        
        return pooledConnectionSource1;
    }
    
    public static java.lang.String getPath2Acrobat() {
        //        java.lang.String dbServerIp = null;
        java.lang.String acroPath = null;
        
        java.lang.String myAppFileUrl = null;
        
        myAppFileUrl =  System.getProperty("user.dir")
        
        + System.getProperty("file.separator")
        
        + "myapp.properties";
        
        try {
            
            java.io.FileInputStream propInFile = new java.io.FileInputStream(myAppFileUrl);
            
            
            
            //       java.io.FileOutputStream propOutFile = new java.io.FileOutputStream("myapp.properties");
            
            java.util.Properties appProp = new java.util.Properties();
            
            try {
                
                appProp.load(propInFile);
                
                //            dbServerIp = appProp.getProperty("dbServerIpAdd", "127.0.0.1");
                
                acroPath = appProp.getProperty("acrobatPath","c:/Program Files/Adobe/Acrobat 5.0/Reader/AcroRd32.exe ");
                
                //            System.out.println(dbServerIp);
                System.out.println(acroPath);
                
                //  return dbServerIp;
                
                
            } catch (java.io.IOException ioExec){
                
                System.out.println(ioExec.getMessage());
                
            }
            
            // return dbServerIp;
            
        } catch (java.lang.Exception exc){
            
            System.out.println(exc.getMessage());
            
            //    javax.swing.JOptionPane.showMessageDialog(this, "Properties file not found!");
            
        }
        
        return acroPath;
        
    }
    
    public void run() {
    }
    
    
/*
    public java.lang.Object[] getListofActivities() {
 
        java.lang.Object[] listofActivities = null;
 
        java.util.Vector listActVector = new java.util.Vector(1,1);
 
 
        try {
 
            //    java.sql.Connection connDB = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/sako","postgres","pilsiner");
 
            java.sql.Statement stmt1 = connectDB.createStatement();
 
            java.sql.ResultSet rSet1 = stmt1.executeQuery("SELECT DISTINCT tax_type FROM statutory_deductions_view order by tax_type");
 
            while (rSet1.next()) {
 
                listActVector.addElement(rSet1.getObject(1).toString());
 
            }
 
        }catch (java.sql.SQLException sqlExec) {
 
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
 
        }
 
        listofActivities = listActVector.toArray();
        System.out.println("Done list of activities ...");
        return listofActivities;
    }*/
    
    public void updateActivityDomains() {
        
        if (domainsReset) {
            
            try {
                
                java.sql.PreparedStatement pstmt_del = this.connectDB.prepareStatement("DELETE FROM menu_item_list WHERE app_name = 'hospital_payroll'");
                
                pstmt_del.execute();
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
            
            try {
                
                java.lang.Class classMain = java.lang.Class.forName("com.afrisoftech.hospayroll.PayrollMain");
                
                java.lang.reflect.Field[] fieldsArray = classMain.getDeclaredFields();
                
                for (int n = 0; n  < fieldsArray.length; n++) {
                    
                    if (fieldsArray[n].getName().endsWith("mnit")) {
                        
                        
                        try {
                            
                            
                            javax.swing.JMenuItem disMenuItems = (javax.swing.JMenuItem)fieldsArray[n].get(this);
                            
                            
                            try {
                                
                                
                                Class.forName("org.postgresql.Driver");
                                
                                
                            } catch (java.lang.ClassNotFoundException cnfExec) {
                                
                                
                                System.out.println("Can't locate PostgreSQL driver");
                                
                                
                            }
                            
                            try {
                                
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into menu_item_list values(?, ?, ?)");
                                
                                System.out.println("Ready to insert menu items");
                                
                                pstmt.setString(1,fieldsArray[n].getName());
                                
                                pstmt.setString(2,disMenuItems.getText());
                                
                                pstmt.setString(3,"hospital_payroll");
                                
                                pstmt.executeUpdate();
                                
                            } catch(java.sql.SQLException sq){
                                
                                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                
                                System.out.println(sq.getMessage());
                                
                            }
                            
                            
                            
                        } catch(java.lang.IllegalAccessException illAcc){
                            
                            System.out.println(illAcc.getMessage());
                            
                        }
                    }
                    
                }
                
            } catch(java.lang.ClassNotFoundException clsNotFnd){
                
                javax.swing.JOptionPane.showMessageDialog(this, "Class hospital.hospital not found in the classpath");
                
            }
        }
        
    }
    public void menuItemsDisabler(java.lang.Object[] menuList2Disable) {
        
        java.lang.reflect.Field[] fieldsArray = null;
        
        javax.swing.JMenuItem disMenuItems = null;
        
        
        try {
            java.lang.Class classMain = java.lang.Class.forName("com.afrisoftech.hospayroll.PayrollMain");
            
            try {
                
                fieldsArray = classMain.getDeclaredFields();
                
                for (int n = 0; n  < fieldsArray.length; n++) {
                    
                    if (fieldsArray[n].getName().endsWith("mnit")) {
                        
                        disMenuItems = (javax.swing.JMenuItem)fieldsArray[n].get(this);
                        
                        System.out.println(fieldsArray[n].getName()+"\t"+"\t"+"\t"+disMenuItems.getText());
                        
                        
                        disMenuItems.setEnabled(false);
                        // disMenuItems.setVisible(false);
                        
                        for (int m = 0; m < menuList2Disable.length; m++) {
                            
                            if (fieldsArray[n].getName().equals(menuList2Disable[m])) {
                                
                                java.lang.Object obj = (java.lang.Object)fieldsArray[n];
                                
                                try{
                                    
                                    javax.swing.JMenuItem men2dis = (javax.swing.JMenuItem)fieldsArray[n].get(this);
                                    
                                    men2dis.setEnabled(true);
                                    
                                } catch(java.lang.IllegalAccessException illAcc){
                                    
                                    System.out.println(illAcc.getMessage());
                                    
                                }
                                
                            }
                            
                        }
                        
                    }
                    
                }
                
                
            } catch(java.lang.IllegalAccessException illAcc){
                
                System.out.println(illAcc.getMessage());
                
            }
            
        } catch(java.lang.ClassNotFoundException clsNotFnd){
            
            javax.swing.JOptionPane.showMessageDialog(this, "Class hospital.hospital not found in the classpath");
            
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator2111;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuItem gratuitmnit;
    private javax.swing.JMenuItem payrollchangesmnit;
    private javax.swing.JMenuItem chqpmntmnit;
    private javax.swing.JMenuItem Coinagemnit;
    private javax.swing.JMenuItem definedcontrmnit;
    private javax.swing.JMenuItem updatedomainsmnit;
    private javax.swing.JMenuItem postingperdescmnit;
    private javax.swing.JMenu postingsmn;
    private javax.swing.JRadioButtonMenuItem bbjmnit11;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JMenuItem Monthpayslipsmnit;
    private javax.swing.JMenuItem staffearningmnit;
    private javax.swing.JMenuItem AnalysisPayslipsmnit;
    private javax.swing.JMenuItem taxesmnit;
    private javax.swing.JMenuItem StaffListmnit;
    private javax.swing.JMenu statementsmn;
    private javax.swing.JMenuItem nssfmnit1;
    private javax.swing.JMenu reportmn;
    private javax.swing.JCheckBoxMenuItem motiflnfmnit1;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JMenu staffInfomn;
    private javax.swing.JMenuItem statutorymnit;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JMenuItem postingmnit;
    private javax.swing.JMenuItem aboutmnit1;
    private javax.swing.JSeparator jSeparator3;
    public javax.swing.JMenuItem payrollclassmnit;
    private javax.swing.JButton helpButton;
    private javax.swing.JMenu operationsmn;
    private javax.swing.JMenuItem nssfmnit;
    private javax.swing.JMenuItem coinageanalysismnit;
    private javax.swing.JSeparator jSeparator2112;
    private javax.swing.JMenuItem approvepayrollmnit;
    public javax.swing.JMenuItem groupmnit;
    private javax.swing.JRadioButtonMenuItem beosmnit1;
    private javax.swing.JMenuItem payslipmnit;
    private javax.swing.JMenuItem saccodeductionmnit;
    private javax.swing.JMenu Postingmn;
    public javax.swing.JDesktopPane payrollpn;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JRadioButtonMenuItem xpmnit1;
    private javax.swing.JMenuItem CompHelbmnit;
    private javax.swing.JRadioButtonMenuItem modernmnit1;
    private javax.swing.JMenuItem singleadjmnit;
    private javax.swing.JMenuItem Postedlistmnit;
    private javax.swing.JMenuItem processparmnit;
    private javax.swing.JCheckBoxMenuItem macmnit1;
    private javax.swing.JMenuItem saccomnit;
    private javax.swing.JMenu helpmn;
    private javax.swing.JMenuItem p9amnit;
    private javax.swing.JMenuItem Helbmnit;
    public javax.swing.JMenuItem taxtablemnit;
    private javax.swing.JMenuItem cashpaymentsmnit;
    private javax.swing.JMenu lnfmn;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JMenuItem salarydeducmnit;
    private javax.swing.JMenu StatutoryRepmn;
    private javax.swing.JButton brwsrBttn;
    private javax.swing.JCheckBoxMenuItem winlnfmnit1;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JRadioButtonMenuItem whiltmnit1;
    private javax.swing.JMenuItem payrollcateg;
    private javax.swing.JMenu TaxReportsmn;
    private javax.swing.JMenuItem p10mnit;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JButton mtmediaBttn;
    private javax.swing.JRadioButtonMenuItem macos1mnit1;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JMenuItem payemnit;
    private javax.swing.JMenuItem summaymnit;
    private javax.swing.JRadioButtonMenuItem aquamnit1;
    public javax.swing.JMenuItem Sectionsmnit;
    private javax.swing.JMenuItem grossearningsmnit;
    private javax.swing.JButton mailBttn;
    private javax.swing.JButton calcBttn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuItem payslipindvmnit;
    private javax.swing.JMenuItem masterflmnit;
    private javax.swing.JMenuItem netsalarlymnit;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JMenu salarlyadjustmentsmn1;
    private javax.swing.JMenu payslipmn;
    private javax.swing.JMenu salarlyadjustmentsmn;
    private javax.swing.JMenuItem singledeductionmnit;
    private javax.swing.JMenuItem Apptaxesmnit;
    private javax.swing.JSeparator jSeparator211;
    public javax.swing.JMenuItem banksmnit;
    private javax.swing.JMenuItem deptpayrollsummmnit;
    private javax.swing.JMenuItem helpmnit1;
    private javax.swing.JMenuItem bathdeductionsmnit;
    private javax.swing.JMenuItem membershipnomnit;
    public javax.swing.JMenu setupmn;
    public javax.swing.JMenuItem allowancesdeductionsmnit;
    public javax.swing.JMenuItem gradesmnit;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JMenuItem Payslipanalymnit;
    private javax.swing.JMenu skinmn;
    private javax.swing.JMenuItem SalaryJournalmnit;
    private javax.swing.JMenuItem viewadjustmentmnit;
    public javax.swing.JMenuItem taxsetupmnit;
    private javax.swing.JMenuItem unionmnit;
    private javax.swing.JButton fmgrBttn;
    private javax.swing.JMenuItem emplistmnit;
    private javax.swing.JButton editButtn;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JMenuItem bathadjustmnit;
    private javax.swing.JMenuItem payslipvmnit;
    private javax.swing.JMenuItem benefitsallocationmnit;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem intratesmnit;
    private javax.swing.JMenuItem EarnDedmnit;
    private javax.swing.JMenuItem exitmnit;
    private javax.swing.JMenuItem usersmnit;
    private javax.swing.JCheckBoxMenuItem swinglnfmnit1;
    private javax.swing.JMenuItem paymastermnit;
    private javax.swing.JMenuItem pesiondeductionsmnit;
    // End of variables declaration//GEN-END:variables
    
}
