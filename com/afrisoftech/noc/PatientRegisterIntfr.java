/*
 * banksintfr.java
 *
 * Created on August 13, 2002, 3:24 PM
 */

package com.afrisoftech.noc;

/**
 *
 * @author  root
 */
public class PatientRegisterIntfr extends javax.swing.JInternalFrame implements java.lang.Runnable {
    
    /** Creates new form banksintfr */
    javax.swing.table.TableModel tableModel = null;
    java.sql.Connection connectDB = null;
    javax.swing.ComboBoxModel mainComboBoxModel;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private final javax.swing.JTextField comboTextField = new javax.swing.JTextField();
    javax.swing.ComboBoxModel oldComboBox6Model;
    java.lang.Thread biometricsThread;
    
    com.afrisoftech.lib.DBObject dbObject;
    
    public PatientRegisterIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        biometricsThread = new java.lang.Thread(this, "Biometrics_Thread");
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        //   biometricsThread.start();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset11 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset4 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset5 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset6 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset12 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset31 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset8 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset41 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset32 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jDialog3 = new javax.swing.JDialog();
        //jDialog3.setSize(600,400);
        jPanel12 = new javax.swing.JPanel();
        jPanel111 = new javax.swing.JPanel();
        jLabel6611 = new javax.swing.JLabel();
        jTextField1411 = new javax.swing.JTextField();
        jLabel572111 = new javax.swing.JLabel();
        jTextField582111 = new javax.swing.JTextField();
        jLabel311 = new javax.swing.JLabel();
        jTextField411 = new javax.swing.JTextField();
        jLabel511 = new javax.swing.JLabel();
        jTextField511 = new javax.swing.JTextField();
        jPanel411 = new javax.swing.JPanel();
        jCheckBox111 = new javax.swing.JCheckBox();
        jCheckBox211 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel58221 = new javax.swing.JLabel();
        jTextField161 = new javax.swing.JTextField();
        jLabel582111 = new javax.swing.JLabel();
        jTextField311 = new javax.swing.JTextField();
        jTextField611 = new javax.swing.JTextField();
        jLabel411 = new javax.swing.JLabel();
        jTextField151 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        jLabel11 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jButton30111 = new javax.swing.JButton();
        jButton20211 = new javax.swing.JButton();
        jButton25211 = new javax.swing.JButton();
        jButton111 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        try {
            crset51 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        try {
            crset81 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new javax.swing.JTable();
        dispose = new javax.swing.JButton();
        try {
            searchRowSet = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new javax.swing.JTable();
        dispose1 = new javax.swing.JButton();
        try {
            searchRowSet1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new javax.swing.JTable();
        select2 = new javax.swing.JButton();
        dispose2 = new javax.swing.JButton();
        try {
            searchRowSet2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jDialog31 = new javax.swing.JDialog();
        //jDialog3.setSize(600,400);
        jPanel121 = new javax.swing.JPanel();
        jPanel1111 = new javax.swing.JPanel();
        jLabel66111 = new javax.swing.JLabel();
        jTextField14111 = new javax.swing.JTextField();
        jLabel3111 = new javax.swing.JLabel();
        jTextField4111 = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jLabel582211 = new javax.swing.JLabel();
        jLabel5821111 = new javax.swing.JLabel();
        jTextField3111 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextField1611 = new javax.swing.JTextField();
        searchButton13 = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        jSeparator111 = new javax.swing.JSeparator();
        jButton301111 = new javax.swing.JButton();
        jButton252111 = new javax.swing.JButton();
        jButton1111 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new javax.swing.JTable();
        dispose11 = new javax.swing.JButton();
        try {
            searchRowSet11 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset411 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new javax.swing.JTable();
        dispose111 = new javax.swing.JButton();
        try {
            searchRowSet111 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jPanel52 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel572 = new javax.swing.JLabel();
        jLabel582 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel5721 = new javax.swing.JLabel();
        jTextField5821 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jComboBox9 = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton12 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jTextField18 = new javax.swing.JTextField();
        jLabel231 = new javax.swing.JLabel();
        datePicker4 = new com.afrisoftech.lib.DatePicker();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel2.setVisible(false);
        jLabel7 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jTextField7 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel5.setVisible(false);
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel64 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jTextField13 = new javax.swing.JTextField();
        jPanel641 = new javax.swing.JPanel();
        jTextField361 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jTextField181 = new javax.swing.JTextField();
        jLabel121 = new javax.swing.JLabel();
        jTextField131 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel7 = new javax.swing.JPanel();
        jButton301 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton152 = new javax.swing.JButton();
        jButton202 = new javax.swing.JButton();
        jButton252 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        crset1.setConnectionSource(pConnDB);
        crset11.setConnectionSource(pConnDB);
        crset3.setCommand("SELECT patient_type FROM pb_patient_categories ORDER BY patient_type");
        crset3.setConnectionSource(pConnDB);
        crset4.setConnectionSource(pConnDB);
        crset5.setConnectionSource(pConnDB);
        crset6.setConnectionSource(pConnDB);
        crset12.setConnectionSource(pConnDB);
        crset31.setCommand("SELECT scheme_name FROM ac_schemes ORDER BY scheme_name");
        crset31.setConnectionSource(pConnDB);
        crset8.setConnectionSource(pConnDB);
        crset41.setCommand("SELECT card_name FROM pb_creditcard_types ORDER By card_name");
        crset41.setConnectionSource(pConnDB);
        crset32.setConnectionSource(pConnDB);
        jDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jDialog3.setTitle("Register New Patients");
        jDialog3.setSize(800,400);
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jPanel111.setLayout(new java.awt.GridBagLayout());

        jPanel111.setBorder(new javax.swing.border.TitledBorder("Enter patient details here"));
        jLabel6611.setText("Year of Birth");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel111.add(jLabel6611, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel111.add(jTextField1411, gridBagConstraints);

        jLabel572111.setText("Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel111.add(jLabel572111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel111.add(jTextField582111, gridBagConstraints);

        jLabel311.setText("Residence");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel111.add(jLabel311, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel111.add(jTextField411, gridBagConstraints);

        jLabel511.setText("Tel.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel111.add(jLabel511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel111.add(jTextField511, gridBagConstraints);

        jPanel411.setLayout(new java.awt.GridBagLayout());

        jPanel411.setBorder(new javax.swing.border.TitledBorder("Gender"));
        jCheckBox111.setText("Male ");
        buttonGroup1.add(jCheckBox111);
        jCheckBox111.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        jPanel411.add(jCheckBox111, gridBagConstraints);

        jCheckBox211.setText("Female ");
        buttonGroup1.add(jCheckBox211);
        jCheckBox211.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jCheckBox211.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        jPanel411.add(jCheckBox211, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel111.add(jPanel411, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel58221.setText("Surname");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel58221, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField161, gridBagConstraints);

        jLabel582111.setText("Other Names");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel582111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField311, gridBagConstraints);

        jTextField611.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField611.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField611, gridBagConstraints);

        jLabel411.setText("Next of kin");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel411, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField151, gridBagConstraints);

        jLabel6.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 40);
        jPanel3.add(datePicker3, gridBagConstraints);

        jLabel11.setText("Admission No.");
        jPanel3.add(jLabel11, new java.awt.GridBagConstraints());

        jTextField15.setDocument(new org.netbeans.lib.sql.models.TextDocument (crset411, "number"));
        jTextField15.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel12.add(jPanel111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jSeparator11, gridBagConstraints);

        jButton30111.setMnemonic('O');
        jButton30111.setText("Ok");
        jButton30111.setToolTipText("Click here to enter data");
        jButton30111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jButton30111, gridBagConstraints);

        jButton20211.setMnemonic('n');
        jButton20211.setText("Clear");
        jButton20211.setToolTipText("Click here to clear fields");
        jButton20211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20211ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jButton20211, gridBagConstraints);

        jButton25211.setMnemonic('c');
        jButton25211.setText("Close");
        jButton25211.setToolTipText("Click here to close window");
        jButton25211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25211ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jButton25211, gridBagConstraints);

        jButton111.setMnemonic('h');
        jButton111.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jButton111, gridBagConstraints);

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel12.add(jLabel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog3.getContentPane().add(jPanel12, gridBagConstraints);

        crset51.setConnectionSource(pConnDB);
        crset81.setCommand("SELECT department_name AS name FROM pb_departments ORDER BY department_name");
        crset81.setConnectionSource(pConnDB);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSearchDialogFocusLost(evt);
            }
        });

        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(new javax.swing.border.EtchedBorder());
        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTableMouseClicked(evt);
                }
            });

            jSearchScrollPane.setViewportView(jSearchTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

            dispose.setText("Dispose");
            dispose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    disposeActionPerformed(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel.add(dispose, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

            searchRowSet.setConnectionSource(pConnDB);
            jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchDialog1.setModal(true);
            jSearchDialog1.setUndecorated(true);
            jSearchPanel1.setLayout(new java.awt.GridBagLayout());

            jSearchPanel1.setBorder(new javax.swing.border.EtchedBorder());
            jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField111CaretUpdate(evt);
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 300.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jSearchPanel1.add(jTextField111, gridBagConstraints);

            jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
            jSearchTable1.setShowHorizontalLines(false);
            /*int rowsNo = 0;
            //try {

                crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

                crset1.setConnectionSource(pConnDB);

                // try {
                    //crset1.execute();

                    // crset2.setExecuteOnLoad(true);
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                        new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                        new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                    }));

                    tableModel = jSearchTable.getModel();

                    jSearchScrollPane.setViewportView(jSearchTable);

                    /*   }catch(java.sql.SQLException sqlex){
                    javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                    System.out.println(sqlex.getMessage());

                }

                javax.swing.table.TableColumn column = null;

                for (int i = 0; i < 4; i++) {

                    column = jSearchTable.getColumnModel().getColumn(i);

                    if (i == 1) {

                        column.setPreferredWidth(400);
                        //sport column is bigger
                    } else {

                        column.setPreferredWidth(200);

                    }
                }*/
                jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        jSearchTable1MouseClicked(evt);
                    }
                });

                jSearchScrollPane1.setViewportView(jSearchTable1);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.gridwidth = 3;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 20.0;
                jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

                dispose1.setMnemonic('l');
                dispose1.setText("Close");
                dispose1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        dispose1ActionPerformed(evt);
                    }
                });

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jSearchPanel1.add(dispose1, gridBagConstraints);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

                searchRowSet1.setConnectionSource(pConnDB);
                jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

                jSearchDialog2.setModal(true);
                jSearchDialog2.setUndecorated(true);
                jSearchPanel2.setLayout(new java.awt.GridBagLayout());

                jSearchPanel2.setBorder(new javax.swing.border.EtchedBorder());
                jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
                    public void caretUpdate(javax.swing.event.CaretEvent evt) {
                        jTextField112CaretUpdate(evt);
                    }
                });

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 300.0;
                gridBagConstraints.weighty = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
                jSearchPanel2.add(jTextField112, gridBagConstraints);

                jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
                jSearchTable2.setShowHorizontalLines(false);
                /*int rowsNo = 0;
                //try {

                    crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

                    crset1.setConnectionSource(pConnDB);

                    // try {
                        //crset1.execute();

                        // crset2.setExecuteOnLoad(true);
                        jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                            new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                            new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                        }));

                        tableModel = jSearchTable.getModel();

                        jSearchScrollPane.setViewportView(jSearchTable);

                        /*   }catch(java.sql.SQLException sqlex){
                        javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                        System.out.println(sqlex.getMessage());

                    }

                    javax.swing.table.TableColumn column = null;

                    for (int i = 0; i < 4; i++) {

                        column = jSearchTable.getColumnModel().getColumn(i);

                        if (i == 1) {

                            column.setPreferredWidth(400);
                            //sport column is bigger
                        } else {

                            column.setPreferredWidth(200);

                        }
                    }*/
                    jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            jSearchTable2MouseClicked(evt);
                        }
                    });

                    jSearchScrollPane2.setViewportView(jSearchTable2);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.gridwidth = 3;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 20.0;
                    jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

                    select2.setText("Select");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 1;
                    gridBagConstraints.gridy = 0;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jSearchPanel2.add(select2, gridBagConstraints);

                    dispose2.setText("Close");
                    dispose2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            dispose2ActionPerformed(evt);
                        }
                    });

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 2;
                    gridBagConstraints.gridy = 0;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jSearchPanel2.add(dispose2, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

                    searchRowSet2.setConnectionSource(pConnDB);
                    jDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

                    jDialog31.setTitle("Enter Doctors Fee");
                    jDialog31.setSize(400,200);
                    jPanel121.setLayout(new java.awt.GridBagLayout());

                    jPanel1111.setLayout(new java.awt.GridBagLayout());

                    jPanel1111.setBackground(new java.awt.Color(130, 232, 255));
                    jPanel1111.setBorder(new javax.swing.border.TitledBorder("Enter Doctor's details here"));
                    jLabel66111.setText("Amount");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 2;
                    gridBagConstraints.gridy = 2;
                    jPanel1111.add(jLabel66111, gridBagConstraints);

                    jTextField14111.setEditable(false);
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 3;
                    gridBagConstraints.gridy = 2;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                    jPanel1111.add(jTextField14111, gridBagConstraints);

                    jLabel3111.setText("Category");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 2;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.weightx = 1.0;
                    jPanel1111.add(jLabel3111, gridBagConstraints);

                    jTextField4111.setEditable(false);
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 3;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                    jPanel1111.add(jTextField4111, gridBagConstraints);

                    jPanel31.setLayout(new java.awt.GridBagLayout());

                    jPanel31.setBackground(new java.awt.Color(204, 204, 255));
                    jLabel582211.setText("Doctor's No.");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel31.add(jLabel582211, gridBagConstraints);

                    jLabel5821111.setText("Doc. Name");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 2;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel31.add(jLabel5821111, gridBagConstraints);

                    jTextField3111.setEditable(false);
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 1;
                    gridBagConstraints.gridy = 2;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 4.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel31.add(jTextField3111, gridBagConstraints);

                    jPanel4.setLayout(new java.awt.GridBagLayout());

                    jTextField1611.setEditable(false);
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 1;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel4.add(jTextField1611, gridBagConstraints);

                    searchButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
                    searchButton13.setToolTipText("Search");
                    searchButton13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                    searchButton13.setMaximumSize(new java.awt.Dimension(74, 53));
                    searchButton13.setMinimumSize(new java.awt.Dimension(74, 53));
                    searchButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                    searchButton13.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            searchButton13ActionPerformed(evt);
                        }
                    });

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 2;
                    gridBagConstraints.gridy = 1;
                    jPanel4.add(searchButton13, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 1;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel31.add(jPanel4, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.gridwidth = 2;
                    gridBagConstraints.gridheight = 5;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                    gridBagConstraints.weightx = 2.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel1111.add(jPanel31, gridBagConstraints);

                    jTextField10.setPreferredSize(new java.awt.Dimension(0, 0));
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    jPanel1111.add(jTextField10, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 1;
                    gridBagConstraints.gridwidth = 5;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
                    gridBagConstraints.weightx = 5.0;
                    gridBagConstraints.weighty = 10.0;
                    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
                    jPanel121.add(jPanel1111, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 4;
                    gridBagConstraints.gridwidth = 6;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel121.add(jSeparator111, gridBagConstraints);

                    jButton301111.setMnemonic('O');
                    jButton301111.setText("Ok");
                    jButton301111.setToolTipText("Click here to enter data");
                    jButton301111.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            jButton301111ActionPerformed(evt);
                        }
                    });

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 10;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel121.add(jButton301111, gridBagConstraints);

                    jButton252111.setMnemonic('c');
                    jButton252111.setText("Close");
                    jButton252111.setToolTipText("Click here to close window");
                    jButton252111.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            jButton252111ActionPerformed(evt);
                        }
                    });

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 3;
                    gridBagConstraints.gridy = 10;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel121.add(jButton252111, gridBagConstraints);

                    jButton1111.setMnemonic('h');
                    jButton1111.setText("Help");
                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 4;
                    gridBagConstraints.gridy = 10;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jPanel121.add(jButton1111, gridBagConstraints);

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    jDialog31.getContentPane().add(jPanel121, gridBagConstraints);

                    jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

                    jSearchDialog11.setModal(true);
                    jSearchDialog11.setUndecorated(true);
                    jSearchPanel11.setLayout(new java.awt.GridBagLayout());

                    jSearchPanel11.setBorder(new javax.swing.border.EtchedBorder());
                    jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
                        public void caretUpdate(javax.swing.event.CaretEvent evt) {
                            jTextField1111CaretUpdate(evt);
                        }
                    });

                    gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = 0;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.weightx = 300.0;
                    gridBagConstraints.weighty = 1.0;
                    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
                    jSearchPanel11.add(jTextField1111, gridBagConstraints);

                    jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
                    jSearchTable11.setShowHorizontalLines(false);
                    /*int rowsNo = 0;
                    //try {

                        crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

                        crset1.setConnectionSource(pConnDB);

                        // try {
                            //crset1.execute();

                            // crset2.setExecuteOnLoad(true);
                            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                                new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                                new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                                new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                                new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                            }));

                            tableModel = jSearchTable.getModel();

                            jSearchScrollPane.setViewportView(jSearchTable);

                            /*   }catch(java.sql.SQLException sqlex){
                            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                            System.out.println(sqlex.getMessage());

                        }

                        javax.swing.table.TableColumn column = null;

                        for (int i = 0; i < 4; i++) {

                            column = jSearchTable.getColumnModel().getColumn(i);

                            if (i == 1) {

                                column.setPreferredWidth(400);
                                //sport column is bigger
                            } else {

                                column.setPreferredWidth(200);

                            }
                        }*/
                        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                            public void mouseClicked(java.awt.event.MouseEvent evt) {
                                jSearchTable11MouseClicked(evt);
                            }
                        });

                        jSearchScrollPane11.setViewportView(jSearchTable11);

                        gridBagConstraints = new java.awt.GridBagConstraints();
                        gridBagConstraints.gridx = 0;
                        gridBagConstraints.gridy = 1;
                        gridBagConstraints.gridwidth = 3;
                        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                        gridBagConstraints.weightx = 1.0;
                        gridBagConstraints.weighty = 20.0;
                        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

                        dispose11.setMnemonic('l');
                        dispose11.setText("Close");
                        dispose11.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                dispose11ActionPerformed(evt);
                            }
                        });

                        gridBagConstraints = new java.awt.GridBagConstraints();
                        gridBagConstraints.gridx = 2;
                        gridBagConstraints.gridy = 0;
                        gridBagConstraints.weightx = 1.0;
                        gridBagConstraints.weighty = 1.0;
                        jSearchPanel11.add(dispose11, gridBagConstraints);

                        gridBagConstraints = new java.awt.GridBagConstraints();
                        gridBagConstraints.gridx = 0;
                        gridBagConstraints.gridy = 1;
                        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                        gridBagConstraints.weightx = 1.0;
                        gridBagConstraints.weighty = 1.0;
                        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

                        searchRowSet11.setConnectionSource(pConnDB);
                        crset411.setCommand("select currval('outpatient_no_seq')||'/'||EXTRACT (year from date('now')) as number");
                        crset411.setConnectionSource(pConnDB);
                        jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

                        jSearchDialog111.setModal(true);
                        jSearchDialog111.setUndecorated(true);
                        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

                        jSearchPanel111.setBorder(new javax.swing.border.EtchedBorder());
                        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
                            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                                jTextField11111CaretUpdate(evt);
                            }
                        });

                        gridBagConstraints = new java.awt.GridBagConstraints();
                        gridBagConstraints.gridx = 1;
                        gridBagConstraints.gridy = 0;
                        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                        gridBagConstraints.weightx = 300.0;
                        gridBagConstraints.weighty = 1.0;
                        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
                        jSearchPanel111.add(jTextField11111, gridBagConstraints);

                        jSearchTable111.setToolTipText("Click on the target row to select the patient from the search.");
                        jSearchTable111.setShowHorizontalLines(false);
                        /*int rowsNo = 0;
                        //try {

                            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

                            crset1.setConnectionSource(pConnDB);

                            // try {
                                //crset1.execute();

                                // crset2.setExecuteOnLoad(true);
                                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                                }));

                                tableModel = jSearchTable.getModel();

                                jSearchScrollPane.setViewportView(jSearchTable);

                                /*   }catch(java.sql.SQLException sqlex){
                                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                                System.out.println(sqlex.getMessage());

                            }

                            javax.swing.table.TableColumn column = null;

                            for (int i = 0; i < 4; i++) {

                                column = jSearchTable.getColumnModel().getColumn(i);

                                if (i == 1) {

                                    column.setPreferredWidth(400);
                                    //sport column is bigger
                                } else {

                                    column.setPreferredWidth(200);

                                }
                            }*/
                            jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
                                public void mouseClicked(java.awt.event.MouseEvent evt) {
                                    jSearchTable111MouseClicked(evt);
                                }
                            });

                            jSearchScrollPane111.setViewportView(jSearchTable111);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.gridwidth = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 20.0;
                            jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

                            dispose111.setMnemonic('l');
                            dispose111.setText("Close");
                            dispose111.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    dispose111ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jSearchPanel111.add(dispose111, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

                            searchRowSet111.setConnectionSource(pConnDB);

                            getContentPane().setLayout(new java.awt.GridBagLayout());

                            setClosable(true);
                            setIconifiable(true);
                            setMaximizable(true);
                            setResizable(true);
                            setTitle("Patient Registration");
                            setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
                            try {
                                setSelected(true);
                            } catch (java.beans.PropertyVetoException e1) {
                                e1.printStackTrace();
                            }
                            setVisible(true);
                            addComponentListener(new java.awt.event.ComponentAdapter() {
                                public void componentShown(java.awt.event.ComponentEvent evt) {
                                    formComponentShown(evt);
                                }
                            });

                            addFocusListener(new java.awt.event.FocusAdapter() {
                                public void focusGained(java.awt.event.FocusEvent evt) {
                                    formFocusGained(evt);
                                }
                            });

                            jPanel52.setLayout(new java.awt.GridBagLayout());

                            jPanel52.addComponentListener(new java.awt.event.ComponentAdapter() {
                                public void componentShown(java.awt.event.ComponentEvent evt) {
                                    jPanel52ComponentShown(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            getContentPane().add(jPanel52, gridBagConstraints);

                            jPanel1.setLayout(new java.awt.GridBagLayout());

                            jPanel1.setBorder(new javax.swing.border.TitledBorder(""));
                            jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
                                public void componentShown(java.awt.event.ComponentEvent evt) {
                                    jPanel1ComponentShown(evt);
                                }
                            });

                            jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
                                public void mouseClicked(java.awt.event.MouseEvent evt) {
                                    jPanel1MouseClicked(evt);
                                }
                                public void mouseEntered(java.awt.event.MouseEvent evt) {
                                    jPanel1MouseEntered(evt);
                                }
                            });

                            jLabel572.setText("Patient No");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel572, gridBagConstraints);

                            jLabel582.setText("Patient Name");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel582, gridBagConstraints);

                            jLabel66.setText("Year of Birth");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel66, gridBagConstraints);

                            jTextField14.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jTextField14, gridBagConstraints);

                            jLabel5721.setText("Address");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel5721, gridBagConstraints);

                            jTextField5821.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel1.add(jTextField5821, gridBagConstraints);

                            jLabel1.setText("Payment Mode");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 6;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel1, gridBagConstraints);

                            jComboBox1.setSelectedItem(null);
                            // javax.swing.JComboBox strCmb;
                            java.lang.Object[] strCmb = {"Cash","Credit Card","Scheme","Cheque"};

                            javax.swing.DefaultComboBoxModel comboModel = new javax.swing.DefaultComboBoxModel(strCmb);

                            jComboBox1.setModel(comboModel);

                            jComboBox1.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jComboBox1ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 6;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jComboBox1, gridBagConstraints);

                            jLabel3.setText("Residence");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel3, gridBagConstraints);

                            jTextField1.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.ipadx = 90;
                            gridBagConstraints.weightx = 2.5;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel1.add(jTextField1, gridBagConstraints);

                            jLabel4.setText("Next of Kin");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel4, gridBagConstraints);

                            jTextField4.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel1.add(jTextField4, gridBagConstraints);

                            jLabel5.setText("Telephone No.");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel5, gridBagConstraints);

                            jTextField5.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel1.add(jTextField5, gridBagConstraints);

                            jLabel13.setText("Patient Category");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel13, gridBagConstraints);

                            jComboBox4.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "patient_type", null, null, null));
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel1.add(jComboBox4, gridBagConstraints);

                            jCheckBox3.setText("Accident ?");
                            jCheckBox3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
                            jCheckBox3.setMaximumSize(new java.awt.Dimension(0, 0));
                            jCheckBox3.setMinimumSize(new java.awt.Dimension(0, 0));
                            jCheckBox3.setPreferredSize(new java.awt.Dimension(0, 0));
                            jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox3ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 8;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jCheckBox3, gridBagConstraints);

                            jButton2.setText("Click here to create new patient");
                            jButton2.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton2ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.gridwidth = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
                            jPanel1.add(jButton2, gridBagConstraints);

                            jLabel16.setText("Gender");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel16, gridBagConstraints);

                            jTextField12.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jTextField12, gridBagConstraints);

                            jTextField9.setMinimumSize(new java.awt.Dimension(0, 0));
                            jTextField9.setPreferredSize(new java.awt.Dimension(0, 0));
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            jPanel1.add(jTextField9, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel19, gridBagConstraints);

                            jComboBox9.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset81, "name", null, null, null));
                            jComboBox9.setFocusable(false);
                            jComboBox9.setMinimumSize(new java.awt.Dimension(0, 0));
                            jComboBox9.setPreferredSize(new java.awt.Dimension(0, 0));
                            jComboBox9.setEnabled(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 9;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel1.add(jComboBox9, gridBagConstraints);

                            jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.X_AXIS));

                            jPanel6.setBorder(new javax.swing.border.EtchedBorder());
                            jTextField3.setEditable(false);
                            jPanel6.add(jTextField3);

                            searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
                            searchButton1.setToolTipText("Search");
                            searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                            searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
                            searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
                            searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                            searchButton1.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    searchButton1ActionPerformed(evt);
                                }
                            });

                            jPanel6.add(searchButton1);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jPanel6, gridBagConstraints);

                            jTextField6.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 3;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jTextField6, gridBagConstraints);

                            jPanel41.setLayout(new java.awt.GridBagLayout());

                            jPanel41.setBorder(new javax.swing.border.EtchedBorder());
                            jTextField91.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel41.add(jTextField91, gridBagConstraints);

                            searchButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
                            searchButton12.setToolTipText("Search");
                            searchButton12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                            searchButton12.setMaximumSize(new java.awt.Dimension(74, 53));
                            searchButton12.setMinimumSize(new java.awt.Dimension(74, 53));
                            searchButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                            searchButton12.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    searchButton12ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 2;
                            jPanel41.add(searchButton12, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jPanel41, gridBagConstraints);

                            jLabel20.setText("Search By No.");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 0;
                            gridBagConstraints.weightx = 1.0;
                            jPanel1.add(jLabel20, gridBagConstraints);

                            jLabel22.setText("Last Visit");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 6;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel22, gridBagConstraints);

                            jTextField16.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 6;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel1.add(jTextField16, gridBagConstraints);

                            jLabel23.setText("OPD Card No");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel23, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jTextField17, gridBagConstraints);

                            jRadioButton1.setText("Charge Reg. Fee");
                            jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jRadioButton1ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 8;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            jPanel1.add(jRadioButton1, gridBagConstraints);

                            jTextField18.setMinimumSize(new java.awt.Dimension(0, 0));
                            jTextField18.setPreferredSize(new java.awt.Dimension(0, 0));
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(jTextField18, gridBagConstraints);

                            jLabel231.setText("Att. Date");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
                            jPanel1.add(jLabel231, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 7;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel1.add(datePicker4, gridBagConstraints);

                            jCheckBox1.setText("Charge Consultation Fee?");
                            jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox1ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 8;
                            jPanel1.add(jCheckBox1, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.gridwidth = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 10.0;
                            getContentPane().add(jPanel1, gridBagConstraints);

                            jPanel2.setLayout(new java.awt.GridBagLayout());

                            jPanel2.setBackground(new java.awt.Color(219, 243, 255));
                            jPanel2.setBorder(new javax.swing.border.TitledBorder("Select card name then enter card No.and the expiry date "));
                            jPanel2.setEnabled(false);
                            jLabel7.setText("Card Name");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel2.add(jLabel7, gridBagConstraints);

                            jComboBox3.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset41, "card_name", null, null, null));
                            jComboBox3.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jComboBox3ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel2.add(jComboBox3, gridBagConstraints);

                            jTextField7.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel2.add(jTextField7, gridBagConstraints);

                            jLabel8.setText("Issurer");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel2.add(jLabel8, gridBagConstraints);

                            jLabel9.setText("Card No.");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel2.add(jLabel9, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
                            jPanel2.add(jTextField8, gridBagConstraints);

                            jLabel15.setText("Expiry Date");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 2;
                            jPanel2.add(jLabel15, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 40);
                            jPanel2.add(datePicker1, gridBagConstraints);

                            //jCheckBox2.setVisible(false);
                            jCheckBox2.setText("Charge Consultation Fee?");
                            jCheckBox2.setFocusable(false);
                            jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jCheckBox2ActionPerformed(evt);
                                }
                            });

                            jPanel2.add(jCheckBox2, new java.awt.GridBagConstraints());

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.gridwidth = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 5.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
                            getContentPane().add(jPanel2, gridBagConstraints);

                            jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 9;
                            gridBagConstraints.gridwidth = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            getContentPane().add(jLabel2, gridBagConstraints);

                            jPanel5.setLayout(new java.awt.GridBagLayout());

                            jPanel5.setBackground(new java.awt.Color(255, 239, 255));
                            jPanel5.setBorder(new javax.swing.border.TitledBorder(null, "Select type of scheme & then select staff no", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(102, 102, 255)));
                            jPanel5.setMinimumSize(new java.awt.Dimension(100, 143));
                            jPanel5.setPreferredSize(new java.awt.Dimension(100, 129));
                            jLabel10.setText("Member Name");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.weightx = 1.0;
                            jPanel5.add(jLabel10, gridBagConstraints);

                            jLabel12.setText("Member No.");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel5.add(jLabel12, gridBagConstraints);

                            jLabel17.setText("Expiry Date");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel5.add(jLabel17, gridBagConstraints);

                            jLabel14.setText("Scheme Manager");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 2;
                            jPanel5.add(jLabel14, gridBagConstraints);

                            jTextField2.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel5.add(jTextField2, gridBagConstraints);

                            jLabel18.setText("Scheme Name");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 1;
                            jPanel5.add(jLabel18, gridBagConstraints);

                            jPanel64.setLayout(new java.awt.GridBagLayout());

                            jPanel64.setBorder(new javax.swing.border.EtchedBorder());
                            jPanel64.setMinimumSize(new java.awt.Dimension(82, 37));
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel64.add(jTextField36, gridBagConstraints);

                            searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
                            searchButton.setToolTipText("Search");
                            searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                            searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
                            searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
                            searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                            searchButton.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    searchButtonActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 1;
                            jPanel64.add(searchButton, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            jPanel5.add(jPanel64, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 2;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel5.add(jTextField13, gridBagConstraints);

                            jPanel641.setLayout(new java.awt.GridBagLayout());

                            jPanel641.setBorder(new javax.swing.border.EtchedBorder());
                            jPanel641.setMinimumSize(new java.awt.Dimension(82, 37));
                            jTextField361.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel641.add(jTextField361, gridBagConstraints);

                            searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
                            searchButton2.setToolTipText("Search");
                            searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                            searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
                            searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
                            searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                            searchButton2.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    searchButton2ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 1;
                            jPanel641.add(searchButton2, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 1;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            jPanel5.add(jPanel641, gridBagConstraints);

                            jTextField181.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
                            jPanel5.add(jTextField181, gridBagConstraints);

                            jLabel121.setText("A/C No.");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel5.add(jLabel121, gridBagConstraints);

                            jTextField131.setEditable(false);
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 4;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel5.add(jTextField131, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 5;
                            gridBagConstraints.gridwidth = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 5.0;
                            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
                            getContentPane().add(jPanel5, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 6;
                            gridBagConstraints.gridwidth = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            getContentPane().add(jSeparator1, gridBagConstraints);

                            jPanel7.setLayout(new java.awt.GridBagLayout());

                            jPanel7.setBorder(new javax.swing.border.TitledBorder(""));
                            jButton301.setMnemonic('s');
                            jButton301.setText("Save");
                            jButton301.setToolTipText("Click here to enter data");
                            jButton301.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton301ActionPerformed(evt);
                                }
                            });

                            jButton301.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                                public void mouseMoved(java.awt.event.MouseEvent evt) {
                                    jButton301MouseMoved(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel7.add(jButton301, gridBagConstraints);

                            jButton3.setMnemonic('P');
                            jButton3.setText("Save & Print");
                            jButton3.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton3ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 1;
                            gridBagConstraints.gridy = 10;
                            jPanel7.add(jButton3, gridBagConstraints);

                            jButton152.setMnemonic('E');
                            jButton152.setText("Edit");
                            jButton152.setToolTipText("Click here to edit data");
                            jButton152.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton152ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 2;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel7.add(jButton152, gridBagConstraints);

                            jButton202.setMnemonic('l');
                            jButton202.setText("Clear");
                            jButton202.setToolTipText("Click here to clear fields");
                            jButton202.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton202ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 3;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel7.add(jButton202, gridBagConstraints);

                            jButton252.setMnemonic('c');
                            jButton252.setText("Close");
                            jButton252.setToolTipText("Click here to close window");
                            jButton252.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    jButton252ActionPerformed(evt);
                                }
                            });

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 4;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel7.add(jButton252, gridBagConstraints);

                            jButton1.setMnemonic('h');
                            jButton1.setText("Help");
                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 5;
                            gridBagConstraints.gridy = 10;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            jPanel7.add(jButton1, gridBagConstraints);

                            gridBagConstraints = new java.awt.GridBagConstraints();
                            gridBagConstraints.gridx = 0;
                            gridBagConstraints.gridy = 11;
                            gridBagConstraints.gridwidth = 5;
                            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                            gridBagConstraints.weightx = 1.0;
                            gridBagConstraints.weighty = 1.0;
                            getContentPane().add(jPanel7, gridBagConstraints);

                            setBounds(0, 0, 754, 458);
                        }//GEN-END:initComponents

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        java.lang.String visitId = null;
        int CardNo = 0;
        try{
            java.sql.Statement stmtss = connectDB.createStatement();
            java.sql.ResultSet rsetss = stmtss.executeQuery("select count(card_no) from hp_patient_register where card_no ILIKE '"+jTextField17.getText()+"%'");
            while (rsetss.next()){
                CardNo = rsetss.getInt(1);
                
            }
            if(CardNo > 0 && jTextField17.isEditable()) {
                
                javax.swing.JOptionPane.showMessageDialog(this, "The card no has been allocated to another patient", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            }else{
               jButton301ActionPerformed(evt);
                if(jComboBox1.getSelectedItem().equals("Scheme")){
                     
                
                    java.sql.Statement stm = connectDB.createStatement();
                    java.sql.ResultSet rs = stm.executeQuery("select currval('visit_id')");
                    while (rs.next()){
                        visitId = rs.getObject(1).toString();
                        
                    }
                    
                    
                    
                    //  com.afrisoftech.reports.SchemeAccSlipPdf policy = new com.afrisoftech.reports.SchemeAccSlipPdf();
                    //  policy.SchemeAccSlipPdf(connectDB, jTextField3.getText(),jTextField361.getText(),jTextField6.getText(),jTextField2.getText(),jTextField13.getText());
                    com.afrisoftech.reports.SchemeCreditSlipPdf policy = new com.afrisoftech.reports.SchemeCreditSlipPdf();
                    policy.SchemeCreditSlipPdf(connectDB, jTextField3.getText(),jTextField361.getText(),jTextField6.getText(),jTextField2.getText(),jTextField36.getText(),jTextField17.getText(),visitId);
                    
                }else{
                    java.sql.Statement stm = connectDB.createStatement();
                    java.sql.ResultSet rs = stm.executeQuery("select currval('visit_id')");
                    while (rs.next()){
                        visitId = rs.getObject(1).toString();
                        
                    }
                     
                    com.afrisoftech.reports.CashSlipPdf policy = new com.afrisoftech.reports.CashSlipPdf();
                    policy.CashSlipPdf(connectDB, jTextField3.getText(),jTextField6.getText(),jTextField17.getText(),visitId);
                     
                }
            }
            }catch(java.sql.SQLException sq){
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category = 'RF'");
            while (rset.next()){
                jTextField18.setText(rset.getObject(1).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }        // Add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    
    private void searchButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton12ActionPerformed
        searchButton1111Clicked();          // Add your handling code here:
    }//GEN-LAST:event_searchButton12ActionPerformed
    
    private void dispose111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose111ActionPerformed
        jSearchDialog111.dispose();        // Add your handling code here:
    }//GEN-LAST:event_dispose111ActionPerformed
    private void searchButton1111Clicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog111.dispose();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog111.setSize(400,200);
        
        jSearchDialog111.setLocation(point);
        jSearchDialog111.show();
    }
    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
        //  jComboBox2.setSelectedItem(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0));
        jTextField4.setText("");
        jTextField1.setText("");
        jTextField14.setText("");
        jTextField5.setText("");
        jTextField12.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField5821.setText("");
        jTextField2.setText("");
        jTextField18.setText("");
        jPanel2.invalidate();
        jPanel5.invalidate();
        jPanel2.validate();
        jPanel5.validate();
        
        jTextField3.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(), 0).toString());
        jTextField6.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(), 1).toString());
        jTextField17.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(), 4).toString());
        
         if(jTextField17.getText().equalsIgnoreCase("-")){
           jTextField17.setEditable(true);
       }else{
           jTextField17.setEditable(false);
       }
        
        jSearchDialog111.dispose();
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select nok,residence,year_of_birth,tel_no,address,sex,last_visit,pay_mode from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                jComboBox1.setSelectedItem(dbObject.getDBObject(rset.getObject(8), "-"));
                jTextField16.setText(dbObject.getDBObject(rset.getObject(7), "-"));
                jTextField1.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField4.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                jTextField14.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField5821.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField5.setText(dbObject.getDBObject(rset.getObject(5), "-"));
                jTextField12.setText(dbObject.getDBObject(rset.getObject(6), "-"));
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        //    if(jComboBox1.getSelectedItem().equals("Scheme")){
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payer,description,account_no,member_name,expiry_date from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField2.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField361.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                jTextField131.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField36.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField18.setText(dbObject.getDBObject(rset.getObject(5), "-"));
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        // }
        
        /*
         
        try {
         
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select nok,residence,year_of_birth,tel_no,address,sex,last_visit,pay_mode from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                jComboBox1.setSelectedItem(rset.getObject(8).toString());
                jTextField16.setText(rset.getObject(7).toString());
                jTextField1.setText(rset.getObject(1).toString());
                jTextField4.setText(rset.getObject(2).toString());
                jTextField14.setText(rset.getObject(3).toString());
                jTextField5821.setText(rset.getObject(4).toString());
                jTextField5.setText(rset.getObject(5).toString());
                jTextField12.setText(rset.getObject(6).toString());
         
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
         
        if(jComboBox1.getSelectedItem().equals("Scheme")){
            try {
         
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select payer,description,account_no,member_name from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
                while (rset.next()){
                    // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                    jTextField2.setText(rset.getObject(1).toString());
                    jTextField361.setText(rset.getObject(2).toString());
                    jTextField13.setText(rset.getObject(3).toString());
                    jTextField36.setText(rset.getObject(4).toString());
         
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Insert not successful");
            }
        }
         */
        
        jButton301.setEnabled(true);
        
        jSearchDialog111.dispose();
        
        // checkBiometricsID();// Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked
    
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if(jTextField11111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            
            try {
               /*  java.sql.PreparedStatement pset = connectDB.prepareStatement("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name||' '||last_name)) ILIKE '?%' order by first_name");
                                pset.setString(1,"patient_no");
                                 pset.setString(2,"name");
                                pset.setString(3,"year_of_birth");
                                 pset.setString(4,"residence");
                                searchRowSet = pset.getMetaData();
                */
                
                searchRowSet111.execute("SELECT patient_no, (upper(second_name||' '||first_name)) as name, year_of_birth, residence,CASE WHEN (card_no IS NULL) THEN '-' ELSE card_no END AS card_no from hp_patient_register where patient_no ILIKE '"+jTextField11111.getText()+"%' order by patient_no");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
                
                jSearchTable111.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet111, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    
                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("card_no", "Card No", false)
                }));
                jSearchTable111.setShowHorizontalLines(false);
                jSearchScrollPane111.setViewportView(jSearchTable111);
                
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate
    
    private void dispose11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose11ActionPerformed
        jSearchDialog11.dispose();    // Add your handling code here:
    }//GEN-LAST:event_dispose11ActionPerformed
    
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        jTextField361.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 1).toString());
        jTextField181.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 3).toString());
        jTextField2.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 2).toString());
        jTextField131.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
        
        java.util.Date exp = null;
        java.util.Date date = null;
        double limit = 0.00;
        double balance = 0.00;
        String Suspended = null;
        String Closed = null;
        jSearchDialog11.dispose();
        try {
            connectDB.setAutoCommit(false);
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select sum(balance-credit_bal) from ac_debtors where payee = '"+jTextField361.getText()+"' and dealer = '"+jTextField2.getText()+"'");
            while (rset1.next())
                balance = rset1.getDouble(1);
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select suspended, closed,expiry_date,current_date,scheme_limit from ac_schemes where scheme_name = '"+jTextField361.getText()+"' and payer_name = '"+jTextField2.getText()+"'");
            while (rset.next())
                Suspended = rset.getObject(1).toString();
            Closed = rset.getObject(2).toString();
            exp = rset.getDate(3);
            date = rset.getDate(4);
            limit = rset.getDouble(5);
            
            if (Suspended.equals("true")){
                
                javax.swing.JOptionPane.showMessageDialog(this, "SCHEME SUSPENDED !!", "Suspension MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField361.setText("");
                jTextField2.setText("");
            }else{
                if (Closed.equals("true")){
                    
                    javax.swing.JOptionPane.showMessageDialog(this, "SCHEME CLOSED !!", "Viability MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    jTextField361.setText("");
                    jTextField2.setText("");
                }else {
                    
                    if (exp.before(date)){
                        
                        javax.swing.JOptionPane.showMessageDialog(this, "SCHEME EXPIRED !! ON " +date, "Expiry MESSAGE",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        jTextField361.setText("");
                        jTextField2.setText("");
                    }else{
                        if (balance > limit){
                            
                            javax.swing.JOptionPane.showMessageDialog(this, "SCHEME LIMIT IS " + limit + " AND DEBT IS " + balance + "\n Hence Limit exceeded by " +(balance - limit), "Debt Status MESSAGE",javax.swing.JOptionPane.PLAIN_MESSAGE);
                            jTextField361.setText("");
                            jTextField2.setText("");
                        }
                    }
                }
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            
            try {
                
                searchRowSet11.execute("SELECT account_no,scheme_name,payer_name,expiry_date from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%' and (allowed ilike 'Both' or allowed ilike 'OPD%') order by scheme_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
                
                jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Account no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("scheme_name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("expiry_date", "Date", false)
                    
                }));
                jSearchTable11.setShowHorizontalLines(false);
                jSearchScrollPane11.setViewportView(jSearchTable11);
                
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton11aClicked();        // Add your handling code here:
        
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void searchButton11aClicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog11.dispose();
        java.awt.Point point = this.jTextField361.getLocationOnScreen();
        
        jSearchDialog11.setSize(400,200);
        
        jSearchDialog11.setLocation(point);
        jSearchDialog11.show();
        
        
    }
    private void jButton301111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton301111ActionPerformed
        try {
            
            //            java.lang.Object selectedGuaran = jComboBox2.getSelectedItem();
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql1= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql1.toString());
            
            //     java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
            
            //     System.out.println(datenowSql.toString());
            
            
            String activity = null;
            String actNo = null;
            String billNo = null;
            String rate = null;
            String transNo = null;
            String patientAcc = null;
            String insAcc = null;
            String cardAcc = null;
            String AccDesc = null;
            String cardName = null;
            String insName = null;
            String user = null;
            
            try {
                connectDB.setAutoCommit(false);
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select activity,code,current_user from pb_activity where activity_category ='CF'");
                while (rset.next())
                    activity = rset.getObject(1).toString();
                actNo = rset.getObject(2).toString();
                user = rset.getObject(3).toString();
                
                
                java.sql.Statement stm2 = connectDB.createStatement();
                java.sql.ResultSet rse2 = stm2.executeQuery("select code,activity from pb_activity where activity_category ='DA'");
                while (rse2.next())
                    
                    insAcc = rse2.getObject(1).toString();
                insName = rse2.getObject(2).toString();
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select nextval('billing_no_seq')");
                while (rset1.next())
                    billNo = rset1 .getObject(1).toString();
                
                java.sql.Statement stmt3 = connectDB.createStatement();
                java.sql.ResultSet rset3 = stmt3.executeQuery("select nextval('transaction_no_seq')");
                while (rset3.next())
                    transNo = rset3 .getObject(1).toString();
                
                java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                pstmt21.setString(1,jTextField1611.getText());
                pstmt21.setString(2,""+activity+"");
                pstmt21.setString(3,jTextField3111.getText());
                pstmt21.setString(4,transNo);
                pstmt21.setString(5,actNo);
                pstmt21.setString(6,"Doctors Fee");
                pstmt21.setString(7,"00");
                pstmt21.setString(8,jTextField14111.getText());
                pstmt21.setString(9,"");
                pstmt21.setString(10,jTextField3.getText());
                pstmt21.setString(11,activity);
                pstmt21.setString(12,"false");
                pstmt21.setString(14,datePicker4.getDate().toString());
                pstmt21.setString(13,user);
                pstmt21.executeUpdate();
                
                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                pstmt2.setString(1,actNo);
                pstmt2.setString(2,""+activity+"");
                pstmt2.setString(3,jTextField3.getText());
                pstmt2.setString(4,jTextField6.getText());
                pstmt2.setString(5,"");
                pstmt2.setString(6,"");
                pstmt2.setString(7,"");
                pstmt2.setString(8,"");
                pstmt2.setString(9,"");
                pstmt2.setString(10,"");
                pstmt2.setString(11,"");
                pstmt2.setString(12,"");
                pstmt2.setString(13,"");
                pstmt2.setString(14,activity);
                pstmt2.setString(15,"Revenue");
                pstmt2.setString(16,"00");
                pstmt2.setString(17,jTextField10.getText());
                pstmt2.setString(18,datePicker4.getDate().toString());
                pstmt2.setString(19,""+transNo+"");
                pstmt2.setString(20,"false");
                pstmt2.setString(21,"false");
                pstmt2.setString(22,"false");
                pstmt2.setString(23,user);
                pstmt2.executeUpdate();
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                this.jDialog31.dispose();
                
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }     // Add your handling code here:
    }//GEN-LAST:event_jButton301111ActionPerformed
    
    private void jButton252111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton252111ActionPerformed
        this.jDialog31.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton252111ActionPerformed
    
    private void searchButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton13ActionPerformed
        searchButton111Clicked();       // Add your handling code here:
    }//GEN-LAST:event_searchButton13ActionPerformed
    
    private void dispose2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose2ActionPerformed
        jSearchDialog2.dispose(); // Add your handling code here:
    }//GEN-LAST:event_dispose2ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        double rate = 0.00;
        double amt = 0.00;
        double total = 0.00;
        double HosRate = 0.00;
        jTextField3111.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField1611.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField4111.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select doctor/100 from pb_patient_categories where patient_type = '"+this.jComboBox4.getSelectedItem().toString()+"'");
            while (rset.next())
                amt = rset.getDouble(1);
            rate = Double.parseDouble(jTextField9.getText());
            total = (amt * rate);
            HosRate = (rate - total);
            jTextField14111.setText(""+total+"");
            jTextField10.setText(""+HosRate+"");
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        
        
        jSearchDialog2.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    private void searchButton111Clicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog2.dispose();
        java.awt.Point point = this.jTextField3111.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        jSearchDialog2.show();
        
        
    }
    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        if(jTextField112.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            
            try {
                
                searchRowSet2.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField112.getText()+"%' order by first_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
                
                jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
                    
                }));
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jTextField112CaretUpdate
    
    private void dispose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose1ActionPerformed
        jSearchDialog1.dispose();          // Add your handling code here:
    }//GEN-LAST:event_dispose1ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTextField36.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        jTextField13.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        //  jTextField15.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        
       /* try {
        
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payer_name from ac_schemes where scheme_name ='"+jTextField15.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField2.setText(rset.getObject(1).toString());
                //jTextField1.setText(rset.getObject(2).toString());
                //jTextField4.setText(rset.getObject(3).toString());
        
        
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        */
        
        jSearchDialog1.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        // if(jTextField11.getText().charAt(2)){
        if(jTextField111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            try {
                searchRowSet1.execute("select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_name ILIKE '"+jTextField111.getText().toString()+"%' and sheme_name = '"+jTextField361.getText().toString()+"' ORDER BY staff_name");
                
                jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Member Acc.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("sheme_name", "Scheme Name", false)
                    
                }));
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);
                
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }// Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton11Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton11Clicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog1.dispose();
        java.awt.Point point = this.jTextField36.getLocationOnScreen();
        
        jSearchDialog1.setSize(400,200);
        
        jSearchDialog1.setLocation(point);
        jSearchDialog1.show();
        
        
    }
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        this.jSearchDialog.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked
    
    private void jSearchDialogFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSearchDialogFocusLost
        // Add your handling code here:
    }//GEN-LAST:event_jSearchDialogFocusLost
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        
        //  jComboBox2.setSelectedItem(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0));
        jTextField3.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        jTextField6.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        jTextField17.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 4).toString());
      
        if(jTextField17.getText().equalsIgnoreCase("-")){
           jTextField17.setEditable(true);
       }else{
           jTextField17.setEditable(false);
       }
        jSearchDialog.dispose();
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select nok,residence,year_of_birth,tel_no,address,sex,last_visit,pay_mode from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                jComboBox1.setSelectedItem(dbObject.getDBObject(rset.getObject(8), "-"));
                jTextField16.setText(dbObject.getDBObject(rset.getObject(7), "-"));
                jTextField1.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField4.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                jTextField14.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField5821.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField5.setText(dbObject.getDBObject(rset.getObject(5), "-"));
                jTextField12.setText(dbObject.getDBObject(rset.getObject(6), "-"));
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        //    if(jComboBox1.getSelectedItem().equals("Scheme")){
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payer,description,account_no,member_name,expiry_date from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField2.setText(dbObject.getDBObject(rset.getObject(1), "-"));
                jTextField361.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                jTextField131.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                jTextField36.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                jTextField18.setText(dbObject.getDBObject(rset.getObject(5), "-"));
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
          /*  java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select nok,residence,year_of_birth,tel_no,address,sex,pay_mode,last_visit from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
            while (rset.next()){
                jComboBox1.setSelectedItem(rset.getObject(7).toString());
                jTextField16.setText(rset.getObject(8).toString());
                jTextField1.setText(rset.getObject(1).toString());
                jTextField4.setText(rset.getObject(2).toString());
                jTextField14.setText(rset.getObject(3).toString());
                jTextField5821.setText(rset.getObject(4).toString());
                jTextField5.setText(rset.getObject(5).toString());
                jTextField12.setText(rset.getObject(6).toString());
           
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        if(jComboBox1.getSelectedItem().equals("Scheme")){
            try {
           
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select payer,description,account_no,member_name from hp_patient_register where patient_no ='"+jTextField3.getText()+"'");
                while (rset.next()){
                    // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                    jTextField2.setText(rset.getObject(1).toString());
                    jTextField361.setText(rset.getObject(2).toString());
                    jTextField131.setText(rset.getObject(3).toString());
                    jTextField36.setText(rset.getObject(4).toString());
           
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Insert not successful");
            }
  /*           if (jTextField17.getText().toString() == "-"){
            jTextField17.setEditable(true);
        }else{
           
            jTextField17.setEditable(false);
        }
           **/
        
        
        
        jButton301.setEnabled(true);
        
        jSearchDialog.dispose();
        
        //   checkBiometricsID();
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        // if(jTextField11.getText().charAt(2)){
        jTextField4.setText("");
        jTextField1.setText("");
        jTextField14.setText("");
        jTextField5.setText("");
        jTextField12.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField5821.setText("");
        jTextField2.setText("");
        jTextField18.setText("");
        jPanel2.invalidate();
        jPanel5.invalidate();
        jPanel2.validate();
        jPanel5.validate();
        
        if(jTextField11.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            
            try {
               /*  java.sql.PreparedStatement pset = connectDB.prepareStatement("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name||' '||last_name)) ILIKE '?%' order by first_name");
                                pset.setString(1,"patient_no");
                                 pset.setString(2,"name");
                                pset.setString(3,"year_of_birth");
                                 pset.setString(4,"residence");
                                searchRowSet = pset.getMetaData();
                */
                
                searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name)) as name, year_of_birth, residence,CASE WHEN (card_no IS NULL) THEN '-' ELSE card_no END AS card_no from hp_patient_register where second_name||' '||first_name ILIKE '"+jTextField11.getText()+"%' order by second_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
                
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("card_no", "Card No", false)
                }));
                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);
                
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
    
    private void disposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposeActionPerformed
        
        jSearchDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_disposeActionPerformed
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        jButton301.setEnabled(true);
        jButton3.setEnabled(true);
        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    
    private void jButton152ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton152ActionPerformed
        javax.swing.JFrame bank = new NewPatients(connectDB, pConnDB, jTextField3.getText());
        bank.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_jButton152ActionPerformed
    
    private void jButton20211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20211ActionPerformed
        jTextField161.setText("");
        jTextField311.setText("");
        jTextField611.setText("");
        jTextField151.setText("");
        jTextField411.setText("");
        jTextField511.setText("");
        jTextField1411.setText("");
        jTextField582111.setText(""); // Add your handling code here:
    }//GEN-LAST:event_jButton20211ActionPerformed
    
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ='CF' and service_type ilike 'cons%'");
            while (rset.next()){
                
                jTextField9.setText(rset.getObject(1).toString());
                System.out.println(rset.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        //this.jDialog31.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where service_type ILIKE 'CF'");
            while (rset.next()){
                jTextField9.setText(rset.getObject(1).toString());
                System.out.println(rset.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        // this.jDialog31.setVisible(true);
        
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate from pb_operating_parameters where category ='CF' and service_type ilike 'cons%'");
            while (rset.next()){
                jTextField9.setText(rset.getObject(1).toString());
                System.out.println(jTextField9.getText());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        //this.jDialog31.setVisible(true);// Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jButton301MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton301MouseMoved
        jLabel2.setText("");        // Add your handling code here:
    }//GEN-LAST:event_jButton301MouseMoved
    
    private void jButton25211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25211ActionPerformed
        this.jDialog3.setVisible(false);         // Add your handling code here:
    }//GEN-LAST:event_jButton25211ActionPerformed
    
    private void jButton30111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30111ActionPerformed
        //jComboBox5.setSelectedItem(null);
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String selectedchkbx = null;
        
        if (this.jCheckBox211.isSelected()){
            selectedchkbx = jCheckBox211.getText();
        }  else
            
            selectedchkbx = jCheckBox111.getText();
        
        
        String patientNo = null;
        
        try{
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select patient_no from hp_patient_register where patient_no ='"+this.jTextField15.getText()+"'");
            while (rset.next())
                patientNo = rset.getObject(1).toString();
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        if(this.jTextField15.getText().equalsIgnoreCase(patientNo)){
            jLabel21.setForeground(java.awt.Color.red);
            jLabel21.setText("PATIENT No. Already in File");
            
            // javax.swing.JOptionPane.showMessageDialog(this,"PATIENT No. Already Exists", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                connectDB.setAutoCommit(false);
                
                //   connectDB.setAutoCommit(false);
                
                java.sql.Statement stm = connectDB.createStatement();
                java.sql.ResultSet rs = stm.executeQuery("select nextval('outpatient_no_seq')");
                while (rs.next())
                    patientNo = rs.getObject(1).toString();
                
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_register values(upper(?), upper(?), upper(?), upper(?), ?, ?, ?, ?, ?, ?, ?)");
                pstmt.setString(1,""+patientNo+"");
                
                // pstmt.setString(1,jTextField15.getText());
                
                if (jTextField161.getText().equals("")) {
                    javax.swing.JOptionPane.showMessageDialog(this,"You must enter names", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                }else{
                    pstmt.setString(2,jTextField161.getText());
                }
                pstmt.setString(3,jTextField311.getText());
                pstmt.setString(4,jTextField611.getText());
                pstmt.setString(5,jTextField151.getText());
                pstmt.setString(6,jTextField411.getText());
                pstmt.setString(7,jTextField511.getText());
                // if (jTextField1411.getText().equals("")) {
                //    javax.swing.JOptionPane.showMessageDialog(this,"You must enter residence", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                // }else{
                pstmt.setString(8,jTextField1411.getText());
                // }
                
                pstmt.setString(9,jTextField582111.getText());
                if(selectedchkbx == null){
                    javax.swing.JOptionPane.showMessageDialog(this,"You must tick patient Gender", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                }else{
                    pstmt.setObject(10,selectedchkbx);
                }
                
                pstmt.setString(11,datePicker3.getDate().toString());
                pstmt.executeUpdate();
                
                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into inventory.hp_patient_register values(upper(?), upper(?), upper(?), upper(?), ?, ?, ?, ?, ?, ?, ?)");
                pstmt1.setString(1,""+patientNo+"");
                
                // pstmt.setString(1,jTextField15.getText());
                
                if (jTextField161.getText().equals("")) {
                    javax.swing.JOptionPane.showMessageDialog(this,"You must enter names", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                }else{
                    pstmt1.setString(2,jTextField161.getText());
                }
                pstmt1.setString(3,jTextField311.getText());
                pstmt1.setString(4,jTextField611.getText());
                pstmt1.setString(5,jTextField151.getText());
                pstmt1.setString(6,jTextField411.getText());
                pstmt1.setString(7,jTextField511.getText());
                // if (jTextField1411.getText().equals("")) {
                //    javax.swing.JOptionPane.showMessageDialog(this,"You must enter residence", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                // }else{
                pstmt1.setString(8,jTextField1411.getText());
                // }
                
                pstmt1.setString(9,jTextField582111.getText());
                if(selectedchkbx == null){
                    javax.swing.JOptionPane.showMessageDialog(this,"You must tick patient Gender", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                }else{
                    pstmt1.setObject(10,selectedchkbx);
                }
                
                pstmt1.setString(11,datePicker3.getDate().toString());
                pstmt1.executeUpdate();
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                jTextField3.setText(jTextField15.getText());
                
                jTextField3.setText(patientNo);
                jTextField6.setText(jTextField311.getText()+" "+jTextField161.getText()+"");
                jTextField1.setText(jTextField151.getText());
                jTextField4.setText(jTextField411.getText());
                jTextField5.setText(jTextField511.getText());
                jTextField14.setText(jTextField1411.getText());
                jTextField5821.setText(jTextField582111.getText());
                jTextField12.setText(selectedchkbx);
                
                jTextField161.setText("");
                jTextField311.setText("");
                jTextField611.setText("");
                jTextField151.setText("");
                jTextField411.setText("");
                jTextField511.setText("");
                jTextField1411.setText("");
                jTextField582111.setText("");
                //      jLabel4.setForeground(java.awt.Color.blue);
                //       jLabel4.setText("Insert successful");
                
                this.jDialog3.dispose();
                return;
                //            this.setVisible(false);
                //  }
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton30111ActionPerformed
    
    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        
    }//GEN-LAST:event_jPanel1MouseEntered
    
    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        try {
            
            crset5.execute();
            crset11.execute();
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }        // Add your handling code here:
    }//GEN-LAST:event_formFocusGained
    
    private void jButton202ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton202ActionPerformed
        //   jComboBox1.setSelectedItem(null);
        jComboBox4.setSelectedItem(null);
        //   jComboBox1.setSelectedItem(null);
        //        jComboBox9.setSelectedItem(null);
        //        jComboBox6.setSelectedItem(null);
        //        jComboBox2.setSelectedItem(null);
        jTextField4.setText("");
        jTextField1.setText("");
        jTextField14.setText("");
        jTextField5.setText("");
        jTextField12.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField5821.setText("");
        jTextField2.setText("");
        //  jTextField10.setText("");
        //   jComboBox5.setSelectedItem(null);
        //  jComboBox10.setSelectedItem(null);
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton202ActionPerformed
    
    private void jButton252ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton252ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton252ActionPerformed
    
    private void jPanel52ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel52ComponentShown
        //     jPanel2.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jPanel52ComponentShown
    
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select insurer from pb_creditcard_types where card_name ='"+jComboBox3.getSelectedItem()+"'");
            while (rset.next()){
                jTextField7.setText(rset.getObject(1).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }   // Add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if(jComboBox1.getSelectedItem().equals("Credit Card")){
            jPanel5.setVisible(false);
            jPanel2.setVisible(true);
        }else{
            if (jComboBox1.getSelectedItem().equals("Scheme")) {
                jPanel2.setVisible(false);
                jPanel5.setVisible(true);
                
               /* try {
                
                    java.sql.Statement stmt = connectDB.createStatement();
                    java.sql.ResultSet rset = stmt.executeQuery("select payer,description,account_no,member_name from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
                    while (rset.next()){
                        // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                        jTextField2.setText(rset.getObject(1).toString());
                        jTextField361.setText(rset.getObject(2).toString());
                        jTextField13.setText(rset.getObject(3).toString());
                        jTextField36.setText(rset.getObject(4).toString());
                
                    }
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    System.out.println("Insert not successful");
                }*/
            }else{
                jPanel2.setVisible(false);
                jPanel5.setVisible(false);
            }
        }
        
        jButton301.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        jDialog3.setVisible(true);
        /*        javax.swing.JInternalFrame dismth = new NewPatientsIntfr(connectDB,pConnDB);
         
        this.getParent().add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
            try {
         
                crset5.execute();
                crset11.execute();
         
            } catch(java.sql.SQLException sqlExec) {
         
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
         
            }
        } catch(java.beans.PropertyVetoException pvt){}
         
         */
        // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton301ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton301ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        String mainAcc = null;
        String activity = null;
        String actNo = null;
        String billNo = null;
        String transNo = null;
        String patientAcc = null;
        String insAcc = null;
        String cardAcc = null;
        String AccDesc = null;
        String cardName = null;
        String insName = null;
        String user = null;
        String slipNo = null;
        String visitNo = null;
        int CardNo = 0;
        String patientNo = null;
        String Card = null;
        String mainAccs = null;
        String activitys = null;
        String actNos = null;
        int visitId = 0;
        double confee = 0.00;
        double rate = 0.00;
        try {
            connectDB.setAutoCommit(false);
            
            java.sql.Statement stm = connectDB.createStatement();
            java.sql.ResultSet rs = stm.executeQuery("select nextval('visit_id'),current_user");
            while (rs.next()){
                visitNo = rs.getObject(1).toString();
                user = rs.getObject(2).toString();
            }
            
            java.sql.Statement stmtss11 = connectDB.createStatement();
            java.sql.ResultSet rsetss11 = stmtss11.executeQuery("select service_type,gl_account,main_service,rate from pb_operating_parameters where category ILIKE 'RF'");
            while (rsetss11.next()){
                activitys = rsetss11.getObject(1).toString();
                actNos = rsetss11.getObject(2).toString();
                mainAccs = rsetss11.getObject(3).toString();
                rate = rsetss11.getDouble(4);
            }
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select service_type,gl_account,main_service,rate from pb_operating_parameters where service_type ILIKE 'CF%'");
            while (rset.next()){
                activity = rset.getObject(1).toString();
                actNo = rset.getObject(2).toString();
                mainAcc = rset.getObject(3).toString();
                rate = rsetss11.getDouble(4);
            }
            
            
            java.sql.Statement stmtss = connectDB.createStatement();
            java.sql.ResultSet rsetss = stmtss.executeQuery("select count(card_no) from hp_patient_register where card_no ILIKE '"+jTextField17.getText()+"%'");
            while (rsetss.next()){
                CardNo = rsetss.getInt(1);
                
            }
            if(CardNo > 0 && jTextField17.isEditable()) {
                
                javax.swing.JOptionPane.showMessageDialog(this, "The card no has been allocated to another patient", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            }else{
                if (CardNo > 0){
                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE hp_patient_register set pay_mode = '"+jComboBox1.getSelectedItem().toString()+"',category = '"+jComboBox4.getSelectedItem().toString()+"',department ='"+jComboBox9.getSelectedItem().toString()+"',last_visit = current_date,card_no = '"+jTextField17.getText()+"'  WHERE patient_no = '"+jTextField3.getText()+"'");
                    pstmt1.executeUpdate();
                }
                
                if(CardNo <= 0) {
                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE hp_patient_register set pay_mode = '"+jComboBox1.getSelectedItem().toString()+"',category = '"+jComboBox4.getSelectedItem().toString()+"',department ='"+jComboBox9.getSelectedItem().toString()+"',last_visit = current_date,card_no = '"+jTextField17.getText()+"'  WHERE patient_no = '"+jTextField3.getText()+"'");
                    pstmt1.executeUpdate();
                    
                }
            
            
            if (jComboBox1.getSelectedItem().equals("Scheme") && jPanel5.isShowing()){
                
                java.sql.Statement stm1 = connectDB.createStatement();
                java.sql.ResultSet rs2 = stm1.executeQuery("select nextval('creditslip_no_seq')");
                while (rs2.next())
                    slipNo = rs2.getObject(1).toString();
                java.sql.PreparedStatement pstmt11d = connectDB.prepareStatement("UPDATE hp_patient_register set description = '"+jTextField361.getText()+"',payer = '"+jTextField2.getText()+"',account_no ='"+jTextField131.getText()+"',expiry_date = '"+jTextField181.getText()+"',member_name ='"+jTextField36.getText()+"' WHERE patient_no = '"+jTextField3.getText()+"'");
                pstmt11d.executeUpdate();
                
                java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into credit_acc_slip values(?,?,?,?,?,?, ?, ?)");
                
                pstmt2a.setString(1,jTextField3.getText());
                pstmt2a.setString(2,jTextField6.getText());
                pstmt2a.setString(3,jTextField361.getText());
                pstmt2a.setString(4,jTextField2.getText());
                pstmt2a.setString(5,"00");
                pstmt2a.setString(6,slipNo);
                pstmt2a.setString(8,datePicker4.getDate().toString());
                pstmt2a.setString(7,user);
                pstmt2a.executeUpdate();
            }else{
             java.sql.Statement stm1 = connectDB.createStatement();
                java.sql.ResultSet rs2 = stm1.executeQuery("select nextval('service_no')");
                while (rs2.next()){
                    slipNo = rs2.getObject(1).toString();
                }
               
                
             /*   java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into credit_acc_slip values(?,?,?,?,?,?,?,?)");
                
                pstmt2a.setString(1,jTextField3.getText());
                pstmt2a.setString(2,jTextField6.getText());
                pstmt2a.setString(3,jTextField361.getText());
                pstmt2a.setString(4,jTextField2.getText());
                pstmt2a.setString(5,"00");
                pstmt2a.setString(6,slipNo);
                pstmt2a.setString(8,datePicker4.getDate().toString());
                pstmt2a.setString(7,user);
                pstmt2a.executeUpdate();  
              */ 
            }
            
            java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
            
            pstmt2a.setString(1,jTextField3.getText());
            pstmt2a.setString(2,jTextField6.getText());
            pstmt2a.setString(3,"OP");
            pstmt2a.setString(4,jComboBox1.getSelectedItem().toString());
            pstmt2a.setObject(5,visitNo);
            pstmt2a.setString(6,"");
            pstmt2a.setDouble(7,1);
            pstmt2a.setString(8,jComboBox4.getSelectedItem().toString());
            pstmt2a.setString(9,"0");
            pstmt2a.setString(11,datePicker4.getDate().toString());
            pstmt2a.setString(10,"");
            pstmt2a.setString(12,"0");
            pstmt2a.setString(13,"");
            pstmt2a.setString(14,user);
            pstmt2a.setString(15,"'now'");
            pstmt2a.setString(16,"Registration");
            
            pstmt2a.executeUpdate();
            
            if (jRadioButton1.isSelected()){
                java.sql.PreparedStatement pstmt2d = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                
                pstmt2d.setString(1,jTextField3.getText());
                pstmt2d.setString(2,jTextField6.getText());
                pstmt2d.setString(3,jComboBox1.getSelectedItem().toString());
                pstmt2d.setString(4,jComboBox4.getSelectedItem().toString());
                pstmt2d.setString(5,activitys);
                pstmt2d.setDouble(6,1);
                pstmt2d.setDouble(7,rate);
                pstmt2d.setString(8,actNos);
                pstmt2d.setString(9,datePicker4.getDate().toString());
                pstmt2d.setString(10,slipNo);
                pstmt2d.setString(12,"false");
                pstmt2d.setString(11,user);
                pstmt2d.setString(13,mainAccs);
                pstmt2d.setString(14,visitNo);
                pstmt2d.setString(15,"");
               // pstmt2d.setString(16,"false");
                
                pstmt2d.executeUpdate();
                
                
            }
            
             if (jCheckBox1.isSelected()){
                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?)");
                
                pstmt2.setString(1,jTextField3.getText());
                pstmt2.setString(2,jTextField6.getText());
                pstmt2.setString(3,jComboBox1.getSelectedItem().toString());
                pstmt2.setString(4,jComboBox4.getSelectedItem().toString());
                pstmt2.setString(5,activity);
                pstmt2.setDouble(6,1);
                pstmt2.setDouble(7,rate);
                pstmt2.setString(8,actNo);
                pstmt2.setString(9,datePicker4.getDate().toString());
                pstmt2.setString(10,slipNo);
                pstmt2.setString(12,"false");
                pstmt2.setString(11,user);
                pstmt2.setString(13,mainAcc);
                pstmt2.setString(14,visitNo);
                pstmt2.setString(15,"");
              //  pstmt2.setString(16,"false");
                
                pstmt2.executeUpdate();
                
                
            }
            java.sql.PreparedStatement pstmx = connectDB.prepareStatement("insert into hp_visit_id values(?,?,?,?,?,?,?)");
            
            pstmx.setString(1,jTextField3.getText());
            pstmx.setString(2,jTextField6.getText());
            pstmx.setString(3,jComboBox1.getSelectedItem().toString());
            pstmx.setString(4,visitNo);
            pstmx.setString(5,datePicker4.getDate().toString());
            pstmx.setString(6,slipNo);
            pstmx.setString(7,"Active");
            pstmx.executeUpdate();
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            jLabel2.setForeground(java.awt.Color.blue);
            jLabel2.setText("Insert successful");
            jButton301.setEnabled(false);
            jButton3.setEnabled(false);
            jComboBox4.setSelectedItem(null);
            
            jRadioButton1.setSelected(false);
            
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        // }
   /*     } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
    
    
        }*/
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton301ActionPerformed
    
    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        // Add your handling code here:
    }//GEN-LAST:event_jPanel1ComponentShown
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        
        
        // Add your handling code here:
    }//GEN-LAST:event_formComponentShown
    
/*    public class ComboTextField extends javax.swing.JTextField implements javax.swing.ComboBoxEditor {
 
        public ComboTextField() {
 
            initComponents();
 
        }
 
        void initComponents() {
 
            oldComboBox6Model = jTextField6.getModel();
 
            // comboTextField = new javax.swing.JTextField();
 
 
            comboTextField.addKeyListener(new java.awt.event.KeyAdapter() {
 
                public void keyTyped(java.awt.event.KeyEvent e) {
 
                    if (e.getID() == java.awt.event.KeyEvent.VK_BACK_SPACE) {
 
                        changeComboBoxModel(comboTextField.getText());
 
                        System.out.println(comboTextField.getText()+" Pressed Key "+e.getKeyText(e.getKeyCode()));
                    }
                }});
 
        }
        public java.awt.Component getEditorComponent() {
 
            return comboTextField;
 
        }
 
        public Object getItem() {
 
            return comboTextField.getText();
 
        }
 
        public void setItem(Object obj) {
 
            comboTextField.setText(jComboBox6.getSelectedItem().toString());
 
        }
 
 
 
        public void changeComboBoxModel(java.lang.String typedLetters) {
 
 
 
            javax.swing.DefaultComboBoxModel newComboBox6Model = new javax.swing.DefaultComboBoxModel();
 
            System.out.println("ComboBox Item No. "+oldComboBox6Model.getSize());
 
/*            if (typedLetters.equals("")) {
 
                jComboBox6.setModel(oldComboBox6Model);
 
            } else {
 
 *
                for (int i = 0; i < oldComboBox6Model.getSize(); i++) {
 
     if (oldComboBox6Model.getElementAt(i).toString().startsWith(typedLetters)) {
 
         newComboBox6Model.addElement(oldComboBox6Model.getElementAt(i));
 
         jComboBox6.setModel(newComboBox6Model);
 
     }
 
 }
 
        }
 
        //      }
    }
 */
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        java.awt.Point point = this.jTextField6.getLocationOnScreen();
        
        jSearchDialog.setSize(400,200);
        
        jSearchDialog.setLocation(point);
        
        jSearchDialog.show();
        
    }
    
    public void run() {
        
        while(true){
            
            System.out.println("Patient registration biometrics thread runnning");
            
            if (newBiometricsEntry()) {
                
                
                retrievePatientInfo(getBiometricsID());
                
                
            } else {
                
                
                
            }
            
            try {
                
                Thread.currentThread().sleep(5000);
                
            } catch(java.lang.InterruptedException IntExec){
                
                System.out.println(IntExec.getMessage());
            }
        }
    }
    
/*    private void registerNewBioID() {
 
        java.lang.String biometricsID = null;
 
        try {
 
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO patient_bio_ids VALUES(?,?)");
 
            java.sql.ResultSet srset = pstmt.executeQuery();
 
            while (srset.next()) {
 
                biometricsID = srset.getString(1);
 
            }
 
        } catch(java.sql.SQLException bioIDExec) {
 
            javax.swing.JOptionPane.showMessageDialog(this, bioIDExec.getMessage());
 
        }
 
 
 
 
    }
 */
    private boolean checkBiometricsEntry() {
        
        int unprocessed = 0;
        
        boolean newEntry;
        
        try {
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT COUNT(*) FROM biometrics_ids WHERE processed = 'f' AND identifier = 'STORED'");
            
            java.sql.ResultSet srset = pstmt.executeQuery();
            
            while (srset.next()) {
                
                unprocessed = srset.getInt(1);
                
                
            }
            
        } catch(java.sql.SQLException bioExec) {
            
            
            javax.swing.JOptionPane.showMessageDialog(this, bioExec.getMessage());
            
        }
        
        if (unprocessed > 0) {
            
            return true;
            
        } else {
            
            return false;
        }
        
    }
    
    private boolean newBiometricsEntry() {
        
        int unprocessed = 0;
        
        boolean newEntry;
        
        try {
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT COUNT(*) FROM biometrics_ids WHERE processed = 'f' AND identifier = 'IDENTIFIED'");
            
            java.sql.ResultSet srset = pstmt.executeQuery();
            
            while (srset.next()) {
                
                unprocessed = srset.getInt(1);
                
                
            }
            
        } catch(java.sql.SQLException bioExec) {
            
            
            javax.swing.JOptionPane.showMessageDialog(this, bioExec.getMessage());
            
        }
        
        if (unprocessed > 0) {
            
            return true;
            
        } else {
            
            return false;
        }
        
    }
    
    private java.lang.String getBiometricsID() {
        
        java.lang.String biometricsID = null;
        
        try {
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT bio_id FROM biometrics_ids WHERE processed = 'f'");
            
            java.sql.ResultSet srset = pstmt.executeQuery();
            
            while (srset.next()) {
                
                biometricsID = srset.getString(1);
                
            }
            
        } catch(java.sql.SQLException bioIDExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, bioIDExec.getMessage());
            
        }
        
        return biometricsID;
        
    }
    
    
    private java.lang.String getNewBiometricsID() {
        
        java.lang.String biometricsID = null;
        
        try {
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT bio_id FROM biometrics_ids WHERE processed = 'f' AND identifier = 'IDENTIFIED'");
            
            java.sql.ResultSet srset = pstmt.executeQuery();
            
            while (srset.next()) {
                
                biometricsID = srset.getString(1);
                
            }
            
        } catch(java.sql.SQLException bioIDExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, bioIDExec.getMessage());
            
        }
        
        return biometricsID;
        
    }
    
    
    private void retrievePatientInfo(java.lang.String biometricsID) {
        
        java.lang.String patient_ID = null;
        
        try {
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT patient_id FROM patient_bio_ids WHERE bio_id = ?");
            
            pstmt.setString(0, biometricsID);
            
            java.sql.ResultSet srset = pstmt.executeQuery();
            
            while (srset.next()) {
                
                patient_ID = srset.getString(1);
                
            }
            
        } catch(java.sql.SQLException bioIDExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, bioIDExec.getMessage());
            
            
        }
        
        if (patient_ID.toCharArray().length > 0) {
            
            populateRegisterForm(patient_ID);
            
        }
    }
    
    private void populateRegisterForm(java.lang.String patient_ID){
        
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select nok,residence,year_of_birth,tel_no,address,sex,pay_mode,last_visit from hp_patient_register where patient_no ='"+patient_ID+"'");
            while (rset.next()){
                jComboBox1.setSelectedItem(rset.getObject(7).toString());
                jTextField16.setText(rset.getObject(8).toString());
                jTextField1.setText(rset.getObject(1).toString());
                jTextField4.setText(rset.getObject(2).toString());
                jTextField14.setText(rset.getObject(3).toString());
                jTextField5821.setText(rset.getObject(4).toString());
                jTextField5.setText(rset.getObject(5).toString());
                jTextField12.setText(rset.getObject(6).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        if(jComboBox1.getSelectedItem().equals("Scheme")){
            try {
                
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select payer,description,account_no,member_name from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
                while (rset.next()){
                    // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                    jTextField2.setText(rset.getObject(1).toString());
                    jTextField361.setText(rset.getObject(2).toString());
                    jTextField13.setText(rset.getObject(3).toString());
                    jTextField36.setText(rset.getObject(4).toString());
                    
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Insert not successful");
            }
  /*           if (jTextField17.getText().toString() == "-"){
            jTextField17.setEditable(true);
        }else{
   
            jTextField17.setEditable(false);
        }
   **/
        }
        
        
        jButton301.setEnabled(true);
        
        //        jSearchDialog.dispose();
        
    }
    
    private void checkBiometricsID(){
        
        if (checkBiometricsEntry()) {
            
            java.lang.String newBiometricsID = getNewBiometricsID();
            
            int biometrics_Int = javax.swing.JOptionPane.showConfirmDialog(this, "Do you want to register patient BIOMETRICS information?", "Registering BIOMETRICS ID's", javax.swing.JOptionPane.OK_CANCEL_OPTION);
            
            if (biometrics_Int == javax.swing.JOptionPane.OK_OPTION) {
                
                insertNewBIDforPatient(newBiometricsID);
                
            } else {
                
                javax.swing.JOptionPane.showMessageDialog(this, "Canceled new BIOMETRICS registration task!");
                
            }
            
        }
    }
    
    private void insertNewBIDforPatient(java.lang.String newBiometricsID) {
        
        try {
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO patient_bio_ids VALUES(?, ?)");
            
            pstmt.setString(1, jTextField3.getText());
            
            pstmt.setString(2, newBiometricsID);
            
            
        } catch(java.sql.SQLException bioIDExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, bioIDExec.getMessage());
            
            
        }
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JTextField jTextField14111;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JLabel jLabel411;
    private javax.swing.JLabel jLabel511;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField161;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton jButton30111;
    private javax.swing.JTextField jTextField411;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JButton jButton252111;
    private javax.swing.JLabel jLabel9;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet2;
    private org.netbeans.lib.sql.NBCachedRowSet crset8;
    private javax.swing.JTextField jTextField311;
    private javax.swing.JTextField jTextField4111;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel111;
    private javax.swing.JLabel jLabel582111;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel jLabel3111;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField511;
    private javax.swing.JTextField jTextField181;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jButton25211;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton searchButton1;
    private javax.swing.JLabel jLabel21;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jSearchScrollPane;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private javax.swing.JPanel jPanel121;
    private javax.swing.JButton jButton301111;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JPanel jPanel3;
    private org.netbeans.lib.sql.NBCachedRowSet crset51;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jPanel641;
    private org.netbeans.lib.sql.NBCachedRowSet crset41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JLabel jLabel19;
    private org.netbeans.lib.sql.NBCachedRowSet crset11;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.ButtonGroup buttonGroup1;
    private org.netbeans.lib.sql.NBCachedRowSet crset411;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JDialog jDialog3;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JPanel jSearchPanel111;
    private com.afrisoftech.lib.DatePicker datePicker4;
    private javax.swing.JLabel jLabel58221;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JLabel jLabel22;
    private org.netbeans.lib.sql.NBCachedRowSet crset31;
    private javax.swing.JLabel jLabel66111;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel582211;
    private javax.swing.JLabel jLabel5721;
    private org.netbeans.lib.sql.NBCachedRowSet crset5;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton dispose2;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JCheckBox jCheckBox211;
    private javax.swing.JLabel jLabel572111;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JTextField jTextField1411;
    private javax.swing.JButton select2;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JButton jButton301;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JTextField jTextField131;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel6611;
    private javax.swing.JDialog jDialog31;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JButton jButton202;
    private org.netbeans.lib.sql.NBCachedRowSet crset4;
    private javax.swing.JPanel jPanel1111;
    private javax.swing.JButton jButton3;
    private javax.swing.JTextField jTextField5821;
    private javax.swing.JPanel jPanel411;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JButton jButton20211;
    private javax.swing.JTextField jTextField361;
    private org.netbeans.lib.sql.NBCachedRowSet crset12;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JButton searchButton12;
    private javax.swing.JLabel jLabel5821111;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JLabel jLabel18;
    private org.netbeans.lib.sql.NBCachedRowSet crset6;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel572;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField jTextField1611;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet111;
    private javax.swing.JLabel jLabel582;
    private javax.swing.JCheckBox jCheckBox111;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JTextField jTextField582111;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton jButton1111;
    private javax.swing.JLabel jLabel231;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private org.netbeans.lib.sql.NBCachedRowSet crset32;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JLabel jLabel311;
    private javax.swing.JButton jButton252;
    private javax.swing.JSeparator jSeparator111;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JTextField jTextField3111;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JTextField jTextField151;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JDialog jSearchDialog111;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet11;
    private javax.swing.JButton dispose;
    private javax.swing.JButton dispose1;
    private javax.swing.JTextField jTextField16;
    private org.netbeans.lib.sql.NBCachedRowSet crset81;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField611;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JButton jButton152;
    private javax.swing.JButton jButton111;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton searchButton13;
    private javax.swing.JButton dispose11;
    private javax.swing.JButton dispose111;
    private javax.swing.JTable jSearchTable2;
    // End of variables declaration//GEN-END:variables
    
}
