/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.kitchen;

/**
 *
 * @author  root
 */
public class BedsChargesintfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    javax.swing.table.TableModel tableModel = null;
    
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public BedsChargesintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            nBCachedRowSet1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();

        nBCachedRowSet1.setCommand("");
        nBCachedRowSet1.setConnectionSource(pConnDB);
        crset2.setCommand("");
        crset2.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Beds Charges");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jPanel21.setBorder(new javax.swing.border.TitledBorder(""));
        tableModel = jTable1.getModel();

        tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {

            public void tableChanged(javax.swing.event.TableModelEvent evt) {

                tableModelTableChanged(evt);

            }

        });
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        tableModel = jTable1.getModel();

        tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {

            public void tableChanged(javax.swing.event.TableModelEvent evt) {

                tableModelTableChanged(evt);

            }

        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel2.add(jPanel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel2.add(datePicker1, gridBagConstraints);

        jLabel1.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel1, gridBagConstraints);

        jCheckBox1.setText("Daily Charges");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jCheckBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        getContentPane().add(jPanel2, gridBagConstraints);

        setBounds(0, 0, 697, 390);
    }//GEN-END:initComponents
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        try {
            
            crset2.setCommand("select adno ,ward,bedno,charges,upper(name) as name from bed_charges_view");
            //  crset2.setCommand("select description,units,sum(quantity_in_stock) as quantity_in_stock,reorder_level,sum(quantity) as quantity,sum(reorder_level-quantity_in_stock) as min_order,sum(min_order) AS min_order from ungroup_analyse_requisation group by description,units,reorder_level");
            // crset2.setCommand("select description,units,stock,reorder_level,quantity,min_order AS quantity,reorder_level-stock as min_order,reorder_level-stock as min_order from analysed_requisation where reorder_level-stock > 0 order by description");
            
            crset2.setConnectionSource(pConnDB);
            
            
            crset2.execute();
            jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                
                new org.netbeans.lib.sql.models.TableModel.Column("adno", "Admission No.", false),
                new org.netbeans.lib.sql.models.TableModel.Column("ward", "Ward", false),
                new org.netbeans.lib.sql.models.TableModel.Column("bedno", "Bed No", false),
                new org.netbeans.lib.sql.models.TableModel.Column("charges", "Charges", false),
                new org.netbeans.lib.sql.models.TableModel.Column("name", "name", false)
                // new org.netbeans.lib.sql.models.TableModel.Column("min_order", "Min.Order", false),
                // new org.netbeans.lib.sql.models.TableModel.Column("min_order", "Qty to Order", true)
                
            }));
            
            
            jScrollPane1.setViewportView(jTable1);
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            System.out.println(sqlex.getMessage());
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String billNo = null;
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String mainAcc = null;
        String user = null;
        String patientCat = "";
        try {
            
            connectDB.setAutoCommit(false);
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            while (rse12.next())
                
                patientAcc = rse12.getObject(1).toString();
            AccDesc = rse12.getObject(2).toString();
            
          /*  java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
            while (rst11.next())
           
                rst11.getObject(1).toString();
            billNo = rst11.getObject(1).toString();
            user = rst11.getObject(2).toString();
           */
            
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.ResultSet rse121 = stm121.executeQuery("select gl_account,main_service from pb_operating_parameters where category  ='WP'");
            while (rse121.next())
                
                glAcc = rse121.getObject(1).toString();
            mainAcc = rse121.getObject(2).toString();
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next())
                rst.getObject(1).toString();
            
            transNo = rst.getObject(1).toString();
            
            for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getModel().getValueAt(i,0) != null){
                    
                    java.sql.Statement stm1 = connectDB.createStatement();
                    //java.sql.ResultSet rse1 = stm1.executeQuery("select payment_mode,CASE WHEN (card_no IS NOT NULL OR card_no != '') THEN card_no ELSE '' END AS card_no,CASE WHEN (scheme IS NOT NULL OR scheme != '') THEN scheme ELSE '' END AS scheme,CASE WHEN (card_name IS NOT NULL OR card_name != '') THEN card_name ELSE '' END AS card_name,CASE WHEN (isurer IS NOT NULL OR isurer != '') THEN isurer ELSE '' END AS isurer,CASE WHEN (expiry_date IS NOT NULL) THEN expiry_date ELSE null END AS expiry_date,CASE WHEN (scheme_staff_no IS NOT NULL OR scheme_staff_no != '') THEN scheme_staff_no ELSE '' END AS scheme_staff_no,CASE WHEN (patient_category IS NOT NULL OR patient_category != '') THEN patient_category ELSE '1' END AS patient_category from hp_patient_card where patient_no ='"+jTable1.getValueAt(i,0)+"'");
                    java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,payer,account_no,description,category,expiry_date from hp_inpatient_register where patient_no ='"+jTable1.getValueAt(i,0)+"'");
                    
                    while (rse1.next()){
                        
                        payMode = rse1.getObject(1).toString();
                        cardNo = rse1.getString(3);
                        scheme = rse1.getString(4);
                        cardName = rse1.getString(4);
                        isurer = rse1.getString(2);
                        expDate = rse1.getString(6);
                        staffNo = rse1.getString(3);
                        patientCat = rse1.getString(5);
                    }
                    
                    
                    
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                    //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                    
                    pstmt.setObject(1,jTable1.getValueAt(i,0).toString());
                    pstmt.setObject(2,"BED CHARGES");
                    pstmt.setString(3,patientCat);
                    pstmt.setString(4,payMode);
                    pstmt.setString(5,transNo);
                    pstmt.setString(7,scheme);
                    pstmt.setString(6,cardNo);
                    pstmt.setString(8,cardName);
                    pstmt.setString(9,isurer);
                    pstmt.setString(10,expDate);
                    pstmt.setString(11,"");
                    pstmt.setObject(12,jTable1.getValueAt(i,3).toString());
                    pstmt.setString(13,"00");
                    pstmt.setString(14,datePicker1.getDate().toString());
                    pstmt.setObject(15,patientAcc);
                    pstmt.setString(16,mainAcc);
                    pstmt.setString(17,"1");
                    pstmt.setObject(18,staffNo);
                    pstmt.setBoolean(19,false);
                    pstmt.setString(20,"Billing");
                    pstmt.setBoolean(21,false);
                    pstmt.setString(22,AccDesc);
                    pstmt.setString(23,"");
                    pstmt.setString(24,user);
                    pstmt.setString(25,"");
                    pstmt.setString(26,"IP");
                    pstmt.executeUpdate();
                    
                    java.sql.PreparedStatement pstmt812 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTable1.getValueAt(i,3).toString()+"' where code = '"+patientAcc+"'");
                    pstmt812.executeUpdate();
                    
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt2.setObject(2,mainAcc);
                    pstmt2.setString(1,glAcc);
                    pstmt2.setObject(3,jTable1.getValueAt(i,0).toString());
                    pstmt2.setString(4,"");
                    pstmt2.setString(5,"");
                    pstmt2.setString(6,"");
                    pstmt2.setString(7,"");
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,"");
                    pstmt2.setString(10,"");
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jTable1.getValueAt(i,1).toString());
                    pstmt2.setString(15,"Billing");
                    pstmt2.setString(16,"0.00");
                    pstmt2.setObject(17,jTable1.getValueAt(i,3).toString());
                    pstmt2.setString(18,datePicker1.getDate().toString());
                    pstmt2.setString(19,transNo);
                    pstmt2.setString(20,"false");
                    pstmt2.setString(21,"false");
                    pstmt2.setString(22,"false");
                    pstmt2.setString(23,user);
                    pstmt2.executeUpdate();
                    
                    java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTable1.getValueAt(i,3).toString()+"' where code = '"+glAcc+"'");
                    pstmt8121.executeUpdate();
                }
            }
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Comfirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
     /*   double totals = 0.00;
        //  double totals = Double.parseDouble(jTextField1.getText());
        int i = 0;
      
        for (int j = 0; j < jTable1.getRowCount(); j++) {
      
            System.out.println(jTable1.getModel().getValueAt(j, 4).toString());
      
            if (Boolean.valueOf(jTable1.getModel().getValueAt(j, 4).toString()) == java.lang.Boolean.FALSE) {
      
                totals = totals - Double.parseDouble(jTable1.getModel().getValueAt(j, 3).toString());
      
                i++;
            }
        }
      
        //  jTextField1.setText(Double.toString(totals));
      
        //   jTextField2.setText(Integer.toString(i));
      
        System.out.println(totals);
      
        System.out.println(i);
      
        System.out.println("This table has changed");
      */
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel1;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JButton jButton4;
    private org.netbeans.lib.sql.NBCachedRowSet nBCachedRowSet1;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
}
