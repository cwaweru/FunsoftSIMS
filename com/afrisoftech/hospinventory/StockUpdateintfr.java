/*
 * stockprices.java
 *
 * Created on November 5, 2002, 11:47 AM
 */

package com.afrisoftech.hospinventory;

/**
 *
 * @author  root
 */
public class StockUpdateintfr extends javax.swing.JInternalFrame {
    javax.swing.JComboBox cmbox2 =null;
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public StockUpdateintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset11 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jButton512 = new javax.swing.JButton();

        crset1.setConnectionSource(pConnDB);
        crset11.setCommand("select distinct department from st_stock_item order by department ");
        crset11.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Stock Update");
        setPreferredSize(new java.awt.Dimension(650, 700));
        setVisible(true);
        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setMnemonic('E');
        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton2, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(225, 240, 240));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Description", "Units", "Unit Price", "Qty", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(false);
        /*       cmbox2 = new javax.swing.JComboBox();

        try {

            crset1.setConnectionSource(pConnDB);
            crset1.execute("select description from st_stock_item");

            cmbox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "description", null, null,null));

            javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Product");

            seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));

            cmbox2.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {

                    cmbox2ActionPerformed(evt);
                }
            });
        } catch(java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }
        */

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(200); //sport column is bigger
            } else {
                if (i == 1) {
                    column.setPreferredWidth(200);
                } else {
                    if (i == 2) {
                        column.setPreferredWidth(100);
                    }  else
                    column.setPreferredWidth(100);

                }
            }
        }
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel1, gridBagConstraints);

        jComboBox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset11, "department", null, null, null));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jComboBox1, gridBagConstraints);

        jLabel2.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(datePicker1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        jButton512.setMnemonic('R');
        jButton512.setText("RemoveRow");
        jButton512.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton512ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jButton512, gridBagConstraints);

        setBounds(0, 0, 700, 600);
    }//GEN-END:initComponents
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        double resFloat = 0.00;
        double selectedGuaran = java.lang.Double.parseDouble(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 3).toString());
        if (selectedGuaran > 0) {
            //  double totalSum = 0.00;
            //        double floatTotal = java.lang.Double.parseDouble(jTextField2.getText());
            
            //        System.out.println("Cell Editor "+jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
            
            if (jTable1.getSelectedColumn() == 3) {
                
                double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
                
                double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                
                double resVal = floatCol2 * floatCol3;
                
                
                jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 4);
                
//                System.out.println("Value at cell 3 is : "+ jTable1.getValueAt(jTable1.getSelectedRow(),3));
            }
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                
                if (jTable1.getModel().getValueAt(i, 3) != null) {//toString().compareToIgnoreCase(null) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 4).toString());
                    
                    
                    // totalSum = floatTotal + resFloat;
                    
                }
            }
        }// Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            crset1.setCommand("select product as description,units, transfer_price,null as quantity,null as amount FROM st_stock_prices WHERE department ='"+jComboBox1.getSelectedItem()+"' ORDER BY product");
            crset1.setConnectionSource(pConnDB);
            
            crset1.execute();
            
            // crset2.setExecuteOnLoad(true);
            jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("description", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("units", "Units", false),
                new org.netbeans.lib.sql.models.TableModel.Column("transfer_price", "Item @ KShs.", false),
                new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Qty", true),
                new org.netbeans.lib.sql.models.TableModel.Column("amount", "Amount", false)
                
            }));
            
            //  tableModel = jTable1.getModel();
            
            jScrollPane1.setViewportView(jTable1);
            
        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            System.out.println(sqlex.getMessage());
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void jButton512ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton512ActionPerformed
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton512ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.getContentPane().removeAll();
        this.initComponents();
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox2.getSelectedItem();
        int i = jTable1.getSelectedRow();
        
        if (selectedGuaran != null) {
            
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select item_code,units from st_stock_item where description = '"+selectedGuaran+"'");
                while (rs.next())
                    jTable1.setValueAt(rs.getObject(1),i,1);
                jTable1.setValueAt(rs.getObject(2),i,2);
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
                
            }
        }
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setVisible(false); // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        javax.swing.JFrame bank = new Stockprices(connectDB, pConnDB, jComboBox1.getSelectedItem().toString());
//        bank.setVisible(true);// Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String Stock = null;
        String actCode = null;
        String accountCode = null;
        String transNo = null;
        String transNo1 = null;
        String glType = null;
        String user = null;
        String userName = null;
        String glCode = null;
        String units = null;
        
        double price = 0.00;
        double qty = 0.00;
        double amount = 0.00;
        try {
            connectDB.setAutoCommit(false);
            java.sql.Statement pst2 = connectDB.createStatement();
            java.sql.ResultSet rs = pst2.executeQuery("select current_user");
            while (rs.next())
                user = rs.getObject(1).toString();
            
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rs2 = ps.executeQuery("select nextval('sttransacton_no_seq')");
            while (rs2.next())
                transNo = rs2.getObject(1).toString();
            
            java.sql.Statement ps3 = connectDB.createStatement();
            java.sql.ResultSet rs3 = ps3.executeQuery("select nextval('transaction_no_seq')");
            while (rs3.next())
                transNo1 = rs3.getObject(1).toString();
            
            java.sql.Statement pst21 = connectDB.createStatement();
            java.sql.ResultSet rs11 = pst21.executeQuery("select code,activity,current_user from pb_activity where activity_category = 'S'");
            while (rs11.next())
                actCode = rs11.getObject(1).toString();
            Stock = rs11.getObject(2).toString();
            userName = rs11.getObject(3).toString();
            
            java.sql.Statement pst211 = connectDB.createStatement();
            java.sql.ResultSet rs111 = pst211.executeQuery("select code,activity from pb_activity where activity_category = 'CS'");
            while (rs111.next())
                glCode = rs111.getObject(1).toString();
            glType = rs111.getObject(2).toString();
            
              for (int i = 0; i< jTable1.getRowCount(); i++) {
                if (jTable1.getModel().getValueAt(i,3) != null){
                     
                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                    pstmt1.setString(1,null);
                    pstmt1.setObject(3,jTable1.getValueAt(i,0));
                    pstmt1.setString(2,"");
                    pstmt1.setString(4,null);
                    pstmt1.setObject(5,jTable1.getValueAt(i,4));
                    pstmt1.setObject(6,"00");
                    pstmt1.setObject(7,jTable1.getValueAt(i,1));
                    pstmt1.setObject(8,"");
                    pstmt1.setString(9,null);
                    pstmt1.setString(10,null);
                    pstmt1.setString(11,"00");
                    pstmt1.setString(12,"00");
                    pstmt1.setString(13,"00");
                    pstmt1.setString(14,"");
                    pstmt1.setString(15,userName);
                    pstmt1.setString(16,"");
                    pstmt1.setString(17,null);
                    pstmt1.setString(18,datePicker1.getDate().toString());
                    pstmt1.setString(19,jComboBox1.getSelectedItem().toString());
                    pstmt1.setString(20,"Issuing");
                    pstmt1.setObject(21,"00");
                   
                    pstmt1.setObject(22,"00");
                     pstmt1.setString(23,actCode);
                    pstmt1.setString(24,"");
                    pstmt1.setString(25,Stock);
                    pstmt1.setString(26,transNo1);
                    pstmt1.setObject(27,jTable1.getValueAt(i,3));
                    pstmt1.setString(28,userName);
                    pstmt1.executeUpdate();
                   
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt2.setObject(1,glCode);
                    pstmt2.setObject(2,glType);
                    pstmt2.setString(3,"");
                    pstmt2.setString(4,"Adjustment");
                    pstmt2.setString(5,"");
                    pstmt2.setString(6,"");
                    pstmt2.setString(7,"");
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,"");
                    pstmt2.setString(10,"");
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                    pstmt2.setString(15,"Issuing");
                    pstmt2.setObject(16,jTable1.getValueAt(i,4).toString());
                    pstmt2.setObject(17,"00");
                    pstmt2.setString(18,datePicker1.getDate().toString());
                    pstmt2.setString(19,transNo1);
                    pstmt2.setBoolean(20,false);
                    pstmt2.setBoolean(21,false);
                    pstmt2.setBoolean(22,false);
                    pstmt2.setString(23,userName);
                    pstmt2.executeUpdate();

                }
            }

            System.out.println("Checking this point1");
            connectDB.commit();
            connectDB.setAutoCommit(true);
            jLabel5.setForeground(java.awt.Color.blue);
            jLabel5.setText("Insert successful");
            //  jComboBox2.setSelectedItem(null);
         //   crset2.execute();
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        } 
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jButton512;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jButton3;
    private org.netbeans.lib.sql.NBCachedRowSet crset11;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jPanel1;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JButton jButton4;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
    
}
