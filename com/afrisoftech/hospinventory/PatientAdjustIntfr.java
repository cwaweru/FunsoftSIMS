/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.hospinventory;

/**
 *
 * @author  root
 */
public class PatientAdjustIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    
    private javax.swing.JComboBox cmbox;
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public PatientAdjustIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset5 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset4 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox131 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();

        crset1.setCommand("select distinct patient_no from hp_pharmacy WHERE paid = false AND collected = false ORDER BY patient_no ASC  ");
        crset1.setConnectionSource(pConnDB);
        crset2.setConnectionSource(pConnDB);
        crset3.setConnectionSource(pConnDB);
        crset5.setConnectionSource(pConnDB);
        crset4.setCommand("select distinct main_service from pb_operating_parameters order by main_service");
        crset4.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pharmacy Billing Adjustments\n");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Select patient here"));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Drugs", "Quantity", "Qty Available", "Price(KShs)", "Total", "Gl Account"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setEditingRow(jTable1.getSelectedRow());
        jTable1.setShowHorizontalLines(false);
        jTable1.setSurrendersFocusOnKeystroke(true);
        //        this.populateTable1(this.jComboBox131.getSelectedItem().toString());
        cmbox = new javax.swing.JComboBox();

        crset2.setConnectionSource(pConnDB);
        crset2.setCommand("select distinct product FROM st_stock_prices WHERE department = 'Pharmacy'");

        cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset2, "product", null, null, null));
        javax.swing.table.TableColumn s = this.jTable1.getColumn("Drugs");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });
        /* cmbox = new javax.swing.JComboBox();
        try{
            crset2.setConnectionSource(pConnDB);
            crset2.setCommand("select distinct item FROM st_stock_cardex WHERE cost_center = 'Pharmacy'");

            cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset2, "item", null, null, null));
            javax.swing.table.TableColumn s = this.jTable1.getColumn("Drugs");
            s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
            cmbox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmboxActionPerformed(evt);
                }
            });
        } catch(java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }
        */
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 6; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(350); //sport column is bigger
            } else {
                //if (i == 2) {
                    column.setPreferredWidth(200);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }

        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jScrollPane2.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel9, gridBagConstraints);

        jComboBox131.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset1, "patient_no", null, null, null));
        jComboBox131.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox131ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jComboBox131, gridBagConstraints);

        jLabel1.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField1, gridBagConstraints);

        jLabel2.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        jPanel2.add(jLabel3, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField2, gridBagConstraints);

        jTextField4.setEditable(false);
        jTextField4.setText("Pharmacy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField4, gridBagConstraints);

        jLabel4.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel4, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton5, gridBagConstraints);

        jButton6.setMnemonic('r');
        jButton6.setText("Remove Row");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        getContentPane().add(jButton6, gridBagConstraints);

        jLabel53.setText("Amount KShs.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel53, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 40);
        getContentPane().add(jTextField3, gridBagConstraints);

        setBounds(0, 0, 697, 390);
    }//GEN-END:initComponents
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        
        if (jTable1.getValueAt(jTable1.getSelectedRow(), 1) != null) {
            
            float floatCol2 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
            
            float floatCol3 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
            
            float resVal = floatCol2 * floatCol3;
            
            java.lang.Float resFloat =new java.lang.Float(resVal);
            
            if (jTable1.getSelectedColumn() == 1) {
                
                jTable1.setValueAt(resFloat, jTable1.getSelectedRow(), 4);
                
                double Total = java.lang.Double.parseDouble(jTextField3.getText().toString());
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = Total + tableSum;
                jTextField3.setText(""+totalSum+"");
                
            }
        }// Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void jComboBox131ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox131ActionPerformed
        jLabel7.setText("");
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select first_name||' '||second_name||' '||last_name from hp_patient_register where patient_no  ='"+jComboBox131.getSelectedItem()+"'");
            while (rset.next()){
                jTextField1.setText(rset.getObject(1).toString());
            }
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select patient_category,payment_mode from hp_patient_card where patient_no  ='"+jComboBox131.getSelectedItem()+"'");
            while (rset1.next()){
                jTextField2.setText(rset1.getObject(1).toString());
                jTextField5.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
        this.populateTable1(this.jComboBox131.getSelectedItem().toString());
/*
        cmbox = new javax.swing.JComboBox();
 
        crset2.setConnectionSource(pConnDB);
        crset2.setCommand("select distinct product FROM st_stock_prices WHERE department = 'Pharmacy'");
 
        cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset2, "product", null, null, null));
        javax.swing.table.TableColumn s = this.jTable1.getColumn("Drugs");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });
 */
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox131ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable1.getSelectedRow();
        if ( i >= 0){
            System.out.println("Selected row = "+i);
            
            if (selectedGuaran != null) {
                
                try {
                    java.sql.Statement pstmt = connectDB.createStatement();
                    java.sql.ResultSet rs = pstmt.executeQuery("select sp.selling_price from st_stock_prices sp where product = '"+selectedGuaran+"'");
                    while (rs.next()){
                        jTable1.setValueAt(rs.getObject(1),i,3);
                    }
                } catch(java.sql.SQLException sqlex){
                    System.out.println(sqlex.getMessage());
                }
                
                try {
                    java.sql.Statement pstmt = connectDB.createStatement();
                    
                    java.sql.ResultSet rs = pstmt.executeQuery("select sum(sc.sub_store_receiving - sc.sub_store_issuing) from st_stock_cardex sc where item = '"+selectedGuaran+"' and sc.cost_center = 'Pharmacy'");
                    while (rs.next()){
                        jTable1.setValueAt(rs.getObject(2),i,2);
                        
                    }
                } catch(java.sql.SQLException sqlex){
                    System.out.println(sqlex.getMessage());
                }
                
                try {
                    java.sql.Statement pstmt = connectDB.createStatement();
                    
                    java.sql.ResultSet rs = pstmt.executeQuery("select code from pb_activity where activity = '"+jTextField4.getText()+"'");
                    while (rs.next()){
                        jTable1.setValueAt(rs.getObject(1),i,5);
                        
                    }
                } catch(java.sql.SQLException sqlex){
                    System.out.println(sqlex.getMessage());
                }
            }
            
        }
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        
        this.jComboBox131.setSelectedItem(null);
        jTextField3.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String billNo = null;
        
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String BillNo = null;
        String glAcc = null;
        // String BillNo = null;
        String code = null;
        String user = null;
        try {
            
            connectDB.setAutoCommit(false);
            
            if (!(jTextField5.getText().equals("Cash"))){
                java.sql.Statement stm1 = connectDB.createStatement();
                java.sql.ResultSet rse1 = stm1.executeQuery("select payment_mode,card_no,scheme,card_name,isurer,expiry_date,scheme_staff_no from hp_patient_card where patient_no ='"+jComboBox131.getSelectedItem()+"' AND date::date = current_date -1");
                while (rse1.next())
                    cardNo = rse1.getString(2);
                scheme = rse1.getString(3);
                cardName = rse1.getString(4);
                isurer = rse1.getString(5);
                expDate = rse1.getString(6);
                staffNo = rse1.getString(7);
                
                java.sql.Statement stm12 = connectDB.createStatement();
                java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity ='Patient Receivables'");
                while (rse12.next())
                    
                    patientAcc = rse12.getObject(1).toString();
                AccDesc = rse12.getObject(2).toString();
                //  connectDB.setAutoCommit(false);
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                while (rst.next())
                    rst.getObject(1).toString();
                
                transNo = rst.getObject(1).toString();
                
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
                while (rst11.next())
                    rst11.getObject(1).toString();
                
                billNo = rst11.getObject(1).toString();
                user = rst11.getObject(2).toString();
                
                java.sql.Statement stm122 = connectDB.createStatement();
                java.sql.ResultSet rse122 = stm122.executeQuery("select code,activity from pb_activity where activity ='Cost Of Sales'");
                while (rse122.next())
                    
                    code = rse122.getObject(1).toString();
                glAcc = rse122.getObject(2).toString();
                
                for (int i = 0; i < jTable1.getRowCount(); i++){
                    if (jTable1.getModel().getValueAt(i,0) != null){
                        
                        
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                        
                        
                        pstmt.setString(1,jComboBox131.getSelectedItem().toString());
                        pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                        pstmt.setString(3,jTextField2.getText());
                        pstmt.setString(4,jTextField5.getText());
                        pstmt.setString(5,transNo);
                        pstmt.setString(7,scheme);
                        pstmt.setString(6,cardNo);
                        pstmt.setString(8,cardName);
                        pstmt.setString(9,isurer);
                        pstmt.setString(10,expDate);
                        pstmt.setString(11,"");
                        pstmt.setObject(12,jTable1.getValueAt(i,4).toString());
                        pstmt.setString(13,"00");
                        pstmt.setTimestamp(14,datenowSql);
                        pstmt.setObject(15,patientAcc);
                        pstmt.setString(16,jTextField4.getText());
                        pstmt.setObject(17,jTable1.getValueAt(i,1).toString());
                        pstmt.setObject(18,staffNo);
                        pstmt.setBoolean(19,false);
                        pstmt.setString(20,"Billing");
                        pstmt.setBoolean(21,false);
                        pstmt.setString(22,AccDesc);
                        pstmt.setString(23,BillNo);
                        pstmt.setString(24,user);
                        
                        pstmt.executeUpdate();
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                        pstmt2.setString(1,code);
                        pstmt2.setString(2,glAcc);
                        pstmt2.setString(3,jComboBox131.getSelectedItem().toString());
                        pstmt2.setString(4,jTextField1.getText());
                        pstmt2.setString(5,"");
                        pstmt2.setString(6,"");
                        pstmt2.setString(7,"");
                        pstmt2.setString(8,"");
                        pstmt2.setString(9,"");
                        pstmt2.setString(10,"");
                        pstmt2.setString(11,"");
                        pstmt2.setString(12,"");
                        pstmt2.setString(13,"");
                        pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                        pstmt2.setString(15,"Billing");
                        pstmt2.setString(16,"0.00");
                        pstmt2.setObject(17,jTable1.getValueAt(i,4).toString());
                        pstmt2.setTimestamp(18,datenowSql);
                        pstmt2.setString(19,transNo);
                        pstmt2.setString(20,"false");
                        pstmt2.setString(21,"false");
                        pstmt2.setString(22,"false");
                        pstmt2.setString(23,user);
                        pstmt2.executeUpdate();
                    }
                }
            }else{
                
                java.sql.PreparedStatement pstmRemove = connectDB.prepareStatement("DELETE FROM hp_pharmacy WHERE patient_no = '"+jComboBox131.getSelectedItem().toString()+"'");
                
                pstmRemove.executeUpdate();
                
                for (int i = 0; i < jTable1.getRowCount(); i++){
                    if (jTable1.getModel().getValueAt(i,0) != null){
                        
                        
                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?)");
                        pstmt1.setString(1,jComboBox131.getSelectedItem().toString());
                        pstmt1.setString(2,jTextField1.getText());
                        pstmt1.setObject(3,jTable1.getValueAt(i,1).toString());
                        pstmt1.setObject(4,jTable1.getValueAt(i,4).toString());
                        pstmt1.setObject(5,jTable1.getValueAt(i,0).toString());
                        pstmt1.setObject(7,jTable1.getValueAt(i,3).toString());
                        pstmt1.setObject(8,jTable1.getValueAt(i,5).toString());
                        pstmt1.setString(6,"false");
                        
                        pstmt1.executeUpdate();
                    }
                }
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
            jLabel7.setForeground(java.awt.Color.blue);
            jLabel7.setText("Patient successfully billed");
            this.getContentPane().removeAll();
            this.initComponents();
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void populateTable1(java.lang.String patient_no) {
        
        int i = 0;
        
        try {
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity, price, amount, gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false AND collected = false");
            
            while (rsetTable1.next()) {
                
                System.out.println("Working at table row "+i);
                jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 3);
                jTable1.setValueAt(rsetTable1.getObject(4), i, 4);
                jTable1.setValueAt(rsetTable1.getObject(5), i, 5);
                
                i++;
                
                //                i = i + i;
                //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField6;
    private org.netbeans.lib.sql.NBCachedRowSet crset5;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField3;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private javax.swing.JComboBox jComboBox131;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private org.netbeans.lib.sql.NBCachedRowSet crset4;
    private javax.swing.JButton jButton3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jPanel1;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
}
