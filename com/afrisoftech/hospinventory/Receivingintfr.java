/*
 * companyprflintfr.java
 *
 * Created on August 13, 2002, 11:36 AM
 */

package com.afrisoftech.hospinventory;

/**
 *
 * @author  root
 */
public class Receivingintfr extends javax.swing.JInternalFrame {
    
    private  javax.swing.JComboBox cmbox = new javax.swing.JComboBox();
    
    
    
    private javax.swing.JComboBox cmbox2;
    /** Creates new form companyprflintfr */
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public Receivingintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new javax.swing.JTable();
        jButton52 = new javax.swing.JButton();
        try {
            searchRowSet2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jTextField3 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel41 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        jTextField51 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();

        crset1.setCommand("select distinct order_no from st_orders where received = false and ordered = true");
        crset1.setConnectionSource(pConnDB);
        crset2.setCommand("");
        crset2.setConnectionSource(pConnDB);
        crset3.setCommand("");
        crset3.setConnectionSource(pConnDB);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        searchRowSet2.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Receiving Stock");
        setToolTipText("");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setVisible(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Utopia", 3, 18));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        getContentPane().add(jLabel12, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder(""));
        jLabel3.setText("Order No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel8.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        jTextField8.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField8, gridBagConstraints);

        jLabel7.setText("Store");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel9.setText("D/Note No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jTextField9, gridBagConstraints);

        jLabel2.setText("Invoice No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel4.setText("Invoice Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jTextField3, gridBagConstraints);

        jComboBox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "<No Column>", null, null, null));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jComboBox2, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        jPanel41.setBorder(new javax.swing.border.EtchedBorder());
        jTextField91.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jTextField91, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel41, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMaximumSize(new java.awt.Dimension(10, 20));
        jTextField6.setMinimumSize(new java.awt.Dimension(10, 20));
        jTextField6.setPreferredSize(new java.awt.Dimension(10, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField6, gridBagConstraints);

        jLabel10.setText("Store Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder(""));
        jLabel11.setText("Received By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel2.add(jTextField11, gridBagConstraints);

        jLabel1.setText("Total Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel2.add(jTextField2, gridBagConstraints);

        jLabel5.setText("Delivered By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField5, gridBagConstraints);

        jLabel6.setText("Total Discount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jLabel6, gridBagConstraints);

        jTextField4.setEditable(false);
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField4, gridBagConstraints);

        jLabel71.setText("VAT Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel71, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField1, gridBagConstraints);

        jLabel81.setText("Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel81, gridBagConstraints);

        jTextField51.setEditable(false);
        jTextField51.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField51.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jTextField51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Desc.", "Units", "Qty Ordered", "Undelivered Qty", "Package", "Qty Received", "Unit Price ", "Disc %", "Disc Total", "Vat %", "Vat Total", "Value", "Batch No.", "Expiry Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 255));
        /*
        cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset2, "item_description", null, null, null));
        javax.swing.table.TableColumn s = this.jTable1.getColumn("Item description");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });
        */
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.setToolTipText("click to save data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton1, gridBagConstraints);

        jButton2.setMnemonic('E');
        jButton2.setText("Ok & Print");
        jButton2.setToolTipText("click to print the G.R.N");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton2, gridBagConstraints);

        jButton6.setMnemonic('r');
        jButton6.setText("Remove Row");
        jButton6.setToolTipText("Deletes the selected row in table");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jButton6, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("click to clear fields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click to close");
        jButton4.setSelected(true);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel4, gridBagConstraints);

        jCheckBox1.setText("Main Store");
        buttonGroup1.add(jCheckBox1);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jCheckBox1, gridBagConstraints);

        jCheckBox2.setText("Sub Store");
        buttonGroup1.add(jCheckBox2);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jCheckBox2, gridBagConstraints);

        setBounds(0, 0, 750, 459);
    }//GEN-END:initComponents
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if(this.jCheckBox1.isSelected()){
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                
                java.sql.ResultSet rs = pstmt.executeQuery("select gl_stock_code from st_main_stores where store_name ilike '"+jComboBox2.getSelectedItem().toString()+"%'");
                while (rs.next()){
                    
                    this.jTextField6.setText(rs.getObject(1).toString());
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }else{
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                
                java.sql.ResultSet rs = pstmt.executeQuery("select stock_code from pb_departments  where department_name ilike '"+jComboBox2.getSelectedItem().toString()+"%'");
                while (rs.next()){
                    
                    this.jTextField6.setText(rs.getObject(1).toString());
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }   // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        crset3.setCommand("select store_name from st_stores");
        crset3.setConnectionSource(pConnDB);
        //  jComboBox1.setM
        jComboBox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset3, "store_name", null, null, null));
        // javax.swing.table.TableColumn s = this.jTable1.getColumn("Service");
        //  s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });         // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        crset3.setCommand("select store_name from st_main_stores");
        crset3.setConnectionSource(pConnDB);
           jComboBox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset3, "store_name", null, null, null));
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
        
        
        
    }
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(jTextField113.getCaretPosition() < 3){
            System.out.println("Nothing");
        }else{
            try {
                
                searchRowSet2.execute("SELECT distinct order_no,supplier,date from st_orders WHERE order_no ILIKE '"+jTextField113.getText()+"%' order by order_no");
                
                jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("order_no", "Order no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("supplier", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false)
                 }));
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        
        String Paymode = null;
        jTextField5.setText("");
        jTextField91.setText("");
        jTextField3.setText("");
        jTextField8.setText("");
        jTextField2.setText("00");
        jTextField4.setText("00");
        jTextField1.setText("00");
        jTextField51.setText("00");
        
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        
         
        jTextField8.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        
        jSearchDialog2.dispose();
        
        
        try {
                java.sql.Statement pstmt = connectDB.createStatement();
               java.sql.ResultSet rs = pstmt.executeQuery("select current_user ");
            while (rs.next()){
                   jTextField11.setText(rs.getObject(1).toString());
            }
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }
        
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(order_no)  FROM stock_receiving_view WHERE order_no ='"+this.jTextField91.getText()+"' AND quantity_undelivered >0");
            
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                     java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select item,units,quantity,quantity_undelivered,1.00,price,0.00,0.00 from stock_receiving_view WHERE order_no ='"+this.jTextField91.getText()+"' AND quantity_undelivered >0 order by item");// AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                      jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
                    
                    for (int m = 0; m < jTable1.getRowCount(); m++){
                        if (jTable1.getModel().getValueAt(m,0) != null){
                            
                            java.sql.Statement stmtTable11x = connectDB.createStatement();
                              java.sql.ResultSet rsetTable11x = stmtTable11x.executeQuery("select packaging from st_stock_item WHERE description = '"+jTable1.getValueAt(m,0).toString()+"'");
                            
                            while (rsetTable11x.next()) {
                                
                                System.out.println("Working at table row "+i);
                                jTable1.setValueAt(rsetTable11x.getObject(1), i, 4);
                                
                                
                                
                            }
                        }
                    }
                    
                    i++;
                    
                }
                
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        
        
        
        javax.swing.table.TableColumn column = null;
        for (int l = 0; l < 14; l++) {
            column = jTable1.getColumnModel().getColumn(l);
            if (l == 0) {
                
                column.setPreferredWidth(500); //sport column is bigger
            } else {
               
                column.setPreferredWidth(200);
               
            }
        }
        jSearchDialog2.dispose();// Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        double quantity = 0.00;
        double price = 0.00;
        double pkge = 0.00;
        double qty = 0.00;
        double uprice = 0.00;
        jButton1ActionPerformed(evt);
         
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        try{
            String Stock = null;
            String actCode = null;
            String accountCode = null;
            String transNo = null;
            String glType = null;
            String VouchNo = null;
            String StocktransNo = null;
            int invoices = 0;
            try {
           
                java.sql.Statement pst1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                while (rs1.next()){
                    accountCode = rs1.getObject(1).toString();
                    glType = rs1.getObject(2).toString();
                }
                
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.Statement pst2 = connectDB.createStatement();
                java.sql.Statement ps22 = connectDB.createStatement();
                java.sql.Statement ps11 = connectDB.createStatement();
                
            com.afrisoftech.reports.DiscCreditorsInvoicesPdf policy = new com.afrisoftech.reports.DiscCreditorsInvoicesPdf();
               
            policy.DiscCreditorsInvoicesPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker1.getDate().toLocaleString(), jTextField8.getText().toString(),this.jTextField3.getText().toString());
                  
                jTextField9.setText("");
                jTextField2.setText("00");
                jTextField4.setText("00");
                jTextField1.setText("00");
                jTextField5.setText("00");
                            
            }   catch(java.sql.SQLException sq){
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                
                System.out.println(sq.getMessage());
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        
        tableModelTableChanged();
        tableModelTableChanged1();
        tableModelTableChanged2();
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        double resFloat = 0.00;
        double resVal = 0.00;
        double total = 0.00;
        double total1 = 0.00;
        double discount1 = 0.00;
        double vat = 0.00;
        double VatAmt = 0.00;
        double floatCol2 = 0.00;
        double floatCol3 = 0.00;
        //  double totalSum = 0.00;
        if (jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()) != null) {
            
            if (jTable1.getValueAt(jTable1.getSelectedRow(), 5) != null){
                floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
                
                floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
                
                //            if (jTable1.getValueAt(jTable1.getSelectedRow(), 3) != null) {
                total = floatCol2 * floatCol3;
                //                jTable1.setValueAt(new java.lang.Float(total), jTable1.getSelectedRow(), 7);
                
                
                if (jTable1.getValueAt(jTable1.getSelectedRow(), 7) != null){
                    discount1 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());
                    resVal = total * discount1/100;
                    // total = ((floatCol2 * floatCol3) - ((floatCol2 * floatCol3)*discount1/100));
                    // resVal = (floatCol2 * floatCol3)*discount1/100;
                    jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 8);
                    jTable1.setValueAt(new java.lang.Float(total-resVal), jTable1.getSelectedRow(), 11);
                    this.tableModelTableChanged1();
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), 9) != null) {
                        vat = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 9).toString());
                        // total = (((total) + ((floatCol2 * floatCol3)*vat/100)) - ((floatCol2 * floatCol3)*discount1/100));
                        
                        VatAmt = (total-resVal)*vat/100;
                        jTable1.setValueAt(new java.lang.Float(VatAmt), jTable1.getSelectedRow(), 10);
                        jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 8);
                        jTable1.setValueAt(new java.lang.Float((total-resVal)+VatAmt), jTable1.getSelectedRow(), 11);
                        
                        this.tableModelTableChanged2();
                        //jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 5);
                    }
                    
                    
                    
                }else
                    
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), 9) != null) {
                        vat = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 9).toString());
                        
                        total1 = ((floatCol2 * floatCol3));
                        
                        total = ((floatCol2 * floatCol3) + ((floatCol2 * floatCol3)*vat/100));
                        VatAmt = ((floatCol2 * floatCol3)*vat/100);
                        jTable1.setValueAt(new java.lang.Float(VatAmt), jTable1.getSelectedRow(), 10);
                        
                        //this.jTextField1.setText(java.lang.String.valueOf(VatAmt));
                        jTable1.setValueAt(new java.lang.Float(total), jTable1.getSelectedRow(), 11);
                        this.tableModelTableChanged2();
                        
                    }else
                        jTable1.setValueAt(new java.lang.Float(total), jTable1.getSelectedRow(), 11);
                
                this.tableModelTableChanged();
                
                
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    
                    if (jTable1.getModel().getValueAt(i, 5) != null) {//toString().compareToIgnoreCase(null) {
                        
                        resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 11).toString());
                        
                        
                    }
                }
                
                //  this.tableModelTableChanged();
                
            }
        }
/*        double net = Double.parseDouble(this.jTextField2.getText());
        double vats = Double.parseDouble(this.jTextField1.getText());
        jTextField5.setText(java.lang.String.valueOf(net-vats));
 
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField2.getText());
 
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
 
            double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
 
            double resVal = floatCol2 * floatCol3;
 
 
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 6);
 
            for (int i = 0; i < jTable1.getRowCount(); i++) {
 
                if (jTable1.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
 
                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 6).toString());
 
 
                    // totalSum = floatTotal + resFloat;
 
                }
            }
            this.tableModelTableChanged();
        } */    // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        
        jTextField8.setText("");
        jTextField5.setText("");
        jTextField9.setText("");
        jTextField11.setText("");
        jTextField3.setText("");
        jTextField2.setText("0.00");
        jTextField91.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        tableModelTableChanged();
        tableModelTableChanged1();
        tableModelTableChanged2();
        double quantity = 0.00;
        double price = 0.00;
        double pkge = 0.00;
        double qty = 0.00;
        double uprice = 0.00;
        double rates = 0.00;
         
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
       
        String Stock = null;
        String actCode = null;
        String accountCode = null;
        String transNo = null;
        String glType = null;
        String VouchNo = null;
        String StocktransNo = null;
        String user = null;
        int invoices = 0;
        double total = 0.00;
        String supCode = null;
        String Purchases = null;
        String cosCode = null;
        String CostofSale = null;
        
        try {
            connectDB.setAutoCommit(false);
            
            java.sql.Statement pst1 = connectDB.createStatement();
            java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
            while (rs1.next()){
                accountCode = rs1.getObject(1).toString();
                glType = rs1.getObject(2).toString();
            }
            
            java.sql.Statement ps11r = connectDB.createStatement();
            java.sql.ResultSet rstr = ps11r.executeQuery("SELECT mark_up FROM st_stores WHERE store_name ILIKE '"+jComboBox2.getSelectedItem().toString()+"'");
            while (rstr.next()){
                rates = rstr.getDouble(1);
            }
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.Statement pst2 = connectDB.createStatement();
            java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst = ps11.executeQuery("select nextval('transaction_no_seq'),current_user");
            while (rst.next()){
                rst.getObject(1).toString();
                
                transNo = rst.getObject(1).toString();
                user = rst.getObject(2).toString();
            }
            java.sql.Statement pst21 = connectDB.createStatement();
            java.sql.ResultSet rs111 = pst21.executeQuery("select nextval('stock_delivery_seq')");
            while (rs111.next()){
                StocktransNo = rs111.getObject(1).toString();
            }
            java.sql.ResultSet rs = pst2.executeQuery("select code,activity from pb_activity where code ILIKE '"+this.jTextField6.getText()+"'");
            while (rs.next()){
                actCode = rs.getObject(1).toString();
                Stock = rs.getObject(2).toString();
            }
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into st_stock_cardex values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
            for (int i = 0; i< jTable1.getRowCount(); i++) {
                if (jTable1.getValueAt(i,11) != null && jTable1.getValueAt(i,0) != null){
                    double Qty = Double.parseDouble(jTable1.getValueAt(i, 11).toString());
                    total = total + Double.parseDouble(jTable1.getValueAt(i, 11).toString());
                    
                    if (Qty > 0){
                        pkge = Double.parseDouble(jTable1.getValueAt(i, 4).toString());
                        qty = Double.parseDouble(jTable1.getValueAt(i, 5).toString());
                        uprice = Double.parseDouble(jTable1.getValueAt(i, 6).toString());
                        
                        quantity = qty;
                        
                        price = uprice/pkge;
                        
                        pstmt.setString(1,jTextField91.getText().toString());
                        pstmt.setString(2,jComboBox2.getSelectedItem().toString());
                        pstmt.setObject(3,jTable1.getValueAt(i,0).toString());
                        if (jTable1.getValueAt(i,13) != null){
                            pstmt.setObject(4,jTable1.getValueAt(i,13).toString());
                        }else{
                            pstmt.setObject(4,null);
                            
                        }
                        pstmt.setObject(5,"0.00");
                        pstmt.setDouble(6,uprice);
                        pstmt.setObject(7,jTable1.getValueAt(i,1));
                        pstmt.setString(8,jTextField11.getText());
                        pstmt.setString(9,jTextField5.getText());
                        pstmt.setString(10,"");
                        pstmt.setDouble(11,quantity);
                        pstmt.setString(12,"00");
                        pstmt.setDouble(13,quantity);
                        pstmt.setObject(14,jTable1.getValueAt(i,2).toString());
                        pstmt.setString(15,"-");
                        pstmt.setObject(16,jTextField8.getText());
                        pstmt.setString(17,jTextField9.getText());
                        pstmt.setString(18,datePicker1.getDate().toString());
                        pstmt.setString(19,"-");
                        pstmt.setString(20,"Receiving");
                        pstmt.setObject(21,jTable1.getValueAt(i,11));
                        pstmt.setString(22,"00");
                        pstmt.setString(23,jTextField6.getText());
                        if(jTextField3.getText().equals("")){
                            javax.swing.JOptionPane.showMessageDialog(this,"Invoice_no Missing","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }else{
                            
                            pstmt.setString(24,jTextField3.getText());
                        }
                        pstmt.setString(25,jComboBox2.getSelectedItem().toString());
                        pstmt.setString(26,transNo);
                        pstmt.setString(27,"00");
                        pstmt.setString(28,user);
                        pstmt.setString(29,"false");
                        if (jTable1.getValueAt(i,10) == null){
                            pstmt.setObject(30,"0.00");
                        }else{
                            pstmt.setObject(30,jTable1.getValueAt(i,10).toString());
                        }
                        pstmt.executeUpdate();
                        
                        java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_debit = ytd_debit + '"+jTable1.getValueAt(i,11).toString()+"',mtd_debit = mtd_debit + '"+jTable1.getValueAt(i,11).toString()+"' where code = '"+jTextField9.getText()+"'");
                        pstmt8121.executeUpdate();
                        
                        java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into st_sub_stores values(? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)");
                        
                        pstmt11.setString(1,jComboBox2.getSelectedItem().toString());
                        pstmt11.setObject(2,jTable1.getValueAt(i,0).toString());
                        pstmt11.setDouble(3,quantity);
                        pstmt11.setString(4,"00");
                        pstmt11.setObject(5,jTable1.getValueAt(i,6).toString());
                        pstmt11.setObject(6,jTable1.getValueAt(i,11).toString());
                        pstmt11.setObject(7,"0.00");
                        pstmt11.setObject(8,StocktransNo);
                        pstmt11.setObject(9,null);
                        pstmt11.setString(10,"'now'");
                        pstmt11.setString(11,user);
                        pstmt11.setObject(12,jTable1.getValueAt(i,1));
                        pstmt11.setObject(13,"");
                        pstmt11.executeUpdate();
                        
                        if(this.jCheckBox1.isSelected()){
                            java.sql.PreparedStatement pstmt3 = connectDB.prepareStatement("UPDATE st_stock_item SET quantity_instock = quantity_instock + "+new java.lang.Double(qty)+",quantity_toorder = quantity_toorder - "+new java.lang.Double(qty)+"  WHERE description = '"+jTable1.getValueAt(i,0).toString()+"' AND department ilike '"+jComboBox2.getSelectedItem().toString()+"'");
                            pstmt3.executeUpdate();
                        }else{
                            java.sql.PreparedStatement pstmt316 = connectDB.prepareStatement("UPDATE st_stock_prices SET balance = balance + "+new java.lang.Double(quantity)+" WHERE product ILIKE '"+jTable1.getValueAt(i,0).toString()+"' AND department ILIKE '"+jComboBox2.getSelectedItem().toString()+"'");
                            
                            pstmt316.executeUpdate();
                        }
                        
                        java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_stock_item SET buying_price = "+new java.lang.Double(uprice)+"  WHERE description ILIKE '"+jTable1.getValueAt(i,0).toString()+"' AND department ILIKE '"+jComboBox2.getSelectedItem().toString()+"'");
                        pstmt31.executeUpdate();
                        
                          java.sql.PreparedStatement pstmt32 = connectDB.prepareStatement("UPDATE st_stock_prices SET transfer_price = ROUND("+new java.lang.Double(price)+"),selling_price = round('"+(price*rates)+"')  WHERE product ILIKE '"+jTable1.getValueAt(i,0).toString()+"'  AND department ILIKE '"+jComboBox2.getSelectedItem().toString()+"%'");
                        pstmt32.executeUpdate();
                        
                        
                        java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("update st_orders set received ='true' where order_no ='"+jTextField1.getText()+"' AND item = '"+jTable1.getValueAt(i,0).toString()+"'");
                        pstmt33.executeUpdate();
                    }
                }
            }
            java.sql.Statement pst21z = connectDB.createStatement();
            java.sql.ResultSet rs111z = pst21z.executeQuery("select count(invoice_no) from ac_accounts_payable where invoice_no ILIKE '"+jTextField3.getText()+"%' AND dealer ilike '"+jTextField8.getText()+"' AND date = '"+datePicker1.getDate().toString()+"'");
            while (rs111z.next()){
                invoices = rs111z.getInt(1);
            }
            if (invoices <1){
                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_accounts_payable values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                pstmt1.setObject(1,accountCode);
                pstmt1.setString(2,jTextField8.getText());
                pstmt1.setString(3,Stock);
                pstmt1.setString(4,"");
                pstmt1.setString(5,"");
                pstmt1.setString(6,"Medical Supplies");
                pstmt1.setString(7,"");
                pstmt1.setString(8,"");
                pstmt1.setString(9,"");
                pstmt1.setString(10,"");
                pstmt1.setString(11,transNo);
                pstmt1.setString(12,"Stock Delivery");
                pstmt1.setString(13,"0.00");
                pstmt1.setObject(14,jTextField2.getText());
                   pstmt1.setString(15,datePicker1.getDate().toString());
                if(jTextField3.getText().equals("")){
                    javax.swing.JOptionPane.showMessageDialog(this,"Invoice_no Missing","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }else{
                    
                    pstmt1.setString(16,jTextField3.getText());
                }
                 pstmt1.setString(17,glType);
                pstmt1.setString(18,"false");
                pstmt1.setString(19,"false");
                pstmt1.setString(20,user);
                pstmt1.setString(21,"");
                pstmt1.setString(22,datePicker1.getDate().toString());
                pstmt1.setString(23,datePicker1.getDate().toString());
                pstmt1.setString(24,jTextField1.getText());
                pstmt1.setDouble(25,total);
                pstmt1.setString(25,jTextField2.getText());
                pstmt1.setString(26,jTextField1.getText());
                pstmt1.executeUpdate();
                
                
                
            }else{
                java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE ac_accounts_payable SET credit = credit + '"+jTextField2.getText()+"',balance = balance + '"+jTextField2.getText()+"',vat = vat + '"+jTextField1.getText()+"',vat_balance = vat_balance + '"+jTextField1.getText()+"' where dealer = '"+jTextField8.getText()+"' AND invoice_no ilike '"+jTextField3.getText()+"%'");
                pstmt8121.executeUpdate();
                
               }
            
            java.sql.Statement pst1c = connectDB.createStatement();
            java.sql.ResultSet rs1c = pst1c.executeQuery("select purchases_account from pb_departments where department_name ILIKE '"+jComboBox2.getSelectedItem()+"%'");
            while (rs1c.next()){
                supCode = rs1c.getObject(1).toString();
               }
            
            java.sql.Statement pst1cc = connectDB.createStatement();
            java.sql.ResultSet rs1cc = pst1cc.executeQuery("select activity from pb_activity where code ILIKE '"+supCode+"%'");
            while (rs1cc.next()){
                Purchases = rs1cc.getObject(1).toString();
            }
            
            java.sql.Statement pst1d = connectDB.createStatement();
            java.sql.ResultSet rs1d = pst1d.executeQuery("select cost_of_sale from pb_departments where department_name ILIKE '"+jComboBox2.getSelectedItem()+"%'");
            while (rs1d.next()){
                cosCode = rs1d.getObject(1).toString();
             }
            
            java.sql.Statement pstd = connectDB.createStatement();
            java.sql.ResultSet rsd = pstd.executeQuery("select activity from pb_activity where code ILIKE '"+cosCode+"%'");
            while (rsd.next()){
                CostofSale = rsd.getObject(1).toString();
            }
            java.sql.PreparedStatement pstmt1q = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
            pstmt1q.setObject(1,supCode);
            pstmt1q.setString(2,Purchases);
            pstmt1q.setString(3,"");
            pstmt1q.setString(4,jTextField8.getText());
            pstmt1q.setString(6,"");
            pstmt1q.setString(5,"Medical Supplies");
            pstmt1q.setString(7,"");
            pstmt1q.setString(8,"");
            pstmt1q.setString(9,"");
            pstmt1q.setString(10,"");
            pstmt1q.setString(11,"");
            pstmt1q.setString(12,"");
            pstmt1q.setString(13,jTextField3.getText());
            pstmt1q.setString(14,"Medical Supplies");
            pstmt1q.setString(15,"Stock Delivery");
            pstmt1q.setObject(16,jTextField2.getText());
            pstmt1q.setString(17,"0.00");
            pstmt1q.setString(18,datePicker1.getDate().toString());
            pstmt1q.setString(19,transNo);
            pstmt1q.setString(20,"false");
            pstmt1q.setString(21,"false");
            pstmt1q.setString(22,"false");
            pstmt1q.setString(23,user);
            pstmt1q.setString(24,"");
            pstmt1q.setString(25,"");
            pstmt1q.setString(26,"'now'");
            pstmt1q.executeUpdate();
            
            java.sql.PreparedStatement pstmt1q1 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
            pstmt1q1.setObject(1,cosCode);
            pstmt1q1.setString(2,CostofSale);
            pstmt1q1.setString(3,"");
            pstmt1q1.setString(4,jTextField8.getText());
            pstmt1q1.setString(6,"");
            pstmt1q1.setString(5,"Medical Supplies");
            pstmt1q1.setString(7,"");
            pstmt1q1.setString(8,"");
            pstmt1q1.setString(9,"");
            pstmt1q1.setString(10,"");
            pstmt1q1.setString(11,"");
            pstmt1q1.setString(12,"");
            pstmt1q1.setString(13,jTextField3.getText());
            pstmt1q1.setString(14,"Medical Supplies");
            pstmt1q1.setString(15,"Stock Delivery");
            pstmt1q1.setObject(16,"0.00");
            pstmt1q1.setObject(17,jTextField2.getText());
            pstmt1q1.setString(18,datePicker1.getDate().toString());
            pstmt1q1.setString(19,transNo);
            pstmt1q1.setString(20,"false");
            pstmt1q1.setString(21,"false");
            pstmt1q1.setString(22,"false");
            pstmt1q1.setString(23,user);
            pstmt1q1.setString(24,"");
            pstmt1q1.setString(25,"");
            pstmt1q1.setString(26,"'now'");
            pstmt1q1.executeUpdate();
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
            
            jTextField9.setText("");
            jTextField2.setText("0.0");
            jTextField4.setText("0.0");
            jTextField1.setText("0.0");
            jTextField5.setText("0.0");
            
              
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            System.out.println(sq.getMessage());
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
        
    
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
         // Add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
 /*       int i = jTable1.getSelectedRow();
        java.lang.Object res_cmbox = cmbox.getSelectedItem();
  
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        } catch(java.lang.ClassNotFoundException nt) {
            System.out.println(nt.getMessage());
        }
  
  
        try {
               java.sql.Statement pstmt = connectDB.createStatement();
               java.sql.ResultSet rs = pstmt.executeQuery("select quantity from order_details where item_description = '"+cmbox2.getSelectedItem()+"'and order_no = '"+jComboBox1.getSelectedItem()+"'");
  
            //          javax.swing.JOptionPane.showMessageDialog(this, cmbox2.getSelectedItem().toString());
  
            while (rs.next())
                //jTextField4.setText(rs.getObject(1).toString());
                jTable1.setValueAt(rs.getObject(1),i,1);
            //jTable1.setValueAt(rs.getObject(2),i,3);
            //jTable1.setValueAt(rs.getObject(3),i,6);
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }
        //}
  
        try {
            java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
            java.sql.Statement pstmt = con.createStatement();
            // pstmt.executeUpdate("insert into AAA values('"+jTable1.getValueAt(numRows,numCols)+"')");
            java.sql.ResultSet rs = pstmt.executeQuery("select quantity,supplier from order_details where item_description = '"+cmbox.getSelectedItem()+"'");
            while (rs.next())
                jTextField8.setText(rs.getObject(2).toString());
  
  
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }
  
/*   try {
            java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
            java.sql.Statement pstmt = con.createStatement();
           // pstmt.executeUpdate("insert into AAA values('"+jTable1.getValueAt(numRows,numCols)+"')");
          java.sql.ResultSet rs = pstmt.executeQuery("select suppliers from print_quotations where description = '"+cmbox.getSelectedItem()+"' and quotation_no = '"+jComboBox1.getSelectedItem()+"'");
     while (rs.next())
            //jTextField4.setText(rs.getObject(1).toString());
            jTable1.setValueAt(rs.getObject(1),i,6);
  
 } catch(java.sql.SQLException sqlex){
        System.out.println(sqlex.getMessage());
 }*/
    }
    
    
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton4MouseClicked
    
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3MouseClicked
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 5) != null) {
                
                if (jTable1.getSelectedColumn() == 5) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 11).toString());
                    jTextField2.setText(java.lang.String.valueOf(resFloat));
                    jTextField51.setText(java.lang.String.valueOf(resFloat-Disc-Vat));
                }else{
                    
                    resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 11).toString());
                    jTextField2.setText(java.lang.String.valueOf(resFloat));
                    jTextField51.setText(java.lang.String.valueOf(resFloat-Disc-Vat));
                }
            }
            
            //               jTextField31.setText(java.lang.String.valueOf(resFloat));
        }
    }
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i,5) != null) {
                
                if (jTable1.getSelectedColumn() == 5) {
                    
                    resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 11).toString());
                    
                    jTextField2.setText(java.lang.String.valueOf(resFloat));
                    jTextField51.setText(java.lang.String.valueOf(resFloat-Disc-Vat));
                    
                    
                }else{
                    resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 11).toString());
                    
                    jTextField2.setText(java.lang.String.valueOf(resFloat));
                    jTextField51.setText(java.lang.String.valueOf(resFloat-Disc-Vat));
                }
            }
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 12 and 21.");
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        double resFloat1 = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 7) != null) {
                
                if (jTable1.getSelectedColumn() == 7) {
                    
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 8).toString());
                    jTextField4.setText(java.lang.String.valueOf(resFloat1));
                    jTextField51.setText(java.lang.String.valueOf(Gross-Disc-Vat));
                    
                }else{
                    
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 8).toString());
                    jTextField4.setText(java.lang.String.valueOf(resFloat1));
                    jTextField51.setText(java.lang.String.valueOf(Gross-Disc-Vat));
                    
                }
            }
        }
    }
 /*
    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {
  
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        double resFloat1 = 0.00;
  
        for (int i = 0; i < jTable1.getRowCount(); i++) {
  
            if (jTable1.getModel().getValueAt(i, 5) != null) {
  
                if (jTable1.getSelectedColumn() == 7) {
  
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 8).toString());
                    jTextField4.setText(java.lang.String.valueOf(resFloat1));
                    jTextField51.setText(java.lang.String.valueOf(Gross-Disc-Vat));
  
                }else{
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 8).toString());
                    jTextField4.setText(java.lang.String.valueOf(resFloat1));
                    jTextField51.setText(java.lang.String.valueOf(Gross-Disc-Vat));
  
  
                }
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
  */
    
    public void tableModelTableChanged2() {
        System.out.println("Calculating totals for table 12 and 21.");
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 9) != null) {
                
                if (jTable1.getSelectedColumn() == 9) {
                    
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 10).toString());
                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
                    jTextField51.setText(java.lang.String.valueOf(Gross-Disc-Vat));
                    
                }else{
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 10).toString());
                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
                    jTextField51.setText(java.lang.String.valueOf(Gross-Disc-Vat));
                    
                    
                }
            }
            
            //               jTextField31.setText(java.lang.String.valueOf(resFloat));
        }
    }
    public void tableModelTableChanged2(javax.swing.event.TableModelEvent evt) {
        
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        double resFloat1 = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 9) != null) {
                
                if (jTable1.getSelectedColumn() == 9) {
                    
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 10).toString());
                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
                    jTextField51.setText(java.lang.String.valueOf(Gross-Disc-Vat));
                    
                }else{
                    
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 10).toString());
                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
                    jTextField51.setText(java.lang.String.valueOf(Gross-Disc-Vat));
                    
                    
                }
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
/*    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
 
 
        for (int i = 0; i < jTable1.getRowCount(); i++) {
 
            if (jTable1.getModel().getValueAt(i, 0) != null) {
 
                //    if (jTable11.getSelectedColumn() == 1) {
 
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 6).toString());
 
                //   }
 
                jTextField2.setText(java.lang.String.valueOf(resFloat));
 
            }
        }
 
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
 
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
 
        //        double resFloat = 0.00;
        double resFloat = 0.00;
 
        for (int i = 0; i < jTable1.getRowCount(); i++) {
 
            if (jTable1.getModel().getValueAt(i, 0) != null) {
 
                //   if (jTable11.getSelectedColumn() == 1) {
 
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 6).toString());
 
                //   }
 
                jTextField2.setText(java.lang.String.valueOf(resFloat));
 
            }
        }
 
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton jButton2;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JButton jButton3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel41;
    private org.netbeans.lib.sql.NBCachedRowSet searchRowSet2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel71;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton jButton52;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JButton jButton6;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JSeparator jSeparator1;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JButton jButton4;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jSearchTable2;
    // End of variables declaration//GEN-END:variables
    
}
