/*
 * Members.java
 *
 * Created on August 13, 2002, 3:36 PM
 */

package com.afrisoftech.hospinventory;

/**
 *
 * @author  root
 */
public class StockGroupsintfr extends javax.swing.JInternalFrame {
    
    public static java.sql.Connection connectDB = null;
    
    public java.lang.String dbUserName = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    /** Creates new form Members */
    public StockGroupsintfr(java.sql.Connection connectDb, org.netbeans.lib.sql.pool.PooledConnectionSource pConnDb) {
        
        connectDB = connectDb;
        
        pConnDB = pConnDb;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset11 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset12 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset13 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton51 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jButton511 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel112 = new javax.swing.JPanel();
        jButton112 = new javax.swing.JButton();
        jButton212 = new javax.swing.JButton();
        jButton312 = new javax.swing.JButton();
        jButton412 = new javax.swing.JButton();
        jScrollPane111 = new javax.swing.JScrollPane();
        jTable111 = new javax.swing.JTable();
        jLabel211 = new javax.swing.JLabel();
        jButton5111 = new javax.swing.JButton();
        jPanel111 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable21 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton111 = new javax.swing.JButton();
        jButton211 = new javax.swing.JButton();
        jButton512 = new javax.swing.JButton();
        jButton311 = new javax.swing.JButton();
        jButton411 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jComboBox111 = new javax.swing.JComboBox();
        jLabel112 = new javax.swing.JLabel();
        jComboBox112 = new javax.swing.JComboBox();
        jPanel9 = new javax.swing.JPanel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        crset1.setCommand("select  initcap(description) as description from st_main_category order by description  ");
        crset1.setConnectionSource(pConnDB);
        crset11.setConnectionSource(pConnDB);
        crset3.setConnectionSource(pConnDB);
        crset12.setCommand("select  initcap(genre_desc) as description from st_genre order by genre_desc  ");
        crset12.setConnectionSource(pConnDB);
        crset13.setCommand("select  initcap(admin_mode) as description from st_admin_mode order by admin_mode  ");
        crset13.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Stock Categories");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFont(new java.awt.Font("SansSerif", 0, 10));
        setFrameIcon(new javax.swing.ImageIcon("/root/ffjuser40ce/sampledir/examples/colorpicker/ColorPreview.gif"));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton1, gridBagConstraints);

        jButton2.setMnemonic('E');
        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton2, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton4, gridBagConstraints);

        jScrollPane1.setBorder(new javax.swing.border.TitledBorder(null, "Enter main classification here e.g.  the broadest grouping of the stock i.e Antibiotics", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 102)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Group Code", "Description"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(204, 204, 255));
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel2, gridBagConstraints);

        jButton51.setMnemonic('R');
        jButton51.setText("RemoveRow");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton51, gridBagConstraints);

        jTabbedPane1.addTab("Main Stock Classification", jPanel1);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jButton11.setMnemonic('O');
        jButton11.setText("Ok");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton11, gridBagConstraints);

        jButton21.setMnemonic('E');
        jButton21.setText("Edit");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton21, gridBagConstraints);

        jButton31.setMnemonic('l');
        jButton31.setText("Clear");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton31, gridBagConstraints);

        jButton41.setMnemonic('C');
        jButton41.setText("Close");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton41, gridBagConstraints);

        jScrollPane11.setBorder(new javax.swing.border.TitledBorder(null, "Enter sub classification here e.g.  paracetamol,", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 102)));
        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Genre Code", "Description"
            }
        ));
        jTable11.setGridColor(new java.awt.Color(204, 204, 255));
        jScrollPane11.setViewportView(jTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel11.add(jScrollPane11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel11.add(jLabel21, gridBagConstraints);

        jButton511.setMnemonic('R');
        jButton511.setText("RemoveRow");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel11, gridBagConstraints);

        jTabbedPane1.addTab("Genre Name", jPanel3);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel112.setLayout(new java.awt.GridBagLayout());

        jButton112.setMnemonic('O');
        jButton112.setText("Ok");
        jButton112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton112ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel112.add(jButton112, gridBagConstraints);

        jButton212.setMnemonic('E');
        jButton212.setText("Edit");
        jButton212.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton212ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel112.add(jButton212, gridBagConstraints);

        jButton312.setBackground(new java.awt.Color(204, 204, 204));
        jButton312.setMnemonic('l');
        jButton312.setText("Clear");
        jButton312.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton312ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel112.add(jButton312, gridBagConstraints);

        jButton412.setMnemonic('C');
        jButton412.setText("Close");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel112.add(jButton412, gridBagConstraints);

        jScrollPane111.setBorder(new javax.swing.border.TitledBorder(null, "Enter administration mode here e.g.  tablets,injection etc", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 102)));
        jTable111.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Admin Mode Code", "Administration Mode"
            }
        ));
        jTable111.setGridColor(new java.awt.Color(204, 204, 255));
        jScrollPane111.setViewportView(jTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel112.add(jScrollPane111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel112.add(jLabel211, gridBagConstraints);

        jButton5111.setMnemonic('R');
        jButton5111.setText("RemoveRow");
        jButton5111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel112.add(jButton5111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel112, gridBagConstraints);

        jTabbedPane1.addTab("Administration Mode", jPanel4);

        jPanel111.setLayout(new java.awt.GridBagLayout());

        jPanel111.setBorder(new javax.swing.border.EtchedBorder());
        jScrollPane21.setBorder(new javax.swing.border.TitledBorder("Enter stock items here e.g. Beef, Kimbo, Firestone, A4 size Paper etc "));
        jTable21.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Stock Item Code", "Description", "Units/Pack", "Dispensing Unit", "Buying Price", "Reorder Level"
            }
        ));
        jTable21.setGridColor(new java.awt.Color(204, 204, 255));
        jScrollPane21.setViewportView(jTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 15.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel111.add(jScrollPane21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel111.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel111.add(jLabel6, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jButton111.setMnemonic('o');
        jButton111.setText("Ok");
        jButton111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton111, gridBagConstraints);

        jButton211.setMnemonic('E');
        jButton211.setText("Edit");
        jButton211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton211ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton211, gridBagConstraints);

        jButton512.setMnemonic('R');
        jButton512.setText("RemoveRow");
        jButton512.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton512ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jButton512, gridBagConstraints);

        jButton311.setMnemonic('l');
        jButton311.setText("Clear");
        jButton311.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton311ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton311, gridBagConstraints);

        jButton411.setMnemonic('c');
        jButton411.setText("Close");
        jButton411.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton411ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton411, gridBagConstraints);

        jButton5.setMnemonic('D');
        jButton5.setText("Delete");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel111.add(jPanel2, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(new javax.swing.border.EtchedBorder(java.awt.Color.pink, null));
        jLabel11.setText("Genre Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel7.add(jLabel11, gridBagConstraints);

        jLabel111.setText("Main Classification");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel7.add(jLabel111, gridBagConstraints);

        jComboBox11.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset12, "description", null, null, null));
        jComboBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jComboBox11, gridBagConstraints);

        jLabel3.setText("Last Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel7.add(jLabel3, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel7.add(jTextField2, gridBagConstraints);

        jComboBox111.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset1, "description", null, null, null));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jComboBox111, gridBagConstraints);

        jLabel112.setText("Admin Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel7.add(jLabel112, gridBagConstraints);

        jComboBox112.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset13, "description", null, null, null));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel7.add(jComboBox112, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel111.add(jPanel7, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jPanel9.setBorder(new javax.swing.border.EtchedBorder(new java.awt.Color(153, 0, 204), null));
        jRadioButton2.setText("Main Store");
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel9.add(jRadioButton2, gridBagConstraints);

        jRadioButton1.setText("Sub Store");
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel9.add(jRadioButton1, gridBagConstraints);

        jLabel1.setText("Store Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        jPanel9.add(jLabel1, gridBagConstraints);

        jComboBox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset11, "name", null, null, null));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel9.add(jComboBox1, gridBagConstraints);

        jLabel5.setText("Store Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        jPanel9.add(jLabel5, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel9.add(jTextField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel111.add(jPanel9, gridBagConstraints);

        jTabbedPane1.addTab("Stock Item", jPanel111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 859, 450);
    }//GEN-END:initComponents
    
    private void jButton5111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5111ActionPerformed
        int rows2Delete = jTable111.getSelectedRowCount();
        
        int[] selectedRows = jTable111.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                
                defTableModel.removeRow(jTable111.getSelectedRow());
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton5111ActionPerformed
    
    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        int rows2Delete = jTable11.getSelectedRowCount();
        
        int[] selectedRows = jTable11.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                
                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed
    
    private void jButton312ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton312ActionPerformed
        for (int k = 0; k < jTable111.getRowCount(); k++ ) {
            for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                jTable111.getModel().setValueAt(null,k,r);
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton312ActionPerformed
    
    private void jButton212ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton212ActionPerformed
        for (int k = 0; k < jTable111.getRowCount(); k++ ) {
            for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                jTable111.getModel().setValueAt(null,k,r);
            }
        }
        int i = 0;
        
        try {
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            //                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false UNION SELECT service,
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select admin_code,admin_mode from st_admin_mode order by admin_mode");
            
            while (rsetTable1.next()) {
                
                System.out.println("Working at table row "+i);
                jTable111.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable111.setValueAt(rsetTable1.getObject(2), i, 1);
                
                i++;
                
            }
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        javax.swing.table.TableColumn column = null;
        for (int l = 0; l < 2; l++) {
            column = jTable111.getColumnModel().getColumn(l);
            if (l == 0) {
                
                column.setPreferredWidth(100); //sport column is bigger
            } else {
                //if (i == 2) {
                column.setPreferredWidth(350);
                // }  else
                //column.setPreferredWidth(50);
                
            }
        }     // Add your handling code here:
    }//GEN-LAST:event_jButton212ActionPerformed
    
    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed
    
    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        int i = 0;
        
        try {
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            //                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false UNION SELECT service,
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select genre_code,genre_desc from st_genre order by genre_desc");
            
            while (rsetTable1.next()) {
                
                System.out.println("Working at table row "+i);
                jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                
                i++;
                
            }
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        javax.swing.table.TableColumn column = null;
        for (int l = 0; l < 2; l++) {
            column = jTable11.getColumnModel().getColumn(l);
            if (l == 0) {
                
                column.setPreferredWidth(100); //sport column is bigger
            } else {
                //if (i == 2) {
                column.setPreferredWidth(350);
                // }  else
                //column.setPreferredWidth(50);
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton21ActionPerformed
    
    private void jButton112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton112ActionPerformed
        String drug = null;
        try {
            
            for (int i = 0; i < jTable111.getRowCount(); i++){
                if (jTable111.getModel().getValueAt(i,0) != null){
                    java.sql.Statement stmt = connectDB.createStatement();
                    java.sql.ResultSet rset = stmt.executeQuery("select admin_mode from st_admin_mode where admin_mode ilike '"+this.jTable111.getModel().getValueAt(i,1).toString()+"'");
                    while (rset.next()){
                        drug = rset.getObject(1).toString();
                    }
                    if(this.jTable111.getModel().getValueAt(i,0).toString().equalsIgnoreCase(drug)){
                        javax.swing.JOptionPane.showMessageDialog(this, "Administration mode already Registered","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        
                    }else{
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into st_admin_mode values( ?,upper(?))");
                        
                        pstmt.setObject(1,jTable111.getValueAt(i,0).toString());
                        pstmt.setObject(2,jTable111.getValueAt(i,1).toString().toUpperCase());
                        pstmt.executeUpdate();
                        
                        
                    }
                    
                }
            }
            
            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            for (int k = 0; k < jTable111.getRowCount(); k++ ) {
                for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                    jTable111.getModel().setValueAt(null,k,r);
                }
            }
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            //  jLabel4.setText("Sorry. Another Code already exists");
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton112ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        String drug = null;
        try {
            
            for (int i = 0; i < jTable11.getRowCount(); i++){
                if (jTable11.getModel().getValueAt(i,0) != null){
                    java.sql.Statement stmt = connectDB.createStatement();
                    java.sql.ResultSet rset = stmt.executeQuery("select genre_desc from st_genre where genre_desc ilike '"+this.jTable11.getModel().getValueAt(i,1).toString()+"'");
                    while (rset.next()){
                        drug = rset.getObject(1).toString();
                    }
                    if(this.jTable11.getModel().getValueAt(i,0).toString().equalsIgnoreCase(drug)){
                        javax.swing.JOptionPane.showMessageDialog(this, "Genre already on file","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        
                    }else{
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into st_genre values( ?,upper(?))");
                        
                        pstmt.setObject(1,jTable11.getValueAt(i,0).toString());
                        pstmt.setObject(2,jTable11.getValueAt(i,1).toString().toUpperCase());
                        pstmt.executeUpdate();
                        
                    }
                    
                }
            }
            
            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            for (int k = 0; k < jTable11.getRowCount(); k++ ) {
                for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                    jTable11.getModel().setValueAt(null,k,r);
                }
            }
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            //  jLabel4.setText("Sorry. Another Code already exists");
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        crset11.setCommand("select  store_name as name from st_main_stores order by name");
        crset11.setConnectionSource(pConnDB);
        //  jComboBox1.setM
        jComboBox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset11, "name", null, null, null));
        // javax.swing.table.TableColumn s = this.jTable1.getColumn("Service");
        //  s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        // Add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed
    
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        crset3.setCommand("select store_name from st_stores ORDER BY store_name");
        crset3.setConnectionSource(pConnDB);
        //  jComboBox1.setM
        jComboBox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset3, "store_name", null, null, null));
        // javax.swing.table.TableColumn s = this.jTable1.getColumn("Service");
        //  s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });     // Add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        jButton111.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }      // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton311ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton311ActionPerformed
        for (int k = 0; k < jTable21.getRowCount(); k++ ) {
            for (int r = 0; r < jTable21.getColumnCount(); r++ ) {
                jTable21.getModel().setValueAt(null,k,r);
            }
        }
        this.jComboBox11.setSelectedItem(null);
        jTextField2.setText("");   // Add your handling code here:
    }//GEN-LAST:event_jButton311ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton411ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton411ActionPerformed
        setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton411ActionPerformed
    
    private void jButton512ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton512ActionPerformed
        int rows2Delete = jTable21.getSelectedRowCount();
        
        int[] selectedRows = jTable21.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable21.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable21.getModel();
                
                defTableModel.removeRow(jTable21.getSelectedRow());
            }
        }          // Add your handling code here:
    }//GEN-LAST:event_jButton512ActionPerformed
    
    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }         // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed
    
    private void jButton211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton211ActionPerformed
        //  javax.swing.JFrame off = new StockItem(connectDB, pConnDB,  this.jTextField2.getText());
        // javax.swing.JFrame off = new StockItem(connectDB, pConnDB,  this.jComboBox11.getSelectedItem().toString());
        
        // off.setVisible(true);
        
        for (int k = 0; k < jTable21.getRowCount(); k++ ) {
            for (int r = 0; r < jTable21.getColumnCount(); r++ ) {
                jTable21.getModel().setValueAt(null,k,r);
            }
        }
        int i = 0;
        
        try {
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            //                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false UNION SELECT service,
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select item_code,description,units from st_stock_item WHERE sub_cat_code ILIKE '"+jComboBox111.getSelectedItem().toString()+"%' AND genre ILIKE '"+jComboBox11.getSelectedItem().toString()+"%' and admin_mode ILIKE '"+jComboBox112.getSelectedItem().toString()+"%' order by description");
            
            while (rsetTable1.next()) {
                
                System.out.println("Working at table row "+i);
                jTable21.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable21.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable21.setValueAt(rsetTable1.getObject(3), i, 2);
               // jTable21.setValueAt(rsetTable1.getObject(4), i, 3);
                
                i++;
                
            }
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        javax.swing.table.TableColumn column = null;
        for (int l = 0; l < 4; l++) {
            column = jTable21.getColumnModel().getColumn(l);
            if (l == 1) {
                
                column.setPreferredWidth(350); //sport column is bigger
            } else {
                //if (i == 2) {
                column.setPreferredWidth(150);
                // }  else
                //column.setPreferredWidth(50);
                
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton211ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        javax.swing.JFrame off = new MainCategory(connectDB, pConnDB);
        off.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton111ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        String drug = null;
        String glcode = null;
        float selling = 0;
        float transfer = 0;
        float rates = 0;
        try {
            
            if (jRadioButton2.isSelected()){
                
                for (int i = 0; i < jTable21.getRowCount(); i++){
                    if (jTable21.getModel().getValueAt(i,0) != null){
                        
                        
                        java.sql.Statement stmt = connectDB.createStatement();
                        java.sql.ResultSet rset = stmt.executeQuery("select description from st_stock_item where description ilike '"+this.jTable21.getModel().getValueAt(i,1).toString()+"'");
                        while (rset.next()){
                            drug = rset.getObject(1).toString();
                        }
                        if(this.jTable21.getModel().getValueAt(i,0).toString().equalsIgnoreCase(drug)){
                            jLabel6.setForeground(java.awt.Color.red);
                            jLabel6.setText("Item. Already On File");
                            
                            // javax.swing.JOptionPane.showMessageDialog(this,"PATIENT No. Already Exists", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }else{
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into st_stock_item values( ?,upper(?),upper(?),?,?,upper(?),?,?,?,?,?,?,?,initcap(?),?,?)");
                            
                             pstmt.setObject(1,jComboBox111.getSelectedItem().toString());
                                pstmt.setObject(2,jTable21.getValueAt(i,0).toString());
                                pstmt.setObject(3,jTable21.getValueAt(i,1).toString().toUpperCase());
                                pstmt.setObject(4,jTable21.getValueAt(i,5).toString());
                                pstmt.setString(5,"'now'");
                                pstmt.setObject(6,jTable21.getValueAt(i,3).toString());
                                pstmt.setObject(7,jComboBox1.getSelectedItem().toString());
                                pstmt.setObject(8,jTable21.getValueAt(i,4).toString());
                                pstmt.setObject(9,"0");
                                pstmt.setObject(10,"0");
                                pstmt.setObject(12,jTable21.getValueAt(i,2).toString());
                                pstmt.setObject(11,"0");
                                pstmt.setObject(13,"0");
                                pstmt.setObject(14,"0");
                                pstmt.setObject(15,jComboBox11.getSelectedItem().toString());
                                pstmt.setObject(16,jComboBox112.getSelectedItem().toString());
                                pstmt.executeUpdate();
                            
                            
                            pstmt.executeUpdate();
                            
                        }
                        
                    }
                }
            }else{
                if (jRadioButton1.isSelected()){
                    for (int i = 0; i < jTable21.getRowCount(); i++){
                        if (jTable21.getModel().getValueAt(i,0) != null){
                            
                            java.sql.Statement stmtw = connectDB.createStatement();
                            java.sql.ResultSet rsetw = stmtw.executeQuery("select code from pb_activity where activity ILIKE '"+this.jComboBox1.getSelectedItem()+"'");
                            while (rsetw.next()){
                                glcode = rsetw.getObject(1).toString();
                            }
                            transfer = Float.parseFloat(jTable21.getModel().getValueAt(i, 5).toString());
                            
                            java.sql.Statement stmtw1 = connectDB.createStatement();
                            java.sql.ResultSet rsetw1 = stmtw1.executeQuery("select mark_up from st_stores where store_name = '"+this.jComboBox1.getSelectedItem()+"'");
                            while (rsetw1.next()){
                                rates = rsetw1.getFloat(1);
                            }
                            
                            selling = transfer * rates;
                            
                            java.sql.Statement stmt = connectDB.createStatement();
                            java.sql.ResultSet rset = stmt.executeQuery("select description from st_stock_item where description ilike '"+this.jTable21.getModel().getValueAt(i,1).toString()+"'");
                            while (rset.next()){
                                drug = rset.getObject(1).toString();
                            }
                            if(this.jTable21.getModel().getValueAt(i,0).toString().equalsIgnoreCase(drug)){
                                jLabel6.setForeground(java.awt.Color.red);
                                jLabel6.setText("Item. Already On File");
                                
                                // javax.swing.JOptionPane.showMessageDialog(this,"PATIENT No. Already Exists", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                            }else{
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into st_stock_item values( ?,upper(?),upper(?),?,?,upper(?),?,?,?,?,?,?,?,initcap(?),?,?)");
                                
                                pstmt.setObject(1,jComboBox111.getSelectedItem().toString());
                                pstmt.setObject(2,jTable21.getValueAt(i,0).toString());
                                pstmt.setObject(3,jTable21.getValueAt(i,1).toString().toUpperCase());
                                pstmt.setObject(4,jTable21.getValueAt(i,5).toString());
                                pstmt.setString(5,"'now'");
                                pstmt.setObject(6,jTable21.getValueAt(i,3).toString());
                                pstmt.setObject(7,jComboBox1.getSelectedItem().toString());
                                pstmt.setObject(8,jTable21.getValueAt(i,4).toString());
                                pstmt.setObject(9,"0");
                                pstmt.setObject(10,"0");
                                pstmt.setObject(12,jTable21.getValueAt(i,2).toString());
                                pstmt.setObject(11,"0");
                                pstmt.setObject(13,"0");
                                pstmt.setObject(14,"0");
                                pstmt.setObject(15,jComboBox11.getSelectedItem().toString());
                                pstmt.setObject(16,jComboBox112.getSelectedItem().toString());
                                pstmt.executeUpdate();
                                
                                java.sql.PreparedStatement pstmtq = connectDB.prepareStatement("insert into st_stock_prices values( upper(?),upper(?),round(?),round(?),?,upper(?),?,?,?,?,?,?)");
                                pstmtq.setObject(2,jTable21.getValueAt(i,0).toString());
                                pstmtq.setObject(1,jTable21.getValueAt(i,1).toString().toUpperCase());
                                pstmtq.setFloat(3,selling);
                                pstmtq.setFloat(4,transfer);
                                pstmtq.setString(5,"'now'");
                                pstmtq.setObject(6,jTable21.getValueAt(i,2).toString());
                                pstmtq.setObject(9,jComboBox11.getSelectedItem().toString());
                                pstmtq.setObject(8,glcode);
                                pstmtq.setObject(7,jComboBox1.getSelectedItem().toString());
                                pstmtq.setObject(10,"0");
                                pstmtq.setObject(11,"0");
                                pstmtq.setObject(12,"0");
                                pstmtq.executeUpdate();
                                
                                
                            }
                        }
                    }
                }
            }
            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            jLabel6.setForeground(java.awt.Color.white);
            this.jButton111.setEnabled(false);
            for (int k = 0; k < jTable21.getRowCount(); k++ ) {
                for (int r = 0; r < jTable21.getColumnCount(); r++ ) {
                    jTable21.getModel().setValueAt(null,k,r);
                }
            }
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            jLabel4.setForeground(java.awt.Color.red);
            //  jLabel4.setText("Sorry. Another Code already exists");
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton111ActionPerformed
    
    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed
        
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select code from st_main_category where description ='"+jComboBox11.getSelectedItem()+"'");
            while (rset.next())
                jTextField2.setText(rset.getObject(1).toString());
            
            rset.close();
            stmt.close();
            
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("selection not successful");
        }
        
        jTextField1.setText("");
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select item_code from st_stock_item where sub_cat_code ='"+jComboBox11.getSelectedItem()+"' ORDER BY item_code DESC LIMIT 1");
            while (rset.next()){
                jTextField1.setText(rset.getObject(1).toString());
            }
            rset.close();
            stmt.close();
            
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("selection not successful");
        }
        jButton111.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox11ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/insurance","postgres","pilsiner");
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into st_main_category values( ?, ?)");
            for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getModel().getValueAt(i,0) != null){
                    pstmt.setObject(1,jTable1.getValueAt(i,0).toString());
                    pstmt.setObject(2,jTable1.getValueAt(i,1).toString());
                    // pstmt.setObject(3,jTable1.getValueAt(i,2).toString());
                    pstmt.executeUpdate();
                    
                }
            }
            
            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this,"ERROR: "+ sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            jLabel2.setForeground(java.awt.Color.red);
            jLabel2.setText("Sorry. Another Code already exists");
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton211;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JTable jTable111;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JTable jTable21;
    private org.netbeans.lib.sql.NBCachedRowSet crset13;
    private javax.swing.JComboBox jComboBox112;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton411;
    private org.netbeans.lib.sql.NBCachedRowSet crset12;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel111;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton jButton311;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel jPanel112;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel21;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton jButton31;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jButton512;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JTable jTable11;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox111;
    private javax.swing.JButton jButton5111;
    private org.netbeans.lib.sql.NBCachedRowSet crset11;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton312;
    private javax.swing.JLabel jLabel112;
    private javax.swing.ButtonGroup buttonGroup1;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton112;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel211;
    private javax.swing.JScrollPane jScrollPane111;
    private javax.swing.JButton jButton212;
    private javax.swing.JButton jButton111;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jButton412;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
}
